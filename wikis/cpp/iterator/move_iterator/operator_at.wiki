{{cpp/iterator/move_iterator/title|operator[]}}
{{cpp/iterator/move_iterator/navbar}}
{{dcl begin}}
{{dcl rev begin}}
{{dcla|constexpr=c++17|until=c++20|
/* unspecified */ operator[]( difference_type n ) const; 
}}
{{dcl|since=c++20|
constexpr reference operator[]( difference_type n ) const; 
}}
{{dcl end}}

Returns a reference to the element at specified relative location.

===Parameters===
{{par begin}}
{{par|n|position relative to current location}}
{{par end}}

===Return value===
{{rev inl|until=c++20|{{box|{{c/core|std::move(}}{{rlpsi|/#current}}{{sep}}{{c/core|[n])}}}}}}{{rev inl|since=c++20|{{box|{{c/core|ranges::iter_move(}}{{rlpsi|/#current}}{{nbspt}}{{c/core|+ n)}}}}}}

===Notes===
{{rrev|until=c++20|
The return type is unspecified because the return type of the underlying iterator's {{c/core|operator[]}} is also unspecified (see {{named req|RandomAccessIterator}}).
}}

===Example===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;list&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

void print(auto rem, const auto&amp; v)
{
    for (std::cout &lt;&lt; rem; const auto&amp; e : v)
        std::cout &lt;&lt; std::quoted(e) &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

int main()
{
    std::vector&lt;std::string&gt; p{"alpha", "beta", "gamma", "delta"}, q;
    print("1) p: ", p);
    
    std::move_iterator it{p.begin()};
    
    for (std::size_t t{}; t != p.size(); ++t)
        q.emplace_back(it[t]); 
    
    print("2) p: ", p);
    print("3) q: ", q);
    
    std::list l{1, 2, 3};
    std::move_iterator it2{l.begin()};
//  it2[1] = 13; // Compilation error: the underlying iterator
                 // does not model the random access iterator
//  *it2 = 999;  // Compilation error: using rvalue as lvalue
}
|p=true
|output=
1) p: "alpha" "beta" "gamma" "delta"
2) p: "" "" "" ""
3) q: "alpha" "beta" "gamma" "delta"
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator*|move_iterator}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}