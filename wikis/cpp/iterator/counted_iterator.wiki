{{cpp/title|counted_iterator}}
{{cpp/iterator/counted_iterator/navbar}}
{{ddcl|header=iterator|since=c++20|1=
template&lt; std::input_or_output_iterator I &gt;
class counted_iterator;
}}

{{tt|std::counted_iterator}} is an iterator adaptor which behaves exactly like the underlying iterator, except that it keeps track of the distance to the end of its range. This iterator is equal to {{lc|std::default_sentinel_t|std::default_sentinel}} if and only if its count reaches zero.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|iterator_type}}|{{tt|I}}}}
{{dsc|{{tt|value_type}}&lt;br&gt;{{mark cond present}}|{{c/core|std::iter_value_t&lt;I&gt;}} if {{tt|I}} models {{lconcept|indirectly_readable}}; otherwise, not defined}}
{{dsc|{{tt|difference_type}}|{{c/core|std::iter_difference_t&lt;I&gt;}}}}
{{dsc|{{tt|iterator_concept}}&lt;br&gt;{{mark cond present}}|{{c/core|I::iterator_concept}} if present; otherwise, not defined}}
{{dsc|{{tt|iterator_category}}&lt;br&gt;{{mark cond present}}|{{c/core|I::iterator_category}} if present; otherwise, not defined}}
{{dsc end}}

===Member objects===
{{dsc begin}}
{{dsc hitem|Member name|Definition}}
{{dsc|{{tti|current}} {{mark|private}}|the underlying iterator which {{rlt|base|base()}} accesses&lt;br&gt;{{mark expos mem obj}}}}
{{dsc|{{tti|length}} {{mark|private}}|the distance between the underlying iterator and the end of its range&lt;br&gt;{{mark expos mem obj}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc constructor|counted_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc operator{{=}}|counted_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc base|counted_iterator}}
{{dsc inc|cpp/iterator/counted_iterator/dsc count}}
{{dsc inc|cpp/iterator/adaptor/dsc operator*|counted_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc operator_at|counted_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc operator_arith|counted_iterator}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator_cmp|counted_iterator}}
{{dsc inc|cpp/iterator/counted_iterator/dsc operator_cmp2}}
{{dsc inc|cpp/iterator/adaptor/dsc operator+|counted_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc operator-|counted_iterator}}
{{dsc inc|cpp/iterator/counted_iterator/dsc operator-2}}
{{dsc inc|cpp/iterator/adaptor/dsc iter_move|counted_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc iter_swap|counted_iterator}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/iterator/counted_iterator/dsc iterator_traits}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

using std::operator""s;

void print(auto const remark, auto const&amp; v)
{
    const auto size = std::ssize(v);
    std::cout &lt;&lt; remark &lt;&lt; '[' &lt;&lt; size &lt;&lt; "] { ";
    for (auto it = std::counted_iterator{std::cbegin(v), size};
         it != std::default_sentinel; ++it)
        std::cout &lt;&lt; *it &lt;&lt; (it.count() &gt; 1 ? ", " : " ");
    std::cout &lt;&lt; "}\n";
}

int main()
{
    const auto src = {"Arcturus"s, "Betelgeuse"s, "Canopus"s, "Deneb"s, "Elnath"s};
    print("src", src);
    std::vector&lt;decltype(src)::value_type&gt; dst;
    std::ranges::copy(std::counted_iterator{src.begin(), 3},
                      std::default_sentinel,
                      std::back_inserter(dst));
    print("dst", dst);
}
|output=
src[5] { Arcturus, Betelgeuse, Canopus, Deneb, Elnath }
dst[3] { Arcturus, Betelgeuse, Canopus }
}}

===Defect reports===
{{dr list begin}}
{{dr list item|paper=P2259R1|std=C++20|before=member typedefs are not provided {{lc|std::incrementable_traits}}&lt;br&gt;is specialized for {{tt|counted_iterator}}|after=member typedefs are added to account for {{ltt|cpp/iterator/counted_iterator/iterator_traits|iterator_traits}} fix&lt;br&gt;redundant {{lc|std::incrementable_traits}} specialization is removed}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc default_sentinel_t}}
{{dsc inc|cpp/ranges/dsc view_counted}}
{{dsc inc|cpp/ranges/dsc take_view}}
{{dsc end}}

{{langlinks|cs|de|es|fr|it|ja|ko|pl|pt|ru|zh}}