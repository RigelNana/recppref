{{cpp/title|indirectly_comparable}}
{{cpp/iterator/navbar}}
{{ddcl | header=iterator | since=c++20 | 1=
template&lt; class I1, class I2, class Comp,
          class Proj1 = std::identity, class Proj2 = std::identity &gt;
concept indirectly_comparable =
    std::indirect_binary_predicate&lt;Comp, std::projected&lt;I1, Proj1&gt;, std::projected&lt;I2, Proj2&gt;&gt;;
}}

The concept {{tt|indirectly_comparable}} specifies the fundamental algorithm requirement for comparing values across two independent ranges.

===Semantic requirements===
{{tt|indirectly_comparable}} is modeled only if all concepts it subsumes are modeled.

===See also===
{{dsc begin}}
{{dsc inc | cpp/iterator/dsc indirect_binary_predicate}}
{{dsc end}}

{{langlinks|es|ja|zh}}