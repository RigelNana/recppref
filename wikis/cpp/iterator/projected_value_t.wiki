{{cpp/title|projected_value_t}}
{{cpp/iterator/navbar}}
{{ddcl|header=iterator|since=c++26|1=
template&lt; std::indirectly_readable I, 
          std::indirectly_regular_unary_invocable&lt;I&gt; Proj &gt;
using projected_value_t = 
    std::remove_cvref_t&lt;std::invoke_result_t&lt;Proj&amp;, std::iter_value_t&lt;I&gt;&amp;&gt;&gt;;
}}

The alias template {{tt|projected_value_t}} obtains the value type by stripping any reference and its topmost cv-qualifiers of the result type of applying {{tt|Proj}} to {{c|std::iter_value_t&lt;I&gt;&amp;}}.

{{tt|projected_value_t}} is used to determine the default value type in some algorithms such as {{c/core|ranges::contains}}. 

===Template parameters===
{{par begin}}
{{par|I|an indirectly readable type}}
{{par|Proj|projection applied to an lvalue reference to value type of {{tt|I}}}}
{{par end}}

===Notes===
{{feature test macro|__cpp_lib_algorithm_default_value_type|default template type for algorithm values using {{tt|std::projected_value_t}}|value=202403L|std=C++26}}

===Example===
{{example
|code=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc indirect_result_t}}
{{dsc inc|cpp/iterator/dsc projected}}
{{dsc end}}

{{langlinks|es|ja|zh}}