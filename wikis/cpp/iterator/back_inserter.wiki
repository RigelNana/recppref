{{cpp/title|back_inserter}}
{{cpp/iterator/navbar}}
{{ddcl|header=iterator|notes={{mark constexpr since c++20}}|
template&lt; class Container &gt;
std::back_insert_iterator&lt;Container&gt; back_inserter( Container&amp; c );
}}

{{tt|back_inserter}} is a convenience function template that constructs a {{lc|std::back_insert_iterator}} for the container {{c|c}} with the type deduced from the type of the argument.

===Parameters===
{{par begin}}
{{par|c|container that supports a {{tt|push_back}} operation}}
{{par end}}

===Return value===
A {{lc|std::back_insert_iterator}} which can be used to add elements to the end of the container {{c|c}}.

===Possible implementation===
{{eq fun|1=
template&lt;class Container&gt;
std::back_insert_iterator&lt;Container&gt; back_inserter(Container&amp; c)
{
    return std::back_insert_iterator&lt;Container&gt;(c);
}
}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;int&gt; v{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    std::fill_n(std::back_inserter(v), 3, -1);
    for (int n : v)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
1 2 3 4 5 6 7 8 9 10 -1 -1 -1
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc back_insert_iterator}}
{{dsc inc|cpp/iterator/dsc front_inserter}}
{{dsc inc|cpp/iterator/dsc inserter}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}