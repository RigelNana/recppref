{{title|1=operator==&lt;small&gt;(std::counted_iterator&amp;lt;I&amp;gt;, std::default_sentinel_t)&lt;/small&gt;}}
{{cpp/iterator/counted_iterator/navbar}}
{{ddcl|since=c++20|1=
friend constexpr bool operator==(
    const counted_iterator&amp; x, std::default_sentinel_t );
}}

Checks if the underlying ''length'' (i.e. distance to the end) is equal to {{c|0}}.

{{cpp/hidden friend|std::counted_iterator&amp;lt;I&gt;|tmpl=yes}}

{{cpp/note synthesized eq}}

===Parameters===
{{par begin}}
{{par|x|an iterator adaptor}}
{{par end}}

===Return value===
{{c|true}} if {{c|x.count()}} is equal to {{c|0}}, {{c|false}} otherwise.

===Example===
{{example
|code=
#include &lt;initializer_list&gt;
#include &lt;iterator&gt;

int main()
{
    static constexpr auto v = {1, 2, 3, 4};
    constexpr std::counted_iterator&lt;std::initializer_list&lt;int&gt;::iterator&gt;
        it1{v.begin(), 3},
        it2{v.begin(), 0};
    static_assert(it1 != std::default_sentinel);
    static_assert(it2 == std::default_sentinel);
    static_assert(std::default_sentinel != it1);
    static_assert(std::default_sentinel == it2);
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator_cmp|counted_iterator}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}