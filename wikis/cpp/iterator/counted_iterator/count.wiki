{{cpp/iterator/counted_iterator/title|count}}
{{cpp/iterator/counted_iterator/navbar}}
{{ddcl|since=c++20|
constexpr std::iter_difference_t&lt;I&gt; count() const noexcept;
}}

Returns the underlying ''length'' that is the distance to the end.

===Parameters===
(none)

===Return value===
The underlying ''length''.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;

int main()
{
    constexpr static auto il = {1, 2, 3, 4, 5};
    constexpr std::counted_iterator i1{il.begin() + 1, 3};
    static_assert(i1.count() == 3);
    auto i2{i1};
    for (; std::default_sentinel != i2; ++i2)
        std::cout &lt;&lt; "*i2: " &lt;&lt; *i2 &lt;&lt; ", count(): " &lt;&lt; i2.count() &lt;&lt; '\n';
    assert(i2.count() == 0);
}
|output=
*i2: 2, count(): 3
*i2: 3, count(): 2
*i2: 4, count(): 1
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc base|counted_iterator}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}