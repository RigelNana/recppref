{{cpp/title|ostreambuf_iterator}}
{{cpp/iterator/ostreambuf_iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl rev begin}}
{{dcl|until=c++17|1=
template&lt; class CharT, class Traits = std::char_traits&lt;CharT&gt; &gt;
class ostreambuf_iterator
    : public std::iterator&lt;std::output_iterator_tag, void, void, void, void&gt;
}}
{{dcl|since=c++17|1=
template&lt; class CharT, class Traits = std::char_traits&lt;CharT&gt; &gt;
class ostreambuf_iterator;
}}
{{dcl rev end}}
{{dcl end}}

{{tt|std::ostreambuf_iterator}} is a single-pass {{named req|OutputIterator}} that writes successive characters into the {{lc|std::basic_streambuf}} object for which it was constructed. The actual write operation is performed when the iterator (whether dereferenced or not) is assigned to. Incrementing the {{tt|std::ostreambuf_iterator}} is a no-op.

In a typical implementation, the only data members of {{tt|std::ostreambuf_iterator}} are a pointer to the associated {{tt|std::basic_streambuf}} and a boolean flag indicating if the end of file condition has been reached.

{{cpp/iterator/iterator/inherit|std::output_iterator_tag|void|void|void|void|ext=
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|traits_type}}|{{tt|Traits}}}}
{{dsc|{{tt|streambuf_type}}|{{c/core|std::basic_streambuf&lt;CharT, Traits&gt;}}}}
{{dsc|{{tt|ostream_type}}|{{c/core|std::basic_ostream&lt;CharT, Traits&gt;}}}}
}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/iterator/ostreambuf_iterator/dsc constructor}}
{{dsc inc|cpp/iterator/ostreambuf_iterator/dsc destructor}}
{{dsc inc|cpp/iterator/ostreambuf_iterator/dsc operator{{=}}}}
{{dsc inc|cpp/iterator/ostreambuf_iterator/dsc operator*}}
{{dsc inc|cpp/iterator/ostreambuf_iterator/dsc operator_arith}}
{{dsc inc|cpp/iterator/ostreambuf_iterator/dsc failed}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;string&gt;

int main()
{
    std::string s = "This is an example\n";
    std::copy(s.begin(), s.end(), std::ostreambuf_iterator&lt;char&gt;(std::cout));
}
|output=
This is an example
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc istreambuf_iterator}}
{{dsc inc|cpp/iterator/dsc ostream_iterator}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}