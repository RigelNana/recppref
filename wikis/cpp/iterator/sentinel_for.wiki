{{cpp/title|sentinel_for}}
{{cpp/iterator/navbar}}
{{ddcl|header=iterator|since=c++20|1=
template&lt; class S, class I &gt;
    concept sentinel_for =
        std::semiregular&lt;S&gt; &amp;&amp;
        std::input_or_output_iterator&lt;I&gt; &amp;&amp;
        __WeaklyEqualityComparableWith&lt;S, I&gt;;
}}

The {{tt|sentinel_for}} concept specifies the relationship between an {{lconcept|input_or_output_iterator}} type and a {{lconcept|semiregular}} type whose values denote a range. The exposition-only concept {{tt|''__WeaklyEqualityComparableWith''}} is described in {{lconcept|equality_comparable}}.

===Semantic requirements===
Let {{tt|s}} and {{tt|i}} be values of type {{tt|S}} and {{tt|I}}, respectively, such that {{range|i|s}} denotes a [[cpp/iterator#Ranges|range]]. {{tt|sentinel_for&amp;lt;S, I&gt;}} is modeled only if:

* {{c|1=i == s}} is well-defined.
* If {{c|1=bool(i != s)}} then {{tt|i}} is dereferenceable and {{range|++i|s}} denotes a range.
* {{c|std::assignable_from&lt;I&amp;, S&gt;}} is either modeled or not satisfied.

The domain of {{tt|1===}} can change over time. Given an iterator {{tt|i}} and sentinel {{tt|s}} such that {{range|i|s}} denotes a range and {{c|1=i != s}}, {{range|i|s}} is not required to continue to denote a range after incrementing any iterator equal to {{tt|i}} (and so {{c|1=i == s}} is no longer required to be well-defined after such an increment).

===Notes===
A sentinel type and its corresponding iterator type are not required to model {{lconcept|equality_comparable_with}}, because the sentinel type may not be comparable with itself, and they are not required to have a common reference type.

It has been permitted to use a sentinel type different from the iterator type in the [[cpp/language/range-for|range-based {{tt|for}} loop]] since C++17.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3453|std=C++20|before=semantic requirements for {{tt|sentinel_for}} were too loose for {{tt|ranges::advance}}|after=strengthened}}
{{dr list end}}

{{langlinks|es|ja|zh}}