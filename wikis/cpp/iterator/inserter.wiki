{{cpp/title|inserter}}
{{cpp/iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl rev multi|until1=c++20|dcl1=
template&lt; class Container &gt;
std::insert_iterator&lt;Container&gt;
    inserter( Container&amp; c, typename Container::iterator i );
|dcl2=
template&lt; class Container &gt;
constexpr std::insert_iterator&lt;Container&gt;
    inserter( Container&amp; c, ranges::iterator_t&lt;Container&gt; i );
}}
{{dcl end}}

{{tt|inserter}} is a convenience function template that constructs a {{lc|std::insert_iterator}} for the container {{c|c}} and its iterator {{c|i}} with the type deduced from the type of the argument.

===Parameters===
{{par begin}}
{{par|c|container that supports an {{tt|insert}} operation}}
{{par|i|iterator in {{c|c}} indicating the insertion position}}
{{par end}}

===Return value===
A {{lc|std::insert_iterator}} which can be used to insert elements into the container {{c|c}} at the position indicated by {{c|i}}.

===Possible implementation===
{{eq fun|1=
template&lt;class Container&gt;
std::insert_iterator&lt;Container&gt; inserter(Container&amp; c, typename Container::iterator i)
{
    return std::insert_iterator&lt;Container&gt;(c, i);
}
}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;set&gt;
#include &lt;vector&gt;

int main()
{
    std::multiset&lt;int&gt; s{1, 2, 3};
    
    // std::inserter is commonly used with multi-sets
    std::fill_n(std::inserter(s, s.end()), 5, 2);
    
    for (int n : s)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
    
    std::vector&lt;int&gt; d{100, 200, 300};
    std::vector&lt;int&gt; v{1, 2, 3, 4, 5};
    
    // when inserting in a sequence container, insertion point advances
    // because each std::insert_iterator::operator= updates the target iterator
    std::copy(d.begin(), d.end(), std::inserter(v, std::next(v.begin())));
    
    for (int n : v)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
1 2 2 2 2 2 2 3 
1 100 200 300 2 3 4 5 
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=561|std=C++98|before=the type of {{c|i}} was independent of {{tt|Container}}|after=it is the iterator type of {{tt|Container}}}} 
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc insert_iterator}}
{{dsc inc|cpp/iterator/dsc back_inserter}}
{{dsc inc|cpp/iterator/dsc front_inserter}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}