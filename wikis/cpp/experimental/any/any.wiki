{{cpp/experimental/any/title|any}}
{{cpp/experimental/any/navbar}}
{{dcl begin}}
{{dcl|num=1|since=libfund_ts|
any() noexcept;
}}
{{dcl|num=2|since=libfund_ts|
any( const any&amp; other );
}}
{{dcl|num=3|since=libfund_ts|
any( any&amp;&amp; other ) noexcept;
}}
{{dcl|num=4|since=libfund_ts|
template&lt;typename ValueType&gt;
    any( ValueType&amp;&amp; value );
}}
{{dcl end}}

Constructs a new {{tt|any}} object.

@1@ Constructs an empty object.

@2,3@ Copies {{v|2}} or moves {{v|3}} content of {{c|other}} into a new instance, so that any content is equivalent in both type and value to those of {{c|other}} prior to the constructor call, or empty if {{c|other}} is empty.

@4@ Constructs an object with initial content an object of type {{c|std::decay_t&lt;ValueType&gt;}}, [[cpp/language/direct initialization|direct-initialized]] from {{c|std::forward&lt;ValueType&gt;(value)}}. If {{c|1=std::is_copy_constructible&lt;std::decay_t&lt;ValueType&gt;&gt;::value}} is {{c|false}}, the program is ill-formed. {{cpp/enable if|{{c|std::decay_t&lt;ValueType&gt;}} is not the same type as {{c|any}}}}.

===Template parameters===
{{par begin}}
{{par|ValueType|contained value type}}
{{par hreq}}
{{par req named|std::decay_t&lt;ValueType&gt;|CopyConstructible}}
{{par end}}

===Parameters===
{{par begin}}
{{par|other|another {{tt|any}} object to copy or move from}}
{{par|value|value to initialize the contained value with}}
{{par end}}

===Exceptions===
@2,4@ Throws any exception thrown by the constructor of the contained type.

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/any/dsc operator{{=}}}}
{{dsc end}}