{{title|Variable templates for type traits {{mark since libfund ts}}}}
{{cpp/experimental/lib extensions/navbar}}

Version 1 of the C++ Extensions for Library Fundamentals provides a number of {{c|constexpr}} variable templates for type traits classes, as well as other similar class templates with public {{tt|::value}} members.

Unless otherwise noted, the following variable templates are defined in the {{tt|std::experimental}} namespace.

{{dsc begin}}
{{dsc h1|Type traits}}
{{dsc h2|Primary type categories}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/type_traits}}
{{dsc|{{anchor|is_void|is_void_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_void_v =}}|{{c/core|std::is_void&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_null_pointer|is_null_pointer_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_null_pointer_v =}}|{{c/core|std::is_null_pointer&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_integral|is_integral_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_integral_v =}}|{{c/core|std::is_integral&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_floating_point|is_floating_point_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_floating_point_v =}}|{{c/core|std::is_floating_point&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_array|is_array_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_array_v =}}|{{c/core|std::is_array&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_pointer|is_pointer_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_pointer_v =}}|{{c/core|std::is_pointer&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_lvalue_reference|is_lvalue_reference_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_lvalue_reference_v =}}|{{c/core|std::is_lvalue_reference&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_rvalue_reference|is_rvalue_reference_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_rvalue_reference_v =}}|{{c/core|std::is_rvalue_reference&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_member_object_pointer|is_member_object_pointer_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_member_object_pointer_v =}}|{{c/core|std::is_member_object_pointer&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_member_function_pointer|is_member_function_pointer_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_member_function_pointer_v =}}|{{c/core|std::is_member_function_pointer&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_enum|is_enum_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_enum_v =}}|{{c/core|std::is_enum&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_union|is_union_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_union_v =}}|{{c/core|std::is_union&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_class|is_class_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_class_v =}}|{{c/core|std::is_class&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_function|is_function_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_function_v =}}|{{c/core|std::is_function&lt;T&gt;::value;}}}}

{{dsc h2|Composite type categories}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/type_traits}}
{{dsc|{{anchor|is_reference|is_reference_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_reference_v =}}|{{c/core|std::is_reference&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_arithmetic|is_arithmetic_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_arithmetic_v =}}|{{c/core|std::is_arithmetic&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_fundamental|is_fundamental_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_fundamental_v =}}|{{c/core|std::is_fundamental&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_object|is_object_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_object_v =}}|{{c/core|std::is_object&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_scalar|is_scalar_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_scalar_v =}}|{{c/core|std::is_scalar&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_compound|is_compound_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_compound_v =}}|{{c/core|std::is_compound&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_member_pointer|is_member_pointer_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_member_pointer_v =}}|{{c/core|std::is_member_pointer&lt;T&gt;::value;}}}}

{{dsc h2|Type properties}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/type_traits}}
{{dsc|{{anchor|is_const|is_const_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_const_v =}}|{{c/core|std::is_const&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_volatile|is_volatile_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_volatile_v =}}|{{c/core|std::is_volatile&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivial|is_trivial_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivial_v =}}|{{c/core|std::is_trivial&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_copyable|is_trivially_copyable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_copyable_v =}}|{{c/core|std::is_trivially_copyable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_standard_layout|is_standard_layout_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_standard_layout_v =}}|{{c/core|std::is_standard_layout&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_pod|is_pod_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_pod_v =}}|{{c/core|std::is_pod&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_literal_type|is_literal_type_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_literal_type_v =}}|{{c/core|std::is_literal_type&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_empty|is_empty_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_empty_v =}}|{{c/core|std::is_empty&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_polymorphic|is_polymorphic_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_polymorphic_v =}}|{{c/core|std::is_polymorphic&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_abstract|is_abstract_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_abstract_v =}}|{{c/core|std::is_abstract&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_final|is_final_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_final_v =}}|{{c/core|std::is_final&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_signed|is_signed_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_signed_v =}}|{{c/core|std::is_signed&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_unsigned|is_unsigned_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_unsigned_v =}}|{{c/core|std::is_unsigned&lt;T&gt;::value;}}}}
{{dsc end}}
{{dsc begin}}
{{dsc h2|Supported operations}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/type_traits}}
{{dsc|{{anchor|is_constructible|is_constructible_v}}{{c/core|1=template&lt;class T, class... Args&gt; constexpr bool is_constructible_v =}}|{{c/core|std::is_constructible&lt;T, Args...&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_constructible|is_trivially_constructible_v}}{{c/core|1=template&lt;class T, class... Args&gt; constexpr bool is_trivially_constructible_v =}}|{{c/core|std::is_trivially_constructible&lt;T, Args...&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_constructible|is_nothrow_constructible_v}}{{c/core|1=template&lt;class T, class... Args&gt; constexpr bool is_nothrow_constructible_v =}}|{{c/core|std::is_nothrow_constructible&lt;T, Args...&gt;::value;}}}}
{{dsc|{{anchor|is_default_constructible|is_default_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_default_constructible_v =}}|{{c/core|std::is_default_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_default_constructible|is_trivially_default_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_default_constructible_v =}}|{{c/core|std::is_trivially_default_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_default_constructible|is_nothrow_default_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_nothrow_default_constructible_v =}}|{{c/core|std::is_nothrow_default_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_copy_constructible|is_copy_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_copy_constructible_v =}}|{{c/core|std::is_copy_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_copy_constructible|is_trivially_copy_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_copy_constructible_v =}}|{{c/core|std::is_trivially_copy_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_copy_constructible|is_nothrow_copy_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_nothrow_copy_constructible_v =}}|{{c/core|std::is_nothrow_copy_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_move_constructible|is_move_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_move_constructible_v =}}|{{c/core|std::is_move_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_move_constructible|is_trivially_move_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_move_constructible_v =}}|{{c/core|std::is_trivially_move_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_move_constructible|is_nothrow_move_constructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_nothrow_move_constructible_v =}}|{{c/core|std::is_nothrow_move_constructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_assignable|is_assignable_v}}{{c/core|1=template&lt;class T, class U&gt; constexpr bool is_assignable_v =}}|{{c/core|std::is_assignable&lt;T, U&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_assignable|is_trivially_assignable_v}}{{c/core|1=template&lt;class T, class U&gt; constexpr bool is_trivially_assignable_v =}}|{{c/core|std::is_trivially_assignable&lt;T, U&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_assignable|is_nothrow_assignable_v}}{{c/core|1=template&lt;class T, class U&gt; constexpr bool is_nothrow_assignable_v =}}|{{c/core|std::is_nothrow_assignable&lt;T, U&gt;::value;}}}}
{{dsc|{{anchor|is_copy_assignable|is_copy_assignable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_copy_assignable_v =}}|{{c/core|std::is_copy_assignable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_copy_assignable|is_trivially_copy_assignable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_copy_assignable_v =}}|{{c/core|std::is_trivially_copy_assignable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_copy_assignable|is_nothrow_copy_assignable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_nothrow_copy_assignable_v =}}|{{c/core|std::is_nothrow_copy_assignable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_move_assignable|is_move_assignable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_move_assignable_v =}}|{{c/core|std::is_move_assignable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_move_assignable|is_trivially_move_assignable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_move_assignable_v =}}|{{c/core|std::is_trivially_move_assignable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_move_assignable|is_nothrow_move_assignable_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_nothrow_move_assignable_v =}}|{{c/core|std::is_nothrow_move_assignable&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_destructible|is_destructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_destructible_v =}}|{{c/core|std::is_destructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_trivially_destructible|is_trivially_destructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_trivially_destructible_v =}}|{{c/core|std::is_trivially_destructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_nothrow_destructible|is_nothrow_destructible_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_nothrow_destructible_v =}}|{{c/core|std::is_nothrow_destructible&lt;T&gt;::value;}}}}
{{dsc|{{anchor|has_virtual_destructor|has_virtual_destructor_v}}{{c/core|1=template&lt;class T&gt; constexpr bool has_virtual_destructor_v =}}|{{c/core|std::has_virtual_destructor&lt;T&gt;::value;}}}}
{{dsc end}}
{{dsc begin}}
{{dsc h2|Property queries}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/type_traits}}
{{dsc|{{anchor|alignment_of|alignment_of_v}}{{c/core|1=template&lt;class T&gt; constexpr std::size_t alignment_of_v =}}|{{c/core|std::alignment_of&lt;T&gt;::value;}}}}
{{dsc|{{anchor|rank|rank_v}}{{c/core|1=template&lt;class T&gt; constexpr std::size_t rank_v =}}|{{c/core|std::rank&lt;T&gt;::value;}}}}
{{dsc|{{anchor|extent|extent_v}}{{c/core|1=template&lt;class T, unsigned I = 0&gt; constexpr std::size_t extent_v =}}|{{c/core|std::extent&lt;T, I&gt;::value;}}}}

{{dsc h2|Type relationships}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/type_traits}}
{{dsc|{{anchor|is_same|is_same_v}}{{c/core|1=template&lt;class T, class U&gt; constexpr bool is_same_v =}}|{{c/core|std::is_same&lt;T, U&gt;::value;}}}}
{{dsc|{{anchor|is_base_of|is_base_of_v}}{{c/core|1=template&lt;class Base, class Derived&gt; constexpr bool is_base_of_v =}}|{{c/core|std::is_base_of&lt;Base, Derived&gt;::value;}}}}
{{dsc|{{anchor|is_convertible|is_convertible_v}}{{c/core|1=template&lt;class From, class To&gt; constexpr bool is_convertible_v =}}|{{c/core|std::is_convertible&lt;From, To&gt;::value;}}}}

{{dsc h1|Other variable templates}}
{{dsc h2|{{lc|std::ratio}} comparison}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/ratio}}
{{dsc|{{anchor|ratio_equal|ratio_equal_v}}{{c/core|1=template&lt;class R1, class R2&gt; constexpr bool ratio_equal_v =}}|{{c/core|std::ratio_equal&lt;R1, R2&gt;::value;}}}}
{{dsc|{{anchor|ratio_not_equal|ratio_not_equal_v}}{{c/core|1=template&lt;class R1, class R2&gt; constexpr bool ratio_not_equal_v =}}|{{c/core|std::ratio_not_equal&lt;R1, R2&gt;::value;}}}}
{{dsc|{{anchor|ratio_less|ratio_less_v}}{{c/core|1=template&lt;class R1, class R2&gt; constexpr bool ratio_less_v =}}|{{c/core|std::ratio_less&lt;R1, R2&gt;::value;}}}}
{{dsc|{{anchor|ratio_less_equal|ratio_less_equal_v}}{{c/core|1=template&lt;class R1, class R2&gt; constexpr bool ratio_less_equal_v =}}|{{c/core|std::ratio_less_equal&lt;R1, R2&gt;::value;}}}}
{{dsc|{{anchor|ratio_greater|ratio_greater_v}}{{c/core|1=template&lt;class R1, class R2&gt; constexpr bool ratio_greater_v =}}|{{c/core|std::ratio_greater&lt;R1, R2&gt;::value;}}}}
{{dsc|{{anchor|ratio_greater_equal|ratio_greater_equal_v}}{{c/core|1=template&lt;class R1, class R2&gt; constexpr bool ratio_greater_equal_v =}}|{{c/core|std::ratio_greater_equal&lt;R1, R2&gt;::value;}}}}

{{dsc h2|Miscellaneous}}
{{dsc hitem|Variable template|Value}}
{{dsc header|experimental/tuple}}
{{dsc|{{anchor|tuple_size|tuple_size_v}}{{c/core|1=template&lt;class T&gt; constexpr std::size_t tuple_size_v =}}|{{c/core|std::tuple_size&lt;T&gt;::value;}}}}

{{dsc header|experimental/chrono}}
{{dsc|{{anchor|treat_as_floating_point|treat_as_floating_point_v}}{{c/core|1=template&lt;class Rep&gt; constexpr bool treat_as_floating_point_v =}}|{{c/core|std::chrono::treat_as_floating_point&lt;Rep&gt;::value;}}&lt;sup&gt;[1]&lt;/sup&gt;}}

{{dsc header|experimental/system_error}}
{{dsc|{{anchor|is_error_code_enum|is_error_code_enum_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_error_code_enum_v =}}|{{c/core|std::is_error_code_enum&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_error_condition_enum|is_error_condition_enum_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_error_condition_enum_v =}}|{{c/core|std::is_error_condition_enum&lt;T&gt;::value;}}}}

{{dsc header|experimental/functional}}
{{dsc|{{anchor|is_bind_expression|is_bind_expression_v}}{{c/core|1=template&lt;class T&gt; constexpr bool is_bind_expression_v =}}|{{c/core|std::is_bind_expression&lt;T&gt;::value;}}}}
{{dsc|{{anchor|is_placeholder|is_placeholder_v}}{{c/core|1=template&lt;class T&gt; constexpr int is_placeholder_v =}}|{{c/core|std::is_placeholder&lt;T&gt;::value;}}}}

{{dsc header|experimental/memory}}
{{dsc|{{anchor|uses_allocator|uses_allocator_v}}{{c/core|1=template&lt;class T, class Alloc&gt; constexpr bool uses_allocator_v =}}|{{c/core|std::uses_allocator&lt;T, Alloc&gt;::value;}}}}
{{dsc end}}

===Notes===
[1]: Defined in the {{tt|std::chrono::experimental}} namespace.