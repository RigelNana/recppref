{{cpp/experimental/title|lcm}}
{{cpp/experimental/lib_extensions_2/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''Merged into ISO C++''' The functionality described on this page was merged into the mainline ISO C++ standard as of 6/2016, see  {{ltt|cpp/numeric/lcm|std::lcm}} {{mark since c++17}}}}
{{dcl begin}}
{{dcl header|experimental/numeric}}
{{dcl|since=libfund_ts_2|
template&lt; class M, class N &gt;
constexpr std::common_type_t&lt;M, N&gt; lcm( M m, N n );
}}
{{dcl end}}

Computes the least common multiple of the integers {{c|m}} and {{c|n}}.

===Parameters===
{{par begin}}
{{par|m, n|integer values}}
{{par end}}

===Return value===
If either {{c|m}} or {{c|n}} is zero, returns zero. Otherwise, return the least common multiple of {{c|{{!}}m{{!}}}} and {{c|{{!}}n{{!}}}}.

===Remarks===
If either {{tt|M}} or {{tt|N}} is not an integer type, or if either is (possibly cv-qualified) {{c|bool}}, the program is ill-formed.

The behavior is undefined if {{c|{{!}}m{{!}}}}, {{c|{{!}}n{{!}}}} or the least common multiple of {{c|{{!}}m{{!}}}} and {{c|{{!}}n{{!}}}} is not representable as a value of type {{tt|std::common_type_t&lt;M, N&gt;}}.

===Exceptions===
Throws no exceptions.

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/dsc gcd}}
{{dsc end}}