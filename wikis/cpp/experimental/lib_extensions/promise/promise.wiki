{{cpp/experimental/promise/title|promise {{mark since libfund_ts}}}}
{{cpp/experimental/lib extensions/pmr/navbar}}
{{dcl begin}}
{{dcl|num=1|since=libfund_ts|
promise();
}}
{{dcl|num=2|since=libfund_ts|
template&lt; class Alloc &gt;
promise( std::allocator_arg_t, const Alloc&amp; alloc );
}}
{{dcl|num=3|since=libfund_ts|
promise( promise&amp;&amp; other ) noexcept;
}}
{{dcl|num=4|since=libfund_ts|1=
promise( const promise&amp; other ) = delete;
}}
{{dcl end}}

Constructs a {{tt|std::experimental::promise}} object.

@1@ Default constructor. Constructs the promise with an empty shared state. 

@2@ Constructs the promise with an empty shared state. The shared state is allocated using {{c|alloc}}, which is treated as a type-erased allocator (see below).

@3@ Move constructor. Constructs the promise with the shared state of {{c|other}} using move semantics. After construction, {{c|other}} has no shared state.

@4@ {{tt|std::experimental::promise}} is not copyable.

{{cpp/experimental/type erased allocator|promise}}

===Parameters===
{{par begin}}
{{par|alloc|allocator to use to allocate the shared state}}
{{par|other|another {{tt|std::experimental::promise}} to acquire the state from}}
{{par end}}

===Exceptions===
@1,2@ (none)

{{langlinks|zh}}