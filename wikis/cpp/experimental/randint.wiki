{{cpp/experimental/title|randint}}
{{cpp/experimental/lib_extensions_2/navbar}}

{{dcl begin}}
{{dcl header|experimental/random}}
{{dcl|since=libfund_ts_2|1=
template&lt; class IntType &gt;
IntType randint( IntType a, IntType b );
}}
{{dcl end}}

Generates a random integer in the closed interval {{tt|[a, b]}}.

===Parameters===
{{par begin}}
{{par|a, b|integer values specifying the range}}
{{par end}}

===Return value===
A random integer {{math|i}} in the closed interval {{tt|[a, b]}}, produced using a thread-local instance of {{c|std::uniform_int_distribution&lt;IntType&gt;}} invoked with the [[cpp/experimental/lib extensions 2#per-thread engine|per-thread random number engine]].

===Remarks===
If {{tt|IntType}} is not one of {{c|short}}, {{c|int}}, {{c|long}}, {{c|long long}}, {{c|unsigned short}}, {{c|unsigned int}}, {{c|unsigned long}}, or {{c|unsigned long long}}, the program is ill-formed.

The behavior is undefined if {{c|a &gt; b}}.

===Example===
{{example
|code=
#include &lt;experimental/random&gt;
#include &lt;iostream&gt;

int main()
{
    int random_number = std::experimental::randint(100, 999);
    std::cout &lt;&lt; "random 3-digit number: " &lt;&lt; random_number &lt;&lt; '\n';
}
|p=true
|output=
random 3-digit number: 273
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/dsc reseed}}
{{dsc end}}

{{langlinks|ru|zh}}