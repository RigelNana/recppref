{{cpp/experimental/title|negation}}
{{cpp/experimental/lib_extensions_2/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''Merged into ISO C++''' The functionality described on this page was merged into the mainline ISO C++ standard as of 2/2016, see  {{ltt|cpp/types/negation|std::negation}} {{mark since c++17}}}}
{{dcl begin}}
{{dcl header|experimental/type_traits}}
{{dcl|since=libfund_ts_2|num=1|1=
template&lt; class B &gt;
struct negation;
}}
{{dcl end}}

Forms the logical negation of the type trait {{tt|B}}.

The type {{c|negation&lt;B&gt;}} is a {{named req|UnaryTypeTrait}} with a base characteristic of {{c|std::integral_constant&lt;bool, !bool(B::value)&gt;}}.

===Template parameters===
{{par begin}}
{{par|B|any type such that the expression {{c|bool(B::value)}} is a valid constant expression}}
{{par end}}

===Helper variable template===
{{dcl begin}}
{{dcl|since=libfund_ts_2|1=
template&lt; class B &gt;
constexpr bool negation_v = negation&lt;B&gt;::value;
}}
{{dcl end}}

{{cpp/types/integral_constant/inherit|{{tt|B}} has a member {{tt|::value}} such that {{c|!bool(B::value)}} is {{c|true}}}}

===Possible implementation===
{{eq fun
|1=
template&lt;class B&gt;
struct negation : std::integral_constant&lt;bool, !bool(B::value)&gt; {};
}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc negation}}
{{dsc end}}