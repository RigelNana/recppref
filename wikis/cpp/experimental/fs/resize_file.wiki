{{cpp/experimental/fs/title|resize_file}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|1=
void resize_file( const path&amp; p, std::uintmax_t new_size );
void resize_file( const path&amp; p, std::uintmax_t new_size, error_code&amp; ec );
}}
{{dcl end}}

Changes the size of the regular file named by {{c|p}} as if by POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/truncate.html truncate]: if the file size was previously larger than {{c|new_size}}, the remainder of the file is discarded. If the file was previously smaller than {{c|new_size}}, the file size is increased and the new area appears as if zero-filled.

===Parameters===
{{par begin}}
{{par|p|path to resize}}
{{par|new_size|size that the file will now have}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
(none)

===Exceptions===
{{cpp/experimental/fs/error_handling|p}}

===Notes===
On systems that support sparse files, increasing the file size does not increase the space it occupies on the file system: space allocation takes place only when non-zero bytes are written to the file.

===Example===
{{example
|Demonstrates the effect of creating a sparse file on the free space.
|code=
#include &lt;experimental/filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::path p = fs::temp_directory_path() / "example.bin";
    std::ofstream(p).put('a');
    std::cout &lt;&lt; "File size:  " &lt;&lt; fs::file_size(p) &lt;&lt; '\n'
              &lt;&lt; "Free space: " &lt;&lt; fs::space(p).free &lt;&lt; '\n';
    fs::resize_file(p, 64*1024); // resize to 64 KB
    std::cout &lt;&lt; "File size:  " &lt;&lt; fs::file_size(p) &lt;&lt; '\n'
              &lt;&lt; "Free space: " &lt;&lt; fs::space(p).free &lt;&lt; '\n';
    fs::remove(p);
}
|p=true
|output=
File size:  1
Free space: 31805444096
File size:  65536
Free space: 31805444096
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc file_size}}
{{dsc inc|cpp/experimental/fs/dsc space}}
{{dsc end}}