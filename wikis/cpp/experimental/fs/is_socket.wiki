{{cpp/experimental/fs/title|is_socket}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|num=1|since=fs_ts|1=
bool is_socket( file_status s );
}}
{{dcl|num=2|since=fs_ts|1=
bool is_socket( const path&amp; p );
bool is_socket( const path&amp; p, error_code&amp; ec );
}}
{{dcl end}}

Checks if the given file status or path corresponds to a named IPC socket, as if determined by the POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_stat.h.html S_IFSOCK].

@1@ Equivalent to {{c|s.type() {{==}} file_type::socket}}.
@2@ Equivalent to {{c|is_socket(status(p))}} or {{c|is_socket(status(p, ec))}}.

===Parameters===
{{par begin}}
{{par|s|file status to check}}
{{par|p|path to examine}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
{{c|true}} if the file indicated by {{c|p}} or if the type indicated {{c|s}} refers to a named socket. The non-throwing overload returns {{c|false}} if an error occurs.

===Exceptions===
@1@ {{unreviewed noexcept}}
@2@ {{cpp/experimental/fs/error_handling|p}}

===Notes===
Named sockets are UNIX domain sockets constructed with [https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html socket] and [https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html bind] POSIX APIs, which may be used for advanced interprocess communication. In particular, they may be used to transport open file descriptors from one running process to another.

The information provided by this function is usually also provided as a byproduct of directory iteration. During directory iteration, calling {{tt|is_socket(*iterator)}} is less efficient than {{tt|is_socket(iterator-&gt;status())}}.

===Example===
{{cpp/experimental/fs/status_example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc status}}
{{dsc inc|cpp/experimental/fs/dsc file_status}}
{{dsc inc|cpp/experimental/fs/dsc status_known}}
{{dsc inc|cpp/experimental/fs/dsc is_block_file}}
{{dsc inc|cpp/experimental/fs/dsc is_character_file}}
{{dsc inc|cpp/experimental/fs/dsc is_directory}}
{{dsc inc|cpp/experimental/fs/dsc is_fifo}}
{{dsc inc|cpp/experimental/fs/dsc is_other}}
{{dsc inc|cpp/experimental/fs/dsc is_regular_file}}
{{dsc inc|cpp/experimental/fs/dsc is_symlink}}
{{dsc inc|cpp/experimental/fs/dsc exists}}
{{dsc inc|cpp/experimental/fs/directory_entry/dsc status}}
{{dsc end}}