{{cpp/experimental/fs/title|permissions}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|1=
void permissions( const path&amp; p, perms prms );
void permissions( const path&amp; p, perms prms, error_code&amp; ec );
}}
{{dcl end}}

Changes access permissions of the file to which {{c|p}} resolves, as if by POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/fchmodat.html fchmodat]. Symlinks are followed if {{tt|prms::resolve_symlinks}} is set.

The effects depend on {{c|prms}} as follows:

* If neither {{c|perms::add_perms}} nor {{c|perms::remove_perms}} is set, file permissions are set to exactly {{c|prms &amp; fs::perms::mask}} (meaning, every valid bit of {{c|prms}} is applied).
* If {{c|perms::add_perms}}, the file permissions are set to exactly {{c|status(p).permissions() {{!}} (prms &amp; perms::mask)}} (meaning, any valid bit that is set in {{c|prms}}, but not in the file's current permissions is added to the file's permissions).
* If {{c|perms::remove_perms}} is set, the file permissions are set to exactly {{c|status(p).permissions() &amp; ~(prms &amp; perms::mask)}} (meaning, any valid bit that is clear in {{c|prms}}, but set in the file's current permissions is cleared in the file's permissions).
* If both {{c|perms::add_perms}} and {{c|perms::remove_perms}} are set, error occurs.

The non-throwing overload has no special action on error.

===Parameters===
{{par begin}}
{{par|p|path to examine}}
{{par|prms|permissions to set, add, or remove}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
(none)

===Exceptions===
{{cpp/experimental/fs/error_handling|p}}

===Notes===
Permissions may not necessarily be implemented as bits, but they are treated that way conceptually.

Some permission bits may be ignored on some systems, and changing some bits may automatically change others (e.g. on platforms without owner/group/all distinction, setting any of the three write bits set all three).

===Example===
{{cpp/experimental/fs/permissions_example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc perms}}
{{dsc inc|cpp/experimental/fs/dsc status}}
{{dsc end}}