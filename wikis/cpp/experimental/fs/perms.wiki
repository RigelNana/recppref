{{cpp/experimental/fs/title|perms}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|1=
enum class perms;
}}
{{dcl end}}

This type represents file access permissions. {{tt|perms}} satisfies the requirements of {{named req|BitmaskType}} (which means the bitwise operators {{c|operator&amp;}}, {{c|operator{{!}}}}, {{c|operator^}}, {{c|operator~}}, {{c|operator&amp;{{=}}}}, {{c|operator{{!}}{{=}}}}, and {{c|operator^{{=}}}} are defined for this type).

Access permissions model [https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_stat.h.html POSIX permission bits], and any individual file permissions (as reported by {{rlp|status}}) are a combination of some of the following bits:

===Member constants===
{|class="wikitable" style="text-align:left; font-size:85%; max-width:90em;"
|-
!Member constant
!Value (octal)
!POSIX equivalent
!Meaning
|-
|{{tt|none}}
|{{c|0}}
|
|No permission bits are set
|-
|{{tt|owner_read}}
|{{c|0400}}
|{{c|S_IRUSR}}
|File owner has read permission
|-
|{{tt|owner_write}}
|{{c|0200}}
|{{c|S_IWUSR}}
|File owner has write permission
|-
|{{tt|owner_exec}}
|{{c|0100}}
|{{c|S_IXUSR}}
|File owner has execute/search permission
|-
|{{tt|owner_all}}
|{{c|0700}}
|{{c|S_IRWXU}}
|File owner has read, write, and execute/search permissions
Equivalent to {{c|owner_read {{!}} owner_write {{!}} owner_exec}}
|-
|{{tt|group_read}}
|{{c|040}}
|{{c|S_IRGRP}}
|The file's user group has read permission
|-
|{{tt|group_write}}
|{{c|020}}
|{{c|S_IWGRP}}
|The file's user group has write permission
|-
|{{tt|group_exec}}
|{{c|010}}
|{{c|S_IXGRP}}
|The file's user group has execute/search permission
|-
|{{tt|group_all}}
|{{c|070}}
|{{c|S_IRWXG}}
|The file's user group has read, write, and execute/search permissions
Equivalent to {{c|group_read {{!}} group_write {{!}} group_exec}}
|-
|{{tt|others_read}}
|{{c|04}}
|{{c|S_IROTH}}
|Other users have read permission
|-
|{{tt|others_write}}
|{{c|02}}
|{{c|S_IWOTH}}
|Other users have write permission
|-
|{{tt|others_exec}}
|{{c|01}}
|{{c|S_IXOTH}}
|Other users have execute/search permission
|-
|{{tt|others_all}}
|{{c|07}}
|{{c|S_IRWXO}}
|Other users have read, write, and execute/search permissions
Equivalent to {{c|others_read {{!}} others_write {{!}} others_exec}}
|-
|{{tt|all}}
|{{c|0777}}
|
|All users have read, write, and execute/search permissions
Equivalent to {{c|owner_all {{!}} group_all {{!}} others_all}}
|-
|{{tt|set_uid}}
|{{c|04000}}
|{{c|S_ISUID}}
|Set user ID to file owner user ID on execution
|-
|{{tt|set_gid}}
|{{c|02000}}
|{{c|S_ISGID}}
|Set group ID to file's user group ID on execution
|-
|{{tt|sticky_bit}}
|{{c|01000}}
|{{c|S_ISVTX}}
|Implementation-defined meaning, but POSIX XSI specifies that when set on a directory, only file owners may delete files even if the directory is writeable to others (used with {{c|/tmp}})
|-
|{{tt|mask}}
|{{c|07777}}
|
|All valid permission bits
Equivalent to {{c|all {{!}} set_uid {{!}} set_gid {{!}} sticky_bit}}
|}

Additionally, the following constants of this type are defined, which do not represent permissions:

{|class="wikitable" style="text-align:left; font-size:85%; max-width:90em;"
|-
!Member constant
!Value (hex)
!Meaning
|-
|{{tt|unknown}}
|{{c|0xFFFF}}
|Unknown permissions (e.g. when {{rlp|file_status}} is created without permissions)
|-
|{{tt|add_perms}}
|{{c|0x10000}}
|Control bit that instructs {{rlp|permissions}} to add, but not clear permission bits
|-
|{{tt|remove_perms}}
|{{c|0x20000}}
|Control bit that instructs {{rlp|permissions}} to clear, but not add permission bits
|-
|{{tt|resolve_symlinks}}
|{{c|0x40000}}
|Control bit that instructs {{rlp|permissions}} to resolve symlinks
|}

===Notes===
Permissions may not necessarily be implemented as bits, but they are treated that way conceptually.

Some permission bits may be ignored on some systems, and changing some bits may automatically change others (e.g. on platforms without owner/group/all distinction, setting any of the three write bits set all three).

===Example===
{{cpp/experimental/fs/permissions_example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc status}}
{{dsc inc|cpp/experimental/fs/dsc permissions}}
{{dsc end}}