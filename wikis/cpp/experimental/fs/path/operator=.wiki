{{cpp/experimental/fs/path/title|operator{{=}}}}
{{cpp/experimental/fs/path/navbar}}
{{dcl begin}}
{{dcl|num=1|since=fs_ts|1=
path&amp; operator=( const path&amp; p );
}}
{{dcl|num=2|since=fs_ts|1=
path&amp; operator=( path&amp;&amp; p );
}}
{{dcl|num=3|since=fs_ts|1=
template&lt; class Source &gt;
path&amp; operator=( const Source&amp; source );
}}
{{dcl end}}

@1@ Replaces the contents of {{c|*this}} with a copy of the contents of {{c|p}}.
@2@ Replaces the contents of {{c|*this}} with {{c|p}}, possibly using move semantics: {{c|p}} is left in valid, but unspecified state.
@3@ Replaces the contents of {{c|*this}} with a new path value constructed from {{c|source}} as if by overload {{v|4}} of the [[cpp/experimental/fs/path/path|path constructor]]. Equivalent to {{c|assign(source)}}.

===Parameters===
{{par begin}}
{{par|p|a path to assign}}
{{par|source|a {{lc|std::basic_string}}, pointer to a null-terminated character/wide character string, or an input iterator that points to a null-terminated character/wide character sequence. The character type must be one of {{c|char}}, {{c|char16_t}}, {{c|char32_t}}, {{c|wchar_t}}}}
{{par end}}

===Return value===
{{c|*this}}

===Exceptions===
@1@ (none)

@2@ {{unreviewed noexcept}}

@3@ (none)

===Example===
{{example|code=
#include &lt;experimental/filesystem&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::path p = "C:/users/abcdef/AppData/Local";
    p = p / "Temp"; // move assignment
    const wchar_t* wstr = L"D:/çŒ«.txt";
    p = wstr; // assignment from a source
}
|output=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/path/dsc assign}}
{{dsc inc|cpp/experimental/fs/path/dsc constructor}}
{{dsc end}}