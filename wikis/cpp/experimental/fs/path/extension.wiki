{{cpp/experimental/fs/path/title|extension}}
{{cpp/experimental/fs/path/navbar}}
{{dcl begin}}
{{dcl|since=fs_ts|1=
path extension() const;
}}
{{dcl end}}

Returns the extension of the filename component of the path {{c|*this}}.

If the {{ltt|cpp/experimental/fs/path/filename|filename()}} component of the path contains a period ({{ttb|.}}), and is not one of the special filesystem elements {{spar|dot}} or {{spar|dot-dot}}, then the ''extension'' is the substring beginning at the rightmost period (including the period) and until the end of the pathname.

If the pathname is either {{tt|.}} or {{tt|..}}, or if {{ltt|cpp/experimental/fs/path/filename|filename()}} does not contain the {{tt|.}} character, then empty path is returned. 

Additional behavior may be defined by the implementations for file systems which append additional elements (such as alternate data streams or partitioned dataset names) to extensions.

===Parameters===
(none)

===Return value===
The extension of the current pathname or an empty path if there's no extension.

{{cpp/impldef exception}}

===Notes===
The extension as returned by this function includes a period to make it possible to distinguish the file that ends with a period (function returns {{c|"."}}) from a file with no extension (function returns {{c|""}}).

For any path {{tt|p}}, {{c|1=p.stem()+p.extension() == p.filename()}}.

===Example===
{{example 
|code=
#include &lt;experimental/filesystem&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    std::cout &lt;&lt; fs::path("/foo/bar.txt").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/bar.").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/bar").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/bar.txt/bar.cc").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/bar.txt/bar.").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/bar.txt/bar").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/.").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/..").extension() &lt;&lt; '\n'
              &lt;&lt; fs::path("/foo/.hidden").extension() &lt;&lt; '\n';
}
|output=
".txt"
"."
""
".cc"
"."
""
""
""
".hidden"
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/path/dsc filename}}
{{dsc inc|cpp/experimental/fs/path/dsc stem}}
{{dsc inc|cpp/experimental/fs/path/dsc replace_extension}}
{{dsc mem fun|cpp/experimental/fs/path/has_path|title=has_extension|checks if the corresponding path element is not empty}}
{{dsc end}}