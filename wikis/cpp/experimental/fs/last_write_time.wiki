{{cpp/experimental/fs/title|last_write_time}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|num=1|since=fs_ts|1=
file_time_type last_write_time( const path&amp; p );
file_time_type last_write_time( const path&amp; p, error_code&amp; ec )
}}
{{dcl|num=2|since=fs_ts|1=
void last_write_time( const path&amp; p, file_time_type new_time );
void last_write_time( const path&amp; p, file_time_type new_time, error_code&amp; ec );
}}
{{dcl end}}

@1@ Returns the time of the last modification of {{c|p}}, determined as if by accessing the member {{tt|st_mtime}} of the POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/stat.html stat] (symlinks are followed).
The non-throwing overload returns {{c|file_time_type::min()}} on errors.
@2@ Changes the time of the last modification of {{c|p}}, as if by POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/futimens.html futimens] (symlinks are followed).

===Parameters===
{{par begin}}
{{par|p|path to examine or modify}}
{{par|new_time|new modification time}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
@1@ The time of the last modification of {{c|p}}.
@2@ (none)

===Exceptions===
{{cpp/experimental/fs/error_handling|p}}

===Notes===
It is not guaranteed that immediately after setting the write time, the value returned by {{v|1}} is the same as what was passed as the argument to {{v|2}} because the file system's time may be more granular than {{tt|file_time_type}}.

===Example===
{{cpp/experimental/fs/time_example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc file_time_type}}
{{dsc end}}