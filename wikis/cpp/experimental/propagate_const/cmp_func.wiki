{{cpp/title|equal_to, not_equal_to, less, greater, less_equal, greater_equal{{petty|(std::experimental::propagate_const)}}}}
{{cpp/experimental/lib extensions 2/propagate_const/navbar}}
{{dcl begin}}
{{dcl header|experimental/propagate_const}}
{{dcl|since=libfund_ts_2|1=
template&lt; class T &gt; struct equal_to&lt;std::experimental::propagate_const&lt;T&gt;&gt;;
}}
{{dcl|since=libfund_ts_2|1=
template&lt; class T &gt; struct not_equal_to&lt;std::experimental::propagate_const&lt;T&gt;&gt;;
}}
{{dcl|since=libfund_ts_2|1=
template&lt; class T &gt; struct less&lt;std::experimental::propagate_const&lt;T&gt;&gt;;
}}
{{dcl|since=libfund_ts_2|1=
template&lt; class T &gt; struct greater&lt;std::experimental::propagate_const&lt;T&gt;&gt;;
}}
{{dcl|since=libfund_ts_2|1=
template&lt; class T &gt; struct less_equal&lt;std::experimental::propagate_const&lt;T&gt;&gt;;
}}
{{dcl|since=libfund_ts_2|1=
template&lt; class T &gt; struct greater_equal&lt;std::experimental::propagate_const&lt;T&gt;&gt;;
}}
{{dcl end}}

The standard comparison function objects are partially specialized for {{c|std::experimental::propagate_const&lt;T&gt;}}.

Let {{c|p.t_}} denote the pointer-like object wrapped by a {{c|std::experimental::propagate_const&lt;T&gt; p}}, then given objects {{tt|p}} and {{tt|q}} of type {{c|std::experimental::propagate_const&lt;T&gt;}}, the following shall hold:
* {{c|1=std::equal_to&lt;std::experimental::propagate_const&lt;T&gt;&gt;()(p, q) == std::equal_to&lt;T&gt;()(p.t_, q.t_)}}
* {{c|1=std::not_equal_to&lt;std::experimental::propagate_const&lt;T&gt;&gt;()(p, q) == std::not_equal_to&lt;T&gt;()(p.t_, q.t_)}}
* {{c|1=std::less&lt;std::experimental::propagate_const&lt;T&gt;&gt;()(p, q) == std::less&lt;T&gt;()(p.t_, q.t_)}}
* {{c|1=std::greater&lt;std::experimental::propagate_const&lt;T&gt;&gt;()(p, q) == std::greater&lt;T&gt;()(p.t_, q.t_)}}
* {{c|1=std::less_equal&lt;std::experimental::propagate_const&lt;T&gt;&gt;()(p, q) == std::less_equal&lt;T&gt;()(p.t_, q.t_)}}
* {{c|1=std::greater_equal&lt;std::experimental::propagate_const&lt;T&gt;&gt;()(p, q) == std::greater_equal&lt;T&gt;()(p.t_, q.t_)}}

===Notes===
These specializations ensure that when {{tt|T}} is a pointer type, specializations of these class templates for {{c|std::experimental::propagate_const&lt;T&gt;}} yield a total order, even if the corresponding built-in operators do not.

===Example===
{{example
|code=
|output=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc equal_to}}
{{dsc inc|cpp/utility/functional/dsc not_equal_to}}
{{dsc inc|cpp/utility/functional/dsc less}}
{{dsc inc|cpp/utility/functional/dsc greater}}
{{dsc inc|cpp/utility/functional/dsc less_equal}}
{{dsc inc|cpp/utility/functional/dsc greater_equal}}
{{dsc end}}

{{langlinks|zh}}