{{cpp/experimental/propagate_const/title|swap}}
{{cpp/experimental/lib extensions 2/propagate_const/navbar}}

{{ddcl|since=libfund_ts_2|1= 
constexpr void swap( propagate_const &amp; pt ) noexcept(/* see below */);
}}

Swaps the wrapped pointer with that of {{c|pt}}. Let {{tt|t_}} designate the private data member that is the wrapped pointer-like object, then this function is equivalent to {{c|swap(t_, pt.t_)}}, where the overload resolution for {{tt|swap}} is performed among {{lc|std::swap}} and any declaration found by the usual lookup rules, as described in {{named req|Swappable}}.

The behavior is undefined if lvalues of {{tt|T}} do not satisfy {{named req|Swappable}}.

===Parameters===
{{par begin}}
{{par|pt|another {{tt|propagate_const}} object to swap with}}
{{par end}}

===Exceptions===
{{rev begin}}
{{rev|since=libfund_ts_2|
{{noexcept|noexcept(swap(t_, pt.t_))}}&lt;!-- LWG 2561/3413 --&gt;The lookup for the identifier {{tt|swap}} in the exception specification finds overloads described above, and does not find the member function itself, making the exception specification equivalent to C++17 {{lc|std::is_nothrow_swappable}}.
}}
{{rev|since=libfund_ts_3|
{{noexcept|std::is_nothrow_swappable_v&lt;T&gt;}}
}}
{{rev end}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3413|std=LFTSv2|before=the exception specification was ill-formed|after=made well-formed}}
{{dr list end}}

{{langlinks|es|ja|zh}}