{{cpp/title|n=experimental::|basic_string_view}}
{{cpp/experimental/basic_string_view/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''Merged into ISO C++''' The functionality described on this page was merged into the mainline ISO C++ standard as of 3/2016, see {{ltt|cpp/string/basic_string_view|std::basic_string_view}} {{mark since c++17}}}}
{{ddcl|header=experimental/string_view|since=libfund_ts|
template&lt; 
    class CharT, 
    class Traits {{=}} std::char_traits&lt;CharT&gt; 
&gt; class basic_string_view;
}}

The class template {{tt|basic_string_view}} describes an object that can refer to a constant contiguous sequence of {{c|char}}-like objects with the first element of the sequence at position zero. 

A typical implementation holds only two members: a pointer to constant {{tt|CharT}} and a size.

Several typedefs for common character types are provided:
{{dsc begin}}
{{dsc header|experimental/string_view}}
{{dsc hitem|Type|Definition}}
{{dsc|{{lc|std::experimental::string_view}}|{{c|std::experimental::basic_string_view&lt;char&gt;}}}}
{{dsc|{{lc|std::experimental::wstring_view}}|{{c|std::experimental::basic_string_view&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::experimental::u16string_view}}|{{c|std::experimental::basic_string_view&lt;char16_t&gt;}}}}
{{dsc|{{lc|std::experimental::u32string_view}}|{{c|std::experimental::basic_string_view&lt;char32_t&gt;}}}}
{{dsc end}}

===Template parameters===
{{par begin}}
{{par|CharT|character type}}
{{par|Traits|traits class specifying the operations on the character type}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|traits_type}}|{{tt|Traits}}}}
{{dsc|{{tt|value_type}}|{{tt|CharT}}}}
{{dsc|{{tt|pointer}}|{{tt|CharT*}}}}
{{dsc|{{tt|const_pointer}}|{{tt|const CharT*}}}}
{{dsc|{{tt|reference}}|{{tt|CharT&amp;}}}}
{{dsc|{{tt|const_reference}}|{{tt|const CharT&amp;}}}}
{{dsc|{{tt|const_iterator}}|implementation-defined {{named req|RandomAccessIterator}}}}
{{dsc|{{tt|iterator}}|{{tt|const_iterator}}}}
{{dsc|{{tt|reverse_iterator}}|{{tt|const_reverse_iterator}}}}
{{dsc|{{tt|const_reverse_iterator}}|{{c|std::reverse_iterator&lt;const_iterator&gt;}}}}
{{dsc|{{tt|size_type}}|{{lc|std::size_t}}}}
{{dsc|{{tt|difference_type}}|{{lc|std::ptrdiff_t}}}}
{{dsc end}}

Note: {{tt|iterator}} and {{tt|const_iterator}} are the same type because string views are views into constant character sequences.

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/basic_string_view/dsc constructor}}
{{dsc inc|cpp/experimental/basic_string_view/dsc operator{{=}}}}

{{dsc h2|Iterators}}
{{dsc inc|cpp/experimental/basic_string_view/dsc begin}}
{{dsc inc|cpp/experimental/basic_string_view/dsc end}}
{{dsc inc|cpp/experimental/basic_string_view/dsc rbegin}}
{{dsc inc|cpp/experimental/basic_string_view/dsc rend}}

{{dsc h2|Element access}}
{{dsc inc|cpp/experimental/basic_string_view/dsc operator_at}}
{{dsc inc|cpp/experimental/basic_string_view/dsc at}}
{{dsc inc|cpp/experimental/basic_string_view/dsc front}}
{{dsc inc|cpp/experimental/basic_string_view/dsc back}}
{{dsc inc|cpp/experimental/basic_string_view/dsc data}}

{{dsc h2|Capacity}}
{{dsc inc|cpp/experimental/basic_string_view/dsc size}}
{{dsc inc|cpp/experimental/basic_string_view/dsc max_size}}
{{dsc inc|cpp/experimental/basic_string_view/dsc empty}}

{{dsc h2|Modifiers}}
{{dsc inc|cpp/experimental/basic_string_view/dsc remove_prefix}}
{{dsc inc|cpp/experimental/basic_string_view/dsc remove_suffix}}
{{dsc inc|cpp/experimental/basic_string_view/dsc swap}}

{{dsc h2|Operations}}
{{dsc inc|cpp/experimental/basic_string_view/dsc to_string}}
{{dsc inc|cpp/experimental/basic_string_view/dsc copy}}
{{dsc inc|cpp/experimental/basic_string_view/dsc substr}}
{{dsc inc|cpp/experimental/basic_string_view/dsc compare}}
{{dsc inc|cpp/experimental/basic_string_view/dsc find}}
{{dsc inc|cpp/experimental/basic_string_view/dsc rfind}}
{{dsc inc|cpp/experimental/basic_string_view/dsc find_first_of}}
{{dsc inc|cpp/experimental/basic_string_view/dsc find_last_of}}
{{dsc inc|cpp/experimental/basic_string_view/dsc find_first_not_of}}
{{dsc inc|cpp/experimental/basic_string_view/dsc find_last_not_of}}

{{dsc h1|Constants}}
{{dsc inc|cpp/experimental/basic_string_view/dsc npos}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/basic_string_view/dsc operator_cmp}}

{{dsc h2|Input/output}}
{{dsc inc|cpp/experimental/basic_string_view/dsc operator_ltlt}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/experimental/basic_string_view/dsc hash}}
{{dsc end}}

===Feature test macros===
{{dsc begin}}
{{dsc macro const|__cpp_lib_experimental_string_view|nolink=true|a value of at least {{c|201411}} indicates that basic_string_view template is supported}}
{{dsc end}}