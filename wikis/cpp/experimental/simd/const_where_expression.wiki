{{cpp/experimental/title|const_where_expression}}
{{cpp/experimental/simd/const_where_expression/navbar}}

{{ddcl|header=experimental/simd|since=parallelism_ts_2|1=
template&lt; class M, class V &gt;
class const_where_expression;
}}

The class template {{tt|const_where_expression}} abstracts the notion of selected elements
of a given const object of arithmetic or data-parallel type. Selected elements signifies the elements {{c|data[i]}} for all {{math|i ∈}} {{tt|{&lt;!----&gt;}} {{math|j ∈ ℕ}} {{!}} {{c/core|j &lt; M::size() ⋀ mask[j]}} {{tt|}&lt;!----&gt;}}.

===Template parameters===
{{par begin}}
{{par|M|The mask type}}
{{par|V|The value type M applies on}}
{{par end}}

Valid combinations of {{tt|(M, V)}} are: ({{c|simd_mask&lt;T, Abi&gt;}}, {{c|const simd&lt;T, Abi&gt;}}), ({{c|simd_mask&lt;T, Abi&gt;}}, {{c|const simd_mask&lt;T, Abi&gt;}}), ({{c|bool}}, {{c|const T}}).

===Member functions===
{{dsc begin}}
{{dsc mem fun|cpp/experimental/simd/const_where_expression/operator arith|title=operator-&lt;br&gt;operator+&lt;br&gt;operator~|unary operators}}
{{dsc mem fun|cpp/experimental/simd/const_where_expression/copy_to|stores selected elements to address}}
{{dsc end}}

===Example===
{{example}}

{{langlinks|zh}}