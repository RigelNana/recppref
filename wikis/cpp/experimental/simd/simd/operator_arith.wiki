{{cpp/experimental/simd/title|operator+,-,*,/,%,&amp;,{{!}},^,&lt;&lt;,&gt;&gt;}}
{{cpp/experimental/simd/simd/navbar}}

{{dcl begin}}
{{dcl|num=1|since=parallelism_ts_2|1=
friend simd operator+( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=2|since=parallelism_ts_2|1=
friend simd operator-( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=3|since=parallelism_ts_2|1=
friend simd operator*( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=4|since=parallelism_ts_2|1=
friend simd operator/( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=5|since=parallelism_ts_2|1=
friend simd operator%( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=6|since=parallelism_ts_2|1=
friend simd operator&amp;( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=7|since=parallelism_ts_2|1=
friend simd operator{{!}}( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=8|since=parallelism_ts_2|1=
friend simd operator^( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=9|since=parallelism_ts_2|1=
friend simd operator&lt;&lt;( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=10|since=parallelism_ts_2|1=
friend simd operator&lt;&lt;( const simd&amp; lhs, int n ) noexcept;
}}
{{dcl|num=11|since=parallelism_ts_2|1=
friend simd operator&gt;&gt;( const simd&amp; lhs, const simd&amp; rhs ) noexcept;
}}
{{dcl|num=12|since=parallelism_ts_2|1=
friend simd operator&gt;&gt;( const simd&amp; lhs, int n ) noexcept;
}}
{{dcl end}}

Applies the given binary operator element-wise to each corresponding element of the operands. Returns a {{ltt|cpp/experimental/simd/simd}} such that {{simd_for_all_i}} the {{math|i{{sup|th}}}} element is equal to:
@1@ {{c|lhs[i] + rhs[i]}}
@2@ {{c|lhs[i] - rhs[i]}}
@3@ {{c|lhs[i] * rhs[i]}}
@4@ {{c|lhs[i] / rhs[i]}}
@5@ {{c|lhs[i] % rhs[i]}}
@6@ {{c|lhs[i] &amp; rhs[i]}}
@7@ {{c|lhs[i] {{!}} rhs[i]}}
@8@ {{c|lhs[i] ^ rhs[i]}}
@9@ {{c|lhs[i] &lt;&lt; rhs[i]}}
@10@ {{c|lhs[i] &lt;&lt; n}}
@11@ {{c|lhs[i] &gt;&gt; rhs[i]}}
@12@ {{c|lhs[i] &gt;&gt; n}}

===Parameters===
{{par begin}}
{{par|lhs|left operands}}
{{par|rhs|right operands}}
{{par|n|number of bits to shift each element in {{c|lhs}}}}
{{par end}}

===Return value===
A {{ltt|cpp/experimental/simd/simd}} as described above.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_compound}}
{{dsc end}}