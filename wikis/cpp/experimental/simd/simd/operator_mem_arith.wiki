{{cpp/experimental/simd/title|operator++|operator--}}
{{cpp/experimental/simd/simd/navbar}}
{{dcl begin}}
{{dcl|num=1|since=parallelism_ts_2|1=
simd&amp; operator++() noexcept;
}}
{{dcl|num=2|since=parallelism_ts_2|1=
simd operator++( int ) noexcept;
}}
{{dcl|num=3|since=parallelism_ts_2|1=
simd&amp; operator--() noexcept;
}}
{{dcl|num=4|since=parallelism_ts_2|1=
simd operator--( int ) noexcept;
}}
{{dcl end}}

Applies the increment or decrement operator on each element of the {{tt|simd}}.
@1@ Increments all values in the {{tt|simd}} by {{c|1}} and returns a reference to itself.
@2@ Increments all values in the {{tt|simd}} by {{c|1}} and returns a copy of itself before the operation.
@3@ Decrements all values in the {{tt|simd}} by {{c|1}} and returns a reference to itself.
@4@ Decrements all values in the {{tt|simd}} by {{c|1}} and returns a copy of itself before the operation.

===Example===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;experimental/simd&gt;
#include &lt;iostream&gt;
namespace stdx = std::experimental;

void print(auto rem, auto const&amp; a)
{
    std::cout &lt;&lt; rem &lt;&lt; ": ";
    for (std::size_t i{}; i != std::size(a); ++i)
        std::cout &lt;&lt; a[i] &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

int main()
{
    stdx::native_simd&lt;int&gt; p = -2;
    print('p', p);

    ++p;
    print('p', p);

    auto q = p--;
    print('p', p);
    print('q', q);
}
|p=true
|output=
p: -2 -2 -2 -2
p: -1 -1 -1 -1 
p: -2 -2 -2 -2
q: -1 -1 -1 -1 
}}