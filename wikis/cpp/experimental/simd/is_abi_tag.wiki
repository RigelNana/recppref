{{cpp/experimental/title|is_abi_tag}}
{{cpp/experimental/simd/navbar}}

{{ddcl|header=experimental/simd|since=parallelism_ts_2|
template&lt; class T &gt;
struct is_abi_tag;
}}

If {{c|T}} is an ABI tag in the {{tt|simd_abi}} namespace, provides the member constant {{c|value}} equal {{c|true}}. For any other type, {{c|value}} is {{c|false}}.

===Template parameters===
{{par begin}}
{{par|T|a type to check}}
{{par end}}

===Helper variable template===
{{ddcl|since=parallelism_ts_2|1=
template&lt; class T &gt;
constexpr bool is_abi_tag_v = is_abi_tag&lt;T&gt;::value;
}}

{{cpp/types/integral_constant/inherit|{{c|T}} is an ABI tag type}}

===Example===
{{example
|code=
#include &lt;experimental/simd&gt;

static_assert(std::experimental::is_abi_tag_v&lt;stdx::simd_abi::scalar&gt;);
static_assert(!std::experimental::is_abi_tag_v&lt;int&gt;);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/dsc is_simd_flag_type}}
{{dsc end}}

{{langlinks|ja|zh}}