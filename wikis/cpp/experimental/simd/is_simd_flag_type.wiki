{{cpp/experimental/title|is_simd_flag_type}}
{{cpp/experimental/simd/navbar}}

{{ddcl|header=experimental/simd|since=parallelism_ts_2|1=
template&lt; class T &gt;
struct is_simd_flag_type;
}}

If {{c|T}} is a valid type for the second argument to {{tt|copy_from}}, {{tt|copy_to}} or the corresponding load constructors of {{tt|simd}} or {{tt|simd_mask}}, provides the member constant {{c|value}} equal {{c|true}}. For any other type, {{c|value}} is {{c|false}}.

===Template parameters===
{{par begin}}
{{par|T|a type to check}}
{{par end}}
===Helper variable template===
{{ddcl|since=parallelism_ts_2|1=
template&lt; class T &gt;
constexpr bool is_simd_flag_type_v = is_simd_flag_type&lt;T&gt;::value;
}}

{{cpp/types/integral_constant/inherit|{{c|T}} is a load/store flag tag type}}

===Example===
{{example
|code=
#include &lt;experimental/simd&gt;
#include &lt;iostream&gt;

int main()
{
    namespace stdx = std::experimental;
    std::cout &lt;&lt; std::boolalpha
              &lt;&lt; stdx::is_simd_flag_type_v&lt;stdx::element_aligned_tag&gt; &lt;&lt; '\n'
              &lt;&lt; stdx::is_simd_flag_type_v&lt;int&gt; &lt;&lt; '\n';
}
|output=
true
false
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/dsc is_abi_tag}}
{{dsc end}}

{{langlinks|ja|zh}}