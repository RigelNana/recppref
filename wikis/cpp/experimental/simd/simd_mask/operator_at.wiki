{{cpp/experimental/simd_mask/title|operator[]}}
{{cpp/experimental/simd/simd_mask/navbar}}
{{dcl begin}}
{{dcl|num=1|since=parallelism_ts_2|1=
reference operator[]( size_t i );
}}
{{dcl|num=2|since=parallelism_ts_2|1=
bool operator[]( size_t i ) const;
}}
{{dcl end}}

The subscript operators allow reading and writing single elements of a {{tt|simd_mask}}.
@1@ Returns a reference proxy to the i-th element. This proxy type should not be captured into an lvalue. Lvalues of {{tt|simd_mask::reference}} can only convert to {{tt|value_type}}. Rvalues of {{tt|simd_mask::reference}} overload assignment and all compound assignment operators as well as {{tt|swap}}.
@2@ Returns a prvalue of the i-th element. In contrast to containers, which contain objects of type {{tt|value_type}}, a {{tt|simd_mask}} is not a container of individual objects and therefore cannot return an lvalue-reference.

===Parameters===
{{par begin}}
{{par|i|the element index. Required to be less than {{rlpt|size|size()}}}}
{{par end}}

===Example===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;experimental/simd&gt;
#include &lt;iostream&gt;
namespace stdx = std::experimental;
 
int main()
{
    stdx::native_simd_mask&lt;int&gt; a{true};
    a[1] = 0;
    for (std::size_t i = 0; i != a.size(); ++i)
        std::cout &lt;&lt; a[i] &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|p=true
|output=
1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
}}