{{cpp/experimental/simd_mask/title|copy_from}}
{{cpp/experimental/simd/simd_mask/navbar}}
{{dcl begin}}
{{dcl | since=parallelism_ts_2 | 1=
template&lt;class Flags&gt;
void copy_from( const bool* mem, Flags flags );
}}
{{dcl end}}

The load function replaces all elements of a {{ltt|cpp/experimental/simd/simd_mask}} such that the i-th element is assigned with {{tt|mem[i]}} {{simd_for_all_i}}.

===Parameters===
{{par begin}}
{{par | mem | a pointer into an array where [{{tt|mem}}, {{tt|mem + size()}}) is a valid range }}
{{par | flags | if of type {{ltt|cpp/experimental/simd/vector_aligned|vector_aligned_tag}}, the load constructor may assume {{tt|mem}} to point to storage aligned by {{ltt|cpp/experimental/simd/memory_alignment|memory_alignment_v&lt;simd_mask&gt;}} }}
{{par hreq}}
{{par req | {{tt|is_simd_flag_type_v&lt;Flags&gt;}} must be {{c/core|true}}.}}
{{par end}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/experimental/simd/element aligned}}
{{dsc inc | cpp/experimental/simd/vector_aligned}}
{{dsc inc | cpp/experimental/simd/overaligned}}
{{dsc inc | cpp/experimental/simd/dsc memory_alignment}}
{{dsc inc | cpp/experimental/simd/simd_mask/dsc constructor}}
{{dsc inc | cpp/experimental/simd/simd_mask/dsc copy_to}}
{{dsc inc | cpp/experimental/simd/simd/dsc copy_from}}
{{dsc end}}