{{cpp/experimental/title|simd}}
{{cpp/experimental/simd/simd/navbar}}

{{ddcl|header=experimental/simd|since=parallelism_ts_2|1=
template&lt; class T, class Abi = simd_abi::compatible&lt;T&gt; &gt;
class simd;
}}

The class template {{tt|simd}} is a data-parallel type. The width of a given {{tt|simd}} instantiation is a constant expression, determined by the template parameters.

An ABI tag is a type in the {{tt|simd_abi}} namespace that indicates a choice of size and binary representation for objects of data-parallel type.

===Template parameters===
{{par begin}}
{{par|T|element type; an arithmetic type other than {{c/core|bool}}}}
{{par|Abi|tag type used to determine the number of elements and storage}}
{{par end}}

===Helper alias templates===
{{dcl begin}}
{{dcl|1=
template&lt; class T, int N &gt;
using fixed_size_simd = std::experimental::simd&lt;T, std::experimental::simd_abi::fixed_size&lt;N&gt;&gt;;
}}
{{dcl|1=
template&lt; class T &gt;
using native_simd = std::experimental::simd&lt;T, std::experimental::simd_abi::native&lt;T&gt;&gt;;
}}
{{dcl end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|value_type}}|{{c|T}}}}
{{dsc|{{tt|reference}}|implementation-defined}}
{{dsc|{{tt|mask_type}}|{{c|simd_mask&lt;T, Abi&gt;}}}}
{{dsc|{{tt|abi_type}}|{{c|Abi}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/simd/dsc constructor}}
{{dsc inc|cpp/experimental/simd/simd/dsc copy_from}}
{{dsc inc|cpp/experimental/simd/simd/dsc copy_to}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_at}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_mem_arith}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_mem_arith2}}
{{dsc inc|cpp/experimental/simd/simd/dsc size}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_arith}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_compound}}
{{dsc inc|cpp/experimental/simd/simd/dsc operator_cmp}}
{{dsc end}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/dsc simd_mask}}
{{dsc inc|cpp/numeric/dsc valarray}}
{{dsc end}}

{{langlinks|zh}}