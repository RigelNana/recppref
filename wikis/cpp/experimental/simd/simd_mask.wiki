{{cpp/experimental/title|simd_mask}}
{{cpp/experimental/simd/simd_mask/navbar}}

{{ddcl|header=experimental/simd|since=parallelism_ts_2|1=
template&lt; class T, class Abi = simd_abi::compatible&lt;T&gt; &gt;
class simd_mask;
}}

The class template {{tt|simd_mask}} is a data-parallel type with the element type {{c/core|bool}}. The width of a given {{tt|simd_mask}} instantiation is a constant expression, determined by the template parameters. Specifically, {{c|simd_mask&lt;T, Abi&gt;::size()}} is always {{c|simd&lt;T, Abi&gt;::size()}}.

===Template parameters===
{{par begin}}
{{par|T|the element type {{tt|simd_mask}} applies on}}
{{par|Abi|the ABI type {{tt|simd_mask}} applies on}}
{{par end}}

===Helper alias templates===
{{dsc begin}}
{{dsc hitem|Template|Definition}}
{{dsc|{{c|template&lt; class T, int N &gt; using fixed_size_simd_mask}}|{{c|simd_mask&lt;T, simd_abi::fixed_size&lt;N&gt;&gt;}}}}
{{dsc|{{c|template&lt; class T &gt; using native_simd_mask}}|{{c|simd_mask&lt;T, simd_abi::native&lt;T&gt;&gt;}}}}
{{dsc end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|value_type}}|{{c|bool}}}}
{{dsc|{{tt|reference}}|implementation-defined}}
{{dsc|{{tt|simd_type}}|{{c|simd&lt;T, Abi&gt;}}}}
{{dsc|{{tt|abi_type}}|{{c|Abi}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc constructor}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc copy_from}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc copy_to}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc operator_at}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc operator_mem_logic}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc size}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc operator_logic}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc operator_bitwise}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc operator_compound}}
{{dsc inc|cpp/experimental/simd/simd_mask/dsc operator_relation}}
{{dsc end}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/simd/dsc simd}}
{{dsc inc|cpp/numeric/valarray/dsc mask_array}}
{{dsc end}}

{{langlinks|zh}}