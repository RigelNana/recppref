{{cpp/experimental/title|latch}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''Merged into ISO C++''' The functionality described on this page was merged into the mainline ISO C++ standard as of 7/2019; see {{ltt|cpp/thread/latch|std::latch}} {{mark since c++20}}}}
{{cpp/experimental/concurrency/latch/navbar}}
{{dcl begin}}
{{dcl header|experimental/latch}}
{{dcl|since=concurrency||1=
class latch;
}}
{{dcl end}}

The {{tt|latch}} class is a downward counter of type {{tt|ptrdiff_t}} which can be
used to synchronize threads. The value of the counter is initialized on creation.
Threads may block on the latch until the counter is decremented to zero. There is
no possibility to increase or reset the counter, which makes the latch a single-use
barrier.

Unlike {{ltt|cpp/experimental/barrier|std::experimental::barrier}}, {{tt|std::experimental::latch}} can be decremented by a participating thread more than once.

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/latch/dsc constructor|latch}}
{{dsc inc|cpp/experimental/latch/dsc destructor|latch}}
{{dsc inc|cpp/experimental/latch/dsc operator{{=}}|latch}}

{{dsc inc|cpp/experimental/latch/dsc count_down_and_wait|latch}}
{{dsc inc|cpp/experimental/latch/dsc count_down|latch}}

{{dsc inc|cpp/experimental/latch/dsc is_ready|latch}}
{{dsc inc|cpp/experimental/latch/dsc wait|latch}}
{{dsc end}}

{{langlinks|ja|zh}}