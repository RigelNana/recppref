{{cpp/experimental/optional/title|value}}
{{cpp/experimental/optional/navbar}}
{{dcl begin}}
{{dcl|num=1|since=libfund_ts|1=
constexpr T&amp; value() &amp;;
constexpr const T &amp; value() const &amp;;
}}
{{dcl|num=2|since=libfund_ts|1=
constexpr T&amp;&amp; value() &amp;&amp;;
constexpr const T&amp;&amp; value() const &amp;&amp;;
}}
{{dcl end}}

Returns the contained value.
@1@ Equivalent to {{c|return bool(*this) ? *val : throw bad_optional_access();}}.
@2@ Equivalent to {{c|return bool(*this) ? std::move(*val) : throw bad_optional_access();}}.

===Parameters===
(none)

===Return value===
A reference to the contained value.

===Exceptions===
{{lc|std::experimental::bad_optional_access}} if {{c|*this}} does not contain a value.

===Notes===
The dereference operator {{lc|operator*()}} does not check if this optional contains a value, which may be more efficient than {{tt|value()}}.

===Example===
{{example|code=
#include &lt;experimental/optional&gt;
#include &lt;iostream&gt;

int main()
{
    std::experimental::optional&lt;int&gt; opt = {};

    try
    {
        int n = opt.value();
    }
    catch (const std::logic_error&amp; e)
    {
        std::cout &lt;&lt; e.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
optional&lt;T&gt;::value: not engaged
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/optional/dsc value_or}}
{{dsc inc|cpp/experimental/optional/dsc operator*}}
{{dsc inc|cpp/experimental/optional/dsc bad_optional_access}}
{{dsc end}}