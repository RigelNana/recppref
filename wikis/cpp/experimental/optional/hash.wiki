{{cpp/title|hash &lt;small&gt;&lt;std::experimental::optional&gt;&lt;/small&gt;}}
{{cpp/experimental/optional/navbar}}
{{dcl begin}}
{{dcl header|experimental/optional}}
{{dcl|since=libfund_ts|1=
template&lt; class T &gt;
struct hash&lt;std::experimental::optional&lt;T&gt;&gt;;
}}
{{dcl end}}

The template specialization of {{lc|std::hash}} for the {{lc|std::experimental::optional}} class allows users to obtain hashes of the values contained in {{tt|optional}} objects.

===Template parameters===
{{par begin}}
{{par|T|the type of the value contained in {{tt|optional}} object. The specialization {{c|std::hash&lt;T&gt;}} must meet the requirements of class template {{tt|hash}}.}}
{{par end}}

===Example===
{{example
|code=
#include &lt;experimental/optional&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;unordered_set&gt;
using namespace std::literals;

int main()
{
    // hash&lt;optional&gt; makes it possible to use unordered_set
    std::unordered_set&lt;std::experimental::optional&lt;std::string&gt;&gt; s = {
        "abc"s, std::experimental::nullopt, "def"s
    };

    for (const auto&amp; o : s)
        std::cout &lt;&lt; o.value_or("(null)") &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|p=true
|output=
def abc (null)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc end}}