{{cpp/experimental/atomic_weak_ptr/title|operator{{=}}}}
{{cpp/experimental/concurrency/atomic_weak_ptr/navbar}}
{{dcl begin}}
{{dcl | num=1 | 1=
void operator=( weak_ptr&lt;T&gt; desired ) noexcept;
}}
{{dcl | num=2 | 1=
void operator=( const atomic_weak_ptr&amp; ) = delete;
}}
{{dcl end}}

@1@ Atomically assigns a value {{tt|desired}} to the atomic variable. Equivalent to {{c|store(desired)}}.
@2@ Atomic variables are not {{named req|CopyAssignable}}.

===Parameters===
{{par begin}}
{{par | desired | value to assign}}
{{par end}}

===Notes===
Unlike most assignment operators, the assignment operators for {{tt|atomic_weak_ptr}} returns {{c|void}}.

===Remarks===
{{cpp/experimental/atomic_weak_ptr/atomic remarks}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/experimental/atomic_weak_ptr/dsc constructor}}
{{dsc inc | cpp/experimental/atomic_weak_ptr/dsc store}}
{{dsc inc | cpp/memory/shared ptr/dsc atomic}}
{{dsc end}}