{{cpp/experimental/atomic_weak_ptr/title|load}}
{{cpp/experimental/concurrency/atomic_weak_ptr/navbar}}
{{dcl begin}}
{{dcl | 1=
weak_ptr&lt;T&gt; load( std::memory_order order = std::memory_order_seq_cst ) const noexcept;
}}
{{dcl end}}

Atomically loads and returns the current value of the {{tt|atomic_weak_ptr}}. Memory is affected according to the value of {{tt|order}}.

{{tt|order}} must be one of {{lc|std::memory_order_relaxed}}, {{lc|std::memory_order_consume}}, {{lc|std::memory_order_acquire}} or {{lc|std::memory_order_seq_cst}}. Otherwise the behavior is undefined.

===Parameters===
{{par begin}}
{{par | order | memory order constraints to enforce}}
{{par end}}

===Remarks===
{{cpp/experimental/atomic_weak_ptr/atomic remarks|readonly=yes}}

===Return value===
The current value of the {{tt|atomic_weak_ptr}}.

===See also===
{{dsc begin}}
{{dsc inc | cpp/experimental/atomic_weak_ptr/dsc operator_weak_ptr}}
{{dsc inc | cpp/memory/shared ptr/dsc atomic}}
{{dsc end}}