{{cpp/experimental/title|ostream_joiner}}
{{cpp/experimental/lib extensions 2/ostream joiner/navbar}}
{{ddcl|header=experimental/iterator|since=libfund_ts_2|1=
template&lt;
    class DelimT,
    class CharT = char,
    class Traits = std::char_traits&lt;CharT&gt;
&gt;
class ostream_joiner;
}}

{{tt|std::experimental::ostream_joiner}} is a single-pass {{named req|OutputIterator}} that writes successive objects into the {{lc|std::basic_ostream}} object for which it was constructed, using {{tt|operator&lt;&lt;}}, separated by a delimiter. The delimiter is written to the output stream between every two objects that are written. The write operation is performed when the iterator (whether dereferenced or not) is assigned to. Incrementing the {{tt|ostream_joiner}} is a no-op.

In a typical implementation, the only data members of {{tt|ostream_joiner}} are a pointer to the associated {{lc|std::basic_ostream}}, the delimiter, and a {{c/core|bool}} member that indicates whether the next write is for the first element in the sequence.

Compared to {{lc|std::ostream_iterator}}, {{tt|ostream_joiner}} prints the delimiter sequence one fewer time, and is not templated on the type of the object to be printed.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|traits_type}}|{{tt|Traits}}}}
{{dsc|{{tt|ostream_type}}|{{c|std::basic_ostream&lt;CharT, Traits&gt;}}}}
{{dsc|{{tt|value_type}}|{{c|void}}}}
{{dsc|{{tt|difference_type}}|{{c|void}}}}
{{dsc|{{tt|pointer}}|{{c|void}}}}
{{dsc|{{tt|reference}}|{{c|void}}}}
{{dsc|{{tt|iterator_category}}|{{c|std::output_iterator_tag}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/ostream_joiner/dsc constructor}}
{{dsc inc|cpp/experimental/ostream_joiner/dsc destructor}}
{{dsc inc|cpp/experimental/ostream_joiner/dsc operator{{=}}}}
{{dsc inc|cpp/experimental/ostream_joiner/dsc operator*}}
{{dsc inc|cpp/experimental/ostream_joiner/dsc operator_arith}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/ostream_joiner/dsc make_ostream_joiner}}
{{dsc end}}

===Example===
{{example
|
|code=
#include &lt;algorithm&gt;
#include &lt;experimental/iterator&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;

int main()
{
    int i[] = {1, 2, 3, 4, 5};
    std::copy(std::begin(i),
              std::end(i),
              std::experimental::make_ostream_joiner(std::cout, ", "));
}
|output=
1, 2, 3, 4, 5
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc ostreambuf_iterator}}
{{dsc inc|cpp/iterator/dsc ostream_iterator}}
{{dsc inc|cpp/iterator/dsc istream_iterator}}
{{dsc end}}

{{langlinks|ru|zh}}