{{cpp/experimental/title|default_searcher|make_default_searcher}}
{{cpp/experimental/lib_extensions/navbar}}

{{dcl begin}}
{{dcl header|experimental/functional}}
{{dcl|since=libfund_ts|
template&lt; class ForwardIterator1, class BinaryPredicate {{=}} std::equal_to&lt;&gt; &gt;
class default_searcher;
}}
{{dcl end}}

A class suitable for use with {{ltt|cpp/experimental/search|std::experimental::search}} that delegates the search operation to the standard library's {{lc|std::search}}.

{{tt|default_searcher}} is {{named req|CopyConstructible}} and {{named req|CopyAssignable}}.

===Member functions===
{{member|{{small|std::experimental::default_searcher::}}default_searcher|2=
{{dcl begin}}
{{dcl| 
default_searcher( ForwardIterator pat_first,
                  ForwardIterator pat_last,
                  BinaryPredicate pred {{=}} BinaryPredicate() );
}}
{{dcl end}}
Constructs a {{tt|default_searcher}} by storing copies of {{c|pat_first}}, {{c|pat_last}}, and {{c|pred}}.

===Parameters===
{{par begin}}
{{par|pat_first, pat_last|a pair of iterators designating the string to be searched for}}
{{par|pred|a callable object used to determine equality}}
{{par end}}

===Exceptions===
Any exceptions thrown by the copy constructors of {{tt|BinaryPredicate}} or {{tt|ForwardIterator}}.
}}

{{member|{{small|std::experimental::default_searcher::}}operator()|2=
{{dcl begin}}
{{dcl rev begin}}
{{dcl|until=c++17|
template&lt; class ForwardIterator2 &gt;
ForwardIterator2 operator()( ForwardIterator2 first, ForwardIterator2 last ) const;
}}
{{dcl|since=c++17|
template&lt; class ForwardIterator2 &gt;
std::pair&lt;ForwardIterator2, ForwardIterator2&gt;
    operator()( ForwardIterator2 first, ForwardIterator2 last ) const;
}}
{{dcl rev end}}
{{dcl end}}
The member function called by {{ltt|cpp/experimental/search|std::experimental::search}} to perform a search with this searcher.
{{rev begin}}
{{rev|until=c++17|
Equivalent to {{c|std::search(first, last, pat_first, pat_last, pred);}}.
}}
{{rev|until=c++17|
Returns a pair of iterators {{tt|i, j}}, where {{tt|i}} is {{c|std::search(first, last, pat_first, pat_last, pred)}} and {{tt|j}} is {{c|std::next(i, std::distance(pat_first, pat_last))}} unless {{tt|std::search}} returned {{c|last}} (no match), in which case {{tt|j}} equals {{c|last}} as well.
}}
{{rev end}}

===Parameters===
{{par begin}}
{{par|first, last|a pair of iterators designating the string to be examined}}
{{par end}}

===Return value===
{{rev begin}}
{{rev|until=c++17|
Iterator to the first position in {{range|first|last}} where a subsequence that compares equal to {{range|pat_first|pat_last}} as defined by {{c|pred}} is located, or a copy of {{c|last}} otherwise.
}}
{{rev|since=c++17|
A pair of iterators to the first and one past last positions in {{range|first|last}} where a subsequence that compares equal to {{range|pat_first|pat_last}} as defined by {{c|pred}} is located, or a pair of copies of {{c|last}} otherwise.
}}
{{rev end}}
}}

===Helper Functions===
{{dcl begin}}
{{dcl|since=libfund_ts|
template&lt; class ForwardIterator, class BinaryPredicate {{=}} std::equal_to&lt;&gt; &gt;
default_searcher&lt;ForwardIterator, BinaryPredicate&gt; make_default_searcher(
    ForwardIterator pat_first,
    ForwardIterator pat_last,
    BinaryPredicate pred {{=}} BinaryPredicate());
}}
{{dcl end}}

Helper function that constructs a {{tt|std::experimental::default_searcher}} using template argument deduction. Equivalent to {{c|return default_searcher&lt;ForwardIterator, BinaryPredicate&gt;(pat_first, pat_last, pred);}}

===Parameters===
{{par begin}}
{{par|pat_first, pat_last|a pair of iterators designating the string to be searched for}}
{{par|pred|a callable object used to determine equality}}
{{par end}}

===Return value===
A {{tt|default_searcher}} constructed with the arguments {{c|pat_first}}, {{c|pat_last}}, {{c|pred}}.

===Example===
{{example
|code=
#include &lt;experimental/algorithm&gt;
#include &lt;experimental/functional&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
 
int main()
{
    std::string in = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,"
                     " sed do eiusmod tempor incididunt ut labore et dolore magna aliqua";
    std::string needle = "pisci";
    auto it = std::experimental::search(in.begin(), in.end(),
                  std::experimental::make_default_searcher(
                      needle.begin(), needle.end()));
    if (it != in.end())
        std::cout &lt;&lt; "The string " &lt;&lt; needle &lt;&lt; " found at offset "
                  &lt;&lt; it - in.begin() &lt;&lt; '\n';
    else
        std::cout &lt;&lt; "The string " &lt;&lt; needle &lt;&lt; " not found\n";
}
|output=
The string pisci found at offset 43
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc search}}
{{dsc end}}