{{cpp/experimental/ranges/tagged/title|operator{{=}}}}
{{cpp/experimental/ranges/utility/tagged/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
tagged &amp;operator=( tagged&amp;&amp; that ) = default;
}}
{{dcl|num=2|1=
tagged &amp;operator=( const tagged&amp; that ) = default;
}}
{{dcl|num=3|1=
template&lt; class Other &gt;
    requires Assignable&lt;Base&amp;, Other&gt;
constexpr tagged&amp; operator=( ranges::tagged&lt;Other, Tags...&gt;&amp;&amp; that )
    noexcept(std::is_nothrow_assignable&lt;Base&amp;, Other&gt;::value);
}}
{{dcl|num=4|1=
template&lt; class Other &gt;
    requires Assignable&lt;Base&amp;, const Other&amp;&gt;
constexpr tagged&amp; operator=( const ranges::tagged&lt;Other, Tags...&gt;&amp; that );
}}
{{dcl|num=5|1=
template&lt; class U &gt;
    requires Assignable&lt;Base&amp;, U&gt; &amp;&amp; !Same&lt;std::decay_t&lt;U&gt;, tagged&gt;
constexpr tagged&amp; operator=( U&amp;&amp; that ) noexcept(std::is_nothrow_assignable&lt;Base&amp;, U&gt;::value);
}}
{{dcl end}}
Assigns the contents of {{c|that}} to {{c|*this}}.

@1,2@ {{tt|tagged}} has defaulted copy and move assignment operators that invoke the corresponding assignment operator of {{tt|Base}}.
@3@ Converting move assignment from a different {{tt|tagged}} specialization with matching tags.  Equivalent to {{c|1=static_cast&lt;Base&amp;&gt;(*this) = static_cast&lt;Other&amp;&amp;&gt;(that);}}.
@4@ Converting copy assignment from a different {{tt|tagged}} specialization with matching tags.   Equivalent to {{c|1=static_cast&lt;Base&amp;&gt;(*this) = static_cast&lt;const Other&amp;&gt;(that);}}.
@5@ Assigns {{c|that}} to the {{tt|Base}} subobject. Equivalent to {{c|1=static_cast&lt;Base&amp;&gt;(*this) = std::forward&lt;U&gt;(that);}}.

===Return value===
{{c|*this}}.

{{langlinks|zh}}