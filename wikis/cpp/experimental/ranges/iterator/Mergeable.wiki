{{cpp/experimental/ranges/title|Mergeable}}
{{cpp/experimental/ranges/iterator/navbar}}
{{ddcl|since=ranges|1=
template&lt; class I1, class I2, class Out, class R = ranges::less&lt;&gt;,
          class P1 = ranges::identity, class P2 = ranges::identity &gt;
concept bool Mergeable =
    InputIterator&lt;I1&gt; &amp;&amp;
    InputIterator&lt;I2&gt; &amp;&amp;
    WeaklyIncrementable&lt;Out&gt; &amp;&amp;
    IndirectlyCopyable&lt;I1, Out&gt; &amp;&amp;
    IndirectlyCopyable&lt;I2, Out&gt; &amp;&amp;
    IndirectStrictWeakOrder&lt;R, ranges::projected&lt;I1, P1&gt;, ranges::projected&lt;I2, P2&gt;&gt;;
}}

The {{tt|Mergeable}} concept specifies the common requirements of algorithms that merge sorted sequences into an output sequence by copying the elements (for example, {{ltt|cpp/experimental/ranges/algorithm/merge|ranges::merge}}).

{{langlinks|zh}}