{{cpp/experimental/ranges/title|prev}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|notes={{mark|customization point object}}|since=ranges|1=
namespace {
    constexpr /* unspecified */ prev = /* unspecified */;
}
}}
{{dcl h|Call signature}}
{{dcl|num=1|1=
template&lt; Iterator I &gt;
constexpr I prev( I i );
}}
{{dcl|num=2|1=
template&lt; Iterator I &gt;
constexpr I prev( I i, ranges::difference_type_t&lt;I&gt; n );
}}
{{dcl|num=3|1=
template&lt; Iterator I &gt;
constexpr I prev( I i, ranges::difference_type_t&lt;I&gt; n, I bound );
}}
{{dcl end}}

Decrements the iterator {{c|i}} {{c|n}} times, or until {{c|bound}} is reached, whichever comes first, and returns the decremented iterator.

@1@ Equivalent to {{c|--i; return i;}}.
@2@ Equivalent to {{c|ranges::advance(i, -n); return i;}}.
@3@ Equivalent to {{c|ranges::advance(i, -n, bound); return i;}}.

{{cpp/experimental/ranges/cpo}}

===Return value===
The decremented iterator.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc prev}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc advance}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc next}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc distance}}
{{dsc end}}

{{langlinks|ja|zh}}