{{cpp/experimental/ranges/title|difference_type}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|num=1|
template&lt; class I &gt;
struct difference_type {};
}}
{{dcl|num=2|
template&lt; class T &gt;
struct difference_type&lt;T*&gt;;
}}
{{dcl|num=3|
template&lt; class T &gt;
struct difference_type&lt;const T&gt; : difference_type&lt;std::decay_t&lt;T&gt;&gt; {};
}}
{{dcl|num=4|
template&lt; class T &gt;
    requires requires { typename T::difference_type; }
struct difference_type&lt;T&gt;;
}}
{{dcl|num=5|
template&lt; class T &gt;
    requires !requires { typename T::difference_type; } &amp;&amp;
             requires(const T&amp; a, const T&amp; b) { {a - b} -&gt; Integral; }
struct difference_type&lt;T&gt;;
}}
{{dcl end}}

Computes the associated difference type of the type {{tt|I}}, if any. Users may specialize {{tt|difference_type}} for a program-defined type.

@1@ Primary template is an empty struct.
@2@ Specialization for pointers. If {{tt|T}} is an object type, provides a member type {{tt|type}} equal to {{lc|std::ptrdiff_t}}. Otherwise, there is no member {{tt|type}}.
@3@ Specialization for const-qualified types.
@4@ Specialization for types that define a public and accessible member type {{tt|difference_type}}. Provides a member type {{tt|type}} equal to {{tt|T::difference_type}}. 
@5@ Specialization for types that do not define a public and accessible member type {{tt|difference_type}} but do support subtraction. Provides a member type {{tt|type}} equal to {{c|std::make_signed_t&lt;decltype(std::declval&lt;T&gt;() - std::declval&lt;T&gt;())&gt;}}.

===Helper alias template===
{{ddcl|since=ranges|1=
template&lt; class T &gt; 
using difference_type_t = typename ranges::difference_type&lt;T&gt;::type;
}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc WeaklyIncrementable}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc iterator_traits}}
{{dsc end}}

{{langlinks|ja|zh}}