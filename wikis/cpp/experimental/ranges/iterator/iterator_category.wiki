{{cpp/experimental/ranges/title|iterator_category}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|num=1|
template&lt; class I &gt;
struct iterator_category {};
}}
{{dcl|num=2|
template&lt; class T &gt;
struct iterator_category&lt;T*&gt;;
}}
{{dcl|num=3|
template&lt; class T &gt;
struct iterator_category&lt;const T&gt; : iterator_category&lt;T&gt; {};
}}
{{dcl|num=4|
template&lt; class T &gt;
    requires requires { typename T::iterator_category; }
struct iterator_category&lt;T&gt;;
}}
{{dcl end}}

Computes the iterator category of the class {{tt|I}}, if any. Users may specialize {{tt|iterator_category}} for a program-defined type.

@1@ Primary template is an empty struct.
@2@ Specialization for pointers. If {{tt|T}} is an object type, provides a member type {{tt|type}} equal to {{lc|ranges::random_access_iterator_tag}}. Otherwise, there is no member {{tt|type}}.
@3@ Specialization for const-qualified types.
@4@ Specialization for types that define a public and accessible member type {{tt|iterator_category}}. If {{tt|T::iterator_category}} is the same as or derived from one of iterator category tags in namespace {{tt|std}}, it is mapped to the corresponding tag in the namespace {{tt|ranges}} as described below. Otherwise, provides a member type {{tt|type}} equal to {{tt|T::iterator_category}}.
* If {{tt|T::iterator_category}} is the same as or derives from {{lc|std::random_access_iterator_tag}}, provides a member type {{tt|type}} equal to {{lc|ranges::random_access_iterator_tag}}.
* Otherwise, if {{tt|T::iterator_category}} is the same as or derives from {{lc|std::bidirectional_iterator_tag}}, provides a member type {{tt|type}} equal to {{lc|ranges::bidirectional_iterator_tag}}.
* Otherwise, if {{tt|T::iterator_category}} is the same as or derives from {{lc|std::forward_iterator_tag}}, provides a member type {{tt|type}} equal to {{lc|ranges::forward_iterator_tag}}.
* Otherwise, if {{tt|T::iterator_category}} is the same as or derives from {{lc|std::input_iterator_tag}}, provides a member type {{tt|type}} equal to {{lc|ranges::input_iterator_tag}}.
* Otherwise, if {{tt|T::iterator_category}} is the same as or derives from {{lc|std::output_iterator_tag}}, there is no member {{tt|type}}.

===Helper alias template===
{{ddcl|since=ranges|1=
template&lt; class T &gt; 
using iterator_category_t = typename ranges::iterator_category&lt;T&gt;::type;
}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc iterator tags}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc iterator tags}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc iterator_traits}}
{{dsc end}}

{{langlinks|ja|zh}}