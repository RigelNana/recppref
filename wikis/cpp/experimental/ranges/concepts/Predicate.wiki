{{cpp/experimental/ranges/title|Predicate}}
{{cpp/experimental/ranges/concepts/navbar}}
{{ddcl|header=experimental/ranges/concepts|since=ranges|1=
template&lt; class F, class... Args &gt;
concept bool Predicate =
    RegularInvocable&lt;F, Args...&gt; &amp;&amp;
    Boolean&lt;std::result_of_t&lt;F&amp;&amp;(Args&amp;&amp;...)&gt;&gt;;
}}

The concept {{tt|Predicate&lt;F, Args...&gt;}} specifies that {{tt|F}} is a predicate that accepts arguments whose types and value categories are encoded by {{tt|Args...}}, i.e., it can be invoked with these arguments to produce a {{rconcept|Boolean}} result.

Note that {{rconcept|RegularInvocable}} requires the invocation to not modify either the callable object or the arguments and be equality-preserving.

{{cpp/experimental/ranges/equality preservation|skip-requires=yes}}

{{langlinks|zh}}