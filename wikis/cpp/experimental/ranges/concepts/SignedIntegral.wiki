{{cpp/experimental/ranges/title|SignedIntegral}}
{{cpp/experimental/ranges/concepts/navbar}}
{{ddcl|header=experimental/ranges/concepts|since=ranges|1=
template&lt; class T &gt;
concept bool SignedIntegral = Integral&lt;T&gt; &amp;&amp; std::is_signed&lt;T&gt;::value;
}}

The concept {{tt|SignedIntegral&lt;T&gt;}} is satisfied if and only if {{tt|T}} is an integral type and {{c|std::is_signed&lt;T&gt;::value}} is {{c|true}}.

There need not be any subsumption relationship between {{tt|SignedIntegral&lt;T&gt;}} and {{c|std::is_signed&lt;T&gt;::value}}. 

===Notes===
{{tt|SignedIntegral&lt;T&gt;}} may be satisfied by a type that is not a [[cpp/language/type#Type classification|signed integer type]], for example, {{c|char}} (on a system where {{c|char}} is signed).

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_integral}}
{{dsc inc|cpp/types/dsc is_signed}}
{{dsc end}}

{{langlinks|zh}}