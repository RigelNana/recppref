{{cpp/experimental/title|observer_ptr}}
{{cpp/experimental/lib extensions 2/observer ptr/navbar}}
{{dcl begin}}
{{dcl header|experimental/memory}}
{{dcl|since=libfund_ts_2||1=
template&lt; class W &gt;
class observer_ptr;
}}
{{dcl end}}

{{tt|std::experimental::observer_ptr}} is a non-owning pointer, or ''observer''. The observer stores a pointer to a second object, known as the ''watched object''. An {{tt|observer_ptr}} may also have no watched object. 

An observer is not responsible in any way for the watched object; there is no inherent relationship between an observer and the object it watches.

It is intended as a near drop-in replacement for raw pointer types, with the advantage that, as a vocabulary type, it indicates its intended use without need for detailed analysis by code readers.

Specializations of {{tt|observer_ptr}} satisfy the requirements of {{named req|CopyConstructible}} and {{named req|CopyAssignable}}.

{{par begin}}
{{par hreq}}
{{par req|{{tt|W}} shall not be a reference type, but may be an incomplete type.}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{c|element_type}}|{{tt|W}}, the type of the object watched by this {{tt|observer_ptr}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/observer_ptr/dsc constructor}}
{{dsc inc|cpp/experimental/observer_ptr/dsc destructor}}
{{dsc inc|cpp/experimental/observer_ptr/dsc operator{{=}}}}

{{dsc h2|Modifiers}}
{{dsc inc|cpp/experimental/observer_ptr/dsc release}}
{{dsc inc|cpp/experimental/observer_ptr/dsc reset}}
{{dsc inc|cpp/experimental/observer_ptr/dsc swap}}

{{dsc h2|Observers}}
{{dsc inc|cpp/experimental/observer_ptr/dsc get}}
{{dsc inc|cpp/experimental/observer_ptr/dsc operator bool}}
{{dsc inc|cpp/experimental/observer_ptr/dsc operator*}}

{{dsc h2|Conversions}}
{{dsc inc|cpp/experimental/observer_ptr/dsc operator pointer}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/observer_ptr/dsc make_observer}}
{{dsc inc|cpp/experimental/observer_ptr/dsc operator_cmp}}
{{dsc inc|cpp/experimental/observer_ptr/dsc swap2}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/experimental/observer_ptr/dsc hash}}
{{dsc end}}

===Example===
{{example}}

{{langlinks|ru|zh}}