{{cpp/experimental/atomic_shared_ptr/title|exchange}}
{{cpp/experimental/concurrency/atomic_shared_ptr/navbar}}

{{dcl begin}}
{{dcl | 1=
shared_ptr&lt;T&gt; exchange( shared_ptr&lt;T&gt; desired, std::memory_order order = std::memory_order_seq_cst ) noexcept;
}}
{{dcl end}}

Atomically replaces the underlying {{tt|shared_ptr}} with {{tt|desired}}. The operation is a read-modify-write operation. Memory is affected according to the value of {{tt|order}}.

===Parameters===
{{par begin}}
{{par | desired | value to assign}}
{{par | order | memory order constraints to enforce}}
{{par end}}

===Return value===
The value of the atomic variable before the call.

===Remarks===
{{cpp/experimental/atomic_shared_ptr/atomic remarks}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/memory/shared ptr/dsc atomic}}
{{dsc end}}