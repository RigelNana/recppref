{{cpp/experimental/pmr/monotonic_buffer_resource/title|do_allocate}}
{{cpp/experimental/lib extensions/pmr/monotonic_buffer_resource/navbar}}
{{ddcl|since=libfund_ts|1=
virtual void* do_allocate( std::size_t bytes, std::size_t alignment );
}}

Allocates storage. 

If the ''current buffer'' has sufficient unused space to fit a block with the specified size and alignment, allocates the return block from the current buffer. 

Otherwise, this function allocates a new buffer by calling {{tt|upstream_resource()-&gt;allocate(n, m)}}, where {{tt|n}} is not less than the greater of {{c|bytes}} and the ''next buffer size'' and {{tt|m}} is not less than {{c|alignment}}. It sets the new buffer as the ''current buffer'',  increases the ''next buffer size'' by an implementation-defined growth factor (which is not necessarily integral), and then allocates the return block from the newly allocated buffer.

===Return value===
A pointer to allocated storage of at least {{c|bytes}} bytes in size, aligned to the specified {{c|alignment}} if such alignment is supported, and to {{c|alignof(std::max_align_t)}} otherwise. 

===Exceptions===
Throws nothing unless calling {{tt|allocate()}} on the upstream memory resource throws.

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/memory_resource/dsc allocate}}
{{dsc inc|cpp/experimental/memory_resource/dsc do_allocate}}
{{dsc end}}