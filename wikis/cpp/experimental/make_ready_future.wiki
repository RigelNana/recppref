{{cpp/experimental/title|make_ready_future}}
{{cpp/experimental/concurrency/navbar}}
{{dcl begin}}
{{dcl header|experimental/future}}
{{dcl|num=1|since=concurrency|1=
template&lt; class T &gt;
future&lt;V /* see below */&gt; make_ready_future( T&amp;&amp; value );
}}
{{dcl|num=2|since=concurrency|1=
future&lt;void&gt; make_ready_future();
}}
{{dcl end}}

@1@ If {{c|std::decay_t&lt;T&gt;}} is {{c|std::reference_wrapper&lt;X&gt;}}, then the type {{tt|V}} is {{tt|X&amp;}}, otherwise, {{tt|V}} is {{c|std::decay_t&lt;T&gt;}}.
@@ Creates a shared state of type {{tt|V}} that is immediately ready, with the result constructed from {{c|std::forward&lt;T&gt;(value)}}, then returns a {{lc|std::experimental::future}} associated with that shared state.

@2@ Creates a shared state of type {{c|void}} that is immediately ready, then returns a {{lc|std::experimental::future}} associated with that shared state.

===Return value===
A {{tt|std::experimental::future}} associated with the shared state that is created.

===See also===
{{dsc begin}}
{{dsc inc|cpp/experimental/dsc make_exceptional_future}}
{{dsc end}}

{{langlinks|zh}}