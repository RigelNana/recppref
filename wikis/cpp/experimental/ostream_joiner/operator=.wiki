{{cpp/experimental/ostream_joiner/title|operator{{=}}}}
{{cpp/experimental/lib extensions 2/ostream_joiner/navbar}}
{{dcl begin}}
{{dcl|num=1|since=libfund_ts_2|1=
template&lt; class T &gt;
ostream_joiner&amp; operator=( const T&amp; value );
}}
{{dcl|num=2|since=libfund_ts_2|notes={{mark implicit}}|1=
ostream_joiner&amp; operator=( const ostream_joiner&amp; other ) = default;
}}
{{dcl|num=3|since=libfund_ts_2|notes={{mark implicit}}|1=
ostream_joiner&amp; operator=( ostream_joiner&amp;&amp; other ) = default;
}}
{{dcl end}}

@1@ First, if the private "first element" flag is {{c|false}}, insert the delimiter {{tt|delim}} into the output stream {{tt|os}} associated with this iterator as if by {{c|os &lt;&lt; delim;}}.

@@ Then, unconditionally sets the "first element" flag to {{c|false}}, and insert {{c|value}} into the output stream as if by {{c|os &lt;&lt; value;}}.

@@ Let {{tt|out_stream}}, {{tt|delim}}, and {{tt|first_element}} denote the private stream pointer, delimiter, and "first element" flag members respectively. Then this function is equivalent to
{{source|1=
if (!first_element)
    *out_stream &lt;&lt; delim;
first_element = false;
*out_stream &lt;&lt; value;
return *this;
}}

@2,3@ Implicitly declared copy/move assignment operator that copy/move assigns the private stream pointer, delimiter, and "first element" flag members.

===Parameters===
{{par begin}}
{{par|value|the object to to be written to the stream}}
{{par|other|the {{tt|ostream_joiner}} object to be assigned to this object}}
{{par end}}

===Return value===
{{c|*this}}.

===Example===
{{example
|code=
#include &lt;experimental/iterator&gt;
#include &lt;iostream&gt;
 
int main()
{
    auto joiner = std::experimental::make_ostream_joiner(std::cout, ", ");
    joiner = "First";
    joiner = "do no harm.";  // prefixes with the delimiter
}
|output=
First, do no harm.
}}

{{langlinks|zh}}