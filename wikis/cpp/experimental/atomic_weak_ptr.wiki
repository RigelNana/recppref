{{cpp/experimental/title|atomic_weak_ptr}}
{{cpp/experimental/concurrency/atomic_weak_ptr/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''Merged into ISO C++''' The functionality described on this page was merged into the mainline ISO C++ standard as of 11/2017; see {{ltt|cpp/memory/weak_ptr/atomic2|std::atomic&lt;weak_ptr&lt;T&gt;&gt;}} {{mark since c++20}}}}
{{dcl begin}}
{{dcl header|experimental/atomic}}
{{dcl|since=concurrency||1=
template&lt; class T &gt;
class atomic_weak_ptr;
}}
{{dcl end}}

The class template {{tt|atomic_weak_ptr}} provides thread-safe atomic pointer operations over a {{lc|std::weak_ptr}}. 

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc constructor}}
{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc operator{{=}}}}

{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc is_lock_free}}
{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc store}}
{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc load}}
{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc operator_weak_ptr}}

{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc exchange}}
{{dsc inc|cpp/experimental/atomic_weak_ptr/dsc compare_exchange}}

{{dsc end}}