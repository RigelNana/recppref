{{cpp/experimental/title|boyer_moore_horspool_searcher|make_boyer_moore_horspool_searcher}}
{{cpp/experimental/lib_extensions/navbar}}

{{dcl begin}}
{{dcl header|experimental/functional}}
{{dcl|since=libfund_ts|1=
template&lt; class RandomIt1,
          class Hash = std::hash&lt;typename std::iterator_traits&lt;RandomIt1&gt;::value_type&gt;,
          class BinaryPredicate = std::equal_to&lt;&gt; &gt;
class boyer_moore_horspool_searcher;
}}
{{dcl end}}

A searcher suitable for use with {{ltt|cpp/experimental/search|std::experimental::search}} that implements the {{enwiki|Boyer%E2%80%93Moore%E2%80%93Horspool_algorithm|Boyer-Moore-Horspool string searching algorithm}}.

{{tt|boyer_moore_horspool_searcher}} is {{named req|CopyConstructible}} and {{named req|CopyAssignable}}.

{{tt|RandomIt1}} must meet the requirements of {{named req|RandomAccessIterator}}.

===Member functions===
{{member|{{small|std::experimental::boyer_moore_horspool_searcher::}}boyer_moore_horspool_searcher |2=
{{dcl begin}}
{{dcl|1=
boyer_moore_horspool_searcher( RandomIt1 pat_first,
                               RandomIt1 pat_last,
                               Hash hf = Hash(),
                               BinaryPredicate pred = BinaryPredicate() );
}}
{{dcl end}}
Constructs a {{tt|boyer_moore_horspool_searcher}} by storing copies of {{c|pat_first}}, {{c|pat_last}}, {{c|hf}}, and {{c|pred}}, setting up any necessary internal data structures. 

The value type of {{tt|RandomIt1}} must be {{named req|DefaultConstructible}}, {{named req|CopyConstructible}} and {{named req|CopyAssignable}}.

For any two values {{tt|A}} and {{tt|B}} of the type {{c|std::iterator_traits&lt;RandomIt1&gt;::value_type}}, if {{c|pred(A, B) {{==}} true}}, then {{c|hf(A) {{==}} hf(B)}} shall be {{c|true}}.

===Parameters===
{{par begin}}
{{par|pat_first, pat_last|a pair of iterators designating the string to be searched for}}
{{par|hf|a callable object used to hash the elements of the string}}
{{par|pred|a callable object used to determine equality}}
{{par end}}

===Exceptions===
Any exceptions thrown by 
* the copy constructor of {{tt|RandomIt1}};
* the default constructor, copy constructor, or copy assignment operator of the value type of {{tt|RandomIt1}}; or
* the copy constructor or function call operator of {{tt|BinaryPredicate}} or {{tt|Hash}}.
May also throw {{lc|std::bad_alloc}} if additional memory required for internal data structures cannot be allocated.
}}

{{member|{{small|std::experimental::boyer_moore_horspool_searcher::}}operator()|2=
{{dcl begin}}
{{dcl rev begin}}
{{dcl|until=c++17|
template&lt; class RandomIt2 &gt;
RandomIt2 operator()( RandomIt2 first, RandomIt2 last ) const;
}}
{{dcl|since=c++17|
template&lt; class RandomIt2 &gt;
std::pair&lt;RandomIt2,RandomIt2&gt; operator()( RandomIt2 first, RandomIt2 last ) const;
}}
{{dcl rev end}}
{{dcl end}}
The member function called by {{ltt|cpp/experimental/search|std::experimental::search}} to perform a search with this searcher. {{tt|RandomIt2}} must meet the requirements of {{named req|RandomAccessIterator}}.

{{tt|RandomIt1}} and {{tt|RandomIt2}} must have the same value type.

===Parameters===
{{par begin}}
{{par|first, last|a pair of iterators designating the string to be examined}}
{{par end}}

===Return value===
{{rev begin}}
{{rev|until=c++17|
If the pattern {{range|pat_first|pat_last}} is empty, returns {{c|first}}.

Otherwise, an iterator to the first position in {{range|first|last}} where a subsequence that compares equal to {{range|pat_first|pat_last}} as defined by {{c|pred}} is located, or a copy of {{c|last}} otherwise.
}}
{{rev|since=c++17|
If the pattern {{range|pat_first|pat_last}} is empty, returns {{c|make_pair(first, first)}}.

Otherwise, returns a pair of iterators to the first and one past last positions in {{range|first|last}} where a subsequence that compares equal to {{range|pat_first|pat_last}} as defined by {{c|pred}} is located, or {{c|make_pair(last, last)}} otherwise.
}}
{{rev end}}
}}

===Helper Functions===
{{dcl begin}}
{{dcl|since=libfund_ts|1=
template&lt; class RandomIt, 
          class Hash = std::hash&lt;typename std::iterator_traits&lt;RandomIt&gt;::value_type&gt;,
          class BinaryPredicate = std::equal_to&lt;&gt; &gt;
boyer_moore_horspool_searcher&lt;RandomIt, Hash, BinaryPredicate&gt;
    make_boyer_moore_horspool_searcher( RandomIt pat_first,
                                        RandomIt pat_last,
                                        Hash hf = Hash(),
                                        BinaryPredicate pred {{=}} BinaryPredicate() );
}}
{{dcl end}}

Helper function that constructs a {{tt|std::experimental::boyer_moore_horspool_searcher}} using template argument deduction. Equivalent to {{c|return boyer_moore_horspool_searcher&lt;RandomIt, Hash, BinaryPredicate&gt;(pat_first, pat_last, hf, pred);}}

===Parameters===
{{par begin}}
{{par|pat_first, pat_last|a pair of iterators designating the string to be searched for}}
{{par|hf|a callable object used to hash the elements of the string}}
{{par|pred|a callable object used to determine equality}}
{{par end}}

===Return value===
A {{tt|boyer_moore_horspool_searcher}} constructed with the arguments {{c|pat_first}}, {{c|pat_last}}, {{c|hf}}, and {{c|pred}}.

===Example===
{{example
|code=
#include &lt;experimental/algorithm&gt;
#include &lt;experimental/functional&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
 
int main()
{
    std::string in = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,"
                     " sed do eiusmod tempor incididunt ut labore et dolore magna aliqua";
    std::string needle = "pisci";
    auto it = std::experimental::search(in.begin(), in.end(),
                  std::experimental::make_boyer_moore_horspool_searcher(
                      needle.begin(), needle.end()));
    if (it != in.end())
        std::cout &lt;&lt; "The string " &lt;&lt; needle &lt;&lt; " found at offset "
                  &lt;&lt; it - in.begin() &lt;&lt; '\n';
    else
        std::cout &lt;&lt; "The string " &lt;&lt; needle &lt;&lt; " not found\n";
}
|output=
The string pisci found at offset 43
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc search}}
{{dsc end}}