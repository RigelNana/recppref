{{title|Input/output library}}
{{cpp/io/navbar}}

C++ includes the following input/output libraries: an [[enwiki:Object-oriented_programming|OOP-style]] [[#Stream-based I/O|stream-based I/O]] library{{rev inl|since=c++23|, [[#Print functions (since C++23)|print-based family]] of functions}}, and the standard set of [[#C-style I/O|C-style I/O]] functions.

===Stream-based I/O===
The stream-based input/output library is organized around abstract input/output devices. These abstract devices allow the same code to handle input/output to files, memory streams, or custom adaptor devices that perform arbitrary operations (e.g. compression) on the fly.

Most of the classes are templated, so they can be adapted to any basic character type. Separate typedefs are provided for the most common basic character types ({{c/core|char}} and {{c/core|wchar_t}}). The classes are organized into the following hierarchy:

{{inheritance diagram/std-io-complete}}

{{dsc begin}}
{{dsc h2|Abstraction}}
{{dsc header|ios}}
{{dsc inc|cpp/io/dsc ios_base}}
{{dsc inc|cpp/io/dsc basic_ios}}
{{dsc header|streambuf}}
{{dsc inc|cpp/io/dsc basic_streambuf}}
{{dsc header|ostream}}
{{dsc inc|cpp/io/dsc basic_ostream}}
{{dsc header|istream}}
{{dsc inc|cpp/io/dsc basic_istream}}
{{dsc inc|cpp/io/dsc basic_iostream}}
{{dsc h2|File I/O implementation}}
{{dsc header|fstream}}
{{dsc inc|cpp/io/dsc basic_filebuf}}
{{dsc inc|cpp/io/dsc basic_ifstream}}
{{dsc inc|cpp/io/dsc basic_ofstream}}
{{dsc inc|cpp/io/dsc basic_fstream}}
{{dsc h2|String I/O implementation}}
{{dsc header|sstream}}
{{dsc inc|cpp/io/dsc basic_stringbuf}}
{{dsc inc|cpp/io/dsc basic_istringstream}}
{{dsc inc|cpp/io/dsc basic_ostringstream}}
{{dsc inc|cpp/io/dsc basic_stringstream}}
{{dsc h2|Array I/O implementations}}
{{dsc header|spanstream}}
{{dsc inc|cpp/io/dsc basic_spanbuf}}
{{dsc inc|cpp/io/dsc basic_ispanstream}}
{{dsc inc|cpp/io/dsc basic_ospanstream}}
{{dsc inc|cpp/io/dsc basic_spanstream}}
{{dsc header|strstream}}
{{dsc inc|cpp/io/dsc strstreambuf}}
{{dsc inc|cpp/io/dsc istrstream}}
{{dsc inc|cpp/io/dsc ostrstream}}
{{dsc inc|cpp/io/dsc strstream}}
{{anchor|Synchronized output}}
{{dsc h2|Synchronized output {{mark since c++20}}}}
{{dsc header|syncstream}}
{{dsc inc|cpp/io/dsc basic_syncbuf}}
{{dsc inc|cpp/io/dsc basic_osyncstream}}
{{dsc end}}

====Typedefs====
The following typedefs for common character types are provided in namespace {{tt|std}}:
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc header|ios}}
{{dsc|{{lc|std::ios}}|{{co|std::basic_ios&lt;char&gt;}}}}
{{dsc|{{lc|std::wios}}|{{co|std::basic_ios&lt;wchar_t&gt;}}}}
{{dsc header|streambuf}}
{{dsc|{{lc|std::streambuf}}|{{co|std::basic_streambuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wstreambuf}}|{{co|std::basic_streambuf&lt;wchar_t&gt;}}}}
{{dsc header|istream}}
{{dsc|{{lc|std::istream}}|{{co|std::basic_istream&lt;char&gt;}}}}
{{dsc|{{lc|std::wistream}}|{{co|std::basic_istream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::iostream}}|{{co|std::basic_iostream&lt;char&gt;}}}}
{{dsc|{{lc|std::wiostream}}|{{co|std::basic_iostream&lt;wchar_t&gt;}}}}
{{dsc header|ostream}}
{{dsc|{{lc|std::ostream}}|{{co|std::basic_ostream&lt;char&gt;}}}}
{{dsc|{{lc|std::wostream}}|{{co|std::basic_ostream&lt;wchar_t&gt;}}}}
{{dsc header|fstream}}
{{dsc|{{lc|std::filebuf}}|{{co|std::basic_filebuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wfilebuf}}|{{co|std::basic_filebuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ifstream}}|{{co|std::basic_ifstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wifstream}}|{{co|std::basic_ifstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ofstream}}|{{co|std::basic_ofstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wofstream}}|{{co|std::basic_ofstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::fstream}}|{{co|std::basic_fstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wfstream}}|{{co|std::basic_fstream&lt;wchar_t&gt;}}}}
{{dsc header|sstream}}
{{dsc|{{lc|std::stringbuf}}|{{co|std::basic_stringbuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wstringbuf}}|{{co|std::basic_stringbuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::istringstream}}|{{co|std::basic_istringstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wistringstream}}|{{co|std::basic_istringstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ostringstream}}|{{co|std::basic_ostringstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wostringstream}}|{{co|std::basic_ostringstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::stringstream}}|{{co|std::basic_stringstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wstringstream}}|{{co|std::basic_stringstream&lt;wchar_t&gt;}}}}
{{dsc header|spanstream}}
{{dsc|{{lc|std::spanbuf}} {{mark c++23}}|{{co|std::basic_spanbuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wspanbuf}} {{mark c++23}}|{{co|std::basic_spanbuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ispanstream}} {{mark c++23}}|{{co|std::basic_ispanstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wispanstream}} {{mark c++23}}|{{co|std::basic_ispanstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ospanstream}} {{mark c++23}}|{{co|std::basic_ospanstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wospanstream}} {{mark c++23}}|{{co|std::basic_ospanstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::spanstream}} {{mark c++23}}|{{co|std::basic_spanstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wspanstream}} {{mark c++23}}|{{co|std::basic_spanstream&lt;wchar_t&gt;}}}}
{{dsc header|syncstream}}
{{dsc|{{lc|std::syncbuf}} {{mark c++20}}|{{co|std::basic_syncbuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wsyncbuf}} {{mark c++20}}|{{co|std::basic_syncbuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::osyncstream}} {{mark c++20}}|{{co|std::basic_osyncstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wosyncstream}} {{mark c++20}}|{{co|std::basic_osyncstream&lt;wchar_t&gt;}}}}
{{dsc end}}

====Predefined standard stream objects====
{{dsc begin}}
{{dsc header|iostream}}
{{dsc inc|cpp/io/dsc cin}}
{{dsc inc|cpp/io/dsc cout}}
{{dsc inc|cpp/io/dsc cerr}}
{{dsc inc|cpp/io/dsc clog}}
{{dsc end}}

===={{rl|manip|I/O Manipulators}}====
The stream-based I/O library uses {{rl|manip|I/O manipulators}} (e.g. {{lc|std::boolalpha}}, {{lc|std::hex}}, etc.) to control how streams behave.

====Types====
The following auxiliary types are defined:
{{dsc begin}}
{{dsc header|ios}}
{{dsc inc|cpp/io/dsc streamoff}}
{{dsc inc|cpp/io/dsc streamsize}}
{{dsc inc|cpp/io/dsc fpos}}
{{dsc end}}

The following typedef names for {{c/core|std::fpos&lt;std::mbstate_t&gt;}} are provided: 
{{dsc begin}}
{{dsc header|iosfwd}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|std::streampos}}|{{c/core|std::fpos&lt;std::char_traits&lt;char&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::wstreampos}}|{{c/core|std::fpos&lt;std::char_traits&lt;wchar_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u8streampos}} {{mark c++20}}|{{c/core|std::fpos&lt;std::char_traits&lt;char8_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u16streampos}} {{mark c++11}}|{{c/core|std::fpos&lt;std::char_traits&lt;char16_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u32streampos}} {{mark c++11}}|{{c/core|std::fpos&lt;std::char_traits&lt;char32_t&gt;::state_type&gt;}}}}
{{dsc end}}

{{anchor|Error category interface}}
====Error category interface {{mark since c++11}}====
{{dsc begin}}
{{dsc header|ios}}
{{dsc inc|cpp/io/dsc io_errc}}
{{dsc inc|cpp/io/dsc iostream_category}}
{{dsc end}}

{{anchor|Print functions}}
===Print functions {{mark since c++23}}===
The Unicode-aware print-family functions that perform formatted I/O on text that is already formatted. They bring all the performance benefits of {{lc|std::format}}, are locale-independent by default, reduce global state, avoid allocating a temporary {{lc|std::string}} object and calling {{c|operator&lt;&lt;}}, and in general make formatting more efficient compared to [[#Stream-based I/O|iostreams]] and [[#C-style I/O|stdio]]. 

The following print-like functions are provided:
{{dsc begin}}
{{dsc header|print}}
{{dsc inc|cpp/io/dsc print}}
{{dsc inc|cpp/io/dsc println}}
{{dsc inc|cpp/io/dsc vprint_unicode}}
{{dsc inc|cpp/io/dsc vprint_nonunicode}}
{{dsc sep}}
{{dsc header|ostream}}
{{dsc inc|cpp/io/basic_ostream/dsc print}}
{{dsc inc|cpp/io/basic_ostream/dsc println}}
{{dsc end}}

==={{rl|c|C-style I/O}}===
C++ also includes the {{rl|c|input/output functions defined by C}}, such as {{lc|std::fopen}}, {{lc|std::getc}}, etc.

===See also===
{{dsc begin}}
{{dsc|[[cpp/filesystem|Filesystem library]] {{mark since c++17}}}}
{{dsc end}}

{{langlinks|ar|de|es|fr|it|ja|pl|pt|ru|zh}}