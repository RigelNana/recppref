{{title|C++20}}
{{cpp/version/navbar}}

C++20 is a major version after C++17, featuring major features (concepts, modules, coroutines, and ranges) and other language and library features. The standard was published in December 2020.
{{todo}}

==New language features==
* [[cpp/feature test|Feature test macros]]
* {{ls|cpp/language/operator comparison#Three-way comparison}} operator {{c|1=&lt;=&gt;}} and [[cpp/language/default_comparisons|{{c|1=operator==() = default}}]]
* {{ls|cpp/language/aggregate initialization#Designated initializers}}
* Init-statements and initializers in [[cpp/language/range-for|range-{{tt|for}}]]
* {{ltt|cpp/keyword/char8_t}}
* New {{lt|cpp/language/attributes}}: {{attr|no_unique_address}}, {{attr|likely}}, {{attr|likely|unlikely}}
* {{ltt|cpp/language/parameter pack|Pack-expansions}} in [[cpp/language/lambda#Lambda capture|lambda init-captures]]
* Removed the requirement to use {{tt|typename}} to disambiguate types in many contexts
* {{ltt|cpp/language/consteval}}, {{ltt|cpp/language/constinit}}
* Further relaxed constexpr
* Signed integers are 2's complement
* [[cpp/language/operator arithmetic|Bitwise shift operators]] unified behavior
* {{lt|cpp/language/aggregate initialization}} using parentheses
* {{lt|cpp/language/coroutines}}
* {{lt|cpp/language/modules}}
* [[cpp/language/constraints|Constraints and concepts]]
* {{ls|cpp/language/function template#Abbreviated function template}}
* DR11: [[cpp/language/new#Defect reports|array new]] can deduce array size

==New library features==
===New headers===
* {{header|bit}}
* {{header|compare}}
* {{header|concepts}}
* {{header|coroutine}}
* {{header|format}}
* {{header|numbers}}
* {{header|ranges}}
* {{header|source_location}}
* {{header|span}}
* {{header|syncstream}}
* {{header|version}}
in [[cpp/thread|Thread support library]]:
* {{header|barrier}}
* {{header|latch}}
* {{header|semaphore}}
* {{header|stop_token}}

===Library features===
* [[cpp/utility/feature_test|Library feature-test macros]]
* [[cpp/utility/format|Formatting library]]
* [[cpp/concepts|Concepts library]]
* {{ls|cpp/chrono#Calendar}} and {{ls|cpp/chrono#Time zone}} library in {{header|chrono}}
* {{lc|std::source_location}}
* {{ltt std|cpp/container/span}}
* {{ltt std|cpp/types/endian}}: {{tt|big}} / {{tt|little}} / {{tt|native}}
* Integral power-of-2 operations and {{ltt std|cpp/numeric/bit_cast}} in {{header|bit}}
* Array support for {{lc|std::make_shared}}
* {{ltt std|cpp/types/remove_cvref}}
* {{ltt std|cpp/memory/to_address}}
* [[cpp/atomic/atomic#Specializations for floating-point types|Floating-point atomics]], {{ltt|cpp/memory/shared_ptr/atomic|std::shared_ptr}} atomics
* Thread-coordination classes: {{ltt std|cpp/thread/barrier}}, {{ltt std|cpp/thread/latch}}, and {{ltt std|cpp/thread/counting_semaphore}}
* {{ltt std|cpp/thread/jthread}} and {{lsd|cpp/thread#Thread cancellation}} classes: {{ltt std|cpp/thread/stop_token}}, {{ltt std|cpp/thread/stop_source}}, and {{ltt std|cpp/thread/stop_callback}}
* {{ltt std|cpp/io/basic_osyncstream}}
* {{ltt std|cpp/string/basic_string|u8string}} and other {{ltt|cpp/language/types#char8_t|char8_t}} uses
* {{lc|constexpr}} for {{header|algorithm}}, {{header|utility}}, {{header|complex}}
* {{ltt|cpp/string/basic_string/starts_with|string::starts_with}} / {{ltt|cpp/string/basic_string/ends_with|ends_with}} and {{ltt|cpp/string/basic_string_view/starts_with|string_view::starts_with}} / {{ltt|cpp/string/basic_string_view/ends_with|ends_with}}
* {{ltt std|cpp/memory/assume_aligned}}
* {{ltt std|cpp/utility/functional/bind_front}}
* {{ltt std|cpp/string/multibyte/c8rtomb}} / {{ltt std|cpp/string/multibyte/mbrtoc8}}
* {{ltt std|cpp/memory/make_obj_using_allocator}} etc
* {{ltt|cpp/memory/shared_ptr/make_shared|std::make_shared_for_overwrite}} / {{ltt|cpp/memory/unique_ptr/make_unique|std::make_unique_for_overwrite}}
* Heterogeneous lookup in unordered associative containers
* {{ltt|cpp/memory/polymorphic_allocator|std::pmr::polymorphic_allocator}} with additional member functions and {{ltt std|cpp/types/byte}} as its default template argument
* {{ltt|cpp/algorithm/execution_policy_tag|execution::unseq}}
* {{ltt std|cpp/numeric/midpoint}} and {{ltt std|cpp/numeric/lerp}}
* {{ltt|cpp/iterator/size|std::ssize}}
* {{ltt std|cpp/types/is_bounded_array}}, {{ltt std|cpp/types/is_unbounded_array}}
* [[cpp/ranges|Ranges]]
* Uniform container erasure: {{lc|std::erase}} / {{lc|std::erase_if}}, e.g. {{ltt|cpp/container/list/erase2|std::erase(std::list)}} or {{ltt|cpp/container/map/erase_if|erase_if(std::map)}} etc
* [[cpp/numeric/constants|Mathematical constants]] in {{header|numbers}}

==Defect reports==
{{cpp/language/history/DR20}}

==Compiler support==
Main Article: [[cpp/compiler support#C++20 features|C++20 compiler support]]
{{cpp/compiler support/20}}
{{cpp/compiler support/note}}

===External links===
{{elink begin}}
{{elink|{{enwiki|C++20}} - Wikipedia}}
{{elink|[https://github.com/makelinux/examples/blob/HEAD/cpp/20.cpp Working C++20 examples]}}
{{elink end}}

{{langlinks|es|ja|ru|zh}}