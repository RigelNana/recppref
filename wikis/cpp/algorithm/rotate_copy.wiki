{{cpp/title|rotate_copy}}
{{cpp/algorithm/navbar}}
{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|num=1|notes={{mark constexpr since c++20}}|
template&lt; class ForwardIt, class OutputIt &gt;
OutputIt rotate_copy( ForwardIt first, ForwardIt n_first,
                      ForwardIt last, OutputIt d_first );
}}
{{dcl|num=2|since=c++17|
template&lt; class ExecutionPolicy,
          class ForwardIt1, class ForwardIt2 &gt;
ForwardIt2 rotate_copy( ExecutionPolicy&amp;&amp; policy,
                        ForwardIt1 first, ForwardIt1 n_first,
                        ForwardIt1 last, ForwardIt2 d_first );
}}
{{dcl end}}

@1@ Copies the elements from the range {{range|first|last}}, to another range beginning at {{c|d_first}} in such a way, that the element {{c|*(n_first)}} becomes the first element of the new range and {{c|*(n_first - 1)}} becomes the last element.

@2@ Same as {{v|1}}, but executed according to {{c|policy}}.
@@ {{cpp/algorithm/parallel overload precondition}}

If any of the following conditions is satisfied, the behavior is undefined:
* {{range|first|n_first}} or {{range|n_first|last}} is not a [[cpp/iterator#Ranges|valid range]].
* The source and destination ranges overlap.

===Parameters===
{{par begin}}
{{par|first, last|the range of elements to copy}}
{{par|n_first|an iterator to an element in {{range|first|last}} that should appear at the beginning of the new range}}
{{par|d_first|beginning of the destination range}}
{{par exec pol}}
{{par hreq}}
{{par req named|ForwardIt, ForwardIt1, ForwardIt2|ForwardIterator}}
{{par req named|OutputIt|OutputIterator}}
{{par end}}

===Return value===
Output iterator to the element past the last element copied.

===Complexity===
Exactly {{c|std::distance(first, last)}} assignments.

===Exceptions===
{{cpp/algorithm/parallel_exceptions_reporting_behavior|singular=yes}}

===Possible implementation===
See also the implementations in [https://github.com/gcc-mirror/gcc/blob/14d8a5ae472ca5743016f37da2dd4770d83dea21/libstdc%2B%2B-v3/include/bits/stl_algo.h#L1440-L1455 libstdc++], [https://github.com/llvm/llvm-project/tree/f221d905b131158cbe3cbc4320d1ecd1376c3f22/libcxx/include/__algorithm/rotate_copy.h libc++], and [https://github.com/microsoft/STL/blob/472161105d596192194d4715ccad307c6c163b4a/stl/inc/algorithm#L4438-L4459 MSVC STL].
{{eq fun|1=
template&lt;class ForwardIt, class OutputIt&gt;
constexpr // since C++20
OutputIt rotate_copy(ForwardIt first, ForwardIt n_first,
                     ForwardIt last, OutputIt d_first)
{
    d_first = std::copy(n_first, last, d_first);
    return std::copy(first, n_first, d_first);
}
}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;int&gt; src{1, 2, 3, 4, 5};
    std::vector&lt;int&gt; dest(src.size());
    auto pivot = std::find(src.begin(), src.end(), 3);
    
    std::rotate_copy(src.begin(), pivot, src.end(), dest.begin());
    for (int i : dest)
        std::cout &lt;&lt; i &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
    
    // copy the rotation result directly to the std::cout
    pivot = std::find(dest.begin(), dest.end(), 1);
    std::rotate_copy(dest.begin(), pivot, dest.end(),
                     std::ostream_iterator&lt;int&gt;(std::cout, " "));
    std::cout &lt;&lt; '\n';
}
|output=
3 4 5 1 2
1 2 3 4 5
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc rotate}}
{{dsc inc|cpp/algorithm/ranges/dsc rotate_copy}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}