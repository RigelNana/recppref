{{title|Constrained algorithms {{mark since c++20}}}}
{{cpp/algorithm/ranges/navbar}}

C++20 provides [[cpp/language/constraints|constrained]] versions of most algorithms in the namespace {{tt|std::ranges}}. In these algorithms, a range can be specified as either an [[cpp/iterator/input_or_output_iterator|iterator]]-[[cpp/iterator/sentinel_for|sentinel]] pair or as a single {{lconcept|range}} argument, and projections and pointer-to-member callables are supported. Additionally, the [[cpp/algorithm/ranges#Return types|return types]] of most algorithms have been changed to return all potentially useful information computed during the execution of the algorithm.

===Algorithm function objects===
An ''algorithm function object'' (AFO), informally known as ''niebloid'', is a [[cpp/standard library/cpo|customization point object]] (CPO) that is specified as one or more overloaded function templates. The name of these function templates designates the corresponding algorithm function object.

For an algorithm function object {{c|o}}, let {{tt|S}} be the corresponding set of function templates. Then for any sequence of arguments {{c|args...}}, {{c|o(args...)}} is [[cpp/language/expressions#Expression-equivalence|expression-equivalent]] to {{c|s(args...)}}, where the result of name lookup for {{c|s}} is the overload set {{tt|S}}.

The constrained algorithms in the namespace {{tt|std::ranges}} are defined as algorithm function objects. As a result:
* Explicit template argument lists cannot be specified when calling any of them.
* None of them are visible to [[cpp/language/adl|argument-dependent lookup]].
* When any of them are found by [[cpp/language/unqualified lookup|normal unqualified lookup]] as the name to the left of the function-call operator, [[cpp/language/adl|argument-dependent lookup]] is inhibited.

===Constrained algorithms===
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc namespace|std::ranges}}
{{dsc h2|Non-modifying sequence operations}}
{{dsc inc|cpp/algorithm/ranges/dsc all_any_none_of}}
{{dsc inc|cpp/algorithm/ranges/dsc for_each}}
{{dsc inc|cpp/algorithm/ranges/dsc for_each_n}}
{{dsc inc|cpp/algorithm/ranges/dsc count}}
{{dsc inc|cpp/algorithm/ranges/dsc mismatch}}
{{dsc inc|cpp/algorithm/ranges/dsc equal}}
{{dsc inc|cpp/algorithm/ranges/dsc lexicographical_compare}}
{{dsc inc|cpp/algorithm/ranges/dsc find}}
{{dsc inc|cpp/algorithm/ranges/dsc find_last}}
{{dsc inc|cpp/algorithm/ranges/dsc find_end}}
{{dsc inc|cpp/algorithm/ranges/dsc find_first_of}}
{{dsc inc|cpp/algorithm/ranges/dsc adjacent_find}}
{{dsc inc|cpp/algorithm/ranges/dsc search}}
{{dsc inc|cpp/algorithm/ranges/dsc search_n}}
{{dsc inc|cpp/algorithm/ranges/dsc contains}}
{{dsc inc|cpp/algorithm/ranges/dsc starts_with}}
{{dsc inc|cpp/algorithm/ranges/dsc ends_with}}

{{dsc h2|Modifying sequence operations}}
{{dsc inc|cpp/algorithm/ranges/dsc copy}}
{{dsc inc|cpp/algorithm/ranges/dsc copy_n}}
{{dsc inc|cpp/algorithm/ranges/dsc copy_backward}}
{{dsc inc|cpp/algorithm/ranges/dsc move}}
{{dsc inc|cpp/algorithm/ranges/dsc move_backward}}
{{dsc inc|cpp/algorithm/ranges/dsc fill}}
{{dsc inc|cpp/algorithm/ranges/dsc fill_n}}
{{dsc inc|cpp/algorithm/ranges/dsc transform}}
{{dsc inc|cpp/algorithm/ranges/dsc generate}}
{{dsc inc|cpp/algorithm/ranges/dsc generate_n}}
{{dsc inc|cpp/algorithm/ranges/dsc remove}}
{{dsc inc|cpp/algorithm/ranges/dsc remove_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc replace}}
{{dsc inc|cpp/algorithm/ranges/dsc replace_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc swap_ranges}}
{{dsc inc|cpp/algorithm/ranges/dsc reverse}}
{{dsc inc|cpp/algorithm/ranges/dsc reverse_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc rotate}}
{{dsc inc|cpp/algorithm/ranges/dsc rotate_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc shuffle}}
{{dsc inc|cpp/algorithm/ranges/dsc shift}}
{{dsc inc|cpp/algorithm/ranges/dsc sample}}
{{dsc inc|cpp/algorithm/ranges/dsc unique}}
{{dsc inc|cpp/algorithm/ranges/dsc unique_copy}}

{{dsc h2|Partitioning operations}}
{{dsc inc|cpp/algorithm/ranges/dsc is_partitioned}}
{{dsc inc|cpp/algorithm/ranges/dsc partition}}
{{dsc inc|cpp/algorithm/ranges/dsc partition_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc stable_partition}}
{{dsc inc|cpp/algorithm/ranges/dsc partition_point}}

{{dsc h2|Sorting operations}}
{{dsc inc|cpp/algorithm/ranges/dsc is_sorted}}
{{dsc inc|cpp/algorithm/ranges/dsc is_sorted_until}}
{{dsc inc|cpp/algorithm/ranges/dsc sort}}
{{dsc inc|cpp/algorithm/ranges/dsc partial_sort}}
{{dsc inc|cpp/algorithm/ranges/dsc partial_sort_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc stable_sort}}
{{dsc inc|cpp/algorithm/ranges/dsc nth_element}}

{{dsc h2|Binary search operations (on sorted ranges)}}
{{dsc inc|cpp/algorithm/ranges/dsc lower_bound}}
{{dsc inc|cpp/algorithm/ranges/dsc upper_bound}}
{{dsc inc|cpp/algorithm/ranges/dsc binary_search}}
{{dsc inc|cpp/algorithm/ranges/dsc equal_range}}

{{dsc h2|Set operations (on sorted ranges)}}
{{dsc inc|cpp/algorithm/ranges/dsc merge}}
{{dsc inc|cpp/algorithm/ranges/dsc inplace_merge}}
{{dsc inc|cpp/algorithm/ranges/dsc includes}}
{{dsc inc|cpp/algorithm/ranges/dsc set_difference}}
{{dsc inc|cpp/algorithm/ranges/dsc set_intersection}}
{{dsc inc|cpp/algorithm/ranges/dsc set_symmetric_difference}}
{{dsc inc|cpp/algorithm/ranges/dsc set_union}}

{{dsc h2|Heap operations}}
{{dsc inc|cpp/algorithm/ranges/dsc is_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc is_heap_until}}
{{dsc inc|cpp/algorithm/ranges/dsc make_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc push_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc pop_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc sort_heap}}

{{dsc h2|Minimum/maximum operations}}
{{dsc inc|cpp/algorithm/ranges/dsc max}}
{{dsc inc|cpp/algorithm/ranges/dsc max_element}}
{{dsc inc|cpp/algorithm/ranges/dsc min}}
{{dsc inc|cpp/algorithm/ranges/dsc min_element}}
{{dsc inc|cpp/algorithm/ranges/dsc minmax}}
{{dsc inc|cpp/algorithm/ranges/dsc minmax_element}}
{{dsc inc|cpp/algorithm/ranges/dsc clamp}}

{{dsc h2|Permutation operations}}
{{dsc inc|cpp/algorithm/ranges/dsc is_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc next_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc prev_permutation}}
{{dsc end}}

===Constrained numeric operations===
{{dsc begin}}
{{dsc header|numeric}}
{{dsc namespace|std::ranges}}
{{dsc inc|cpp/algorithm/ranges/dsc iota}}
{{dsc end}}

===Constrained fold operations===
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc namespace|std::ranges}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_first}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_right}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_right_last}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_with_iter}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_first_with_iter}}
&lt;!--
{{dsc inc|cpp/algorithm/ranges/dsc accumulate}}
{{dsc inc|cpp/algorithm/ranges/dsc inner_product}}
{{dsc inc|cpp/algorithm/ranges/dsc adjacent_difference}}
{{dsc inc|cpp/algorithm/ranges/dsc partial_sum}}
{{dsc inc|cpp/algorithm/ranges/dsc reduce}}
{{dsc inc|cpp/algorithm/ranges/dsc exclusive_scan}}
{{dsc inc|cpp/algorithm/ranges/dsc inclusive_scan}}
{{dsc inc|cpp/algorithm/ranges/dsc transform_reduce}}
{{dsc inc|cpp/algorithm/ranges/dsc transform_exclusive_scan}}
{{dsc inc|cpp/algorithm/ranges/dsc transform_inclusive_scan}}
--&gt;
{{dsc end}}

===Constrained uninitialized memory algorithms===
{{dsc begin}}
{{dsc header|memory}}
{{dsc namespace|std::ranges}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_copy}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_copy_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_fill}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_fill_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_move}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_move_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_default_construct}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_default_construct_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_value_construct}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_value_construct_n}}
{{dsc inc|cpp/memory/ranges/dsc destroy}}
{{dsc inc|cpp/memory/ranges/dsc destroy_n}}
{{dsc inc|cpp/memory/ranges/dsc destroy_at}}
{{dsc inc|cpp/memory/ranges/dsc construct_at}}
{{dsc end}}

===Constrained random number algorithms===
{{dsc begin}}
{{dsc header|random}}
{{dsc namespace|std::ranges}}
{{dsc inc|cpp/algorithm/ranges/dsc generate_random}}
{{dsc end}}

===Return types===
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc namespace|std::ranges}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_fun_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_in_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_out_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_in_out_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_out_out_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc min_max_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_found_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc in_value_result}}
{{dsc inc|cpp/algorithm/ranges/return_types/dsc out_value_result}}
{{dsc end}}

===Notes===
{{ftm begin|std=1|sort=1|comment=1}}
{{ftm|std=C++26|value=202403L|__cpp_lib_algorithm_default_value_type|[[cpp/language/list_initialization|List-initialization]] for algorithms}}
{{ftm|std=C++20|value=201911L|__cpp_lib_ranges|[[cpp/ranges|Ranges library]] and [[#Top|constrained algorithms]]}}
{{ftm|std=C++23|value=202207L|__cpp_lib_ranges_contains|{{lc|std::ranges::contains}}}}
{{ftm|std=C++23|value=202207L|__cpp_lib_ranges_find_last|{{lc|std::ranges::find_last}}}}
{{ftm|std=C++23|value=202207L|__cpp_lib_ranges_fold|{{tt|std::ranges}} [[#Constrained fold operations|fold algorithms]]}}
{{ftm|std=C++23|value=202202L|__cpp_lib_ranges_iota|{{lc|std::ranges::iota}}}}
{{ftm|std=C++23|value=202106L|__cpp_lib_ranges_starts_ends_with|{{lc|std::ranges::starts_with}}, {{lc|std::ranges::ends_with}}}}
{{ftm|std=C++20|value=201806L|rowspan="2"|__cpp_lib_shift|{{lc|std::shift_left}}, {{lc|std::shift_right}}}}
{{ftm|std=C++23|value=202202L|-|{{lc|std::ranges::shift_left}}, {{lc|std::ranges::shift_right}}}}
{{ftm|std=C++26|value=202403L|__cpp_lib_ranges_generate_random|{{lc|std::ranges::generate_random}}}}
{{ftm end}}

===Defect reports===
{{dr list begin}}
{{dr list item|paper=P3136R1|std=C++20|before=niebloids were allowed to be specified as special entities&lt;br&gt;other than function objects|after=required to be specified as function objects}}
{{dr list end}}

{{langlinks|es|ja|ru|zh}}