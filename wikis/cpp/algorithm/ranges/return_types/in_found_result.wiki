{{cpp/ranges/title|in_found_result}}
{{cpp/algorithm/ranges/return_types/navbar}}

{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|since=c++20|
template&lt; class I &gt;
struct in_found_result;
}}
{{dcl end}}

{{tt|ranges::in_found_result}} is a class template that provides a way to store an iterator and a boolean flag as a single unit.

{{cpp/algorithm/ranges/return_types/general_description}}

===Template parameters===
{{par begin}}
{{par|I|the type of the iterator that the {{tt|ranges::in_found_result}} stores.}}
{{par end}}

===Data members===
{{dsc begin}}
{{dsc hitem|Member name|Definition}}
{{dsc mem obj|in|nolink=true|a value (that is supposed to be an iterator) of type {{tt|I}}. It is declared with {{attr|no_unique_address}} attribute.}}
{{dsc mem obj|found|nolink=true|a boolean flag (that may show whether an appropriate range can be found) of type {{c/core|bool}}.}}
{{dsc end}}

===Member functions===
{{member|{{small|std::ranges::in_found_result::}}operator in_found_result&lt;I2&gt;|2=
{{dcl begin}}
{{dcl|num=1|1=
template&lt;class I2&gt;
requires std::convertible_to&lt;const I&amp;, I2&gt;
constexpr operator in_found_result&lt;I2&gt;() const &amp;;
}}
{{dcl|num=2|1=
template&lt;class I2&gt;
requires std::convertible_to&lt;I, I2&gt;
constexpr operator in_found_result&lt;I2&gt;() &amp;&amp;;
}}
{{dcl end}}
Converts {{c|*this}} to the result by constructing every data member of the result from the corresponding member of {{c|*this}}.
@1@ Equivalent to {{c|return {in, found};}}.
@2@ Equivalent to {{c|return {std::move(in), found};}}.
}}

===Standard library===
The following standard library functions use {{tt|ranges::in_found_result}} as the return type:

{{dsc begin}}
{{dsc h2|Algorithm functions}}
{{dsc inc|cpp/algorithm/ranges/dsc next_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc prev_permutation}}
{{dsc end}}

=== Synopsis ===
{{source|1=
namespace std::ranges
{
    template&lt;class I&gt;
    struct in_found_result
    {
        [[no_unique_address]] I in;
        bool found;
    
        template&lt;class I2&gt;
        requires std::convertible_to&lt;const I&amp;, I2&gt;
        constexpr operator in_found_result&lt;I2&gt;() const &amp;
        {
            return {in, found};
        }
    
        template&lt;class I2&gt;
        requires std::convertible_to&lt;I, I2&gt;
        constexpr operator in_found_result&lt;I2&gt;() &amp;&amp;
        {
            return {std::move(in), found};
        }
    };
}
}}

===Notes===
{{cpp/algorithm/ranges/notes return_types}}

===Example===
{{example|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;ranges&gt;

int main()
{
    int v[] {1, 2, 3};

    const auto result = std::ranges::next_permutation(v);

    std::ranges::for_each(std::cbegin(v), result.in, [](int e) {std::cout &lt;&lt; e &lt;&lt; ' ';});

    std::cout &lt;&lt; std::boolalpha &lt;&lt; "\n" "result.found: " &lt;&lt; result.found &lt;&lt; '\n';
}
|output=
1 3 2 
result.found = true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc end}}

{{langlinks|cs|de|es|fr|it|ja|ko|pl|pt|ru|zh}}