{{title|Diagnostics library}}
{{cpp/error/navbar}}

===Exception handling===
The header {{header|exception}} provides several classes and functions related to exception handling in C++ programs.

{{dsc begin}}
{{dsc header|exception}}
{{dsc inc|cpp/error/dsc exception}}
{{dsc h2|Capture and storage of exception objects}}
{{dsc inc|cpp/error/dsc uncaught_exception}}
{{dsc inc|cpp/error/dsc exception_ptr}}
{{dsc inc|cpp/error/dsc make_exception_ptr}}
{{dsc inc|cpp/error/dsc current_exception}}
{{dsc inc|cpp/error/dsc rethrow_exception}}
{{dsc inc|cpp/error/dsc nested_exception}}
{{dsc inc|cpp/error/dsc throw_with_nested}}
{{dsc inc|cpp/error/dsc rethrow_if_nested}}
{{dsc h2|Handling of failures in exception handling}}
{{dsc header|exception}}
{{dsc inc|cpp/error/dsc terminate}}
{{dsc inc|cpp/error/dsc terminate_handler}}
{{dsc inc|cpp/error/dsc get_terminate}}
{{dsc inc|cpp/error/dsc set_terminate}}
{{dsc inc|cpp/error/dsc bad_exception}}
{{anchor|Handling of exception specification violations}}
{{dsc h2|Handling of exception specification violations {{mark until c++17}}}}
{{dsc inc|cpp/error/dsc unexpected}}
{{dsc inc|cpp/error/dsc unexpected_handler}}
{{dsc inc|cpp/error/dsc get_unexpected}}
{{dsc inc|cpp/error/dsc set_unexpected}}
{{dsc end}}

===Exception categories===
Several convenience classes are predefined in the header {{tt|&lt;stdexcept&gt;}} to report particular error conditions. These classes can be divided into two categories: ''logic'' errors and ''runtime'' errors. Logic errors are a consequence of faulty logic within the program and may be preventable. Runtime errors are due to events beyond the scope of the program and cannot easily be predicted.

{{dsc begin}}
{{dsc header|stdexcept}}
{{dsc inc|cpp/error/inc logic_error}}
{{dsc inc|cpp/error/inc invalid_argument}}
{{dsc inc|cpp/error/inc domain_error}}
{{dsc inc|cpp/error/inc length_error}}
{{dsc inc|cpp/error/inc out_of_range}}
{{dsc inc|cpp/error/inc runtime_error}}
{{dsc inc|cpp/error/inc range_error}}
{{dsc inc|cpp/error/inc overflow_error}}
{{dsc inc|cpp/error/inc underflow_error}}
{{dsc tclass|cpp/error/tx_exception|exception class to cancel atomic transactions|notes={{mark since tm ts}}}}
{{dsc end}}

===Error numbers===
{{dsc begin}}
{{dsc header|cerrno}}
{{dsc inc|cpp/error/dsc errno}}
{{dsc inc|cpp/error/dsc errno_macros}}
{{dsc end}}

{{anchor|System error}}
===System error {{mark since c++11}}===
The header {{tt|&lt;system_error&gt;}} defines types and functions used to report error conditions originating from the operating system, streams I/O, {{lc|std::future}}, or other low-level APIs.

{{dsc begin}}
{{dsc header|system_error}}
{{dsc inc|cpp/error/dsc error_category}}
{{dsc inc|cpp/error/dsc generic_category}}
{{dsc inc|cpp/error/dsc system_category}}
{{dsc inc|cpp/error/dsc error_condition}}
{{dsc inc|cpp/error/dsc errc}}
{{dsc inc|cpp/error/dsc error_code}}
{{dsc inc|cpp/error/dsc system_error}}
{{dsc end}}

===Assertions===
Assertions help to implement checking of preconditions in programs.

{{dsc begin}}
{{dsc header|cassert}}
{{dsc inc|cpp/error/dsc assert}}
{{dsc end}}

{{anchor|Stacktrace}}
===[[cpp/utility/basic_stacktrace|Stacktrace]] {{mark since c++23}}===
{{dsc begin}}
{{dsc header|stacktrace}}
{{dsc inc|cpp/utility/dsc stacktrace_entry}}
{{dsc inc|cpp/utility/dsc basic_stacktrace}}
{{dsc end}}

{{anchor|Debugging support}}
===Debugging support {{mark since c++26}}===
{{dsc begin}}
{{dsc header|debugging}}
{{dsc inc|cpp/utility/dsc breakpoint}}
{{dsc inc|cpp/utility/dsc breakpoint_if_debugging}}
{{dsc inc|cpp/utility/dsc is_debugger_present}}
{{dsc end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/language/dsc static_assert}}
{{dsc see c|c/error|Error handling|nomono=true}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}