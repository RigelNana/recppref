{{title|Text processing library}}
{{cpp/text/navbar}}

The text processing library includes components for dealing with text.

===[[cpp/locale|Localization library]]===
The headers {{header|locale}} and {{header|clocale}} provide internationalization support for character classification and string collation, numeric, monetary, and date/time formatting and parsing, and message retrieval.

{{anchor|Regular expressions library}}
===[[cpp/regex|Regular expressions library]] {{mark since c++11}}===
The header {{header|regex}} provides a class that represents {{enwiki|Regular expression|regular expressions}}, which are a kind of mini-language used to perform pattern matching within strings.

{{anchor|Formatting library}}
===[[cpp/utility/format|Formatting library]] {{mark since c++20}}===
The header {{header|format}} provides facilities for type-safe and extensible string formatting that is an alternative to the {{tt|printf}} family of functions, and intended to complement the existing C++ I/O streams library.

===Null-terminated sequence utilities===
''Null-terminated character sequences'' (NTCTS) are sequences of characters that are terminated by a null character (the value after [[cpp/language/value initialization|value-initialization]]).

The strings library provides functions to create, inspect, and modify such sequences:
* [[cpp/string/byte|null-terminated byte strings]] (NTBS) helper functions (including support of [[cpp/string/wide|wide character types]]),
* [[cpp/string/multibyte|null-terminated multibyte strings]] (NTMBS) helper functions.

{{anchor|Primitive numeric conversions}}
===Primitive numeric conversions {{mark since c++17}}===
In addition to sophisticated locale-dependent parsers and formatters provided by the [[cpp/io|C++ I/O]] library, the [[cpp/io/c|C I/O]] library, [[cpp/string/basic_string#Numeric conversions|C++ string converters]], and [[cpp/string/byte#Conversions to numeric formats|C string converters]], the header {{header|charconv}} provides light-weight, locale-independent, non-allocating, non-throwing parsers and formatters for arithmetic types.
{{dsc begin}}
{{dsc header|charconv}}
{{dsc inc|cpp/utility/dsc to_chars}}
{{dsc inc|cpp/utility/dsc to_chars_result}}
{{dsc inc|cpp/utility/dsc from_chars}}
{{dsc inc|cpp/utility/dsc from_chars_result}}
{{dsc inc|cpp/utility/dsc chars_format}}
{{dsc end}}

{{anchor|Text encoding identifications}}
===Text encoding identifications {{mark since c++26}}===
{{dsc begin}}
{{dsc header|text_encoding}}
{{dsc inc|cpp/text/dsc text_encoding}}
{{dsc end}}

===See also===
{{dsc begin}}
{{dsc see cpp|cpp/string|Strings library|nomono=true}}
{{dsc end}}

{{langlinks|ar|de|es|fr|it|ja|pt|ru|zh}}