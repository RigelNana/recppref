{{cpp/container/mdspan/layout_stride/mapping/title|''mapping-traits''}}
{{cpp/container/mdspan/layout_stride/mapping/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|
static constexpr bool is_unique() noexcept;
}}
{{dcl|num=2|since=c++23|
constexpr bool is_exhaustive() const noexcept;
}}
{{dcl|num=3|since=c++23|
static constexpr bool is_strided() noexcept;
}}
{{dcl|num=4|since=c++23|
static constexpr bool is_always_unique() noexcept;
}}
{{dcl|num=5|since=c++23|
static constexpr bool is_always_exhaustive() noexcept;
}}
{{dcl|num=6|since=c++23|
static constexpr bool is_always_strided() noexcept;
}}
{{dcl end}}

Every instance of every specialization of {{tt|mapping}} is unique and strided.

The mapping is exhaustive if one of the following conditions is {{c|true}}:
* {{c|rank_}} is {{c|0}}, or
* there exists a permutation {{c|p}} of the integers in the range {{range|0|rank_}} such that:
:* {{c|stride(p[0])}} equals {{c|1}} and
:* {{c|stride(p[i])}} equals {{c|stride(p[i - 1]) * extents().extent(p[i - 1])}} 
:for all {{c|i}} in {{range|1|rank_}}, where {{c|p[i]}} is the i{{sup|th}} element of {{c|p}}.
{{petty|({{lti|cpp/container/mdspan/layout_stride/mapping#Member constants|rank_}} is an exposition-only static member constant defined in {{c/core|std::layout_stride::mapping}}.)}}

See {{named req|LayoutMapping}} for the semantics of these predicate mapping traits.

===Parameters===
(none)

===Return value===
@1,3-4,6@ {{c|true}}
@2@ {{c|true}} if the mapping is exhaustive (see above)
@5@ {{c|false}}

===Example===
{{example}}

===See also===
{{todo}}

{{langlinks|de|es|ja|ru|zh}}