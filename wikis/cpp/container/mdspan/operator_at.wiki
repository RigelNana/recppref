{{cpp/container/mdspan/title|operator[]}}
{{cpp/container/mdspan/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
template&lt; class... OtherIndexTypes &gt;
constexpr reference operator[]( OtherIndexTypes... indices ) const;
}}
{{dcl|num=2|since=c++23|1=
template&lt; class OtherIndexType &gt;
constexpr reference operator[]
    ( std::span&lt;OtherIndexType, rank()&gt; indices ) const;
}}
{{dcl|num=3|since=c++23|1=
template&lt; class OtherIndexType &gt;
constexpr reference operator[]
    ( const std::array&lt;OtherIndexType, rank()&gt;&amp; indices ) const;
}}
{{dcl end}}

Returns a reference to the {{c|indices}}{{sup|th}} element of the mdspan.

@1@ Equivalent to {{c|return acc_.access(ptr_, map_(static_cast&lt;index_type&gt;(std::move(indices))...));}}.
@@ This overload participates in overload resolution only if:
* {{c|(std::is_convertible_v&lt;OtherIndexTypes, index_type&gt; &amp;&amp; ...)}} is {{c|true}}, 
* {{c|(std::is_nothrow_constructible_v&lt;index_type, OtherIndexTypes&gt; &amp;&amp; ...)}} is {{c|true}}, and
* {{c|1=sizeof...(OtherIndexTypes) == rank()}} is {{c|true}}.
@@ Let {{tt|I}} be {{box|{{tt|extents_type::}}{{tti|index-cast}}{{c/core|(std::move(indices))}}}}. Then the behavior is undefined if {{tt|I}} is not a multidimensional index in {{c|extents()}}, i.e., {{c|map_(I) &lt; map_.required_span_size()}} is {{c|false}}.

@2,3@ Let {{tt|P}} be a parameter pack such that {{c|std::is_same_v&lt;make_index_sequence&lt;rank()&gt;, index_sequence&lt;P...&gt;&gt;}} is {{c|true}}, then the operator is equivalent to {{box|{{c/core|return operator[](extents_type::}}{{tti|index-cast}}{{c/core|(std::as_const(indices[P]))...);}}}}.
@@ This overload participates in overload resolution only if:
* {{c|std::is_convertible_v&lt;const OtherIndexType&amp;, index_type&gt;}} is {{c|true}}, and
* {{c|std::is_nothrow_constructible_v&lt;index_type, const OtherIndexType&amp;&gt;}} is {{c|true}}.

===Parameters===
{{par begin}}
{{par|indices|the indices of the element to access}}
{{par end}}

===Return value===
A reference to the element.

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3974|std=C++23|before=overloads {{v|2,3}} did not apply {{tt|extents_type::}}{{tti|index-cast}}|after=applies}}
{{dr list end}}

===See also===
{{todo}}

{{langlinks|de|es|ja|ru|zh}}