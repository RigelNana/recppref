{{cpp/container/unordered_multimap/title|insert}}
{{cpp/container/unordered_multimap/navbar}}
{{dcl begin}}
{{dcl header|unordered_map}}
{{dcl|num=1|since=c++11|
iterator insert( const value_type&amp; value );
}}
{{dcl|num=2|since=c++17|
iterator insert( value_type&amp;&amp; value );
}}
{{dcl|num=3|since=c++11|
template&lt; class P &gt;
iterator insert( P&amp;&amp; value );
}}
{{dcl|num=4|since=c++11|
iterator insert( const_iterator hint, const value_type&amp; value );
}}
{{dcl|num=5|since=c++17|
iterator insert( const_iterator hint, value_type&amp;&amp; value );
}}
{{dcl|num=6|since=c++11|
template&lt; class P &gt;
iterator insert( const_iterator hint, P&amp;&amp; value );
}}
{{dcl|num=7|since=c++11|
template&lt; class InputIt &gt;
void insert( InputIt first, InputIt last );
}}
{{dcl|num=8|since=c++11|
void insert( std::initializer_list&lt;value_type&gt; ilist );
}}
{{dcl|num=9|since=c++17|
iterator insert( node_type&amp;&amp; nh );
}}
{{dcl|num=10|since=c++17|
iterator insert( const_iterator hint, node_type&amp;&amp; nh );
}}
{{dcl end}}

Inserts element(s) into the container.

@1-3@ Inserts {{c|value}}.
@@ Overload {{v|3}} is equivalent to {{c|emplace(std::forward&lt;P&gt;(value))}} and only participates in overload resolution if {{c|1=std::is_constructible&lt;value_type, P&amp;&amp;&gt;::value == true}}.

@4-6@ Inserts {{c|value}}, using {{c|hint}} as a non-binding suggestion to where the search should start.
@@ Overload {{v|6}} is equivalent to {{c|emplace_hint(hint, std::forward&lt;P&gt;(value))}} and only participates in overload resolution if {{c|1=std::is_constructible&lt;value_type, P&amp;&amp;&gt;::value == true}}.

@7@ Inserts elements from range {{range|first|last}}.
@@ If {{range|first|last}} is not a [[cpp/iterator#Ranges|valid range]], or {{c|first}} and/or {{c|last}} are iterators into {{c|*this}}, the behavior is undefined.

@8@ Inserts elements from initializer list {{c|ilist}}.

{{cpp/container/node handle insert desc|unordered_multimap|9|10}}

{{cpp/container/note iterator invalidation|unordered_multimap|insert}}

===Parameters===
{{par begin}}
{{par|hint|iterator, used as a suggestion as to where to insert the content}}
{{par|value|element value to insert}}
{{par|first, last|range of elements to insert}}
{{par|ilist|initializer list to insert the values from}}
{{par|nh|a compatible [[cpp/container/node_handle|node handle]]}}
{{par hreq}}
{{par req named|InputIt|InputIterator}}
{{par end}} 

===Return value===
@1-6@ An iterator to the inserted element.

@7,8@ (none)

{{cpp/container/node_handle_insert_return|unordered_multimap|9|10}}

===Exceptions===
@1-6@ {{cpp/strong exception safety guarantee|plural=yes}}

@7,8@ No exception safety guarantee.

@9,10@ {{cpp/strong exception safety guarantee|plural=yes}}

===Complexity===
@1-6@ Average case: {{tt|O(1)}}, worst case {{tt|O(size())}}.

@7,8@ Average case: {{tt|O(N)}}, where N is the number of elements to insert. Worst case: {{tt|O(N * size() + N)}}.

@9,10@ Average case: {{tt|O(1)}}, worst case {{tt|O(size())}}.

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2005|std=C++11|before=overloads {{v|3,6}} would only participate in overload&lt;br&gt;resolution if {{tt|P}} is implicitly convertible to {{tt|value_type}}|after=only participates if {{tt|value_type}}&lt;br&gt;is constructible from {{tt|P&amp;&amp;}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/container/dsc emplace|unordered_multimap}}
{{dsc inc|cpp/container/dsc emplace_hint|unordered_multimap}}
{{dsc inc|cpp/iterator/dsc inserter}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}