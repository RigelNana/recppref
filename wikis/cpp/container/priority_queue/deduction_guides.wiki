{{title|deduction guides for {{tt|std::priority_queue}}}}
{{cpp/container/priority_queue/navbar}}
{{dcl begin}}
{{dcl header|queue}}
{{dcl|num=1|since=c++17|1=
template&lt; class Comp, class Container &gt;
priority_queue( Comp, Container )
    -&gt; priority_queue&lt;typename Container::value_type, Container, Comp&gt;;
}}
{{dcl|num=2|since=c++17|1=
template&lt; class InputIt,
          class Comp = std::less&lt;/*iter-value-type*/&lt;InputIt&gt;&gt;,
          class Container = std::vector&lt;/*iter-value-type*/&lt;InputIt&gt; &gt;
priority_queue( InputIt, InputIt, Comp = Comp(), Container = Container() )
    -&gt; priority_queue&lt;/*iter-value-type*/&lt;InputIt&gt;, Container, Comp&gt;;
}}
{{dcl|num=3|since=c++17|1=
template&lt; class Comp, class Container, class Alloc &gt;
priority_queue( Comp, Container, Alloc )
    -&gt; priority_queue&lt;typename Container::value_type, Container, Comp&gt;;
}}
{{dcl|num=4|since=c++17|
template&lt; class InputIt, class Alloc &gt;
priority_queue( InputIt, InputIt, Alloc )
    -&gt; priority_queue&lt;/*iter-value-type*/&lt;InputIt&gt;,
                      std::vector&lt;/*iter-value-type*/&lt;InputIt&gt;, Alloc&gt;,
                      std::less&lt;/*iter-value-type*/&lt;InputIt&gt;&gt;&gt;;
}}
{{dcl|num=5|since=c++17|
template&lt; class InputIt, class Comp, class Alloc &gt;
priority_queue( InputIt, InputIt, Comp, Alloc )
    -&gt; priority_queue&lt;/*iter-value-type*/&lt;InputIt&gt;,
                      std::vector&lt;/*iter-value-type*/&lt;InputIt&gt;, Alloc&gt;, Comp&gt;;
}}
{{dcl|num=6|since=c++17|
template&lt; class InputIt, class Comp, class Container, class Alloc &gt;
priority_queue( InputIt, InputIt, Comp, Container, Alloc )
    -&gt; priority_queue&lt;typename Container::value_type, Container, Comp&gt;;
}}
{{dcl|num=7|since=c++23|1=
template&lt; ranges::input_range R,
          class Comp = std::less&lt;ranges::range_value_t&lt;R&gt;&gt; &gt;
priority_queue( std::from_range_t, R&amp;&amp;, Comp = Comp() )
    -&gt; priority_queue&lt;ranges::range_value_t&lt;R&gt;,
                      std::vector&lt;ranges::range_value_t&lt;R&gt;&gt;, Comp&gt;;
}}
{{dcl|num=8|since=c++23|1=
template&lt; ranges::input_range R, class Comp, class Alloc &gt;
priority_queue( std::from_range_t, R&amp;&amp;, Comp, Alloc )
    -&gt; priority_queue&lt;ranges::range_value_t&lt;R&gt;,
                      std::vector&lt;ranges::range_value_t&lt;R&gt;, Alloc&gt;, Comp&gt;;
}}
{{dcl|num=9|since=c++23|1=
template&lt; ranges::input_range R, class Alloc &gt;
priority_queue( std::from_range_t, R&amp;&amp;, Alloc )
    -&gt; priority_queue&lt;ranges::range_value_t&lt;R&gt;,
                      std::vector&lt;ranges::range_value_t&lt;R&gt;, Alloc&gt;&gt;;
}}
{{dcl end}}

The following [[cpp/language/class template argument deduction|deduction guides]] are provided for {{lc|std::priority_queue}}:

@1-6@ Allow deduction from underlying container type and from an iterator range. {{c|/*iter-value-type*/&lt;It&gt;}} denotes {{c|typename std::iterator_traits&lt;It&gt;::value_type}} for any type {{tt|It}}.

@7-9@ Allow deduction from a {{ltt|cpp/ranges/from_range|std::from_range_t}} tag and an {{lc|std::ranges::input_range|input_range}}.

{{cpp/enable_if|plural=yes|
* {{tt|InputIt}} satisfies {{named req|InputIterator}},
* {{tt|Comp}} does not satisfy {{named req|Allocator}},
* {{tt|Container}} does not satisfy {{named req|Allocator}},
* {{rev inl|since=c++23|for overloads {{v|4,5}},}} {{tt|Alloc}} satisfies {{named req|Allocator}}, and
* for overloads {{v|3,6}}, {{c|std::uses_allocator_v&lt;Container, Alloc&gt;}} is {{c|true}}}}.

{{cpp/container/inputit_allocator_detection}}

===Notes===
{{ftm begin|std=yes|comment=yes}}
{{ftm|__cpp_lib_containers_ranges|[[cpp/ranges/to#container compatible range|Ranges-aware]] construction and insertion; overloads {{v|7-9}}|value=202202L|std=C++23}}
{{ftm end}}

===Example===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;vector&gt;

int main()
{
    const std::vector&lt;int&gt; v = {1, 2, 3, 4};
    std::priority_queue pq1{std::greater&lt;int&gt;{}, v}; // deduces std::priority_queue&lt;
                                                     //     int, std::vector&lt;int&gt;,
                                                     //     std::greater&lt;int&gt;&gt;
    for (; !pq1.empty(); pq1.pop())
        std::cout &lt;&lt; pq1.top() &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';

    std::priority_queue pq2{v.begin(), v.end()}; // deduces std::priority_queue&lt;int&gt;

    for (; !pq2.empty(); pq2.pop())
        std::cout &lt;&lt; pq2.top() &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
1 2 3 4
4 3 2 1
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3506|std=C++17|before=deduction guides from iterator and allocator were missing|after=added}}
{{dr list end}}

{{langlinks|de|es|ja|ru|zh}}