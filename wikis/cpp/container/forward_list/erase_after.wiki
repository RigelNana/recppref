{{cpp/container/forward_list/title|erase_after}}
{{cpp/container/forward_list/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
iterator erase_after( const_iterator pos );
}}
{{dcl|num=2|since=c++11|
iterator erase_after( const_iterator first, const_iterator last );
}}
{{dcl end}}

Removes specified elements from the container.

@1@ Removes the element following {{c|pos}}.
@2@ Removes the elements following {{c|first}} until {{c|last}}.

===Parameters===
{{par begin}}
{{par|pos|iterator to the element preceding the element to remove}}
{{par|first, last|range of elements to remove}}
{{par end}}

===Return value===
@1@ Iterator to the element following the erased one, or {{lc|end()}} if no such element exists.
@2@ {{c|last}}

===Complexity===
@1@ Constant.
@2@ Linear in distance between {{c|first}} and {{c|last}}.

===Example===
{{example
|code=
#include &lt;forward_list&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;

int main()
{
    std::forward_list&lt;int&gt; l = {1, 2, 3, 4, 5, 6, 7, 8, 9};

//  l.erase(l.begin()); // Error: no function erase()
    
    l.erase_after(l.before_begin()); // Removes first element
    
    for (auto n : l)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';

    auto fi = std::next(l.begin());
    auto la = std::next(fi, 3);
    
    l.erase_after(fi, la);
    
    for (auto n : l)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
2 3 4 5 6 7 8 9
2 3 6 7 8 9
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/container/dsc clear|forward_list}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}