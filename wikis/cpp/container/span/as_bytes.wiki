{{cpp/title|as_bytes|as_writable_bytes}}
{{cpp/container/span/navbar}}
{{dcl begin}}
{{dcl header|span}}
{{dcl|num=1|since=c++20|1=
template&lt; class T, std::size_t N &gt;
std::span&lt;const std::byte, S/* see below */&gt;
    as_bytes( std::span&lt;T, N&gt; s ) noexcept;
}}
{{dcl|num=2|since=c++20|1=
template&lt; class T, std::size_t N &gt;
std::span&lt;std::byte, S/* see below */&gt;
    as_writable_bytes( std::span&lt;T, N&gt; s ) noexcept;
}}
{{dcl end}}

Obtains a view to the object representation of the elements of the span {{c|s}}.

If {{tt|N}} is {{lc|std::dynamic_extent}}, the extent of the returned span {{tt|S}} is also {{lc|std::dynamic_extent}}; otherwise it is {{c|sizeof(T) * N}}.

{{tt|as_writable_bytes}} only participates in overload resolution if {{c|std::is_const_v&lt;T&gt;}} is {{c|false}}.

===Return value===
@1@ A span constructed with {{c|{reinterpret_cast&lt;const std::byte*&gt;(s.data()), s.size_bytes()}&lt;!----&gt;}}.
@2@ A span constructed with {{c|{reinterpret_cast&lt;std::byte*&gt;(s.data()), s.size_bytes()}&lt;!----&gt;}}.

===Example===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;span&gt;

void print(float const x, std::span&lt;const std::byte&gt; const bytes)
{
    std::cout &lt;&lt; std::setprecision(6) &lt;&lt; std::setw(8) &lt;&lt; x &lt;&lt; " = { "
              &lt;&lt; std::hex &lt;&lt; std::uppercase &lt;&lt; std::setfill('0');
    for (auto const b : bytes)
        std::cout &lt;&lt; std::setw(2) &lt;&lt; std::to_integer&lt;int&gt;(b) &lt;&lt; ' ';
    std::cout &lt;&lt; std::dec &lt;&lt; "}\n";
}

int main()
{
    /* mutable */ float data[1]{3.141592f};

    auto const const_bytes = std::as_bytes(std::span{data});

    print(data[0], const_bytes);

    auto const writable_bytes = std::as_writable_bytes(std::span{data});

    // Change the sign bit that is the MSB (IEEE 754 Floating-Point Standard).
    writable_bytes[3] {{!=}} std::byte{0B1000'0000};

    print(data[0], const_bytes);
}
|p=true&lt;!--requires IEEE-754 format and little endian--&gt;
|output=&lt;nowiki/&gt;
 3.14159 = { D8 0F 49 40 }
-3.14159 = { D8 0F 49 C0 }
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc start_lifetime_as}}
{{dsc inc|cpp/types/dsc byte}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}