{{cpp/container/span/title|size}}
{{cpp/container/span/navbar}}
{{ddcl|since=c++20|1=
constexpr size_type size() const noexcept;
}}

Returns the number of elements in the span.

===Parameters===
(none)

===Return value===
The number of elements in the span.

===Note===
{{feature test macro|__cpp_lib_ssize|{{lc|std::ssize}} and unsigned {{tt|std::span::size}}|value=201902L|std=C++20}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;span&gt;

void show_sizes(std::span&lt;const int&gt; span)
{
    std::cout
        &lt;&lt; span                 .size() &lt;&lt; ' ' // 8
        &lt;&lt; span.first(7)        .size() &lt;&lt; ' ' // 7
        &lt;&lt; span.first&lt;6&gt;()      .size() &lt;&lt; ' ' // 6
        &lt;&lt; span.last(5)         .size() &lt;&lt; ' ' // 5
        &lt;&lt; span.last&lt;4&gt;()       .size() &lt;&lt; ' ' // 4
        &lt;&lt; span.subspan(2, 3)   .size() &lt;&lt; ' ' // 3
        &lt;&lt; span.subspan&lt;3, 2&gt;() .size() &lt;&lt; ' ' // 2
        &lt;&lt; '\n';
}

int main()
{
    int antique_array[]{1, 2, 3, 4, 5, 6, 7, 8};
    show_sizes(antique_array);
}
|output=
8 7 6 5 4 3 2
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/container/span/dsc constructor}}
{{dsc inc|cpp/container/span/dsc size_bytes}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}