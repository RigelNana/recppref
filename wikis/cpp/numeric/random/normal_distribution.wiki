{{cpp/title|normal_distribution}}
{{cpp/numeric/random/normal_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class RealType = double &gt;
class normal_distribution;
}}

Generates random numbers according to the {{enwiki|Normal distribution|Normal (or Gaussian) random number distribution}}. It is defined as:

: {{mathjax-or|1=\(\small{f(x;\mu,\sigma)}=\frac{1}{\sigma\sqrt{2\pi} }\exp{(-\frac{1}{2}{(\frac{x-\mu}{\sigma})}^2)}\)|2=f(x; μ,σ) = {{mfrac||1|σ{{mrad|2π}}}} exp{{mparen|(|)|{{mfrac|-1|2}} {{mparen|(|)|{{mfrac|x-μ|σ}}}}{{su|p=2}}}}}}

Here {{mathjax-or|\(\small\mu\)|μ}} is the {{enwiki|Mean}} and {{mathjax-or|\(\small\sigma\)|σ}} is the {{enwiki|Standard deviation}} (''stddev'').

{{ttt|std::normal_distribution}} satisfies all requirements of {{named req|RandomNumberDistribution}}.

===Template parameters===
{{par begin}}
{{cpp/numeric/random/param_list|RealType}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|RealType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|normal_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|normal_distribution}}

{{dsc h2|Generation}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|normal_distribution}}

{{dsc h2|Characteristics}}
{{dsc inc|cpp/numeric/random/distribution/dsc params|normal_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|normal_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|normal_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|normal_distribution}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|normal_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|normal_distribution}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd{};
    std::mt19937 gen{rd()};

    // Values near the mean are the most likely. Standard deviation
    // affects the dispersion of generated values from the mean.
    std::normal_distribution d{5.0, 2.0};

    // Draw a sample from the normal distribution and round it to an integer.
    auto random_int = [&amp;d, &amp;gen]{ return std::lround(d(gen)); };

    std::map&lt;long, unsigned&gt; histogram{};
    for (auto n{10000}; n; --n)
        ++histogram[random_int()];

    for (const auto [k, v] : histogram)
        std::cout &lt;&lt; std::setw(2) &lt;&lt; k &lt;&lt; ' ' &lt;&lt; std::string(v / 200, '*') &lt;&lt; '\n';
}
|p=true
|output=
-1
 0
 1 *
 2 ***
 3 *****
 4 ********
 5 *********
 6 *********
 7 ******
 8 ***
 9 *
10
11
}}

===External links===
{{elink begin}}
{{elink|[https://mathworld.wolfram.com/NormalDistribution.html Weisstein, Eric W. "Normal Distribution."] From MathWorld — A Wolfram Web Resource.}}
{{elink|{{enwiki|Normal distribution}} — From Wikipedia.}}
{{elink end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}