{{cpp/title|weibull_distribution}}
{{cpp/numeric/random/weibull_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class RealType = double &gt;
class weibull_distribution;
}}

The {{tt|weibull_distribution}} meets the requirements of a {{named req|RandomNumberDistribution}} and produces random numbers according to the {{enwiki|Weibull distribution}}:

:{{mathjax-or|1=\(\small{f(x;a,b)=\frac{a}{b}{(\frac{x}{b})}^{a-1}\exp{(-{(\frac{x}{b})}^{a})} }\)|2=f(x;a,b) = {{mfrac||a|b}} {{mparen|(|)|{{mfrac||x|b}}}}{{su|p=a-1}} exp{{mparen|(|)|-{{mparen|(|)|{{mfrac||x|b}}}}{{su|p=a}}}}}}

{{math|a}} is the {{enwiki|shape parameter}} and {{math|b}} the {{enwiki|scale parameter}}.

{{ttt|std::weibull_distribution}} satisfies {{named req|RandomNumberDistribution}}.

===Template parameters===
{{par begin}}
{{cpp/numeric/random/param_list|RealType}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|RealType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|weibull_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|weibull_distribution}}

{{dsc h2|Generation}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|weibull_distribution}}

{{dsc h2|Characteristics}}
{{dsc inc|cpp/numeric/random/distribution/dsc params|weibull_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|weibull_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|weibull_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|weibull_distribution}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|weibull_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|weibull_distribution}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());
 
    std::weibull_distribution&lt;&gt; d;
 
    std::map&lt;int, int&gt; hist;
    for (int n = 0; n != 10000; ++n)
        ++hist[std::round(d(gen))];

    std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(1) &lt;&lt; std::hex;
    for (auto [x, y] : hist)
        std::cout &lt;&lt; x &lt;&lt; ' ' &lt;&lt; std::string(y / 200, '*') &lt;&lt; '\n';
}
|p=true
|output=
0 *******************
1 *******************
2 ******
3 **
4
5
6
7
8
}}

===External links===
{{elink begin}}
{{elink|[https://mathworld.wolfram.com/WeibullDistribution.html Weisstein, Eric W. "Weibull Distribution."] From MathWorld &amp;mdash; A Wolfram Web Resource.}}
{{elink|{{enwiki|Weibull distribution}} &amp;mdash; From Wikipedia.}}
{{elink end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}