{{cpp/numeric/random/mersenne_twister_engine/title|{{br}}mersenne_twister_engine}}
{{cpp/numeric/random/mersenne_twister_engine/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
mersenne_twister_engine() : mersenne_twister_engine(default_seed) {}
}}
{{dcl|num=2|since=c++11|
explicit mersenne_twister_engine( result_type value );
}}
{{dcl|num=3|since=c++11|
template&lt; class SeedSeq &gt;
explicit mersenne_twister_engine( SeedSeq&amp; seq );
}}
{{dcl|num=4|since=c++11|notes={{mark implicit}}|
mersenne_twister_engine( const mersenne_twister_engine&amp; other );
}}
{{dcl end}}

Constructs the pseudo-random number engine.

@1@ The default constructor.
* If the default-constructed engine is of type {{tt|std::mt19937}}, the 10000th consecutive invocation of it produces the value {{c|4123659995}}.
* If the default-constructed engine is of type {{tt|std::mt19937_64}}, the 10000th consecutive invocation of it produces the value {{c|9981545732273789042}}.

@2@ Constructs the engine with a seed value {{c|value}}. Given {{mathjax-or|\(\scriptsize 2^w \)|2{{su|p=w}}}} as {{c|p}}, the engine's initial {{rlp|/#Generator properties|state}} is determined as follows:
# Sets {{mathjax-or|\(\scriptsize X_{-n} \)|X{{su|b=-n}}}} to {{c|value % p}}.
# For each integer {{c|i}} in {{closed range|i - n|-1}}, sets {{mathjax-or|\(\scriptsize X_i \)|X{{su|b=i}}}} to {{mathjax-or|\(\scriptsize [f \cdot (X_{i-1}\ \mathsf{xor}\ (X_{i-1}\ \mathsf{rshift}\ (w-2)))+i \mod n] \mod p \)|[f·(X{{su|b=i-1}} xor (X{{su|b=i-1}} rshift (w-2)))+i mod n] mod p}}, where {{mathjax-or|\(\scriptsize \mathsf{xor} \)|xor}} and {{mathjax-or|\(\scriptsize \mathsf{rshift} \)|rshift}} stand for built-in [[cpp/language/operator arithmetic#Bitwise logic operators|bitwise XOR]] and [[cpp/language/operator arithmetic#Bitwise shift operators|bitwise right-shift]] respectively.

@3@ Constructs the engine with a seed sequence {{c|seq}}. Given {{c|std::size_t(w / 32) + 1}} as {{c|k}}, the engine's initial {{rlp|/#Generator properties|state}} is determined as follows:
# Creates an invented array object {{c|a}} of length {{c|n * k}}.
# Calls {{c|seq.generate(a + 0, a + n * k)}}.
# For each integer {{c|i}} in {{closed range|-n|-1}}, sets {{mathjax-or|\(\scriptsize X_{i} \)|X{{su|b=i}}}} to {{mathjax-or|1=\(\scriptsize (\sum^{k-1}_{j=0} a_{k(i+n)+j} \cdot 2^{32j}) \mod 2^w \)|2=(∑{{su|p=k-1|b=j=0}} a{{su|b=k(i+n)+j}}·2{{su|p=32j}}) mod 2{{su|p=w}}}}.
# If the most significant {{c|w − r}} bits of {{mathjax-or|\(\scriptsize X_{-n} \)|X{{su|b=-n}}}} are zero, and if each of the other resulting {{mathjax-or|\(\scriptsize X_{i} \)|X{{su|b=i}}}} is {{c|0}}, changes {{mathjax-or|\(\scriptsize X_{-n} \)|X{{su|b=-n}}}} to {{mathjax-or|\(\scriptsize 2^{w-1} \)|2{{su|p=w-1}}}}.
@@ {{cpp/enable if|{{tt|SeedSeq}} meets the requirements of {{named req|SeedSequence}}}}.

@4@ The copy constructor. Upon construction, {{c|1=*this == other}} is {{c|true}}.

===Parameters===
{{par begin}}
{{par|value|seed value to use in the initialization of the internal state}}
{{par|seq|seed sequence to use in the initialization of the internal state}}
{{par end}}

===Complexity===
@1,2@ {{mathjax-or|\(\scriptsize O(n) \)|O(n)}}.
@3@ Same as the complexity of the {{tt|seq.generate}} call.
@4@ {{mathjax-or|\(\scriptsize O(n) \)|O(n)}}.

===Exceptions===
@3@ If {{tt|SeedSeq}} is not {{lc|std::seed_seq}}, throws the exceptions thrown by the {{tt|seq.generate}} call.

===Example===
{{example
|{{todo|demos for overloads (2-4) required}}
|code=
#include &lt;cassert&gt;
#include &lt;random&gt;
 
int main()
{
    std::mt19937 gen32; // overload (1)
    std::mt19937_64 gen64; // overload (1)
    gen32.discard(10000 - 1);
    gen64.discard(10000 - 1);
    assert(gen32() == 4123659995);
    assert(gen64() == 9981545732273789042ull);
}
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2181|std=C++11|before=overload {{vl|3}} would not throw even if the {{tt|seq.generate}} call throws|after=propagates the exception}}
{{dr list item|paper=P0935R0|std=C++11|before=the default constructor was explicit|after=made implicit}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/engine/dsc seed|mersenne_twister_engine}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}