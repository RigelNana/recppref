{{cpp/title|subtract_with_carry_engine}}
{{cpp/numeric/random/subtract_with_carry_engine/navbar}}
{{dcl begin}}
{{dcl header|random}}
{{dcl|since=c++11|
template&lt;
    class UIntType,
    std::size_t w, std::size_t s, std::size_t r
&gt; class subtract_with_carry_engine;
}}
{{dcl end}}

Is a random number engine that uses {{enwiki|subtract with carry}} algorithm.

===Template parameters===
{{par begin}}
{{cpp/numeric/random/param list|UIntType}}
{{par|w|the word size, in bits, of the state sequence}}
{{par|s|the short lag}}
{{par|r|the long lag}}
{{par end}}

If {{c|w}} is not in {{range|1|std::numeric_limits&lt;UIntType&gt;::digits|right=]}}, or {{c|s}} is not in {{range|1|r}}, the program is ill-formed.

===Generator properties===
The {{rlp|/#Random number engines|size}} of the states of {{tt|subtract_with_carry_engine}} is {{mathjax-or|\(\scriptsize O(r)\)|O(r)}}, each of them consists of two parts:
* A sequence {{c|X}} of {{c|r}} integer values, where each value is in {{range/core|{{c|0}}|{{box|{{math|{{tt|2}}{{su|p={{tt|w}}}}}}}}}}.
* An integer {{c|c}} (known as the ''carry''{{sep}}), whose value is either {{c|0}} or {{c|1}}.

Given that {{mathjax-or|\(\scriptsize X_j\)|X{{su|b=j}}}} stands for the {{mathjax-or|\(\scriptsize j\mod r\)|j mod r}}th value (starting from 0) of {{c|X}}, the {{rlp|/#Random number engines|transition algorithm}} of {{tt|subtract_with_carry_engine}} ({{mathjax-or|\(\scriptsize TA(x_i)\)|TA(x{{su|b=i}})}}) is defined as follows:
# Let {{c|Y}} be {{mathjax-or|\(\scriptsize X_{i-s}-X_{i-r}-c\)|X{{su|b=i-s}}-X{{su|b=i-r}}-c}}.
# Let {{c|y}} be {{mathjax-or|\(\scriptsize Y\mod 2^w\)|Y mod 2{{su|p=w}}}}, and set {{mathjax-or|\(\scriptsize X_i\)|X{{su|b=i}}}} to {{c|y}}.
# If {{c|Y}} is negative, set {{c|c}} to {{c|1}}, otherwise set {{c|c}} to {{c|0}}.

The {{rlp|/#Random number engines|generation algorithm}} of {{tt|subtract_with_carry_engine}} is {{mathjax-or|1=\(\scriptsize GA(x_i) = y\)|2=GA(x{{su|b=i}}) = y}}, where {{c|y}} is the value produced in step 2 of the transition algorithm.

===Predefined specializations===
The following specializations define the random number engine with two commonly used parameter sets:
{{dsc begin}}
{{dsc header|random}}
{{dsc hitem|Type|Definition}}
{{dsc inc|cpp/numeric/random/dsc ranlux24_base}}
{{dsc inc|cpp/numeric/random/dsc ranlux48_base}}
{{dsc end}}

===Nested types===
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|result_type}}|{{tt|UIntType}}}}
{{dsc end}}

===Data members===
{{dsc begin}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::size_t}}}} word_size|{{c|w}}}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::size_t}}}} short_lag|{{c|s}}}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::size_t}}}} long_lag|{{c|r}}}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::uint_least32_t}}}} default_seed|{{c|19780503u}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc h2|Construction and Seeding}}
{{dsc inc|cpp/numeric/random/engine/dsc constructor|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc seed|subtract_with_carry_engine}}

{{dsc h2|Generation}}
{{dsc inc|cpp/numeric/random/engine/dsc operator()|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc discard|subtract_with_carry_engine}}

{{dsc h2|Characteristics}}
{{dsc inc|cpp/numeric/random/engine/dsc min|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc max|subtract_with_carry_engine}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/engine/dsc operator cmp|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc operator ltltgtgt|subtract_with_carry_engine}}
{{dsc end}}

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3809|std=C++11|before={{tt|default_seed}} might not be&lt;br&gt;representable with {{tt|result_type}}|after=changed its type to&lt;br&gt;{{lc|std::uint_least32_t}}}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}