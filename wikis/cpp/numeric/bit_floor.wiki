{{cpp/title|bit_floor}}
{{cpp/utility/bit/navbar}}
{{ddcl|since=c++20|header=bit|
template&lt; class T &gt;
constexpr T bit_floor( T x ) noexcept;
}}

If {{c|x}} is not zero, calculates the largest integral power of two that is not greater than {{c|x}}. If {{c|x}} is zero, returns zero.

{{cpp/enable_if|{{tt|T}} is an unsigned integer type (that is, {{c/core|unsigned char}}, {{c/core|unsigned short}}, {{c/core|unsigned int}}, {{c/core|unsigned long}}, {{c/core|unsigned long long}}, or an extended unsigned integer type)}}.

===Parameters===
{{par begin}}
{{par|x|unsigned integer value}}
{{par end}}

===Return value===
Zero if {{c|x}} is zero; otherwise, the largest integral power of two that is not greater than {{c|x}}.

===Notes===
{{petty|Prior to {{stddoc|P1956R1}}, the proposed name for this function template was {{tt|floor2}}.}}

{{feature test macro|__cpp_lib_int_pow2|std=C++20|value=202002L|[[cpp/numeric#Bit manipulation (since C++20)|Integral power-of-2 operations]]}}

===Possible implementation===
{{eq fun
|1=
template&lt;std::unsigned_integral T&gt;
    requires !std::same_as&lt;T, bool&gt; &amp;&amp; !std::same_as&lt;T, char&gt; &amp;&amp;
             !std::same_as&lt;T, char8_t&gt; &amp;&amp; !std::same_as&lt;T, char16_t&gt; &amp;&amp;
             !std::same_as&lt;T, char32_t&gt; &amp;&amp; !std::same_as&lt;T, wchar_t&gt;
constexpr T bit_floor(T x) noexcept
{
    if (x != 0)
        return T{1} &lt;&lt; (std::bit_width(x) - 1);
    return 0;
}
}}

===Example===
{{example
|code=
#include &lt;bit&gt;
#include &lt;bitset&gt;
#include &lt;iostream&gt;

int main()
{
    using bin = std::bitset&lt;8&gt;;
    for (unsigned x{}; x != 012; ++x)
        std::cout &lt;&lt; "bit_floor( " &lt;&lt; bin(x) &lt;&lt; " ) = "
                  &lt;&lt; bin(std::bit_floor(x)) &lt;&lt; '\n';
}
|output=
bit_floor( 00000000 ) = 00000000
bit_floor( 00000001 ) = 00000001
bit_floor( 00000010 ) = 00000010
bit_floor( 00000011 ) = 00000010
bit_floor( 00000100 ) = 00000100
bit_floor( 00000101 ) = 00000100
bit_floor( 00000110 ) = 00000100
bit_floor( 00000111 ) = 00000100
bit_floor( 00001000 ) = 00001000
bit_floor( 00001001 ) = 00001000
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/dsc bit_ceil}}
{{dsc inc|cpp/numeric/dsc rotr}}
{{dsc inc|cpp/numeric/dsc bit_width}}
{{dsc inc|cpp/numeric/dsc has_single_bit}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}