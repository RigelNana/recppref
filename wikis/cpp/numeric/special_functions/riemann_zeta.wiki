{{cpp/title|riemann_zeta|riemann_zetaf|riemann_zetal}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       riemann_zeta ( float num );
double      riemann_zeta ( double num );
long double riemann_zeta ( long double num );
|since2=c++23|dcl2=
/* floating-point-type */ riemann_zeta( /* floating-point-type */ num );
}}
{{dcl|num=2|since=c++17|
float       riemann_zetaf( float num );
}}
{{dcl|num=3|since=c++17|
long double riemann_zetal( long double num );
}}
{{dcl h|[[#Notes|Additional overloads]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Integer &gt;
double      riemann_zeta ( Integer num );
}}
{{dcl end}}

@1-3@ Computes the {{enwiki|Riemann zeta function}} of {{c|num}}.{{rev inl|since=c++23| The library provides overloads of {{tt|std::riemann_zeta}} for all cv-unqualified floating-point types as the type of the parameter {{c|num}}.}}
@A@ Additional overloads are provided for all integer types, which are treated as {{c/core|double}}.

===Parameters===
{{par begin}}
{{par|num|floating-point or value}}
{{par end}}

===Return value===
If no errors occur, value of the Riemann zeta function of {{c|num}}, {{math|ζ(num)}}, defined for the entire real axis:
* For {{math|num&gt;1}}, {{math|Σ{{su|b=n{{=}}1|p=∞}}n{{su|p=-num}}}}
* For {{math|0≤num≤1}}, {{math|{{mfrac|1|2{{su|p=1-num}}-1}}Σ{{su|b=n{{=}}1|p=∞}} (-1){{su|p=n}} n{{su|p=-num}}}}
* For {{math|num&lt;0}}, {{math|2{{su|p=num}}π{{su|p=num-1}}sin({{mfrac|πnum|2}})Γ(1−num)ζ(1−num)}}

===Error handling===
Errors may be reported as specified in {{lc|math_errhandling}}.
* If the argument is NaN, NaN is returned and domain error is not reported

===Notes===
{{cpp/numeric/special functions/older impl note}}

An implementation of this function is also [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/zetas/zeta.html available in boost.math].

{{cpp/numeric/special functions/additional integer overload note|riemann_zeta}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;format&gt;
#include &lt;iostream&gt;
#include &lt;numbers&gt;

int main()
{
    constexpr auto π = std::numbers::pi;

    // spot checks for well-known values
    for (const double x : {-1.0, 0.0, 1.0, 0.5, 2.0})
        std::cout &lt;&lt; std::format("ζ({})\t= {:+.5f}\n", x, std::riemann_zeta(x));
    std::cout &lt;&lt; std::format("π²/6\t= {:+.5f}\n", π * π / 6);
}
|output=
ζ(-1)   = -0.08333
ζ(0)    = -0.50000
ζ(1)    = +inf
ζ(0.5)  = -1.46035
ζ(2)    = +1.64493
π²/6    = +1.64493
}}

===External links===
{{eli|[https://mathworld.wolfram.com/RiemannZetaFunction.html Weisstein, Eric W. "Riemann Zeta Function."] From MathWorld — A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}