{{cpp/title|comp_ellint_2|comp_ellint_2f|comp_ellint_2l}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       comp_ellint_2 ( float k );
double      comp_ellint_2 ( double k );
long double comp_ellint_2 ( long double k );
|since2=c++23|dcl2=
/* floating-point-type */ comp_ellint_2( /* floating-point-type */ k );
}}
{{dcl|num=2|since=c++17|
float       comp_ellint_2f( float k );
}}
{{dcl|num=3|since=c++17|
long double comp_ellint_2l( long double k );
}}
{{dcl h|[[#Notes|Additional overloads]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Integer &gt;
double      comp_ellint_2 ( Integer k );
}}
{{dcl end}}

@1-3@ Computes the {{enwiki|Elliptic integral#Complete elliptic integral of the second kind|complete elliptic integral of the second kind}} of {{c|k}}.{{rev inl|since=c++23| The library provides overloads of {{tt|std::comp_ellint_2}} for all cv-unqualified floating-point types as the type of the parameter {{c|k}}.}}
@A@ Additional overloads are provided for all integer types, which are treated as {{c/core|double}}.

===Parameters===
{{par begin}}
{{par|k|elliptic modulus or eccentricity (a floating-point or integer value)}}
{{par end}}

===Return value===
If no errors occur, value of the complete elliptic integral of the second kind of {{c|k}}, that is {{lc|std::ellint_2(k, π/2)}}, is returned.

===Error handling===
Errors may be reported as specified in {{lc|math_errhandling}}.
* If the argument is NaN, NaN is returned and domain error is not reported.
* If {{math|{{!}}k{{!}}&gt;1}}, a domain error may occur.

===Notes===
{{cpp/numeric/special functions/older impl note}}

An implementation of this function is also [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/ellint/ellint_2.html available in boost.math].

The perimeter of an ellipse with eccentricity {{c|k}} and semimajor axis {{math|a}} equals  {{math|4aE(k)}}, where {{math|E}} is {{tt|std::comp_ellint_2}}. When eccentricity equals {{math|0}}, the ellipse degenerates to a circle with radius {{math|a}} and the perimeter equals {{math|2πa}}, so {{math|1=E(0) = π/2}}. When eccentricity equals {{math|1}}, the ellipse degenerates to a line of length 2a, whose perimeter is {{math|4a}}, so {{math|1=E(1) = 1}}.

{{cpp/numeric/special functions/additional integer overload note|comp_ellint_2}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#include &lt;numbers&gt;

int main()
{
    constexpr double hpi = std::numbers::pi / 2.0;
    
    std::cout &lt;&lt; "E(0) = " &lt;&lt; std::comp_ellint_2(0) &lt;&lt; '\n'
              &lt;&lt; "π/2 = " &lt;&lt; hpi &lt;&lt; '\n'
              &lt;&lt; "E(1) = " &lt;&lt; std::comp_ellint_2(1) &lt;&lt; '\n'
              &lt;&lt; "E(1, π/2) = " &lt;&lt; std::ellint_2(1, hpi) &lt;&lt; '\n';
}
|output=
E(0) = 1.5708
π/2 = 1.5708
E(1) = 1
E(1, π/2) = 1
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/special_functions/dsc ellint_2}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/CompleteEllipticIntegraloftheSecondKind.html Weisstein, Eric W. "Complete Elliptic Integral of the Second Kind."] From MathWorld — A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}