{{cpp/title|cyl_bessel_j|cyl_bessel_jf|cyl_bessel_jl}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       cyl_bessel_j ( float nu, float x );
double      cyl_bessel_j ( double nu, double x );
long double cyl_bessel_j ( long double nu, long double x );
|since2=c++23|dcl2=
/* floating-point-type */ cy_bessel_j( /* floating-point-type */ nu,
                                       /* floating-point-type */ x );
}}
{{dcl|num=2|since=c++17|
float       cyl_bessel_jf( float nu, float x );
}}
{{dcl|num=3|since=c++17|
long double cyl_bessel_jl( long double nu, long double x );
}}
{{dcl h|[[#Notes|Additional overloads]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Arithmetic1, class Arithmetic2 &gt;
/* common-floating-point-type */
    cyl_bessel_j( Arithmetic1 nu, Arithmetic2 x );
}}
{{dcl end}}

@1@ Computes the {{enwiki|Bessel function#Bessel functions of the first kind: J.CE.B1|cylindrical Bessel function of the first kind}} of {{c|nu}} and {{c|x}}.{{rev inl|since=c++23| The library provides overloads of {{tt|std::cyl_bessel_j}} for all cv-unqualified floating-point types as the type of the parameters {{c|nu}} and {{c|x}}.}}
@A@ Additional overloads are provided for all other combinations of arithmetic types.

===Parameters===
{{par begin}}
{{par|nu|the order of the function}}
{{par|x|the argument of the function}}
{{par end}}

===Return value===
If no errors occur, value of the cylindrical Bessel function of the first kind of {{c|nu}} and {{c|x}}, that is {{math|1=J{{su|b=nu}}(x) = Σ{{su|p=∞|b=k=0}}{{mfrac|(-1){{su|p=k}}(x/2){{su|p=nu+2k}}|k!Γ(nu+k+1)}}}} (for {{math|x≥0}}), is returned.

===Error handling===
Errors may be reported as specified in {{lc|math_errhandling}}:
* If the argument is NaN, NaN is returned and domain error is not reported.
* If {{math|nu≥128}}, the behavior is implementation-defined.

===Notes===
{{cpp/numeric/special functions/older impl_note}}

An implementation of this function is also available in [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/bessel/bessel_first.html boost.math].

{{cpp/numeric/special functions/additional overload note|cyl_bessel_j}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    // spot check for nu == 0
    const double x = 1.2345;
    std::cout &lt;&lt; "J_0(" &lt;&lt; x &lt;&lt; ") = " &lt;&lt; std::cyl_bessel_j(0, x) &lt;&lt; '\n';
    
    // series expansion for J_0
    double fct = 1;
    double sum = 0;
    for (int k = 0; k &lt; 6; fct *= ++k)
    {
        sum += std::pow(-1, k) * std::pow(x / 2, 2 * k) / std::pow(fct, 2);
        std::cout &lt;&lt; "sum = " &lt;&lt; sum &lt;&lt; '\n';
    }
}
|output=
J_0(1.2345) = 0.653792
sum = 1
sum = 0.619002
sum = 0.655292
sum = 0.653756
sum = 0.653793
sum = 0.653792
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/special_functions/dsc cyl_bessel_i}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/BesselFunctionoftheFirstKind.html Weisstein, Eric W. "Bessel Function of the First Kind."] From MathWorld — A Wolfram Web Resource.}}

{{langlinks|es|ja|zh}}