{{cpp/title|assoc_legendre|assoc_legendref|assoc_legendrel}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       assoc_legendre ( unsigned int n, unsigned int m, float x );
double      assoc_legendre ( unsigned int n, unsigned int m, double x );
long double assoc_legendre ( unsigned int n, unsigned int m, long double x );
|since2=c++23|dcl2=
/* floating-point-type */ assoc_legendre( unsigned int n, unsigned int m,
                                          /* floating-point-type */ x );
}}
{{dcl|num=2|since=c++17|
float       assoc_legendref( unsigned int n, unsigned int m, float x );
}}
{{dcl|num=3|since=c++17|
long double assoc_legendrel( unsigned int n, unsigned int m, long double x );
}}
{{dcl h|[[#Notes|Additional overloads]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Integer &gt;
double      assoc_legendre ( unsigned int n, unsigned int m, Integer x );
}}
{{dcl end}}

@1-3@ Computes the {{enwiki|Associated Legendre polynomials}} of the degree {{c|n}}, order {{c|m}}, and argument {{c|x}}.{{rev inl|since=c++23| The library provides overloads of {{tt|std::assoc_legendre}} for all cv-unqualified floating-point types as the type of the parameter {{c|x}}.}}
@A@ Additional overloads are provided for all integer types, which are treated as {{c/core|double}}.

===Parameters===
{{par begin}}
{{par|n|the degree of the polynomial, an unsigned integer value}}
{{par|m|the order of the polynomial, an unsigned integer value}}
{{par|x|the argument, a floating-point or integer value}}
{{par end}}

===Return value===
If no errors occur, value of the associated Legendre polynomial {{mathjax-or|1=\(\mathsf{P}_n^m\)|2=P{{su|p=m|b=n}}}} of {{c|x}}, that is {{mathjax-or|1=\((1 - x^2) ^ {m/2} \: \frac{ \mathsf{d} ^ m}{ \mathsf{d}x ^ m} \, \mathsf{P}_n(x)\)|2=(1-x{{su|p=2}}){{su|p=m/2}} {{mfrac|d{{su|p=m}}|dx{{su|p=m}}}}P{{su|b=n}}(x)}}, is returned (where {{mathjax-or|1=\(\mathsf{P}_n(x)\)|2=P{{su|b=n}}(x)}} is the unassociated Legendre polynomial, {{c|std::legendre(n, x)}}).

Note that the [https://mathworld.wolfram.com/Condon-ShortleyPhase.html Condon-Shortley phase term] {{mathjax-or|1=\((-1)^m\)|2=(-1){{su|p=m}}}} is omitted from this definition.

===Error handling===
Errors may be reported as specified in [[cpp/numeric/math/math_errhandling|math_errhandling]]
* If the argument is NaN, NaN is returned and domain error is not reported
* If {{math|{{!}}x{{!}} &gt; 1}}, a domain error may occur
* If {{tt|n}} is greater or equal to 128, the behavior is implementation-defined

===Notes===
{{cpp/numeric/special functions/older impl note}}

An implementation of this function is also [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/sf_poly/legendre.html available in boost.math] as {{tt|boost::math::legendre_p}}, except that the boost.math definition includes the Condon-Shortley phase term.

The first few associated Legendre polynomials are:

{| class="wikitable" style="font-size:95%; text-align:center;"
|-
! Function
! Polynomial
|- style="height:45px;"
| {{nbsp|4}}{{co|1=assoc_legendre(0, 0, x)}}{{nbsp|4}} || 1
|- style="height:45px;"
| {{co|1=assoc_legendre(1, 0, x)}} || {{math|x}}
|- style="height:45px;"
| {{co|1=assoc_legendre(1, 1, x)}} || {{math|(1 - x{{su|p=2}}){{su|p=1/2}}}}
|- style="height:45px;"
| {{co|1=assoc_legendre(2, 0, x)}} || {{math|{{mfrac|1|2}}(3x{{su|p=2}} - 1)}}
|- style="height:45px;"
| {{co|1=assoc_legendre(2, 1, x)}} || {{nbsp|4}}{{math|3x(1 - x{{su|p=2}}){{su|p=1/2}}}}{{nbsp|4}}
|- style="height:45px;"
| {{co|1=assoc_legendre(2, 2, x)}} || {{math|3(1 - x{{su|p=2}})}}
|}

{{cpp/numeric/special functions/additional integer overload note|assoc_legendre}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

double P20(double x)
{
    return 0.5 * (3 * x * x - 1);
}

double P21(double x)
{
    return 3.0 * x * std::sqrt(1 - x * x);
}

double P22(double x)
{
    return 3 * (1 - x * x);
}

int main()
{
    // spot-checks
    std::cout &lt;&lt; std::assoc_legendre(2, 0, 0.5) &lt;&lt; '=' &lt;&lt; P20(0.5) &lt;&lt; '\n'
              &lt;&lt; std::assoc_legendre(2, 1, 0.5) &lt;&lt; '=' &lt;&lt; P21(0.5) &lt;&lt; '\n'
              &lt;&lt; std::assoc_legendre(2, 2, 0.5) &lt;&lt; '=' &lt;&lt; P22(0.5) &lt;&lt; '\n';
}
|output=
-0.125=-0.125
1.29904=1.29904
2.25=2.25
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/special functions/dsc legendre}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/AssociatedLegendrePolynomial.html Weisstein, Eric W. "Associated Legendre Polynomial."] From MathWorld &amp;mdash; A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}