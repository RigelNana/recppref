{{cpp/title|comp_ellint_3|comp_ellint_3f|comp_ellint_3l}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       comp_ellint_3 ( float k, float nu );
double      comp_ellint_3 ( double k, double nu );
long double comp_ellint_3 ( long double k, long double nu );
|since2=c++23|dcl2=
/* floating-point-type */ comp_ellint_3( /* floating-point-type */ k,
                                         /* floating-point-type */ nu );
}}
{{dcl|num=2|since=c++17|
float       comp_ellint_3f( float k, float nu );
}}
{{dcl|num=3|since=c++17|
long double comp_ellint_3l( long double k, long double nu );
}}
{{dcl h|[[#Notes|Additional overloads]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Arithmetic1, class Arithmetic2 &gt;
/* common-floating-point-type */
    comp_ellint_3( Arithmetic1 k, Arithmetic2 nu );
}}
{{dcl end}}

@1-3@ Computes the {{enwiki|Elliptic integral#Complete elliptic integral of the third kind|complete elliptic integral of the third kind}} of the arguments {{c|k}} and {{c|nu}}.{{rev inl|since=c++23| The library provides overloads of {{tt|std::comp_ellint_3}} for all cv-unqualified floating-point types as the type of the parameters {{c|k}} and {{c|nu}}.}}
@A@ Additional overloads are provided for all other combinations of arithmetic types.

===Parameters===
{{par begin}}
{{par|k|elliptic modulus or eccentricity (a floating-point or integer value)}}
{{par|nu|elliptic characteristic (a floating-point or integer value)}}
{{par end}}

===Return value===
If no errors occur, value of the complete elliptic integral of the third kind of {{c|k}} and {{c|nu}}, that is {{c|std::ellint_3(k, nu, π/2)}}, is returned.

===Error handling===
Errors may be reported as specified in {{lc|math_errhandling}}.
* If the argument is NaN, NaN is returned and domain error is not reported
* If {{math|{{!}}k{{!}}&gt;1}}, a domain error may occur

===Notes===
{{cpp/numeric/special functions/older impl note}}

An implementation of this function is also available in [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/ellint/ellint_3.html boost.math].

{{cpp/numeric/special functions/additional overload note|comp_ellint_3}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed
              &lt;&lt; "Π(0.5,0) = " &lt;&lt; std::comp_ellint_3(0.5, 0) &lt;&lt; '\n'
              &lt;&lt; "K(0.5)   = " &lt;&lt; std::comp_ellint_1(0.5) &lt;&lt; '\n'
              &lt;&lt; "Π(0,0)   = " &lt;&lt; std::comp_ellint_3(0, 0) &lt;&lt; '\n'
              &lt;&lt; "π/2      = " &lt;&lt; std::acos(-1) / 2 &lt;&lt; '\n'
              &lt;&lt; "Π(0.5,1) = " &lt;&lt; std::comp_ellint_3(0.5, 1) &lt;&lt; '\n';
}
|output=
Π(0.5,0) = 1.685750
K(0.5)   = 1.685750
Π(0,0)   = 1.570796
π/2      = 1.570796
Π(0.5,1) = inf
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/special_functions/dsc ellint_3}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/EllipticIntegraloftheThirdKind.html Weisstein, Eric W. "Elliptic Integral of the Third Kind."] From MathWorld — A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}