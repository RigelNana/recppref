{{cpp/title|comp_ellint_1|comp_ellint_1f|comp_ellint_1l}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
double      comp_ellint_1 ( double k );
float       comp_ellint_1 ( float k );
long double comp_ellint_1 ( long double k );
|since2=c++23|dcl2=
/* floating-point-type */ comp_ellint_1( /* floating-point-type */ k );
}}
{{dcl|num=2|since=c++17|
float       comp_ellint_1f( float k );
}}
{{dcl|num=3|since=c++17|
long double comp_ellint_1l( long double k );
}}
{{dcl h|[[#Notes|Additional overloads]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Integer &gt;
double      comp_ellint_1 ( Integer k );
}}
{{dcl end}}

@1-3@ Computes the {{enwiki|Elliptic integral#Complete elliptic integral of the first kind|complete elliptic integral of the first kind}} of {{c|k}}.{{rev inl|since=c++23| The library provides overloads of {{tt|std::comp_ellint_1}} for all cv-unqualified floating-point types as the type of the parameter {{c|k}}.}}
@A@ Additional overloads are provided for all integer types, which are treated as {{c/core|double}}.

===Parameters===
{{par begin}}
{{par|k|elliptic modulus or eccentricity (a floating-point or integer value)}}
{{par end}}

===Return value===
If no errors occur, value of the complete elliptic integral of the first kind of {{c|k}}, that is {{c|std::ellint_1(k, π/2)}}, is returned.

===Error handling===
Errors may be reported as specified in {{lc|math_errhandling}}.
* If the argument is NaN, NaN is returned and domain error is not reported.
* If {{math|{{!}}k{{!}}&gt;1}}, a domain error may occur.

===Notes===
{{cpp/numeric/special functions/older impl note}}

An implementation of this function is also [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/ellint/ellint_1.html available in boost.math].

{{cpp/numeric/special functions/additional integer overload note|comp_ellint_1}}

===Example===
{{example
|The {{enwiki|Pendulum (mechanics)#Arbitrary-amplitude period|period of a pendulum}} of length {{math|l}}, given acceleration due to gravity {{math|g}}, and initial angle θ equals {{math|4&amp;sdot;{{mrad|l/g}}&amp;sdot;K(sin(θ/2))}}, where {{math|K}} is {{tt|std::comp_ellint_1}}.
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#include &lt;numbers&gt;
 
int main()
{
    constexpr double π{std::numbers::pi};
 
    std::cout &lt;&lt; "K(0) ≈ " &lt;&lt; std::comp_ellint_1(0) &lt;&lt; '\n'
              &lt;&lt; "π/2 ≈ " &lt;&lt; π / 2 &lt;&lt; '\n'
              &lt;&lt; "K(0.5) ≈ " &lt;&lt; std::comp_ellint_1(0.5) &lt;&lt; '\n'
              &lt;&lt; "F(0.5, π/2) ≈ " &lt;&lt; std::ellint_1(0.5, π / 2) &lt;&lt; '\n'
              &lt;&lt; "The period of a pendulum length 1m at 10° initial angle ≈ "
              &lt;&lt; 4 * std::sqrt(1 / 9.80665) * std::comp_ellint_1(std::sin(π / 18 / 2))
              &lt;&lt; "s,\n" "whereas the linear approximation gives ≈ "
              &lt;&lt; 2 * π * std::sqrt(1 / 9.80665) &lt;&lt; '\n';
}
|output=
K(0) ≈ 1.5708
π/2 ≈ 1.5708
K(0.5) ≈ 1.68575
F(0.5, π/2) ≈ 1.68575
The period of a pendulum length 1 m at 10° initial angle ≈ 2.01024s,
whereas the linear approximation gives ≈ 2.00641
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/special_functions/dsc ellint_1}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/CompleteEllipticIntegraloftheFirstKind.html Weisstein, Eric W. "Complete Elliptic Integral of the First Kind."] From MathWorld — A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}