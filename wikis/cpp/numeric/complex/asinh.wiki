{{cpp/title|asinh{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++11|1=
template&lt; class T &gt; 
complex&lt;T&gt; asinh( const complex&lt;T&gt;&amp; z );
}}

Computes complex arc hyperbolic sine of a complex value {{c|z}} with branch cuts outside the interval {{math|[−i; +i]}} along the imaginary axis.

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par end}}

===Return value===
If no errors occur, the complex arc hyperbolic sine of {{c|z}} is returned, in the range of a strip mathematically unbounded along the real axis and in the interval {{math|[−iπ/2; +iπ/2]}} along the imaginary axis.

===Error handling and special values===
Errors are reported consistent with {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic,
* {{c|std::asinh(std::conj(z)) {{==}} std::conj(std::asinh(z))}}
* {{c|std::asinh(-z) {{==}} -std::asinh(z)}}
* If {{c|z}} is {{tt|(+0,+0)}}, the result is {{tt|(+0,+0)}}
* If {{c|z}} is {{tt|(x,+∞)}} (for any positive finite x), the result is {{tt|(+∞,π/2)}}
* If {{c|z}} is {{tt|(x,NaN)}} (for any finite x), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} may be raised
* If {{c|z}} is {{tt|(+∞,y)}} (for any positive finite y), the result is {{tt|(+∞,+0)}}
* If {{c|z}} is {{tt|(+∞,+∞)}}, the result is {{tt|(+∞,π/4)}}
* If {{c|z}} is {{tt|(+∞,NaN)}}, the result is {{tt|(+∞,NaN)}}
* If {{c|z}} is {{tt|(NaN,+0)}}, the result is {{tt|(NaN,+0)}}
* If {{c|z}} is {{tt|(NaN,y)}} (for any finite nonzero y), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} may be raised
* If {{c|z}} is {{tt|(NaN,+∞)}}, the result is {{tt|(±∞,NaN)}} (the sign of the real part is unspecified)
* If {{c|z}} is {{tt|(NaN,NaN)}}, the result is {{tt|(NaN,NaN)}}

===Notes===
Although the C++ standard names this function "complex arc hyperbolic sine", the inverse functions of the hyperbolic functions are the area functions. Their argument is the area of a hyperbolic sector, not an arc. The correct name is "complex inverse hyperbolic sine", and, less common, "complex area hyperbolic sine".

Inverse hyperbolic sine is a multivalued function and requires a branch cut on the complex plane. The branch cut is conventionally placed at the line segments {{math|(-''i''∞,-''i'')}} and {{math|(''i'',''i''∞)}} of the imaginary axis.

The mathematical definition of the principal value of the inverse hyperbolic sine is {{math|asinh z {{=}} ln(z + {{mrad|1+z{{su|p=2}}}})}}.

For any {{c|z}}, {{math|asinh(z) {{=}} {{mfrac|asin(iz)|i}}}}.

===Example===
{{example|
|code=
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z1(0.0, -2.0);
    std::cout &lt;&lt; "asinh" &lt;&lt; z1 &lt;&lt; " = " &lt;&lt; std::asinh(z1) &lt;&lt; '\n';

    std::complex&lt;double&gt; z2(-0.0, -2);
    std::cout &lt;&lt; "asinh" &lt;&lt; z2 &lt;&lt; " (the other side of the cut) = "
              &lt;&lt; std::asinh(z2) &lt;&lt; '\n';

    // for any z, asinh(z) = asin(iz) / i
    std::complex&lt;double&gt; z3(1.0, 2.0);
    std::complex&lt;double&gt; i(0.0, 1.0);
    std::cout &lt;&lt; "asinh" &lt;&lt; z3 &lt;&lt; " = " &lt;&lt; std::asinh(z3) &lt;&lt; '\n'
              &lt;&lt; "asin" &lt;&lt; z3 * i &lt;&lt; " / i = " &lt;&lt; std::asin(z3 * i) / i &lt;&lt; '\n';
}
|output=
asinh(0.000000,-2.000000) = (1.316958,-1.570796)
asinh(-0.000000,-2.000000) (the other side of the cut) = (-1.316958,-1.570796)
asinh(1.000000,2.000000) = (1.469352,1.063440)
asin(-2.000000,1.000000) / i = (1.469352,1.063440)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc acosh}}
{{dsc inc|cpp/numeric/complex/dsc atanh}}
{{dsc inc|cpp/numeric/complex/dsc sinh}}
{{dsc inc|cpp/numeric/math/dsc asinh}}
{{dsc see c|c/numeric/complex/casinh}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}