{{cpp/title|atanh{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++11|1=
template&lt; class T &gt; 
complex&lt;T&gt; atanh( const complex&lt;T&gt;&amp; z );
}}

Computes the complex arc hyperbolic tangent of {{c|z}} with branch cuts outside the interval {{math|[−1; +1]}} along the real axis.

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par end}}

===Return value===
If no errors occur, the complex arc hyperbolic tangent of {{c|z}} is returned, in the range of a half-strip mathematically unbounded along the real axis and in the interval {{math|[−iπ/2; +iπ/2]}} along the imaginary axis.

===Error handling and special values===
Errors are reported consistent with {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic,
* {{c|std::atanh(std::conj(z)) {{==}} std::conj(std::atanh(z))}}
* {{c|std::atanh(-z) {{==}} -std::atanh(z)}}
* If {{c|z}} is {{tt|(+0,+0)}}, the result is {{tt|(+0,+0)}}
* If {{c|z}} is {{tt|(+0,NaN)}}, the result is {{tt|(+0,NaN)}}
* If {{c|z}} is {{tt|(+1,+0)}}, the result is {{tt|(+∞,+0)}} and {{lc|FE_DIVBYZERO}} is raised
* If {{c|z}} is {{tt|(x,+∞)}} (for any finite positive x), the result is {{tt|(+0,π/2)}}
* If {{c|z}} is {{tt|(x,NaN)}} (for any finite nonzero x), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} may be raised
* If {{c|z}} is {{tt|(+∞,y)}} (for any finite positive y), the result is {{tt|(+0,π/2)}}
* If {{c|z}} is {{tt|(+∞,+∞)}}, the result is {{tt|(+0,π/2)}}
* If {{c|z}} is {{tt|(+∞,NaN)}}, the result is {{tt|(+0,NaN)}}
* If {{c|z}} is {{tt|(NaN,y)}} (for any finite y), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} may be raised
* If {{c|z}} is {{tt|(NaN,+∞)}}, the result is {{tt|(±0,π/2)}} (the sign of the real part is unspecified)
* If {{c|z}} is {{tt|(NaN,NaN)}}, the result is {{tt|(NaN,NaN)}}

===Notes===
Although the C++ standard names this function "complex arc hyperbolic tangent", the inverse functions of the hyperbolic functions are the area functions. Their argument is the area of a hyperbolic sector, not an arc. The correct name is "complex inverse hyperbolic tangent", and, less common, "complex area hyperbolic tangent".

Inverse hyperbolic tangent is a multivalued function and requires a branch cut on the complex plane. The branch cut is conventionally placed at the line segments {{math|(-∞,-1]}} and {{math|[+1,+∞)}} of the real axis.

The mathematical definition of the principal value of the inverse hyperbolic tangent is {{math|1=atanh z = {{mfrac|ln(1+z) - ln(1-z)|2}}}}.&lt;br&gt;

For any {{c|z}}, {{math|1=atanh(z) = {{mfrac|atan(iz)|i}}}}.

===Example===
{{example|
|code=
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z1(2.0, 0.0);
    std::cout &lt;&lt; "atanh" &lt;&lt; z1 &lt;&lt; " = " &lt;&lt; std::atanh(z1) &lt;&lt; '\n';

    std::complex&lt;double&gt; z2(2.0, -0.0);
    std::cout &lt;&lt; "atanh" &lt;&lt; z2 &lt;&lt; " (the other side of the cut) = "
              &lt;&lt; std::atanh(z2) &lt;&lt; '\n';

    // for any z, atanh(z) = atanh(iz) / i
    std::complex&lt;double&gt; z3(1.0, 2.0);
    std::complex&lt;double&gt; i(0.0, 1.0);
    std::cout &lt;&lt; "atanh" &lt;&lt; z3 &lt;&lt; " = " &lt;&lt; std::atanh(z3) &lt;&lt; '\n'
              &lt;&lt; "atan" &lt;&lt; z3 * i &lt;&lt; " / i = " &lt;&lt; std::atan(z3 * i) / i &lt;&lt; '\n';
}
|output=
atanh(2.000000,0.000000) = (0.549306,1.570796)
atanh(2.000000,-0.000000) (the other side of the cut) = (0.549306,-1.570796)
atanh(1.000000,2.000000) = (0.173287,1.178097)
atan(-2.000000,1.000000) / i = (0.173287,1.178097)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc asinh}}
{{dsc inc|cpp/numeric/complex/dsc acosh}}
{{dsc inc|cpp/numeric/complex/dsc tanh}}
{{dsc inc|cpp/numeric/math/dsc atanh}}
{{dsc see c|c/numeric/complex/catanh}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}