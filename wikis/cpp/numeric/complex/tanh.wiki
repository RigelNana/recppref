{{cpp/title|tanh{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++11|1=
template&lt; class T &gt; 
complex&lt;T&gt; tanh( const complex&lt;T&gt;&amp; z );
}}

Computes complex hyperbolic tangent of a complex value {{c|z}}. 

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par end}}

===Return value===
If no errors occur, complex hyperbolic tangent of {{c|z}} is returned.

===Error handling and special values===
Errors are reported consistent with {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic,
* {{c|std::tanh(std::conj(z)) {{==}} std::conj(std::tanh(z))}}.
* {{c|std::tanh(-z) {{==}} -std::tanh(z)}}.
* If {{c|z}} is {{tt|(+0,+0)}}, the result is {{tt|(+0,+0)}}.
* If {{c|z}} is {{tt|(x,+∞)}} (for any&lt;ref&gt;per {{stddoc|n1892.htm#dr_471|C11 DR471|lang=c}}, this only holds for non-zero x. If {{tt|z}} is {{tt|(0,∞)}}, the result should be {{tt|(0,NaN)}}.&lt;/ref&gt; finite x), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} is raised.
* If {{c|z}} is {{tt|(x,NaN)}} (for any&lt;ref&gt;per {{stddoc|n1892.htm#dr_471|C11 DR471|lang=c}}, this only holds for non-zero x. If {{tt|z}} is {{tt|(0,NaN)}}, the result should be {{tt|(0,NaN)}}.&lt;/ref&gt; finite x), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} may be raised.
* If {{c|z}} is {{tt|(+∞,y)}} (for any finite positive y), the result is {{tt|(1,+0)}}.
* If {{c|z}} is {{tt|(+∞,+∞)}}, the result is {{tt|(1,±0)}} (the sign of the imaginary part is unspecified).
* If {{c|z}} is {{tt|(+∞,NaN)}}, the result is {{tt|(1,±0)}} (the sign of the imaginary part is unspecified).
* If {{c|z}} is {{tt|(NaN,+0)}}, the result is {{tt|(NaN,+0)}}.
* If {{c|z}} is {{tt|(NaN,y)}} (for any non-zero y), the result is {{tt|(NaN,NaN)}} and {{lc|FE_INVALID}} may be raised.
* If {{c|z}} is {{tt|(NaN,NaN)}}, the result is {{tt|(NaN,NaN)}}.
&lt;references/&gt;

===Notes===
Mathematical definition of hyperbolic tangent is {{math|1=tanh z = {{mfrac|e{{su|p=z}}-e{{su|p=-z}}|e{{su|p=z}}+e{{su|p=-z}}}}}}.

Hyperbolic tangent is an analytical function on the complex plane and has no branch cuts. It is periodic with respect to the imaginary component, with period &amp;pi;i, and has poles of the first order along the imaginary line, at coordinates {{math|(0, π(1/2 + n))}}. However no common floating-point representation is able to represent {{math|π/2}} exactly, thus there is no value of the argument for which a pole error occurs.

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z(1.0, 0.0); // behaves like real tanh along the real line
    std::cout &lt;&lt; "tanh" &lt;&lt; z &lt;&lt; " = " &lt;&lt; std::tanh(z)
              &lt;&lt; " (tanh(1) = " &lt;&lt; std::tanh(1) &lt;&lt; ")\n";

    std::complex&lt;double&gt; z2(0.0, 1.0); // behaves like tangent along the imaginary line
    std::cout &lt;&lt; "tanh" &lt;&lt; z2 &lt;&lt; " = " &lt;&lt; std::tanh(z2)
              &lt;&lt; " ( tan(1) = " &lt;&lt; std::tan(1) &lt;&lt; ")\n";
}
|output=
tanh(1.000000,0.000000) = (0.761594,0.000000) (tanh(1) = 0.761594)
tanh(0.000000,1.000000) = (0.000000,1.557408) ( tan(1) = 1.557408)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc sinh}}
{{dsc inc|cpp/numeric/complex/dsc cosh}}
{{dsc inc|cpp/numeric/complex/dsc atanh}}
{{dsc inc|cpp/numeric/math/dsc tanh}}
{{dsc inc|cpp/numeric/valarray/dsc tanh}}
{{dsc see c|c/numeric/complex/ctanh}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}