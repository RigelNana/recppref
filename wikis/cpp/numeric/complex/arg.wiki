{{cpp/title|arg{{petty|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{dcl begin}}
{{dcl header|complex}}
{{dcl|num=1|1=
template&lt; class T &gt; 
T           arg( const std::complex&lt;T&gt;&amp; z );
}}
{{dcl h|[[#Notes|Additional overloads]] {{mark since c++11}}}}
{{dcl header|complex}}
{{dcl rev multi|num=A|dcl1=
float       arg( float f );
double      arg( double f );
long double arg( long double f );
|since2=c++23|dcl2=
template&lt; class FloatingPoint &gt; 
FloatingPoint
            arg( FloatingPoint f );
}}
{{dcl|num=B|1=
template&lt; class Integer &gt; 
double      arg( Integer i );
}}
{{dcl end}}

@1@ Calculates the phase angle (in radians) of the complex number {{c|z}}.

{{rrev|since=c++11|
@A,B@ Additional overloads are provided for all integer and floating-point types, which are treated as complex numbers with zero imaginary component.
}}

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par|f|floating-point value}}
{{par|i|integer value}}
{{par end}}

===Return value===
@1@ {{c|std::atan2(std::imag(z), std::real(z))}}. If no errors occur, this is the phase angle of {{c|z}} in the interval {{math|[−π; π]}}.
@A@ Zero if {{c|f}} is positive or +0, {{math|π}} if {{c|f}} is negative or -0, NaN otherwise.
@B@ Zero if {{c|i}} is non-negative, {{math|π}} if it is negative.

===Notes===
{{cpp/numeric/complex/additional overload note|arg}}

===Example===
{{example
|code=
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main() 
{
    std::complex&lt;double&gt; z1(1, 0);
    std::complex&lt;double&gt; z2(0, 0);
    std::complex&lt;double&gt; z3(0, 1);
    std::complex&lt;double&gt; z4(-1, 0);
    std::complex&lt;double&gt; z5(-1, -0.0);
    double f = 1.;
    int i = -1;

    std::cout &lt;&lt; "phase angle of " &lt;&lt; z1 &lt;&lt; " is " &lt;&lt; std::arg(z1) &lt;&lt; '\n'
              &lt;&lt; "phase angle of " &lt;&lt; z2 &lt;&lt; " is " &lt;&lt; std::arg(z2) &lt;&lt; '\n'
              &lt;&lt; "phase angle of " &lt;&lt; z3 &lt;&lt; " is " &lt;&lt; std::arg(z3) &lt;&lt; '\n'
              &lt;&lt; "phase angle of " &lt;&lt; z4 &lt;&lt; " is " &lt;&lt; std::arg(z4) &lt;&lt; '\n'
              &lt;&lt; "phase angle of " &lt;&lt; z5 &lt;&lt; " is " &lt;&lt; std::arg(z5) &lt;&lt; " "
                 "(the other side of the cut)\n"
              &lt;&lt; "phase angle of " &lt;&lt; f &lt;&lt; " is " &lt;&lt; std::arg(f) &lt;&lt; '\n'
              &lt;&lt; "phase angle of " &lt;&lt; i &lt;&lt; " is " &lt;&lt; std::arg(i) &lt;&lt; '\n';

}
|output=
phase angle of (1,0) is 0
phase angle of (0,0) is 0
phase angle of (0,1) is 1.5708
phase angle of (-1,0) is 3.14159
phase angle of (-1,-0) is -3.14159 (the other side of the cut)
phase angle of 1 is 0
phase angle of -1 is 3.14159
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc abs}}
{{dsc inc|cpp/numeric/complex/dsc polar}}
{{dsc inc|cpp/numeric/math/dsc atan2}}
{{dsc inc|cpp/numeric/valarray/dsc atan2}}
{{dsc see c|c/numeric/complex/carg}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}