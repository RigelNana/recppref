{{cpp/title|proj{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{dcl begin}}
{{dcl header|complex}}
{{dcl|num=1|since=c++11|1=
template&lt; class T &gt; 
std::complex&lt;T&gt; proj( const std::complex&lt;T&gt;&amp; z );
}}
{{dcl h|[[#Notes|Additional overloads]] {{mark since c++11}}}}
{{dcl header|complex}}
{{dcl rev multi|num=A|dcl1=
std::complex&lt;float&gt;       proj( float f );
std::complex&lt;double&gt;      proj( double f );
std::complex&lt;long double&gt; proj( long double f );
|since2=c++23|dcl2=
template&lt; class FloatingPoint &gt;
std::complex&lt;FloatingPoint&gt; proj( FloatingPoint f );
}}
{{dcl|num=B|1=
template&lt; class Integer &gt;
std::complex&lt;double&gt; proj( Integer i );
}}
{{dcl end}}

@1@ Returns the projection of the complex number {{c|z}} onto the {{enwiki|Riemann sphere}}.

@@ For most {{c|z}}, {{c|1=std::proj(z) == z}}, but all complex infinities, even the numbers where one component is infinite and the other is NaN, become positive real infinity, {{c|(INFINITY, 0.0)}} or {{c|(INFINITY, -0.0)}}. The sign of the imaginary (zero) component is the sign of {{c|std::imag(z)}}. 

@A,B@ Additional overloads are provided for all integer and floating-point types, which are treated as complex numbers with positive zero imaginary component.

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par|f|floating-point value}}
{{par|i|integer value}}
{{par end}}

===Return value===
@1@ The projection of {{c|z}} onto the Riemann sphere.
@A@ The projection of {{c|std::complex(f)}} onto the Riemann sphere.
@B@ The projection of {{c|std::complex&lt;double&gt;(i)}} onto the Riemann sphere.

===Notes===
The {{lc|proj}} function helps model the Riemann sphere by mapping all infinities to one (give or take the sign of the imaginary zero), and should be used just before any operation, especially comparisons, that might give spurious results for any of the other infinities.

{{cpp/numeric/complex/additional overload note|proj}}

===Example===
{{example
|code=
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::complex&lt;double&gt; c1(1, 2);
    std::cout &lt;&lt; "proj" &lt;&lt; c1 &lt;&lt; " = " &lt;&lt; std::proj(c1) &lt;&lt; '\n';
    
    std::complex&lt;double&gt; c2(INFINITY, -1);
    std::cout &lt;&lt; "proj" &lt;&lt; c2 &lt;&lt; " = " &lt;&lt; std::proj(c2) &lt;&lt; '\n';
    
    std::complex&lt;double&gt; c3(0, -INFINITY);
    std::cout &lt;&lt; "proj" &lt;&lt; c3 &lt;&lt; " = " &lt;&lt; std::proj(c3) &lt;&lt; '\n';
}
|output=
proj(1,2) = (1,2)
proj(inf,-1) = (inf,-0)
proj(0,-inf) = (inf,-0)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc abs}}
{{dsc inc|cpp/numeric/complex/dsc norm}}
{{dsc inc|cpp/numeric/complex/dsc polar}}
{{dsc see c|c/numeric/complex/cproj}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}