{{cpp/title|log10{{petty|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|1=
template&lt; class T &gt;
std::complex&lt;T&gt; log10( const std::complex&lt;T&gt;&amp; z );
}}

Computes complex common (base {{c|10}}) logarithm of a complex value {{c|z}} with a branch cut along the negative real axis.

The behavior of this function is equivalent to {{tt|{{rlp|log|std::log}}(z) / [[cpp/numeric/math/log|std::log]](T(10))}}.

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par end}}

===Return value===
Complex common logarithm of {{c|z}}.

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::complex&lt;double&gt; z(0.0, 1.0); // r = 0, θ = pi / 2
    std::cout &lt;&lt; "2 * log10" &lt;&lt; z &lt;&lt; " = " &lt;&lt; 2.0 * std::log10(z) &lt;&lt; '\n';

    std::complex&lt;double&gt; z2(sqrt(2.0) / 2, sqrt(2.0) / 2); // r = 1, θ = pi / 4
    std::cout &lt;&lt; "4 * log10" &lt;&lt; z2 &lt;&lt; " = " &lt;&lt; 4.0 * std::log10(z2) &lt;&lt; '\n';

    std::complex&lt;double&gt; z3(-100.0, 0.0); // r = 100, θ = pi
    std::cout &lt;&lt; "log10" &lt;&lt; z3 &lt;&lt; " = " &lt;&lt; std::log10(z3) &lt;&lt; '\n';
    std::complex&lt;double&gt; z4(-100.0, -0.0); // the other side of the cut
    std::cout &lt;&lt; "log10" &lt;&lt; z4 &lt;&lt; " = " &lt;&lt; std::log10(z4) &lt;&lt; " "
                 "(the other side of the cut)\n"
                 "(note: pi / log(10) = " &lt;&lt; std::acos(-1.0) / std::log(10.0) &lt;&lt; ")\n";
}
|p=true
|output=
2 * log10(0,1) = (0,1.36438)
4 * log10(0.707107,0.707107) = (0,1.36438)
log10(-100,0) = (2,1.36438)
log10(-100,-0) = (2,-1.36438) (the other side of the cut)
(note: pi / log(10) = 1.36438)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc log}}
{{dsc inc|cpp/numeric/math/dsc log10}}
{{dsc inc|cpp/numeric/valarray/dsc log10}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}