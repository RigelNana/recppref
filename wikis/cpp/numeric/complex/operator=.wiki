{{cpp/numeric/complex/title|operator{{=}}}}
{{cpp/numeric/complex/navbar}}

{{dcl begin}}
{{dcl h|All specializations}}
{{dcl rev multi|num=1|until1=c++20|dcl1=
complex&amp; operator=( const complex&amp; cx );
|since2=c++20|dcl2=
constexpr complex&amp; operator=( const complex&amp; cx );
}}
{{dcl rev multi|num=2|until1=c++20|dcl1=
template&lt; class X &gt;
complex&amp; operator=( const std::complex&lt;X&gt;&amp; cx );
|since2=c++20|dcl2=
template&lt; class X &gt;
constexpr complex&amp; operator=( const std::complex&lt;X&gt;&amp; cx );
}}

{{dcl h|Primary template {{tt|complex&lt;T&gt;}}}}
{{dcl rev multi|num=3|until1=c++20|dcl1=
complex&amp; operator=( const T&amp; x );
|since2=c++20|dcl2=
constexpr complex&amp; operator=( const T&amp; x );
}}
{{dcl h|Specializations for standard floating-point types {{tt|complex&lt;F&gt;}} {{mark until c++23}}}}
{{dcl rev multi|num=3|until1=c++20|dcl1=
complex&amp; operator=( F x );
|since2=c++20|until2=c++23|dcl2=
constexpr complex&amp; operator=( F x );
}}
{{dcl end}}

Assigns new values to the contents.

@1,2@ Assigns {{lc|real()|cx.real()}} and {{lc|imag()|cx.imag()}} to the real and the imaginary parts of the complex number respectively. {{rev inl|since=c++23|The copy assignment operator {{v|1}} is [[cpp/language/copy assignment#Trivial copy assignment operator|trivial]] when {{tt|T}} is a floating-point type.}}

@3@ Assigns {{c|x}} to the real part of the complex number. Imaginary part is set to zero.

===Parameters===
{{par begin}}
{{par|x|value to assign}}
{{par|cx|complex value to assign}}
{{par end}}

===Return value===
{{c|*this}}

===Notes===
The copy assignment operator is required to be [[cpp/language/copy assignment#Trivial copy assignment operator|trivial]] since C++23, but implementations generally make it trivial in all modes.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3935|std=C++98|before=the description of overload {{v|2}} was missing|after=added}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc complex}}
{{dsc inc|cpp/numeric/dsc operator""i}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}