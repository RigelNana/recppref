{{cpp/title|polar&lt;small&gt;(std::complex)&lt;/small&gt;}}
{{cpp/numeric/complex/navbar}}
{{dcl begin}}
{{dcl header|complex}}
{{dcl|1=
template&lt; class T &gt; 
std::complex&lt;T&gt; polar( const T&amp; r, const T&amp; theta = T() );
}}
{{dcl end}}

Returns a complex number with magnitude {{c|r}} and phase angle {{c|theta}}.

The behavior is undefined if {{c|r}} is negative or NaN, or if {{c|theta}} is infinite.

===Parameters===
{{par begin}}
{{par|r|magnitude}}
{{par|theta|phase angle}}
{{par end}}

===Return value===
A complex number determined by {{c|r}} and {{c|theta}}.

===Notes===
{{c|std::polar(r, theta)}} is equivalent to any of the following expressions:
* {{c|r * std::exp(theta * 1i)}}
* {{c|r * (cos(theta) + sin(theta) * 1i)}}
* {{c|std::complex(r * cos(theta), r * sin(theta))}}.
Using polar instead of exp can be about '''4.5x''' faster in vectorized loops.

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;numbers&gt;
using namespace std::complex_literals;

int main()
{
    constexpr auto π_2{std::numbers::pi / 2.0};
    constexpr auto mag{1.0};

    std::cout 
        &lt;&lt; std::fixed &lt;&lt; std::showpos &lt;&lt; std::setprecision(1)
        &lt;&lt; "   θ: │ polar:      │ exp:        │ complex:    │ trig:\n";
    for (int n{}; n != 4; ++n)
    {
        const auto θ{n * π_2};
        std::cout &lt;&lt; std::setw(4) &lt;&lt; 90 * n &lt;&lt; "° │ "
                  &lt;&lt; std::polar(mag, θ) &lt;&lt; " │ "
                  &lt;&lt; mag * std::exp(θ * 1.0i) &lt;&lt; " │ "
                  &lt;&lt; std::complex(mag * cos(θ), mag * sin(θ)) &lt;&lt; " │ "
                  &lt;&lt; mag * (cos(θ) + 1.0i * sin(θ)) &lt;&lt; '\n';
    }
}
|output=&lt;nowiki/&gt;
   θ: │ polar:      │ exp:        │ complex:    │ trig:
  +0° │ (+1.0,+0.0) │ (+1.0,+0.0) │ (+1.0,+0.0) │ (+1.0,+0.0)
 +90° │ (+0.0,+1.0) │ (+0.0,+1.0) │ (+0.0,+1.0) │ (+0.0,+1.0)
+180° │ (-1.0,+0.0) │ (-1.0,+0.0) │ (-1.0,+0.0) │ (-1.0,+0.0)
+270° │ (-0.0,-1.0) │ (-0.0,-1.0) │ (-0.0,-1.0) │ (-0.0,-1.0)
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|std=C++98|dr=2459|before=behavior unclear for some inputs|after=made undefined}}
{{dr list item|wg=lwg|std=C++98|dr=2870|before=default value of parameter {{c|theta}} not dependent|after=made dependent}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc abs}}
{{dsc inc|cpp/numeric/complex/dsc arg}}
{{dsc inc|cpp/numeric/complex/dsc exp}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}