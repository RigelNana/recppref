{{cpp/title|tan{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|1=
template&lt; class T &gt; 
complex&lt;T&gt; tan( const complex&lt;T&gt;&amp; z );
}}

Computes complex tangent of a complex value {{c|z}}.

===Parameters===
{{par begin}}
{{par|z|complex value}}
{{par end}}

===Return value===
If no errors occur, the complex tangent of {{c|z}} is returned.

Errors and special cases are handled as if the operation is implemented by {{box|{{c/core|-i * }}{{nbspt}}{{ltt std|cpp/numeric/complex/tanh}}{{c/core|(i * z)}}}}, where {{tt|i}} is the imaginary unit.

===Notes===
Tangent is an analytical function on the complex plain and has no branch cuts. It is periodic with respect to the real component, with period &amp;pi;i, and has poles of the first order along the real line, at coordinates {{math|(π(1/2 + n), 0)}}. However no common floating-point representation is able to represent π/2 exactly, thus there is no value of the argument for which a pole error occurs.

Mathematical definition of the tangent is {{math|tan z {{=}} {{mfrac|i(e{{su|p=-iz}}-e{{su|p=iz}})|e{{su|p=-iz}}+e{{su|p=iz}}}}}}.

===Example===
{{example|
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z(1.0, 0.0); // behaves like real tangent along the real line
    std::cout &lt;&lt; "tan" &lt;&lt; z &lt;&lt; " = " &lt;&lt; std::tan(z)
              &lt;&lt; " ( tan(1) = " &lt;&lt; std::tan(1) &lt;&lt; ")\n";

    std::complex&lt;double&gt; z2(0.0, 1.0); // behaves like tanh along the imaginary line
    std::cout &lt;&lt; "tan" &lt;&lt; z2 &lt;&lt; " = " &lt;&lt; std::tan(z2)
              &lt;&lt; " (tanh(1) = " &lt;&lt; std::tanh(1) &lt;&lt; ")\n";
}
|output=
tan(1.000000,0.000000) = (1.557408,0.000000) ( tan(1) = 1.557408)
tan(0.000000,1.000000) = (0.000000,0.761594) (tanh(1) = 0.761594)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc sin}}
{{dsc inc|cpp/numeric/complex/dsc cos}}
{{dsc inc|cpp/numeric/complex/dsc atan}}
{{dsc inc|cpp/numeric/math/dsc tan}}
{{dsc inc|cpp/numeric/valarray/dsc tan}}
{{dsc see c|c/numeric/complex/ctan}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}