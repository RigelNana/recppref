{{cpp/title|tan{{small|(std::valarray)}}}}
{{cpp/numeric/valarray/navbar}}
{{ddcl|header=valarray|1=
template&lt; class T &gt;
valarray&lt;T&gt; tan( const valarray&lt;T&gt;&amp; va );
}}

For each element in {{c|va}} computes tangent of the value of the element. 

===Parameters===
{{par begin}}
{{par|va|value array to apply the operation to}}
{{par end}}

===Return value===
Value array containing tangents of the values in {{c|va}}.

===Notes===
{{cpp/numeric/valarray/notes unq|tan}}

{{cpp/numeric/valarray/notes ret|tan}}

===Possible implementation===
{{cpp/numeric/valarray/impl|tan}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#include &lt;valarray&gt;

auto show = [](char const* title, const std::valarray&lt;double&gt;&amp; va)
{
    std::cout &lt;&lt; title &lt;&lt; " :";
    for (auto x : va)
        std::cout &lt;&lt; "  " &lt;&lt; std::fixed &lt;&lt; x;
    std::cout &lt;&lt; '\n';
};

int main()
{
    const std::valarray&lt;double&gt; x = {.0, .1, .2, .3};
    const std::valarray&lt;double&gt; y = std::tan(x);
    const std::valarray&lt;double&gt; z = std::atan(y);

    show("x          ", x);
    show("y = tan(x) ", y);
    show("z = atan(y)", z);
}
|output=
x           :  0.000000  0.100000  0.200000  0.300000
y = tan(x)  :  0.000000  0.100335  0.202710  0.309336
z = atan(y) :  0.000000  0.100000  0.200000  0.300000
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc sin}}
{{dsc inc|cpp/numeric/valarray/dsc cos}}
{{dsc inc|cpp/numeric/valarray/dsc atan}}
{{dsc inc|cpp/numeric/math/dsc tan}}
{{dsc inc|cpp/numeric/complex/dsc tan}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}