{{cpp/title|log{{small|(std::valarray)}}}}
{{cpp/numeric/valarray/navbar}}
{{ddcl|header=valarray|1=
template&lt; class T &gt;
valarray&lt;T&gt; log( const valarray&lt;T&gt;&amp; va );
}}

For each element in {{c|va}} computes natural logarithm of the value of the element. 

===Parameters===
{{par begin}}
{{par|va|value array to apply the operation to}}
{{par end}}

===Return value===
Value array containing natural logarithms of the values in {{c|va}}.

===Notes===
{{cpp/numeric/valarray/notes unq|log}}

{{cpp/numeric/valarray/notes ret|log}}

===Possible implementation===
{{cpp/numeric/valarray/impl|log}}

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;valarray&gt;

void show(char const* title, const std::valarray&lt;double&gt;&amp; va)
{
    std::cout &lt;&lt; title &lt;&lt; " :" &lt;&lt; std::right &lt;&lt; std::fixed;
    for (double x : va)
        std::cout &lt;&lt; std::setw(10) &lt;&lt; x;
    std::cout &lt;&lt; '\n';
}

int main()
{
    const std::valarray&lt;double&gt; n{0.0, 1.0, 2.0, 3.0};
    const std::valarray&lt;double&gt; exp_n{std::exp(n)};
    const std::valarray&lt;double&gt; log_exp_n{std::log(exp_n)};

    show("n      ", n);
    show("eⁿ     ", exp_n);
    show("log(eⁿ)", log_exp_n);
}
|output=
n       :  0.000000  1.000000  2.000000  3.000000
eⁿ      :  1.000000  2.718282  7.389056 20.085537
log(eⁿ) :  0.000000  1.000000  2.000000  3.000000
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc log10}}
{{dsc inc|cpp/numeric/valarray/dsc exp}}
{{dsc inc|cpp/numeric/math/dsc log}}
{{dsc inc|cpp/numeric/complex/dsc log}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}