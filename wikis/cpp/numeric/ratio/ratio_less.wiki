{{cpp/title|ratio_less}}
{{cpp/numeric/ratio/navbar}}
{{ddcl|header=ratio|since=c++11|1=
template&lt; class R1, class R2 &gt;
struct ratio_less : std::integral_constant&lt;bool, /* see below */&gt; { };
}}

If the ratio {{tt|R1}} is less than the ratio {{tt|R2}}, provides the member constant {{c|value}} equal {{c|true}}. Otherwise, {{c|value}} is {{c|false}}.

===Helper variable template===
{{ddcl|since=c++17|1=
template&lt; class R1, class R2 &gt;
constexpr bool ratio_less_v = ratio_less&lt;R1, R2&gt;::value;
}}

{{cpp/types/integral_constant/inherit|{{c|1=R1::num * R2::den &lt; R2::num * R1::den}}, or equivalent expression that avoids overflow}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ratio&gt;
 
int main()
{
    using x = std::ratio&lt;69, 90&gt;;
    using y = std::ratio&lt;70, 90&gt;;

    if constexpr (std::ratio_less_v&lt;x, y&gt;)
        std::cout &lt;&lt; x::num &lt;&lt; '/' &lt;&lt; x::den &lt;&lt; " &lt; "
                  &lt;&lt; y::num &lt;&lt; '/' &lt;&lt; y::den &lt;&lt; '\n';
}
|output=
23/30 &lt; 7/9
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/ratio/dsc ratio_greater}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}