{{cpp/title|ratio_greater_equal}}
{{cpp/numeric/ratio/navbar}}
{{ddcl|header=ratio|since=c++11|1=
template&lt; class R1, class R2 &gt;
struct ratio_greater_equal : std::integral_constant&lt;bool, /* see below */&gt; { };
}}

If the ratio {{tt|R1}} is greater than or equal to the ratio {{tt|R2}}, provides the member constant {{c|value}} equal {{c|true}}. Otherwise, {{c|value}} is {{c|false}}.

===Helper variable template===
{{ddcl|since=c++17|1=
template&lt; class R1, class R2 &gt;
constexpr bool ratio_greater_equal_v = ratio_greater_equal&lt;R1, R2&gt;::value;
}}

{{cpp/types/integral_constant/inherit|{{c|1=R1::num * R2::den &gt;= R2::num * R1::den}}, or equivalent expression that avoids overflow}}

===Example===
{{example
|code=
#include &lt;ratio&gt;
 
int main()
{
    static_assert(std::ratio_greater_equal&lt;
        std::ratio&lt;2, 3&gt;,
        std::ratio&lt;2, 3&gt;&gt;::value, "2/3 &gt;= 2/3");

    // since C++17
    static_assert(std::ratio_greater_equal_v&lt;
        std::ratio&lt;999'998, 999'999&gt;,
        std::ratio&lt;999'997, 999'998&gt;&gt;);
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/ratio/dsc ratio_equal}}
{{dsc inc|cpp/numeric/ratio/dsc ratio_less}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}