{{cpp/title|trunc|truncf|truncl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=trunc
|param1=num
|constexpr_since=23
|desc=Computes the nearest integer not greater in magnitude than {{c|num}}.
}}

===Parameters===
{{par begin}}
{{par|num|floating-point or integer value}}
{{par end}}

===Return value===
If no errors occur, the nearest integer value not greater in magnitude than {{c|num}} (in other words, {{c|num}} rounded towards zero) is returned.

{{plot|left=Return value|bottom={{c|num}}|math-trunc.svg}}

===Error handling===
Errors are reported as specified in {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* The current [[cpp/numeric/fenv/FE_round|rounding mode]] has no effect.
* If {{c|num}} is ±∞, it is returned, unmodified.
* If {{c|num}} is ±0, it is returned, unmodified.
* If {{c|num}} is NaN, NaN is returned.

===Notes===
{{lc|FE_INEXACT}} may be (but isn't required to be) raised when truncating a non-integer finite value.

The largest representable floating-point values are exact integers in all standard floating-point formats, so this function never overflows on its own; however the result may overflow any integer type (including {{lc|std::intmax_t}}), when stored in an integer variable.

The {{lt|cpp/language/implicit conversion}} from floating-point to integral types also rounds towards zero, but is limited to the values that can be represented by the target type.

{{cpp/numeric/math/additional integer overload note|trunc}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;initializer_list&gt;
#include &lt;iostream&gt;

int main()
{
    const auto data = std::initializer_list&lt;double&gt;
    {
        +2.7, -2.9, +0.7, -0.9, +0.0, 0.0, -INFINITY, +INFINITY, -NAN, +NAN
    };

    std::cout &lt;&lt; std::showpos;
    for (double const x : data)
        std::cout &lt;&lt; "trunc(" &lt;&lt; x &lt;&lt; ") == " &lt;&lt; std::trunc(x) &lt;&lt; '\n';
}
|p=true
|output=
trunc(+2.7) == +2
trunc(-2.9) == -2
trunc(+0.7) == +0
trunc(-0.9) == -0
trunc(+0) == +0
trunc(+0) == +0
trunc(-inf) == -inf
trunc(+inf) == +inf
trunc(-nan) == -nan
trunc(+nan) == +nan
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc floor}}
{{dsc inc|cpp/numeric/math/dsc ceil}}
{{dsc inc|cpp/numeric/math/dsc round}}
{{dsc see c|c/numeric/math/trunc}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}