{{cpp/title|fdim|fdimf|fdiml}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=fdim
|param1=x
|param2=y
|constexpr_since=23
|desc=Returns the positive difference between {{c|x}} and {{c|y}}, that is, if {{c|x &gt; y}}, returns {{c|x - y}}, otherwise (i.e. if {{c|1=x &lt;= y}}) returns {{c|+0}}.
}}

===Parameters===
{{par begin}}
{{par|x, y|floating-point or integer values}}
{{par end}}

===Return value===
If successful, returns the positive difference between {{c|x}} and {{c|y}}.

If a range error due to overflow occurs, {{lc|HUGE_VAL|+HUGE_VAL}}, {{tt|+HUGE_VALF}}, or {{tt|+HUGE_VALL}} is returned.

If a range error due to underflow occurs, the correct value (after rounding) is returned.

===Error handling===
Errors are reported as specified in {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* If either argument is NaN, NaN is returned.

===Notes===
Equivalent to {{c|std::fmax(x - y, 0)}}, except for the NaN handling requirements.

{{cpp/numeric/math/additional overload note|fdim}}

===Example===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;cfenv&gt;
#include &lt;cmath&gt;
#include &lt;cstring&gt;
#include &lt;iostream&gt;

#ifndef __GNUC__
#pragma STDC FENV_ACCESS ON
#endif

int main()
{
    std::cout &lt;&lt; "fdim(4, 1) = " &lt;&lt; std::fdim(4, 1) &lt;&lt; '\n'
              &lt;&lt; "fdim(1, 4) = " &lt;&lt; std::fdim(1, 4) &lt;&lt; '\n'
              &lt;&lt; "fdim(4,-1) = " &lt;&lt; std::fdim(4, -1) &lt;&lt; '\n'
              &lt;&lt; "fdim(1,-4) = " &lt;&lt; std::fdim(1, -4) &lt;&lt; '\n';
    
    // error handling 
    errno = 0;
    std::feclearexcept(FE_ALL_EXCEPT);
    
    std::cout &lt;&lt; "fdim(1e308, -1e308) = " &lt;&lt; std::fdim(1e308, -1e308) &lt;&lt; '\n';
    
    if (errno == ERANGE)
        std::cout &lt;&lt; "    errno == ERANGE: " &lt;&lt; std::strerror(errno) &lt;&lt; '\n';
    if (std::fetestexcept(FE_OVERFLOW))
        std::cout &lt;&lt; "    FE_OVERFLOW raised\n";
}
|output=
fdim(4, 1) = 3
fdim(1, 4) = 0
fdim(4,-1) = 5
fdim(1,-4) = 5
fdim(1e308, -1e308) = inf
    errno == ERANGE: Numerical result out of range
    FE_OVERFLOW raised
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc abs}}
{{dsc inc|cpp/numeric/math/dsc fmax}}
{{dsc see c|c/numeric/math/fdim}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}