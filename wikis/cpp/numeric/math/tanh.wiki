{{cpp/title|tanh|tanhf|tanhl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=tanh
|param1=num
|constexpr_since=26
|desc=Computes the hyperbolic tangent of {{c|num}}.
}}

===Parameters===
{{par begin}}
{{par|num|floating-point or integer value}}
{{par end}}

===Return value===
If no errors occur, the hyperbolic tangent of {{c|num}} ({{math|tanh(num)}}, or {{math|{{mfrac|e{{su|p=num}}-e{{su|p=-num}}|e{{su|p=num}}+e{{su|p=-num}}}}}}) is returned.

If a range error occurs due to underflow, the correct result (after rounding) is returned.

===Error handling===
Errors are reported as specified in {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* if the argument is ±0, ±0 is returned.
* if the argument is ±∞, ±1 is returned.
* if the argument is NaN, NaN is returned.

===Notes===
[https://pubs.opengroup.org/onlinepubs/9699919799/functions/tanh.html POSIX specifies] that in case of underflow, {{c|num}} is returned unmodified, and if that is not supported, and implementation-defined value no greater than DBL_MIN, FLT_MIN, and LDBL_MIN is returned.

{{cpp/numeric/math/additional integer overload note|tanh}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#include &lt;random&gt;

double get_random_between(double min, double max)
{
    std::random_device rd;
    std::mt19937 gen(rd());
    return std::uniform_real_distribution&lt;&gt;(min, max)(gen);
}

int main()
{
    const double x = get_random_between(-1.0, 1.0);

    std::cout &lt;&lt; std::showpos
              &lt;&lt; "tanh(+1) = " &lt;&lt; std::tanh(+1) &lt;&lt; '\n'
              &lt;&lt; "tanh(-1) = " &lt;&lt; std::tanh(-1) &lt;&lt; '\n'
              &lt;&lt; "tanh(x)*sinh(2*x)-cosh(2*x) = "
              &lt;&lt; std::tanh(x) * std::sinh(2 * x) - std::cosh(2 * x) &lt;&lt; '\n'
              // special values:
              &lt;&lt; "tanh(+0) = " &lt;&lt; std::tanh(+0.0) &lt;&lt; '\n'
              &lt;&lt; "tanh(-0) = " &lt;&lt; std::tanh(-0.0) &lt;&lt; '\n';
}
|output=
tanh(+1) = +0.761594
tanh(-1) = -0.761594
tanh(x)*sinh(2*x)-cosh(2*x) = -1
tanh(+0) = +0
tanh(-0) = -0
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc sinh}}
{{dsc inc|cpp/numeric/math/dsc cosh}}
{{dsc inc|cpp/numeric/math/dsc atanh}}
{{dsc inc|cpp/numeric/complex/dsc tanh}}
{{dsc inc|cpp/numeric/valarray/dsc tanh}}
{{dsc see c|c/numeric/math/tanh}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}