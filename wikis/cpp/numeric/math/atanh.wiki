{{cpp/title|atanh|atanhf|atanhl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=atanh
|param1=num
|constexpr_since=26
|desc=Computes the inverse hyperbolic tangent of {{c|num}}.
}}

===Parameters===
{{par begin}}
{{par|num|floating-point or integer value}}
{{par end}}

===Return value===
If no errors occur, the inverse hyperbolic tangent of {{c|num}} ({{math|tanh{{su|p=-1}}(num)}}, or {{math|artanh(num)}}), is returned.

If a domain error occurs, an implementation-defined value is returned (NaN where supported).

If a pole error occurs, {{lc|HUGE_VAL|±HUGE_VAL}}, {{tt|±HUGE_VALF}}, or {{tt|±HUGE_VALL}} is returned (with the correct sign).

If a range error occurs due to underflow, the correct result (after rounding) is returned.

===Error handling===
Errors are reported as specified in {{lc|math_errhandling}}.

If the argument is not on the interval {{closed range|-1|+1}}, a range error occurs.

If the argument is ±1, a pole error occurs.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* if the argument is ±0, it is returned unmodified.
* if the argument is ±1, ±∞ is returned and {{lc|FE_DIVBYZERO}} is raised.
* if {{math|{{!}}num{{!}}&gt;1}}, NaN is returned and {{lc|FE_INVALID}} is raised.
* if the argument is NaN, NaN is returned.

===Notes===
Although the C standard (to which C++ refers for this function) names this function "arc hyperbolic tangent", the inverse functions of the hyperbolic functions are the area functions. Their argument is the area of a hyperbolic sector, not an arc. The correct name is "inverse hyperbolic tangent" (used by POSIX) or "area hyperbolic tangent".

[https://pubs.opengroup.org/onlinepubs/9699919799/functions/atanh.html POSIX specifies] that in case of underflow, {{c|num}} is returned unmodified, and if that is not supported, an implementation-defined value no greater than {{lc|DBL_MIN}}, {{lc|FLT_MIN}}, and {{lc|LDBL_MIN}} is returned.

{{cpp/numeric/math/additional integer overload note|atanh}}

===Example===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;cfenv&gt;
#include &lt;cfloat&gt;
#include &lt;cmath&gt;
#include &lt;cstring&gt;
#include &lt;iostream&gt;
// #pragma STDC FENV_ACCESS ON

int main()
{
    std::cout &lt;&lt; "atanh(0) = " &lt;&lt; std::atanh(0) &lt;&lt; '\n'
              &lt;&lt; "atanh(-0) = " &lt;&lt; std::atanh(-0.0) &lt;&lt; '\n'
              &lt;&lt; "atanh(0.9) = " &lt;&lt; std::atanh(0.9) &lt;&lt; '\n';
    
    // error handling
    errno = 0;
    std::feclearexcept(FE_ALL_EXCEPT);
    
    std::cout &lt;&lt; "atanh(-1) = " &lt;&lt; std::atanh(-1) &lt;&lt; '\n';
    
    if (errno == ERANGE)
        std::cout &lt;&lt; "    errno == ERANGE: " &lt;&lt; std::strerror(errno) &lt;&lt; '\n';
    if (std::fetestexcept(FE_DIVBYZERO))
        std::cout &lt;&lt; "    FE_DIVBYZERO raised\n";
}
|p=true
|output=
atanh(0) = 0
atanh(-0) = -0
atanh(0.9) = 1.47222
atanh(-1) = -inf
    errno == ERANGE: Numerical result out of range
    FE_DIVBYZERO raised
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc asinh}}
{{dsc inc|cpp/numeric/math/dsc acosh}}
{{dsc inc|cpp/numeric/math/dsc tanh}}
{{dsc inc|cpp/numeric/complex/dsc atanh}}
{{dsc see c|c/numeric/math/atanh}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/InverseHyperbolicTangent.html Weisstein, Eric W. "Inverse Hyperbolic Tangent."] From MathWorld &amp;mdash; A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}