{{cpp/title|tgamma|tgammaf|tgammal}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=tgamma
|param1=num
|constexpr_since=26
|desc=Computes the {{enwiki|Gamma function|gamma function}} of {{c|num}}.
}}

===Parameters===
{{par begin}}
{{par|num|floating-point or integer value}}
{{par end}}

===Return value===
If no errors occur, the value of the gamma function of {{c|num}}, that is {{mathjax-or|1=\(\Gamma(\mathtt{num}) = \displaystyle\int_0^\infty\!\! t^{\mathtt{num}-1} e^{-t}\, dt\)|2={{minteg|0|∞|''t''{{su|p=num-1}} {{mexp|-t}} d''t''}}}}, is returned.

If a domain error occurs, an implementation-defined value (NaN where supported) is returned.

If a pole error occurs, {{lc|HUGE_VAL|±HUGE_VAL}}, {{tt|±HUGE_VALF}}, or {{tt|±HUGE_VALL}} is returned.

If a range error due to overflow occurs, {{lc|HUGE_VAL|±HUGE_VAL}}, {{tt|±HUGE_VALF}}, or {{tt|±HUGE_VALL}} is returned.

If a range error due to underflow occurs, the correct value (after rounding) is returned.

===Error handling===
Errors are reported as specified in {{lc|math_errhandling}}.

If {{c|num}} is zero or is an integer less than zero, a pole error or a domain error may occur.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* If the argument is ±0, ±∞ is returned and {{lc|FE_DIVBYZERO}} is raised.
* If the argument is a negative integer, NaN is returned and {{lc|FE_INVALID}} is raised.
* If the argument is -∞, NaN is returned and {{lc|FE_INVALID}} is raised.
* If the argument is +∞, +∞ is returned.
* If the argument is NaN, NaN is returned.

===Notes===
If {{c|num}} is a natural number, {{c|std::tgamma(num)}} is the factorial of {{c|num - 1}}. Many implementations calculate the exact integer-domain factorial if the argument is a sufficiently small integer.

For IEEE-compatible type {{c/core|double}}, overflow happens if {{c|0 &lt; num &amp;&amp; num &lt; 1 / DBL_MAX}} or if {{c|num &gt; 171.7}}.

[https://pubs.opengroup.org/onlinepubs/9699919799/functions/tgamma.html POSIX requires] that a pole error occurs if the argument is zero, but a domain error occurs when the argument is a negative integer. It also specifies that in future, domain errors may be replaced by pole errors for negative integer arguments (in which case the return value in those cases would change from NaN to ±∞).

There is a non-standard function named {{tt|gamma}} in various implementations, but its definition is inconsistent. For example, glibc and 4.2BSD version of {{tt|gamma}} executes {{tt|lgamma}}, but 4.4BSD version of {{tt|gamma}} executes {{tt|tgamma}}.

{{cpp/numeric/math/additional integer overload note|tgamma}}

===Example===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;cfenv&gt;
#include &lt;cmath&gt;
#include &lt;cstring&gt;
#include &lt;iostream&gt;
// #pragma STDC FENV_ACCESS ON

int main()
{
    std::cout &lt;&lt; "tgamma(10) = " &lt;&lt; std::tgamma(10)
              &lt;&lt; ", 9! = " &lt;&lt; 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 &lt;&lt; '\n'
              &lt;&lt; "tgamma(0.5) = " &lt;&lt; std::tgamma(0.5)
              &lt;&lt; ", sqrt(pi) = " &lt;&lt; std::sqrt(std::acos(-1)) &lt;&lt; '\n';
    
    // special values
    std::cout &lt;&lt; "tgamma(1) = " &lt;&lt; std::tgamma(1) &lt;&lt; '\n'
              &lt;&lt; "tgamma(+Inf) = " &lt;&lt; std::tgamma(INFINITY) &lt;&lt; '\n';
    
    // error handling
    errno = 0;
    std::feclearexcept(FE_ALL_EXCEPT);
    
    std::cout &lt;&lt; "tgamma(-1) = " &lt;&lt; std::tgamma(-1) &lt;&lt; '\n';
    
    if (errno == EDOM)
        std::cout &lt;&lt; "    errno == EDOM: " &lt;&lt; std::strerror(errno) &lt;&lt; '\n';
    if (std::fetestexcept(FE_INVALID))
        std::cout &lt;&lt; "    FE_INVALID raised\n";
}
|p=true
|output=
tgamma(10) = 362880, 9! = 362880
tgamma(0.5) = 1.77245, sqrt(pi) = 1.77245
tgamma(1) = 1
tgamma(+Inf) = inf
tgamma(-1) = nan
    errno == EDOM: Numerical argument out of domain
    FE_INVALID raised
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc lgamma}}
{{dsc inc|cpp/numeric/special_functions/dsc beta}}
{{dsc see c|c/numeric/math/tgamma}}
{{dsc end}}

===External links===
{{eli|[https://mathworld.wolfram.com/GammaFunction.html Weisstein, Eric W. "Gamma Function."] From MathWorld &amp;mdash; A Wolfram Web Resource.}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}