{{ctitle|HUGE_VALF|HUGE_VAL|HUGE_VALL}}
{{cpp/numeric/math/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl|since=c++11|
#define HUGE_VALF /* implementation defined */
}}
{{dcl|
#define HUGE_VAL  /* implementation defined */
}}
{{dcl|since=c++11|
#define HUGE_VALL /* implementation defined */
}}
{{dcl end}}

The macros {{c|HUGE_VALF}}, {{c|HUGE_VAL}} and {{c|HUGE_VALL}} macros expand to positive floating point constant expressions which compare equal to the values returned by floating-point functions and operators in case of overflow (see {{lc|math_errhandling}}).

{{dsc begin}}
{{dsc hitem|Constant|Explanation}}
{{dsc|{{tt|HUGE_VALF}}|Expands to positive {{c/core|float}} expression that indicates overflow}}
{{dsc|{{tt|HUGE_VAL}}|Expands to positive {{c/core|double}} expression that indicates overflow, not necessarily representable as a {{c/core|float}}}}
{{dsc|{{tt|HUGE_VALL}}|Expands to positive {{c/core|long double}} expression that indicates overflow, not necessarily representable as a {{c/core|float}} or {{c/core|double}}}}
{{dsc end}}

On implementations that support floating-point infinities, these macros always expand to the positive infinities of {{c/core|float}}, {{c/core|double}}, and {{c/core|long double}}, respectively.

===Notes===
On implementations that do not support floating-point infinities, these macros expand to the maximum finite number of their respective types.

C++98 added {{c/core|float}} and {{c/core|long double}} overloads of mathematical functions. There is a problem that the {{c/core|float}} overloads cannot return {{c|HUGE_VAL}} to indicate overflow because this macro is not guaranteed to be representable as a {{c/core|float}}.

{{lwg|357}} was raised to target this problem. LWG found that C99 has the same problem ({{c/core|float}} and {{c/core|long double}} overloads were also added in C99), and C99 introduced new macros {{c|HUGE_VALF}} and {{c|HUGE_VALL}} to solve the problem. Therefore the issue was closed and the C99 resolution was adopted in C++11.

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc INFINITY}}}
{{dsc see c|c/numeric/math/HUGE_VAL}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}