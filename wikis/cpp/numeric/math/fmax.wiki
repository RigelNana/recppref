{{cpp/title|fmax|fmaxf|fmaxl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=fmax
|param1=x
|param2=y
|constexpr_since=23
|desc=Returns the larger of two floating point arguments, treating NaNs as missing data (between a NaN and a numeric value, the numeric value is chosen).
}}

===Parameters===
{{par begin}}
{{par|x, y|floating-point or integer values}}
{{par end}}

===Return value===
If successful, returns the larger of two floating point values. The value returned is exact and does not depend on any rounding modes.

===Error handling===
This function is not subject to any of the error conditions specified in {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* If one of the two arguments is NaN, the value of the other argument is returned.
* Only if both arguments are NaN, NaN is returned.

===Notes===
This function is not required to be sensitive to the sign of zero, although some implementations additionally enforce that if one argument is {{c|+0}} and the other is {{c|-0}}, then {{c|+0}} is returned.

{{cpp/numeric/math/additional overload note|fmax}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "fmax(2,1)    = " &lt;&lt; std::fmax(2, 1) &lt;&lt; '\n'
              &lt;&lt; "fmax(-Inf,0) = " &lt;&lt; std::fmax(-INFINITY, 0) &lt;&lt; '\n'
              &lt;&lt; "fmax(NaN,-1) = " &lt;&lt; std::fmax(NAN, -1) &lt;&lt; '\n';
}
|output=
fmax(2,1)    = 2
fmax(-Inf,0) = 0
fmax(NaN,-1) = -1
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc isgreater}}
{{dsc inc|cpp/numeric/math/dsc fmin}}
{{dsc inc|cpp/algorithm/dsc max}}
{{dsc inc|cpp/algorithm/dsc max_element}}
{{dsc inc|cpp/algorithm/dsc minmax}}
{{dsc inc|cpp/algorithm/dsc minmax_element}}
{{dsc see c|c/numeric/math/fmax}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}