{{cpp/title|atan|atanf|atanl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=atan
|param1=num
|constexpr_since=26
|desc=Computes the principal value of the arc tangent of {{c|num}}.
}}

===Parameters===
{{par begin}}
{{par|num|floating-point or integer value}}
{{par end}}

===Return value===
If no errors occur, the arc tangent of {{c|num}} ({{math|arctan(num)}}) in the range {{math|[- {{mfrac|&amp;pi;|2}} , +{{mfrac|&amp;pi;|2}}]}} radians, is returned.

If a range error occurs due to underflow, the correct result (after rounding) is returned.

===Error handling===
Errors are reported as specified in {{lc|math_errhandling}}.

If the implementation supports IEEE floating-point arithmetic (IEC 60559),
* If the argument is ±0, it is returned unmodified.
* If the argument is +∞, +&amp;pi;/2 is returned.
* If the argument is -∞, -&amp;pi;/2 is returned.
* If the argument is NaN, NaN is returned.

===Notes===
[https://pubs.opengroup.org/onlinepubs/9699919799/functions/atan.html POSIX specifies] that in case of underflow, {{c|num}} is returned unmodified, and if that is not supported, an implementation-defined value no greater than {{ltt|cpp/types/climits#Limits of floating-point types|DBL_MIN}}, {{lc|FLT_MIN}}, and {{lc|LDBL_MIN}} is returned.

{{cpp/numeric/math/additional integer overload note|atan}}

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "atan(1) = " &lt;&lt; std::atan(1) &lt;&lt; '\n'
              &lt;&lt; "4*atan(1) = " &lt;&lt; 4 * std::atan(1) &lt;&lt; '\n';

    // special values
    std::cout &lt;&lt; "atan(Inf) = " &lt;&lt; std::atan(INFINITY) &lt;&lt; '\n'
              &lt;&lt; "2*atan(Inf) = " &lt;&lt; 2 * std::atan(INFINITY) &lt;&lt; '\n'
              &lt;&lt; "atan(-0.0) = " &lt;&lt; std::atan(-0.0) &lt;&lt; '\n'
              &lt;&lt; "atan(+0.0) = " &lt;&lt; std::atan(0) &lt;&lt; '\n';
}
|output=
atan(1) = 0.785398
4*atan(1) = 3.14159
atan(Inf) = 1.5708
2*atan(Inf) = 3.14159
atan(-0.0) = -0
atan(+0.0) = 0
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc asin}}
{{dsc inc|cpp/numeric/math/dsc acos}}
{{dsc inc|cpp/numeric/math/dsc atan2}}
{{dsc inc|cpp/numeric/math/dsc tan}}
{{dsc inc|cpp/numeric/complex/dsc atan}}
{{dsc inc|cpp/numeric/valarray/dsc atan}}
{{dsc see c|c/numeric/math/atan}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}