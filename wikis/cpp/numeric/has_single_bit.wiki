{{cpp/title|has_single_bit}}
{{cpp/utility/bit/navbar}}
{{ddcl|since=c++20|header=bit|
template&lt; class T &gt;
constexpr bool has_single_bit( T x ) noexcept;
}}

Checks if {{c|x}} is an integral power of two.

{{cpp/enable_if|{{tt|T}} is an unsigned integer type (that is, {{c/core|unsigned char}}, {{c/core|unsigned short}}, {{c/core|unsigned int}}, {{c/core|unsigned long}}, {{c/core|unsigned long long}}, or an extended unsigned integer type)}}.

===Parameters===
{{par begin}}
{{par|x|value of unsigned integer type}}
{{par end}}

===Return value===
{{c|true}} if {{c|x}} is an integral power of two; otherwise {{c|false}}.

===Notes===
{{petty|Prior to {{stddoc|P1956R1}}, the proposed name for this function template was {{tt|ispow2}}.}}

{{feature test macro|__cpp_lib_int_pow2|[[cpp/numeric#Bit manipulation (since C++20)|Integral power-of-2 operations]]|std=C++20|value=202002L}}

===Possible implementation===
{{eq fun
|1=
template&lt;std::unsigned_integral T&gt;
    requires !std::same_as&lt;T, bool&gt; &amp;&amp; !std::same_as&lt;T, char&gt; &amp;&amp;
             !std::same_as&lt;T, char8_t&gt; &amp;&amp; !std::same_as&lt;T, char16_t&gt; &amp;&amp;
             !std::same_as&lt;T, char32_t&gt; &amp;&amp; !std::same_as&lt;T, wchar_t&gt;
constexpr bool has_single_bit(T x) noexcept
{
    return x &amp;&amp; !(x &amp; (x - 1));
}
|2=
template&lt;std::unsigned_integral T&gt;
    requires !std::same_as&lt;T, bool&gt; &amp;&amp; !std::same_as&lt;T, char&gt; &amp;&amp;
             !std::same_as&lt;T, char8_t&gt; &amp;&amp; !std::same_as&lt;T, char16_t&gt; &amp;&amp;
             !std::same_as&lt;T, char32_t&gt; &amp;&amp; !std::same_as&lt;T, wchar_t&gt;
constexpr bool has_single_bit(T x) noexcept
{
    return std::popcount(x) == 1;
}
}}

===Example===
{{example
|code=
#include &lt;bit&gt;
#include &lt;bitset&gt;
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    for (auto u{0u}; u != 0B1010; ++u)
    {
        std::cout &lt;&lt; "u = " &lt;&lt; u &lt;&lt; " = " &lt;&lt; std::bitset&lt;4&gt;(u);
        if (std::has_single_bit(u))
            std::cout &lt;&lt; " = 2^" &lt;&lt; std::log2(u) &lt;&lt; " (is power of two)";
        std::cout &lt;&lt; '\n';
    }
}
|output=
u = 0 = 0000
u = 1 = 0001 = 2^0 (is power of two)
u = 2 = 0010 = 2^1 (is power of two)
u = 3 = 0011
u = 4 = 0100 = 2^2 (is power of two)
u = 5 = 0101
u = 6 = 0110
u = 7 = 0111
u = 8 = 1000 = 2^3 (is power of two)
u = 9 = 1001
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/dsc popcount}}
{{dsc inc|cpp/utility/bitset/dsc count}}
{{dsc inc|cpp/utility/bitset/dsc test}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}