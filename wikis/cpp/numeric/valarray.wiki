{{cpp/title|valarray}}
{{cpp/numeric/valarray/navbar}}
{{ddcl|header=valarray|
template&lt; class T &gt;
class valarray;
}}

{{tt|std::valarray}} is the class for representing and manipulating arrays of values. It supports element-wise mathematical operations and various forms of generalized subscript operators, slicing and indirect access.

===Notes===
{{tt|std::valarray}} and helper classes are defined to be free of certain forms of aliasing, thus allowing operations on these classes to be optimized similar to the effect of the keyword {{ltt|c/language/restrict}} in the C programming language. In addition, functions and operators that take {{tt|valarray}} arguments are allowed to return proxy objects to make it possible for the compiler to optimize an expression such as {{c|1=v1 = a * v2 + v3;}} as a single loop that executes {{c|1=v1[i] = a * v2[i] + v3[i];}} avoiding any temporaries or multiple passes. However, {{enwiki|expression templates}} make the same optimization technique available for any C++ container, and the majority of numeric libraries prefer expression templates to valarrays for flexibility. Some C++ standard library implementations use expression templates to implement efficient operations on {{tt|std::valarray}} (e.g. GNU libstdc++ and LLVM libc++). Only rarely are valarrays optimized any further, as in e.g. [https://software.intel.com/en-us/node/684140 Intel Integrated Performance Primitives].

===Template parameters===
{{par begin}}
{{par|T|the type of the elements. The type must meet the {{named req|NumericType}} requirements}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|value_type}}|{{tt|T}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc valarray}}
{{dsc inc|cpp/numeric/valarray/dsc ~valarray}}
{{dsc inc|cpp/numeric/valarray/dsc operator{{=}}}}
{{dsc inc|cpp/numeric/valarray/dsc operator_at}}
{{dsc inc|cpp/numeric/valarray/dsc operator_arith}}
{{dsc inc|cpp/numeric/valarray/dsc operator_arith2}}
{{dsc inc|cpp/numeric/valarray/dsc swap}}
{{dsc inc|cpp/numeric/valarray/dsc size}}
{{dsc inc|cpp/numeric/valarray/dsc resize}}
{{dsc inc|cpp/numeric/valarray/dsc sum}}
{{dsc inc|cpp/numeric/valarray/dsc min}}
{{dsc inc|cpp/numeric/valarray/dsc max}}
{{dsc inc|cpp/numeric/valarray/dsc shift}}
{{dsc inc|cpp/numeric/valarray/dsc cshift}}
{{dsc inc|cpp/numeric/valarray/dsc apply}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc swap2}}
{{dsc inc|cpp/numeric/valarray/dsc begin2}}
{{dsc inc|cpp/numeric/valarray/dsc end2}}
{{dsc inc|cpp/numeric/valarray/dsc operator_arith3}}
{{dsc inc|cpp/numeric/valarray/dsc operator_cmp}}
{{dsc inc|cpp/numeric/valarray/dsc abs}}

{{dsc h2|Exponential functions}}
{{dsc inc|cpp/numeric/valarray/dsc exp}}
{{dsc inc|cpp/numeric/valarray/dsc log}}
{{dsc inc|cpp/numeric/valarray/dsc log10}}

{{dsc h2|Power functions}}
{{dsc inc|cpp/numeric/valarray/dsc pow}}
{{dsc inc|cpp/numeric/valarray/dsc sqrt}}

{{dsc h2|Trigonometric functions}}
{{dsc inc|cpp/numeric/valarray/dsc sin}}
{{dsc inc|cpp/numeric/valarray/dsc cos}}
{{dsc inc|cpp/numeric/valarray/dsc tan}}
{{dsc inc|cpp/numeric/valarray/dsc asin}}
{{dsc inc|cpp/numeric/valarray/dsc acos}}
{{dsc inc|cpp/numeric/valarray/dsc atan}}
{{dsc inc|cpp/numeric/valarray/dsc atan2}}

{{dsc h2|Hyperbolic functions}}
{{dsc inc|cpp/numeric/valarray/dsc sinh}}
{{dsc inc|cpp/numeric/valarray/dsc cosh}}
{{dsc inc|cpp/numeric/valarray/dsc tanh}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc slice}}
{{dsc inc|cpp/numeric/valarray/dsc slice_array}}
{{dsc inc|cpp/numeric/valarray/dsc gslice}}
{{dsc inc|cpp/numeric/valarray/dsc gslice_array}}
{{dsc inc|cpp/numeric/valarray/dsc mask_array}}
{{dsc inc|cpp/numeric/valarray/dsc indirect_array}}
{{dsc end}}

===[[cpp/numeric/valarray/deduction_guides|Deduction guides]]{{mark since c++17}}===

===See also===
{{dsc begin}}
{{dsc inc|cpp/numeric/simd/dsc simd}}
{{dsc inc|cpp/numeric/simd/dsc simd_mask}}
{{dsc inc|cpp/experimental/simd/dsc simd}}
{{dsc inc|cpp/experimental/simd/dsc simd_mask}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}