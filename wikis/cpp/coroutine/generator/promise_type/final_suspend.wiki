{{cpp/title|{{small|generator&lt;Ref,V,Allocator&gt;::promise_type::}}final_suspend}}
{{cpp/coroutine/generator/navbar}}
{{ddcl|since=c++23|
auto final_suspend() noexcept;
}}

Let {{c|x}} be some {{lt|cpp/coroutine/generator}} object. {{tt|final_suspend}} does the following:
# Pops the coroutine handle from the top of {{box|{{c/core|*}}{{lsi|cpp/coroutine/generator#active_}}}}.
# If {{c|*x.active_}} is not empty, resumes execution of the coroutine referred to by {{c|x.active_-&gt;top()}}. If it is empty, control flow returns to the current coroutine caller or resumer.

A handle referring to the coroutine whose promise object is {{c|*this}} must be at the top of {{c|*x.active_}} of {{c|x}}. {{cpp/precondition|This function must be called by the coroutine upon reaching its final suspend point.}}

===Return value===
An [[cpp/coroutine#co_await|awaitable object]] of unspecified type whose member functions are configured to suspend the calling coroutine.

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}