{{cpp/coroutine/coroutine_handle/title|done}}
{{cpp/coroutine/coroutine_handle/navbar}}
{{dcl begin}}
{{dcl h|Member of other specializations}}
{{dcl|num=1|since=c++20|
bool done() const;
}}
{{dcl h|Member of specialization {{tt|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}}}}
{{dcl|num=2|since=c++20|
constexpr bool done() const noexcept;
}}
{{dcl end}}

Checks if a suspended coroutine is suspended at its final suspend point.

@1@ Returns {{c|true}} if the coroutine to which {{c|*this}} refers is suspended at its final suspend point, or {{c|false}} if the coroutine is suspended at other suspend points. The behavior is undefined if {{c|*this}} does not refer to a suspended coroutine.

@2@ Always returns {{c|false}}.

===Parameters===
(none)

===Return value===
@1@ {{c|true}} if the coroutine is suspended at its final suspend point, {{c|false}} if the coroutine is suspended at other suspend points.

@2@ {{c|false}}

===Notes===
A no-op coroutine is never considered to be suspended at its final suspend point.

A coroutine with promise object {{c|p}} is considered to be suspended at its final suspend point only if, let {{c|e}} be the result of {{c|p.final_suspend()}}, {{c|e.await_ready()}} returns {{c|false}}. In particular, if {{c|p.final_suspend()}} returns {{ltt|cpp/coroutine/suspend_never|std::suspend_never}}, then {{c|done()}} never returns {{c|true}}.

===Example===
{{example}}

{{langlinks|ja|zh}}