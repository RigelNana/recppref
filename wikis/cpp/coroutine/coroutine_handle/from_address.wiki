{{cpp/coroutine/coroutine_handle/title|from_address}}
{{cpp/coroutine/coroutine_handle/navbar}}
{{ddcl|since=c++20|
static constexpr coroutine_handle from_address( void *addr );
}}

Creates a {{tt|coroutine_handle}} from a null pointer value or an underlying address of another {{tt|coroutine_handle}}. The underlying address of return value is {{c|addr}}.

The behavior is undefined if {{c|addr}} is neither a null pointer value nor an underlying address of a {{tt|coroutine_handle}}. The behavior is also undefined if the {{c|addr}} is an underlying address of a {{c|std::coroutine_handle&lt;P1&gt;}}, where both {{tt|Promise}} and {{tt|P1}} are not {{c|void}}, and {{tt|P1}} is different from {{tt|Promise}}.

This function is not declared for specialization {{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}}.

===Parameters===
{{par begin}}
{{par|addr|underlying address to import}}
{{par end}}

===Return value===
A {{c|std::coroutine_handle&lt;Promise&gt;}} whose underlying address is {{c|addr}}.

===Notes===
If {{c|addr}} is not a null pointer value, it must be obtained from a prior call to {{lc|address()}} on a {{tt|coroutine_handle}} referring to some coroutine.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc constructor}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc from_promise}}
{{dsc inc|cpp/coroutine/dsc noop_coroutine}}
{{dsc end}}

{{langlinks|ja|zh}}