{{cpp/coroutine/coroutine_handle/title|coroutine_handle}}
{{cpp/coroutine/coroutine_handle/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr coroutine_handle() noexcept;
}}
{{dcl|num=2|since=c++20|
constexpr coroutine_handle( std::nullptr_t ) noexcept;
}}
{{dcl|num=3|since=c++20|1=
coroutine_handle( const coroutine_handle&amp; other ) = default;
}}
{{dcl|num=4|since=c++20|1=
coroutine_handle( coroutine_handle&amp;&amp; other ) = default;
}}
{{dcl end}}

Creates a {{tt|coroutine_handle}} that does not refer a coroutine, or copies a {{tt|coroutine_handle}}.

@1,2@ Initializes the underlying address {{rlpi|/#Data members|ptr}} to {{c|nullptr}}. After construction, {{rlpf|address}} returns {{c|nullptr}}, and the {{tt|coroutine_handle}} does not refer a coroutine. These constructors are not declared for the specialization {{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}}.

@3,4@ Copies the underlying address. The copy constructor and move constructor are equivalent to implicitly declared ones.

===Parameters===
{{par begin}}
{{par|other|another {{tt|coroutine_handle}} to copy}}
{{par end}}

===Notes===
{{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}} is neither default constructible nor constructible from {{lc|std::nullptr_t}}. {{lc|std::noop_coroutine}} can be used to create a new {{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}}.

Static member functions {{lc|from_promise}} and {{lc|from_address}} can also create a {{tt|coroutine_handle}}.

===See also===
{{dsc begin}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc from_promise}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc from_address}}
{{dsc inc|cpp/coroutine/dsc noop_coroutine}}
{{dsc end}}

{{langlinks|ja|zh}}