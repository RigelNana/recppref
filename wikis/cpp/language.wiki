{{title|C++ language}}
{{cpp/language/navbar}}

This is a reference of the core C++ language constructs.

{|cellpadding="5"
|-valign="top"
|
'''{{rl|basic concepts|Basic concepts}}'''
&lt;div class="mainpagediv"&gt;
{{rlp|comment|Comments}}&lt;br&gt;
{{rl|ascii|ASCII chart}}&lt;br&gt;
{{rl|punctuators|Punctuation}}&lt;br&gt;
{{rl|identifiers|Names and identifiers}}&lt;br&gt;
{{rl|type|Types}} – 
{{rl|types|Fundamental types}}&lt;br&gt;
{{rl|object|Object}} –
{{rl|scope|Scope}} –
{{rl|lifetime|Lifetime}}&lt;br&gt;
{{rl|definition|Definitions and ODR}}&lt;br&gt;
{{rl|lookup|Name lookup}}&lt;br&gt;
{{nbsp|4}}{{rl|qualified lookup|qualified}} – {{rl|unqualified lookup|unqualified}} ({{rl|adl|ADL}})&lt;br&gt;
{{rl|as if|As-if rule}}&lt;br&gt;
{{rl|ub|Undefined behavior (UB)}}&lt;br&gt;
{{rl|memory model|Memory}} – {{rl|multithread|Multithread}} {{mark c++11}}&lt;br&gt;
{{rl|charset|Character sets and encodings}}&lt;br&gt;
{{rl|translation phases|Phases of translation}}&lt;br&gt;
{{rl|main function|The {{tt|main}} function}}&lt;br&gt;
{{rl|modules|Modules}} {{mark c++20}}&lt;br&gt;
&lt;/div&gt;

'''{{rlp|keyword|Keywords}}'''
&lt;div class="mainpagediv"&gt;
&lt;!----&gt;
&lt;/div&gt;

'''{{rlp|preprocessor|Preprocessor}}'''
&lt;div class="mainpagediv"&gt;
{{rlp|preprocessor/conditional|{{tt|#if}} - {{tt|#ifdef}} - {{tt|#ifndef}} - {{tt|#elif}}}}&lt;br&gt;
{{rlp|preprocessor/conditional|{{tt|#elifdef}} - {{tt|#elifndef}}}} {{mark c++23}}&lt;br&gt;
{{rlp|preprocessor/replace|{{tt|#define}} - {{tt|#}} - {{tt|##}}}}&lt;br&gt; 
{{rlpt|preprocessor/include|#include}} -
{{rlpt|preprocessor/impl|#pragma}}&lt;br&gt;
{{rlpt|preprocessor/line|#line}} -
{{rlpt|preprocessor/error|#error}}&lt;br&gt;
{{rlpt|preprocessor/error|#warning}} {{mark c++23}}&lt;br&gt;
&lt;/div&gt;

'''{{rl|expressions|Expressions}}'''
&lt;div class="mainpagediv"&gt;
{{rl|value category|Value categories}}&lt;br&gt;
{{rl|eval order|Evaluation order}}&lt;br&gt;
{{rl|constant expression|Constant expressions}}&lt;br&gt;
{{ls|cpp/language/expressions#Operators}}&lt;br&gt;
{{nbsp|4}}{{rl|operator assignment|assignment}} –
{{rl|operator arithmetic|arithmetic}}&lt;br&gt;
{{nbsp|4}}{{rl|operator incdec|increment and decrement}}&lt;br&gt;
{{nbsp|4}}{{rl|operator logical|logical}} –
{{rl|operator comparison|comparison}}&lt;br&gt;
{{nbsp|4}}{{rl|operator member access|member access}}&lt;br&gt;
{{nbsp|4}}{{rl|operator other|call, comma, ternary}}&lt;br&gt;
{{nbsp|4}}{{rlt|sizeof}} – {{rlt|alignof}} {{mark c++11}}&lt;br&gt;
{{nbsp|4}}{{rlt|new}} – {{rlt|delete}} – {{rlt|typeid}}&lt;br&gt;
{{nbsp|4}}{{rl|operator_alternative|alternative representation}}&lt;br&gt;
{{rl|default comparisons|Default comparisons}} {{mark c++20}}&lt;br&gt;
{{rl|operator precedence|Operator precedence}}&lt;br&gt;
{{ls|cpp/language/expressions#Conversions}}&lt;br&gt;
{{nbsp|4}}{{rl|implicit conversion|implicit}} – {{rl|explicit cast|explicit}}&lt;br&gt;
{{nbsp|4}}{{rl|cast operator|user-defined}}&lt;br&gt;
{{nbsp|4}}{{rl|usual arithmetic conversions|Usual arithmetic conversions}}&lt;br&gt;
{{nbsp|4}}{{rlt|static_cast}} – {{rlt|dynamic_cast}}&lt;br&gt;
{{nbsp|4}}{{rlt|const_cast}}&lt;br&gt;
{{nbsp|4}}{{rlt|reinterpret_cast}}&lt;br&gt;
{{ls|cpp/language/expressions#Literals}} ({{rl|escape|Escape sequences}})&lt;br&gt;
{{nbsp|4}}{{rl|bool literal|boolean}} –
{{rl|integer literal|integer}} –
{{rl|floating literal|floating}}&lt;br&gt;
{{nbsp|4}}{{rl|character literal|character}} –
{{rl|string literal|string}}&lt;br&gt;
{{nbsp|4}}{{rlt|nullptr}} {{mark c++11}}&lt;br&gt;
{{nbsp|4}}{{rl|user literal|user-defined (UDL)}} {{mark c++11}}&lt;br&gt;
&lt;/div&gt;
|
'''{{rl|declarations|Declarations}}'''
&lt;div class="mainpagediv"&gt;
{{rl|conflicting declarations|Conflicting declarations}}&lt;br&gt;
{{rl|storage duration|Storage duration and linkage}}&lt;br&gt;
{{rl|tu local|Translation-unit-local}} {{mark c++20}}&lt;br&gt;
{{rl|language linkage|Language linkage}}&lt;br&gt;
{{rl|namespace|Namespace declaration}}&lt;br&gt;
{{rl|namespace alias|Namespace alias}}&lt;br&gt;
{{rl|reference|References}} –
{{rl|pointer|Pointers}} –
{{rl|array|Arrays}}&lt;br&gt;
{{rl|structured binding|Structured bindings}} {{mark c++17}}&lt;br&gt;
{{rl|enum|Enumerations and enumerators}}&lt;br&gt;
{{rl|inline|{{tt|inline}} specifier}}&lt;br&gt;
{{rl|asm|Inline assembly}}&lt;br&gt;
{{rl|cv|{{tt|const}}/{{tt|volatile}}}}&lt;br&gt;
{{rlt|constexpr}} {{mark c++11}}&lt;br&gt;
{{rlt|consteval}} {{mark c++20}}&lt;br&gt;
{{rlt|constinit}} {{mark c++20}}&lt;br&gt;
{{rlt|decltype}} {{mark c++11}}&lt;br&gt;
{{rlt|auto}} {{mark c++11}}&lt;br&gt;
{{rlt|typedef}} – {{rl|type alias|Type alias}} {{mark c++11}}&lt;br&gt;
{{rl|elaborated type specifier|Elaborated type specifiers}}&lt;br&gt;
{{rl|attributes|Attributes}} {{mark c++11}}&lt;br&gt;
{{rlt|alignas}} {{mark c++11}}&lt;br&gt;
{{rlt|static_assert}} {{mark c++11}}&lt;br&gt;
&lt;/div&gt;

'''{{rl|initialization|Initialization}}'''
&lt;div class="mainpagediv"&gt;
{{rl|default initialization|Default-initialization}}&lt;br&gt;
{{rl|value initialization|Value-initialization}}&lt;br&gt;
{{rl|copy initialization|Copy-initialization}}&lt;br&gt;
{{rl|direct initialization|Direct-initialization}}&lt;br&gt;
{{rl|aggregate initialization|Aggregate initialization}}&lt;br&gt;
{{rl|list initialization|List-initialization}} {{mark c++11}}&lt;br&gt;
{{rl|reference initialization|Reference initialization}}&lt;br&gt;
{{rl|initialization#Non-local variables|Static non-local initialization}}&lt;br&gt;
{{nbsp|4}}{{rl|zero initialization|zero}} – {{rl|constant initialization|constant}}&lt;br&gt;
{{rl|initialization#Non-local variables|Dynamic non-local initialization}}&lt;br&gt;
{{nbsp|4}}{{rl|initialization#Non-local variables|ordered}} – {{rl|initialization#Non-local variables|unordered}}&lt;br&gt;
{{rl|copy elision|Copy elision (RVO)}}
&lt;/div&gt;

'''{{rl|functions|Functions}}'''
&lt;div class="mainpagediv"&gt;
{{rl|function|Function declaration}}&lt;br&gt;
{{rl|default arguments|Default arguments}}&lt;br&gt;
{{rl|variadic arguments|Variadic arguments}}&lt;br&gt;
{{rl|lambda|Lambda expression}} {{mark c++11}}&lt;br&gt;
{{rl|overload resolution|Overload resolution}}&lt;br&gt;
{{rl|operators|Operator overloading}}&lt;br&gt;
{{rl|overloaded address|Address of an overload set}}&lt;br&gt;
{{rl|coroutines|Coroutines}} {{mark c++20}}&lt;br&gt;
&lt;/div&gt;

'''{{rl|statements|Statements}}'''
&lt;div class="mainpagediv"&gt;
{{rlt|if}} –
{{rlt|switch}}&lt;br&gt;
{{rlt|for}} –
{{rl|range-for|range-{{tt|for}}}} {{mark c++11}}&lt;br&gt;
{{rlt|while}} – {{rl|do|{{tt|do}}-{{tt|while}}}}&lt;br&gt;
{{rlt|continue}} –
{{rlt|break}}&lt;br&gt;
{{rlt|goto}} –
{{rlt|return}}&lt;br&gt;
{{rl|transactional memory|{{tt|synchronized}}/{{tt|atomic}}}} {{mark since tm ts}}&lt;br&gt;
&lt;/div&gt;
|
'''{{rl|classes|Classes}}'''
&lt;div class="mainpagediv"&gt;
{{rl|class|Class types}} –
{{rl|union|Union types}}&lt;br&gt;
{{rl|injected-class-name}}&lt;br&gt;
{{rl|data members|Data members}} –
{{rl|bit field|Bit-fields}}&lt;br&gt;
{{rl|member functions|Member functions}} –
{{rl|this|The {{tt|this}} pointer}}&lt;br&gt;
{{rl|static|Static members}} –
{{rl|nested types|Nested classes}}&lt;br&gt;
{{rl|derived class|Derived class}} –
{{rl|using declaration|{{tt|using}}-declaration}}&lt;br&gt;
{{rl|ebo|Empty base optimization (EBO)}}&lt;br&gt;
{{rl|virtual|Virtual function}} –
{{rl|abstract class|Abstract class (ABC)}}&lt;br&gt;
{{rlt|override}} {{mark c++11}} – {{rlt|final}} {{mark c++11}}&lt;br&gt;
{{rl|access|Member access}} –
{{rlt|friend}}&lt;br&gt; 
{{rl|constructor|Constructors and member initializer lists}}&lt;br&gt;
{{rl|default constructor|Default constructor}} –
{{rl|destructor|Destructor}}&lt;br&gt;
{{rl|copy constructor|Copy constructor}} –
{{rl|copy assignment|Copy assignment}}&lt;br&gt;
{{rl|move constructor|Move constructor}} {{mark c++11}}&lt;br&gt;
{{rl|move assignment|Move assignment}} {{mark c++11}}&lt;br&gt;
{{rl|converting constructor|Converting constructor}}&lt;br&gt;
{{rl|explicit|{{tt|explicit}} specifier}}&lt;br&gt;
&lt;/div&gt;

'''{{rl|templates|Templates}}'''
&lt;div class="mainpagediv"&gt;
{{rl|template parameters|Template parameters and arguments}}&lt;br&gt;
{{rl|class template|Class template}} –
{{rl|function template|Function template}}&lt;br&gt;
{{rl|variable template|Variable template}} {{mark c++14}}&lt;br&gt;
{{rl|member template|Class member template}}&lt;br&gt;
'''Template argument deduction'''&lt;br&gt;
{{nbsp|4}}{{rl|template argument deduction|function}} –
{{rl|class template argument deduction|class (CTAD)}} {{mark c++17}}&lt;br&gt;
{{rl|template specialization|Explicit specialization}} – {{rl|partial specialization|Partial specialization}}&lt;br&gt;
{{rl|pack|Parameter packs}} {{mark c++11}}&lt;br&gt;
{{rlt|sizeof...}} {{mark c++11}}&lt;br&gt;
{{rl|fold|Fold expressions}} {{mark c++17}}&lt;br&gt;
{{rl|pack_indexing|Pack indexing}} {{mark c++26}}&lt;br&gt;
{{rl|dependent name|Dependent names}} –
{{rl|sfinae|SFINAE}}&lt;br&gt;
{{rl|constraints|Constraints and concepts}} {{mark c++20}}&lt;br&gt;
{{rl|requires|Requires expression}} {{mark c++20}}&lt;br&gt;
&lt;/div&gt;

'''{{rl|exceptions|Exceptions}}'''
&lt;div class="mainpagediv"&gt;
{{rl|try|{{tt|try}} block}}&lt;br&gt;
{{rl|throw|Throwing exceptions}}&lt;br&gt;
{{rl|catch|Handling exceptions}}&lt;br&gt;
'''Exception specification'''&lt;br&gt;
{{nbsp|4}}{{rl|noexcept spec|{{tt|noexcept}} specification}} {{mark c++11}}&lt;br&gt;
{{nbsp|4}}{{rl|except spec|Dynamic specification}} {{mark tooltip|until C++17|deprecated in C++11}}&lt;br&gt;
{{rl|noexcept|{{tt|noexcept}} operator}} {{mark c++11}}&lt;br&gt;
&lt;/div&gt;

'''Miscellaneous'''
&lt;div class="mainpagediv"&gt;
{{rl|history|History of C++}}&lt;br&gt;
{{rl|extending std|Extending the namespace std}}&lt;br&gt;
{{rl|acronyms|Acronyms}}:
[[cpp/algorithm/ranges#Algorithm function objects|AFO]],
[[cpp/ranges/cpo|CPO]],
[[cpp/language/ndr|IFNDR]],
[[cpp/language/ndr|NDR]],&lt;br&gt;
[[cpp/string/byte|NTBS]],
[[cpp/language/template parameters#Non-type template parameter|NTTP]],
[[cpp/ranges#Range adaptor objects|RAO]],
[[cpp/memory/allocator_traits/select_on_container_copy_construction|SOCCC]],
[[cpp/language/template metaprogramming|TMP]],
[[cpp/language/translation phases#Phase 8|TU]]
&lt;/div&gt;

'''Idioms'''
&lt;div class="mainpagediv"&gt;
{{rl|crtp|Curiously Recurring Template Pattern (CRTP)}}&lt;br&gt;
{{rl|pimpl|Pointer to implementation (PIMPL)}}&lt;br&gt;
{{rl|raii|Resource acquisition is initialization (RAII)}}&lt;br&gt;
{{rl|rule of three|Rule of three/five/zero}}&lt;br&gt;
{{rl|Zero-overhead principle|Zero-overhead principle}}&lt;br&gt;
&lt;/div&gt;
|}

===See also===
{{dsc begin}}
{{dsc see c|c/language|C language constructs|nomono=true}}
{{dsc end}}

{{langlinks|ar|de|es|fr|it|ja|ko|pl|pt|ru|tr|zh}}