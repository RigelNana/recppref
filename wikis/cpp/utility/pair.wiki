{{cpp/title|pair}}
{{cpp/utility/pair/navbar}}
{{ddcl|header=utility|
template&lt;
    class T1,
    class T2
&gt; struct pair;
}}

{{tt|std::pair}} is a class template that provides a way to store two heterogeneous objects as a single unit. A pair is a specific case of a {{lc|std::tuple}} with two elements.

If neither {{tt|T1}} nor {{tt|T2}} is a possibly cv-qualified class type with non-trivial destructor, or array thereof, the destructor of {{tt|pair}} is trivial.

===Template parameters===
{{par begin}}
{{par|T1, T2|the types of the elements that the pair stores.}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|first_type}}|{{tt|T1}}}}
{{dsc|{{tt|second_type}}|{{tt|T2}}}}
{{dsc end}}

===Member objects===
{{dsc begin}}
{{dsc hitem|Member name|Type}}
{{dsc|{{tt|first}}|{{tt|T1}}}}
{{dsc|{{tt|second}}|{{tt|T2}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/utility/pair/dsc constructor}}
{{dsc inc|cpp/utility/pair/dsc operator{{=}}}}
{{dsc inc|cpp/utility/pair/dsc swap}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/utility/pair/dsc make_pair}}
{{dsc inc|cpp/utility/pair/dsc operator_cmp}}
{{dsc inc|cpp/utility/pair/dsc swap2}}
{{dsc inc|cpp/utility/pair/dsc get}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/utility/pair/dsc tuple_size}}
{{dsc inc|cpp/utility/pair/dsc tuple_element}}
{{dsc inc|cpp/utility/pair/dsc basic_common_reference}}
{{dsc inc|cpp/utility/pair/dsc common_type}}
{{dsc inc|cpp/utility/format/dsc tuple_formatter|pair}}
{{dsc end}}

===Helper specializations===
{{dcl begin}}
{{dcl|since=c++23|1=
template&lt; class T, class U &gt;
constexpr bool enable_nonlocking_formatter_optimization&lt;std::pair&lt;T, U&gt;&gt; 
 = enable_nonlocking_formatter_optimization&lt;T&gt; &amp;&amp;
   enable_nonlocking_formatter_optimization&lt;U&gt;;
}}
{{dcl end}}
This specialization of {{ltt std|cpp/utility/format/enable_nonlocking_formatter_optimization}} enables efficient implementation of {{ltt std|cpp/io/print}} and {{ltt std|cpp/io/println}} for printing a {{tt|pair}} object when both {{tt|T}} and {{tt|U}} enable it.

==={{rl|deduction_guides|Deduction guides}}{{mark since c++17}}===

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2796|std=C++98|before=triviality of the destructor of {{tt|pair}} was unspecified|after=specified}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc inc|cpp/utility/tuple/dsc tie}}
{{dsc end}}

{{langlinks|cs|de|es|fr|it|ja|ko|pl|pt|ru|zh}}