{{cpp/title|hash{{petty|&lt;std::variant&gt;}}}}
{{cpp/utility/variant/navbar}}
{{ddcl|header=variant|since=c++17|1=
template&lt; class... Types &gt;
struct hash&lt;std::variant&lt;Types...&gt;&gt;;
}}

The template specialization of {{lc|std::hash}} for the {{lc|std::variant}} template allows users to obtain hashes of {{tt|variant}} objects.

The specialization {{box|{{tt|std::hash}}{{co|&lt;std::variant&lt;Types...&gt;&gt;}}}} is enabled (see {{lc|std::hash}}) if every specialization in {{box|{{tt|std::hash}}{{co|&lt;std::remove_const_t&lt;Types&gt;&gt;...}}}} is enabled, and is disabled otherwise.

The member functions of this specialization are not guaranteed to be noexcept.

===Template parameters===
{{par begin}}
{{par|Types|the types of the alternatives supported by the {{tt|variant}} object}}
{{par end}}

===Notes===
Unlike {{ltt|cpp/utility/optional/hash|std::hash&lt;std::optional&gt;}}, hash of a variant does not typically equal the hash of the contained value; this makes it possible to distinguish {{c|std::variant&lt;int, int&gt;}} holding the same value as different alternatives.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;variant&gt;

using Var = std::variant&lt;int, int, int, std::string&gt;;

template&lt;unsigned I&gt;
void print(Var const&amp; var)
{
    std::cout &lt;&lt; "get&lt;" &lt;&lt; var.index() &lt;&lt; "&gt; = "
              &lt;&lt; std::get&lt;I&gt;(var)
              &lt;&lt; "\t" "# = "
              &lt;&lt; std::hash&lt;Var&gt;{}(var) &lt;&lt; '\n';
}

int main()
{
    Var var;
    std::get&lt;0&gt;(var) = 2020;
    print&lt;0&gt;(var);
    var.emplace&lt;1&gt;(2023);
    print&lt;1&gt;(var);
    var.emplace&lt;2&gt;(2026);
    print&lt;2&gt;(var);
    var = "C++";
    print&lt;3&gt;(var);
}
|p=true
|output=
get&lt;0&gt; = 2020   # = 2020
get&lt;1&gt; = 2023   # = 2024
get&lt;2&gt; = 2026   # = 2028
get&lt;3&gt; = C++    # = 15518724754199266859
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}