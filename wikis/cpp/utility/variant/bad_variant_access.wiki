{{cpp/title|bad_variant_access}}
{{cpp/utility/variant/navbar}}
{{ddcl|since=c++17|header=variant|
class bad_variant_access : public std::exception
}}

{{tt|std::bad_variant_access}} is the type of the exception thrown in the following situations:
* {{ltt|cpp/utility/variant/get|std::get{{small|(std::variant)}}}} called with an index or type that does not match the currently active alternative.
* {{rlpt|visit2|std::visit}} called to visit a variant that is {{rlpt|valueless_by_exception}}.
{{rrev|since=c++26|
* {{rlpt|visit|std::variant::visit}} called to visit a variant that is {{rlpt|valueless_by_exception}}.
}}

===Member functions===
{{cpp/error/exception/member of derived|bad_variant_access|std=c++17}}

{{cpp/error/exception/inherit}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;variant&gt;

int main()
{
    std::variant&lt;int, float&gt; v;
    v = 12;
    try
    {
        std::get&lt;float&gt;(v);
    }
    catch (const std::bad_variant_access&amp; e)
    {
        std::cout &lt;&lt; e.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
bad_variant_access
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/variant/dsc get}}
{{dsc inc|cpp/utility/variant/dsc visit2}}
{{dsc inc|cpp/utility/variant/dsc visit}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}