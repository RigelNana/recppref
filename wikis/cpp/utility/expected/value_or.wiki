{{cpp/utility/expected/title|value_or}}
{{cpp/utility/expected/navbar}}

{{dcl begin}}
{{dcl h|Primary template}}
{{dcl|since=c++23|num=1|
template&lt; class U &gt; 
constexpr T value_or( U&amp;&amp; default_value ) const&amp;;
}}
{{dcl|since=c++23|num=2|
template&lt; class U &gt; 
constexpr T value_or( U&amp;&amp; default_value ) &amp;&amp;;
}}
{{dcl end}}

Returns the expected value if it exists, otherwise returns {{c|default_value}}.

The {{c/core|void}} partial specialization does not have these member functions.

@1@ If {{c|std::is_copy_constructible_v&lt;T&gt;}} or {{c|std::is_convertible_v&lt;U, T&gt;}} is {{c|false}}, the program is ill-formed.

@2@ If {{c|std::is_move_constructible_v&lt;T&gt;}} or {{c|std::is_convertible_v&lt;U, T&gt;}} is {{c|false}}, the program is ill-formed.

===Parameters===
{{par begin}}
{{par|default_value|the value to use in case {{c|*this}} does not contain an expected value}}
{{par end}}

===Return value===
@1@ {{c|has_value() ? **this : static_cast&lt;T&gt;(std::forward&lt;U&gt;(default_value))}}

@2@ {{c|has_value() ? std::move(**this) : static_cast&lt;T&gt;(std::forward&lt;U&gt;(default_value))}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/expected/dsc value}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}