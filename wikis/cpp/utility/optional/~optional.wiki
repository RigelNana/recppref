{{cpp/utility/optional/title|~optional}}
{{cpp/utility/optional/navbar}}
{{ddcl|since=c++17|notes={{mark constexpr since c++20}}|
~optional();
}}

If the object contains a value and the type {{tt|T}} is not trivially destructible (see {{lc|std::is_trivially_destructible}}), destroys the contained value by calling its destructor, as if by {{c|value().T::~T()}}.

Otherwise, does nothing.

===Notes===
If {{tt|T}} is trivially-destructible, then this destructor is also trivial, so {{c|std::optional&lt;T&gt;}} is also trivially-destructible.

{{ftm begin}}
{{ftm|std=C++20|dr=20|value=202106L|__cpp_lib_optional|Fully {{c/core|constexpr}}}}
{{ftm end}}

===Defect reports===
{{dr list begin}}
{{dr list item|paper=P2231R1|std=C++20|before=the destructor was not {{c/core|constexpr}} while non-trivial destructors can be {{c/core|constexpr}} in C++20|after=made {{c/core|constexpr}}}}
{{dr list end}}

{{langlinks|es|ja|ru|zh}}