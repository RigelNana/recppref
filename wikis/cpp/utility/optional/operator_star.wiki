{{cpp/utility/optional/title|operator-&gt;|operator*}}
{{cpp/utility/optional/navbar}}
{{dcl begin}}
{{dcl|since=c++17|num=1|1=
constexpr const T* operator-&gt;() const noexcept;
}}
{{dcl|since=c++17|num=1|1=
constexpr T* operator-&gt;() noexcept;
}}
{{dcl|since=c++17|num=2|1=
constexpr const T&amp; operator*() const&amp; noexcept;
}}
{{dcl|since=c++17|num=2|1=
constexpr T&amp; operator*() &amp; noexcept;
}}
{{dcl|since=c++17|num=2|1=
constexpr const T&amp;&amp; operator*() const&amp;&amp; noexcept;
}}
{{dcl|since=c++17|num=2|1=
constexpr T&amp;&amp; operator*() &amp;&amp; noexcept;
}}
{{dcl end}}

Accesses the contained value.

@1@ Returns a pointer to the contained value.

@2@ Returns a reference to the contained value.

The behavior is undefined if {{c|*this}} does not contain a value.

===Parameters===
(none)

===Return value===
Pointer or reference to the contained value.

===Notes===
This operator does not check whether the optional contains a value! You can do so manually by using {{lc|has_value()}} or simply {{lc|operator bool()}}. Alternatively, if checked access is needed, {{lc|value()}} or {{lc|value_or()}} may be used.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;optional&gt;
#include &lt;string&gt;

int main()
{
    using namespace std::string_literals;
 
    std::optional&lt;int&gt; opt1 = 1;
    std::cout &lt;&lt; "opt1: " &lt;&lt; *opt1 &lt;&lt; '\n';
    
    *opt1 = 2;
    std::cout &lt;&lt; "opt1: " &lt;&lt; *opt1 &lt;&lt; '\n';
 
    std::optional&lt;std::string&gt; opt2 = "abc"s;
    std::cout &lt;&lt; "opt2: " &lt;&lt; std::quoted(*opt2) &lt;&lt; ", size: " &lt;&lt; opt2-&gt;size() &lt;&lt; '\n';
    
    // You can "take" the contained value by calling operator* on an rvalue to optional
    
    auto taken = *std::move(opt2);
    std::cout &lt;&lt; "taken: " &lt;&lt; std::quoted(taken) &lt;&lt; "\n"
                 "opt2: " &lt;&lt; std::quoted(*opt2) &lt;&lt; ", size: " &lt;&lt; opt2-&gt;size()  &lt;&lt; '\n';
}
|output=
opt1: 1
opt1: 2
opt2: "abc", size: 3
taken: "abc"
opt2: "", size: 0
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2762|std=C++17|before={{tt|operator-&gt;}} and {{tt|operator*}} might be potentially-throwing|after=made noexcept}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/optional/dsc value}}
{{dsc inc|cpp/utility/optional/dsc value_or}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}