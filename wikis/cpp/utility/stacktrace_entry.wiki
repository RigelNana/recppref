{{cpp/title|stacktrace_entry}}
{{cpp/utility/stacktrace_entry/navbar}}
{{ddcl|header=stacktrace|since=c++23|
class stacktrace_entry;
}}

The {{tt|stacktrace_entry}} class provides operations for querying information about an evaluation in a stacktrace. Each {{tt|stacktrace_entry}} object is either empty, or represents an evaluation in a stacktrace.

{{tt|stacktrace_entry}} models {{c|std::regular}} and {{c|std::three_way_comparable&lt;std::strong_ordering&gt;}}.

===Member types===
{{dsc begin}}
{{dsc|{{tt|native_handle_type}}|implementation-defined native handle type}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc constructor}}
{{dsc mem dtor|nolink=true|destroys the {{tt|stacktrace_entry}}}}
{{dsc mem fun|cpp/utility/stacktrace_entry/operator{{=}}|assigns the contents of one {{tt|stacktrace_entry}} to another}}

{{dsc h2|Observers}}
{{dsc mem fun|cpp/utility/stacktrace_entry/native_handle|gets the implementation-defined native handle of the {{tt|stacktrace_entry}}}}
{{dsc mem fun|cpp/utility/stacktrace_entry/operator bool|checks whether the {{tt|stacktrace_entry}} is empty}}

{{dsc h2|Query}}
{{dsc mem fun|cpp/utility/stacktrace_entry/description|gets the description of the evaluation represented by the {{tt|stacktrace_entry}}}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc source_file}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc source_line}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc fun|cpp/utility/stacktrace_entry/operator cmp|title=operator==&lt;br&gt;operator&lt;=&gt;|notes={{mark c++23}}|compares two {{tt|stacktrace_entry}} values}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc to_string}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc operator ltlt}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc hash}}
{{dsc inc|cpp/utility/stacktrace_entry/dsc formatter}}
{{dsc end}}

===Notes===
{{tt|boost::stacktrace::frame}} (available in [https://www.boost.org/doc/libs/release/doc/html/stacktrace.html Boost.Stacktrace]) can be used instead when {{tt|std::stacktrace_entry}} is not available.
{{feature test macro|__cpp_lib_stacktrace|std=C++23|value=202011L|[[cpp/error#Stacktrace|Stacktrace library]]}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc basic_stacktrace}}
{{dsc inc|cpp/utility/dsc source_location}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}