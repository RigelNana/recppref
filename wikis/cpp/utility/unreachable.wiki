{{cpp/title|unreachable}}
{{cpp/utility/program/navbar}}
{{ddcl|header=utility|since=c++23|
[[noreturn]] void unreachable();
}}

Invokes [[cpp/language/ub|undefined behavior]] at a given point.

An implementation may use this to optimize impossible code branches away (typically, in optimized builds) or to trap them to prevent further execution (typically, in debug builds).

===Notes===
{{feature test macro|__cpp_lib_unreachable|std=C++23|value=202202L|{{tt|std::unreachable}}}}

===Possible implementation===
{{eq fun
|1=
[[noreturn]] inline void unreachable()
{
    // Uses compiler specific extensions if possible.
    // Even if no extension is used, undefined behavior is still raised by
    // an empty function body and the noreturn attribute.
#if defined(_MSC_VER) &amp;&amp; !defined(__clang__) // MSVC
    __assume(false);
#else // GCC, Clang
    __builtin_unreachable();
#endif
}
}}

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;cstddef&gt;
#include &lt;cstdint&gt;
#include &lt;utility&gt;
#include &lt;vector&gt;

struct Color { std::uint8_t r, g, b, a; };

// Assume that only restricted set of texture caps is supported.
void generate_texture(std::vector&lt;Color&gt;&amp; tex, std::size_t xy)
{
    switch (xy)
    {
    case 128: [[fallthrough]];
    case 256: [[fallthrough]];
    case 512: /* ... */
        tex.clear();
        tex.resize(xy * xy, Color{0, 0, 0, 0});
        break;
    default:
        std::unreachable();
    }
}

int main()
{
    std::vector&lt;Color&gt; tex;
    generate_texture(tex, 128); // OK
    assert(tex.size() == 128 * 128);
    generate_texture(tex, 32);  // Results in undefined behavior
}
|p=true
|output=
Segmentation fault
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/language/attributes/dsc assume}}
{{dsc inc|cpp/memory/dsc assume_aligned}}
{{dsc see c|c/program/unreachable}}
{{dsc end}}

===External Links===
{{elink begin}}
{{elink|[https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html#index-_005f_005fbuiltin_005funreachable GCC docs: {{tt|__builtin_unreachable}}]}}
{{elink|[https://clang.llvm.org/docs/LanguageExtensions.html#builtin-unreachable Clang docs: {{tt|__builtin_unreachable}}]}}
{{elink|[https://docs.microsoft.com/en-us/cpp/intrinsics/assume MSVC docs: {{tt|__assume}}]}}
{{elink end}}

{{langlinks|cs|de|es|fr|it|ja|ko|pl|pt|ru|zh}}