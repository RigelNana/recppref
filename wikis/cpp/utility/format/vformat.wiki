{{cpp/title|vformat}}
{{cpp/utility/format/navbar}}

{{dcl begin}}
{{dcl header|format}}
{{dcl|num=1|since=c++20|1=
std::string vformat( std::string_view fmt, std::format_args args );
}}
{{dcl|num=2|since=c++20|1=
std::wstring vformat( std::wstring_view fmt, std::wformat_args args );
}}
{{dcl|num=3|since=c++20|1=
std::string vformat( const std::locale&amp; loc,
                     std::string_view fmt, std::format_args args );
}}
{{dcl|num=4|since=c++20|1=
std::wstring vformat( const std::locale&amp; loc,
                      std::wstring_view fmt, std::wformat_args args );
}}
{{dcl end}}

Format arguments held by {{c|args}} according to the format string {{c|fmt}}, and return the result as a string. If present, {{c|loc}} is used for locale-specific formatting.

===Parameters===
{{par begin}}
{{par|fmt|{{cpp/utility/format/format string}}}}
{{par|args|arguments to be formatted}}
{{par|loc|{{lc|std::locale}} used for locale-specific formatting}}
{{par end}}

===Return value===
A string object holding the formatted result.

===Exceptions===
Throws {{lc|std::format_error}} if {{c|fmt}} is not a valid format string for the provided arguments, or {{lc|std::bad_alloc}} on allocation failure. Also propagates any exception thrown by formatter or iterator operations.

===Example===
{{example
|code=
#include &lt;format&gt;
#include &lt;iostream&gt;

template&lt;typename... Args&gt;
inline void println(const std::format_string&lt;Args...&gt; fmt, Args&amp;&amp;... args)
{
    std::cout &lt;&lt; std::vformat(fmt.get(), std::make_format_args(args...)) &lt;&lt; '\n';
}

int main()
{
    println("{}{} {}{}", "Hello", ',', "C++", -1 + 2 * 3 * 4);
}
|output=
Hello, C++23
}}

===See also===

{{langlinks|es|ja|ru|zh}}