{{title|deduction guides for {{tt|std::tuple}}}}
{{cpp/utility/tuple/navbar}}
{{dcl begin}}
{{dcl header|tuple}}
{{dcl | num=1 | since=c++17 |
template&lt;class... UTypes&gt;
tuple(UTypes...) -&gt; tuple&lt;UTypes...&gt;;
}}
{{dcl | num=2 | since=c++17 |
template&lt;class T1, class T2&gt;
tuple(std::pair&lt;T1, T2&gt;) -&gt; tuple&lt;T1, T2&gt;;
}}
{{dcl | num=3 | since=c++17 |
template&lt;class Alloc, class... UTypes&gt;
tuple(std::allocator_arg_t, Alloc, UTypes...) -&gt; tuple&lt;UTypes...&gt;;
}}
{{dcl | num=4 | since=c++17 |
template&lt;class Alloc, class T1, class T2&gt;
tuple(std::allocator_arg_t, Alloc, std::pair&lt;T1, T2&gt;) -&gt; tuple&lt;T1, T2&gt;;
}}
{{dcl | num=5 | since=c++17 |
template&lt;class Alloc, class... UTypes&gt;
tuple(std::allocator_arg_t, Alloc, tuple&lt;UTypes...&gt;) -&gt; tuple&lt;UTypes...&gt;;
}}
{{dcl end}}

These [[cpp/language/class template argument deduction|deduction guides]] are provided for {{lc|std::tuple}} to account for the edge cases missed by the implicit deduction guides, in particular, non-copyable arguments and array to pointer conversion.
 
===Example===
{{example|code=
#include &lt;tuple&gt;
int main()
{
    int a[2], b[3], c[4];
    std::tuple t1{a, b, c}; // explicit deduction guide is used in this case
}
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}