{{cpp/utility/bitset/title|reset}}
{{cpp/utility/bitset/navbar}}
{{dcl begin}}
{{dcla|num=1|noexcept=c++11|constexpr=c++23|1=
bitset&amp; reset();
}}
{{dcla|num=2|constexpr=c++23|
bitset&amp; reset( std::size_t pos );
}}
{{dcl end}}

Sets bits to {{c|false}}.

@1@ Sets all bits to {{c|false}}

@2@ Sets the bit at position {{c|pos}} to {{c|false}}.

===Parameters===
{{par begin}}
{{par|pos|the position of the bit to set}}
{{par end}}

===Return value===
{{c|*this}}

===Exceptions===
@2@ Throws {{lc|std::out_of_range}} if {{c|pos}} does not correspond to a valid bit position.

===Example===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;

int main()
{
    std::bitset&lt;8&gt; b(42);
    std::cout &lt;&lt; "Bitset is         " &lt;&lt; b &lt;&lt; '\n';
    b.reset(1);
    std::cout &lt;&lt; "After b.reset(1): " &lt;&lt; b &lt;&lt; '\n';
    b.reset();
    std::cout &lt;&lt; "After b.reset():  " &lt;&lt; b &lt;&lt; '\n';
}
|output=
Bitset is         00101010
After b.reset(1): 00101000
After b.reset():  00000000
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2250|std=C++98|before=the behavior was undefined if {{c|pos}} does&lt;br&gt;not correspond to a valid bit position|after=always throws an&lt;br&gt;exception in this case}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc set}}
{{dsc inc|cpp/utility/bitset/dsc flip}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}