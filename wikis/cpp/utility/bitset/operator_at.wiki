{{cpp/utility/bitset/title|operator[]}}
{{cpp/utility/bitset/navbar}}
{{dcl begin}}
{{dcl|num=1|until1=c++11|notes={{mark constexpr since c++11}}|
bool operator[]( std::size_t pos ) const;
}}
{{dcl|num=2|notes={{mark constexpr since c++23}}|
reference operator[]( std::size_t pos );
}}
{{dcl end}}

Accesses the bit at position {{c|pos}}. The first version returns the value of the bit, the second version returns an object of type {{lc|std::bitset::reference}} that allows modification of the value.

Unlike {{lc|test()}}, does not throw exceptions: the behavior is undefined if {{c|pos}} is out of bounds.

===Parameters===
{{par begin}}
{{par|pos|position of the bit to return}}
{{par end}}

===Return value===
@1@ The value of the requested bit.

@2@ An object of type {{lc|std::bitset::reference}}, which allows writing to the requested bit.

===Exceptions===
(none)

===Example===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;cstddef&gt;
#include &lt;iostream&gt;

int main()
{
    std::bitset&lt;8&gt; b1{0b00101010}; // binary literal for 42
    
    for (std::size_t i = 0; i &lt; b1.size(); ++i)
        std::cout &lt;&lt; "b1[" &lt;&lt; i &lt;&lt; "]: " &lt;&lt; b1[i] &lt;&lt; '\n';
    b1[0] = true; // modifies the first bit through bitset::reference
    
    std::cout &lt;&lt; "After setting bit 0, b1 holds " &lt;&lt; b1 &lt;&lt; '\n';
}
|output=
b1[0]: 0
b1[1]: 1
b1[2]: 0
b1[3]: 1
b1[4]: 0
b1[5]: 1
b1[6]: 0
b1[7]: 0
After setting bit 0, b1 holds 00101011
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=11|std=C++98|before=1. the description was missing in the C++ standard&lt;br&gt;2. there was only the non-const overload|after=1. description added&lt;br&gt;2. added the const overload}}
{{dr list item|wg=lwg|dr=907|std=C++98|before=the behavior of reading the bit at {{c|pos}} was equivalent&lt;br&gt;to that of {{rlpf|test|args=pos}}, but {{tt|test()}} may throw exceptions|after=avoids mentioning {{tt|test()}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc test}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}