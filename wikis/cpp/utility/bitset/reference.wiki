{{cpp/utility/bitset/title|reference}}
{{cpp/utility/bitset/navbar}}
{{ddcl|
class reference;
}}

The {{lc|std::bitset}} class includes {{tt|std::bitset::reference}} as a publicly-accessible nested class. This class is used as a proxy object to allow users to interact with individual bits of a bitset, since standard C++ types (like references and pointers) are not built with enough precision to specify individual bits.

The primary use of {{tt|std::bitset::reference}} is to provide an lvalue that can be returned from {{rlpt|operator_at|operator[]}}.

Any reads or writes to a bitset that happen via a {{tt|std::bitset::reference}} potentially read or write to the entire underlying bitset.

===Member functions===
{{dsc begin}}
{{dsc mem ctor|nolink=true|constructs the reference. There is no default constructor. The copy constructor is {{rev inl|until=c++11|implicitly declared}}{{rev inl|since=c++11|defaulted}}. There may be internal constructor that is accessible only to {{lc|std::bitset}} itself.}}
{{dsc mem dtor|cpp/utility/bitset/reference|inlinemem=true|destroys the reference}}
{{dsc mem fun|operator{{=}}|nolink=true|assigns a {{c/core|bool}} to the referenced bit}}
{{dsc inc|cpp/utility/bitset/reference/dsc operator bool}}
{{dsc mem fun|operator~|nolink=true|returns inverted referenced bit}}
{{dsc mem fun|flip|nolink=true|flips the referenced bit}}
{{dsc end}}

{{member|{{small|std::bitset&lt;N&gt;::reference::}}~reference|2=
{{ddcl|notes={{mark constexpr since c++23}}|
~reference();
}}

Destroys the reference.
}}

{{member|{{small|std::bitset&lt;N&gt;::reference::}}operator{{=}}|
{{dcl begin}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
reference&amp; operator=( bool x );
|notes2={{mark constexpr since c++23}}|dcl2=
reference&amp; operator=( bool x ) noexcept;
}}
{{dcl rev multi|num=2|until1=c++11|dcl1=
reference&amp; operator=( const reference&amp; x );
|notes2={{mark constexpr since c++23}}|dcl2=
reference&amp; operator=( const reference&amp; x ) noexcept;
}}
{{dcl end}}

Assigns a value to the referenced bit.

===Parameters===
{{par begin}}
{{par|x|value to assign}}
{{par end}}

===Return value===
{{c|*this}}
}}

{{member|{{small|std::bitset&lt;N&gt;::reference::}}operator bool|
{{dcl begin}}
{{dcl rev multi|until1=c++11|dcl1=
operator bool() const;
|notes2={{mark constexpr since c++23}}|dcl2=
operator bool() const noexcept;
}}
{{dcl end}}

Returns the value of the referenced bit.

===Parameters===
(none)

===Return value===
The referenced bit.
}}

{{member|{{small|std::bitset&lt;N&gt;::reference::}}operator~|
{{dcl begin}}
{{dcl rev multi|until1=c++11|dcl1=
bool operator~() const;
|notes2={{mark constexpr since c++23}}|dcl2=
bool operator~() const noexcept;
}}
{{dcl end}}

Returns the inverse of the referenced bit.

===Parameters===
(none)

===Return value===
The inverse of the referenced bit.
}}

{{member|{{small|std::bitset&lt;N&gt;::reference::}}flip|
{{dcl begin}}
{{dcl rev multi|until1=c++11|dcl1=
reference&amp; flip();
|notes2={{mark constexpr since c++23}}|dcl2=
reference&amp; flip() noexcept;
}}
{{dcl end}}

Inverts the referenced bit.

===Parameters===
(none)

===Return value===
{{c|*this}}
}}

===Example===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;

int main()
{
    std::bitset&lt;4&gt; bs{0b1110};
    std::bitset&lt;4&gt;::reference ref = bs[2];

    auto info = [&amp;](int id)
    {
        std::cout &lt;&lt; id &lt;&lt; ") bs: " &lt;&lt; bs &lt;&lt; "; ref bit: " &lt;&lt; ref &lt;&lt; '\n';
    };

    info(1);
    ref = false;
    info(2);
    ref = true;
    info(3);
    ref.flip();
    info(4);
    ref = bs[1]; // operator=( const reference&amp; x )
    info(5);

    std::cout &lt;&lt; "6) ~ref bit: " &lt;&lt; ~ref &lt;&lt; '\n';
}
|output=
1) bs: 1110; ref bit: 1
2) bs: 1010; ref bit: 0
3) bs: 1110; ref bit: 1
4) bs: 1010; ref bit: 0
5) bs: 1110; ref bit: 1
6) ~ref bit: 0
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc operator_at}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}