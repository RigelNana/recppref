{{cpp/utility/bitset/title|count}}
{{cpp/utility/bitset/navbar}}
{{ddcla|noexcept=c++11|constexpr=c++23|
std::size_t count() const;
}}

Returns the number of bits that are set to {{c|true}}.

===Return value===
Number of bits that are set to {{c|true}}.

===Example===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;

constexpr auto popcount(unsigned x) noexcept
{
    unsigned num{};
    for (; x; ++num, x &amp;= (x - 1));
    return num;
};
static_assert(popcount(0b101010) == std::bitset&lt;8&gt;{0b101010}.count());

int main()
{
    std::bitset&lt;8&gt; b("00010010");
    std::cout &lt;&lt; "Initial value: " &lt;&lt; b &lt;&lt; '\n';

    // Find the first unset bit
    std::size_t idx = 0;
    while (idx &lt; b.size() &amp;&amp; b.test(idx))
        ++idx;

    // Continue setting bits until half the bitset is filled
    while (idx &lt; b.size() &amp;&amp; b.count() &lt; b.size() / 2)
    {
        b.set(idx);
        std::cout &lt;&lt; "Setting bit " &lt;&lt; idx &lt;&lt; ": " &lt;&lt; b &lt;&lt; '\n';
        while (idx &lt; b.size() &amp;&amp; b.test(idx))
            ++idx;
    }
}
|output=
Initial value: 00010010
Setting bit 0: 00010011
Setting bit 2: 00010111
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc size}}
{{dsc inc|cpp/numeric/dsc popcount}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}