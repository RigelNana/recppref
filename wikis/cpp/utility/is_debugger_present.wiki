{{cpp/title|is_debugger_present}}
{{cpp/error/navbar}}
{{ddcl|header=debugging|since=c++26|
bool is_debugger_present() noexcept;
}}

Attempts to determine if the program is being executed with debugger present.

By default, the behavior of this function is completely implementation-defined. A C++ program may provide the definition of this signature to replace the behavior of this function.

===Return value===
The default version returns {{c|true}} if, to the best of its knowledge, the program is executed under a debugger.

===Notes===
The intent of this function is allowing printing out extra output to help diagnose problems, executing extra test code, displaying an extra user interface to help in debugging, etc.

This function standardizes many similar existing facilities: [https://github.com/boostorg/test/blob/develop/include/boost/test/impl/debug.ipp#L647 {{tt|under_debugger}}] from [https://www.boost.org/doc/libs/release/libs/test/doc/html/index.html boost.test], [https://learn.microsoft.com/en-us/windows/win32/api/debugapi/nf-debugapi-isdebuggerpresent {{tt|IsDebuggerPresent()}}] from Win32 API, [https://github.com/catchorg/Catch2/blob/devel/src/catch2/internal/catch_debugger.cpp {{tt|isDebuggerActive}}] from [https://github.com/catchorg/Catch2 Catch2], [https://docs.unrealengine.com/5.0/en-US/API/Runtime/Core/GenericPlatform/FGenericPlatformMisc/IsDebuggerPresent/ {{tt|IsDebuggerPresent}}] from [https://www.unrealengine.com/ Unreal Engine], etc.

{{ftm begin}}
{{ftm|__cpp_lib_debugging|Debugging support library|value=202311L|std=C++26|rowspan=2}}
{{ftm|-|Replaceable {{tt|std::is_debugger_present}}|value=202403L|std=C++26}}
{{ftm end}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc breakpoint}}
{{dsc inc|cpp/utility/dsc breakpoint_if_debugging}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}