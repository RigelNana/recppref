{{cpp/title|compare_partial_order_fallback}}
{{cpp/utility/navbar}}
{{dcl begin}}
{{dcl header|compare}}
{{dcl|since=c++20|1=
inline namespace /* unspecified */ {
    inline constexpr /* unspecified */
        compare_partial_order_fallback = /* unspecified */;
}
}}
{{dcl h|Call signature}}
{{dcl|since=c++20|1=
template&lt; class T, class U &gt;
    requires /* see below */
constexpr std::partial_ordering
    compare_partial_order_fallback( T&amp;&amp; t, U&amp;&amp; u ) noexcept(/* see below */);
}}
{{dcl end}}

Performs three-way comparison on [[cpp/language/expressions#Full-expressions|subexpressions]] {{c|t}} and {{c|u}} and produces a result of type {{ltt std|cpp/utility/compare/partial_ordering}}, even if the operator {{tt|1=&lt;=&gt;}} is unavailable.

If {{c/core|std::decay_t&lt;T&gt;}} and {{c/core|std::decay_t&lt;U&gt;&gt;}} are the same type, {{c|std::compare_partial_order_fallback(t, u)}} is [[cpp/language/expressions#Expression-equivalence|expression-equivalent]] to:
* {{c|std::partial_order(t, u)}}, if it is a well-formed expression;
* otherwise, {{c multi
|1=t == u ? std::partial_ordering::equivalent :
|2=t &lt; u  ? std::partial_ordering::less :
|3=u &lt; t  ? std::partial_ordering::greater :
|4=         std::partial_ordering::unordered
}}
: if the expressions {{c|1=t == u}}, {{c|t &lt; u}} and {{c|u &lt; t}} are all well-formed and each of {{c/core|1=decltype(t == u)}} and {{c/core|decltype(t &lt; u)}} models {{lti|cpp/concepts/boolean-testable}}, except that {{c|t}} and {{c|u}} are evaluated only once.

In all other cases, {{c|std::compare_partial_order_fallback(t, u)}} is ill-formed, which can result in [[cpp/language/sfinae|substitution failure]] when it appears in the immediate context of a template instantiation.

{{cpp/ranges/cpo|std}}

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2114|paper=P2167R3|std=C++20|before=the fallback mechanism only required&lt;br&gt;return types to be convertible to {{c/core|bool}}|after=constraints strengthened}}
{{dr list item|wg=lwg|dr=3465|std=C++20|before=the fallback mechanism did not require {{c|u &lt; t}} to be well-formed|after=required}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/compare/dsc partial_order}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}