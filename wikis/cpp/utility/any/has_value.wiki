{{cpp/utility/any/title|has_value}}
{{cpp/utility/any/navbar}}
{{dcl begin}}
{{dcl|since=c++17|
bool has_value() const noexcept;
}}
{{dcl end}}

Checks whether the object contains a value.

===Parameters===
(none)

===Return value===
{{c|true}} if and only if the instance contains a value.

===Example===
{{example
|code=
#include &lt;any&gt;
#include &lt;cassert&gt;
#include &lt;string&gt;

int main()
{
    std::any a0;
    assert(a0.has_value() == false);

    std::any a1 = 42;
    assert(a1.has_value() == true);
    assert(std::any_cast&lt;int&gt;(a1) == 42);
    a1.reset();
    assert(a1.has_value() == false);

    auto a2 = std::make_any&lt;std::string&gt;("Andromeda");
    assert(a2.has_value() == true);
    assert(std::any_cast&lt;std::string&amp;&gt;(a2) == "Andromeda");
    a2.reset();
    assert(a2.has_value() == false);
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/any/dsc reset}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}