{{cpp/utility/basic_stacktrace/title|basic_stacktrace}}
{{cpp/utility/basic_stacktrace/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|
basic_stacktrace() noexcept(/* see below */);
}}
{{dcl|num=2|since=c++23|
explicit basic_stacktrace( const allocator_type&amp; alloc ) noexcept;
}}
{{dcl|num=3|since=c++23|
basic_stacktrace( const basic_stacktrace&amp; other );
}}
{{dcl|num=4|since=c++23|
basic_stacktrace( basic_stacktrace&amp;&amp; other ) noexcept;
}}
{{dcl|num=5|since=c++23|
basic_stacktrace( const basic_stacktrace&amp; other,
                  const allocator_type&amp; alloc );
}}
{{dcl|num=6|since=c++23|
basic_stacktrace( basic_stacktrace&amp;&amp; other, const allocator_type&amp; alloc );
}}
{{dcl end}}

Constructs an empty {{tt|basic_stacktrace}}, or copy/move from {{c|other}}.

@1@ Default constructor. Constructs an empty {{tt|basic_stacktrace}} with a default-constructed allocator.

@2@ Constructs an empty {{tt|basic_stacktrace}} using {{c|alloc}} as the allocator.

@3@ Copy constructor. Constructs a {{tt|basic_stacktrace}} with the copy of the contents of {{c|other}}, the allocator is obtained as if by calling {{c|std::allocator_traits&lt;allocator_type&gt;::select_on_container_copy_construction(other.get_allocator())}}.

@4@ Move constructor. Constructs a {{tt|basic_stacktrace}} with the contents of {{c|other}} using move semantics. Allocator is move-constructed from that of {{c|other}}. After construction, {{c|other}} is left in a valid but unspecified state.

@5@ Same as the copy constructor, except that {{c|alloc}} is used as the allocator.

@6@ Behaves same as the move constructor if {{c|1=alloc == other.get_allocator()}}. Otherwise, allocates memory with {{c|alloc}} and performs element-wise move. {{c|alloc}} is used as the allocator.

{{v|3,5,6}} may throw an exception or construct an empty {{tt|basic_stacktrace}} on allocation failure.

===Parameters===
{{par begin}}
{{par|alloc|allocator to use for all memory allocations of the constructed {{tt|basic_stacktrace}}}}
{{par|other|another {{tt|basic_stacktrace}} to copy/move from}}
{{par end}}

===Exceptions===
@1@ {{noexcept|std::is_nothrow_default_constructible_v&lt;allocator_type&gt;}}
@3,5,6@ May propagate the exception thrown on allocation failure.

===Complexity===
@1,2@ Constant.

@3@ Linear in size of {{c|other}}.

@4@ Constant.

@5@ Linear in size of {{c|other}}.

@6@ Linear in size of {{c|other}} if {{c|1=alloc != other.get_allocator()}}, otherwise constant.

===Notes===
{{cpp/container/lwg2321-note|4}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/basic_stacktrace/dsc operator{{=}}}}
{{dsc inc|cpp/utility/basic_stacktrace/dsc current}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}