{{cpp/title|mem_fun_ref}}
{{cpp/utility/functional/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|deprecated=c++11|until=c++17|num=1|
template&lt; class Res, class T &gt;
std::mem_fun_ref_t&lt;Res,T&gt; mem_fun_ref( Res (T::*f)() );
}}
{{dcl|deprecated=c++11|until=c++17|num=1|
template&lt; class Res, class T &gt;
std::const_mem_fun_ref_t&lt;Res,T&gt; mem_fun_ref( Res (T::*f)() const );
}}
{{dcl|deprecated=c++11|until=c++17|num=2|
template&lt; class Res, class T, class Arg &gt;
std::mem_fun1_ref_t&lt;Res,T,Arg&gt; mem_fun_ref( Res (T::*f)(Arg) );
}}
{{dcl|deprecated=c++11|until=c++17|num=2|
template&lt; class Res, class T, class Arg &gt;
std::const_mem_fun1_ref_t&lt;Res,T,Arg&gt; mem_fun_ref( Res (T::*f)(Arg) const );
}}
{{dcl end}}

Creates a member function wrapper object, deducing the target type from the template arguments. The wrapper object expects a reference to an object of type {{tt|T}} as the first parameter to its {{c|operator()}}.

@1@ Effectively calls {{c|std::mem_fun_ref_t&lt;S,T&gt;(f)}} or {{c|std::const_mem_fun_ref_t&lt;S,T&gt;(f)}}.

@2@ Effectively calls {{c|std::mem_fun1_ref_t&lt;S,T&gt;(f)}} or {{c|std::const_mem_fun1_ref_t&lt;S,T&gt;(f)}}.

This function and the related types were deprecated in C++11 and removed in C++17 in favor of the more general {{lc|std::mem_fn}} and {{lc|std::bind}}, both of which create callable adaptor-compatible function objects from member functions.

===Parameters===
{{par begin}}
{{par|f|pointer to a member function to create a wrapper for}}
{{par end}}

===Return value===
A function object wrapping {{c|f}}.

{{cpp/impldef exception}}

===Notes===
The difference between {{c|std::mem_fun}} and {{c|std::mem_fun_ref}} is that the former produces a function wrapper that expects a pointer to an object, whereas the latter &amp;mdash; a reference.

===Example===
{{example
|Uses {{tt|std::mem_fun_ref}} to bind {{lc|std::string}}'s member function {{lc|std::basic_string::size|size()}}.
|code=
#include &lt;algorithm&gt;
#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;std::string&gt; v = {"once", "upon", "a", "time"};
    std::transform(v.cbegin(), v.cend(),
                   std::ostream_iterator&lt;std::size_t&gt;(std::cout, " "),
                   std::mem_fun_ref(&amp;std::string::size));
}
|output=
4 4 1 4
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc mem_fun}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}