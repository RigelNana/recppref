{{cpp/title|bit_not}}
{{cpp/utility/functional/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|since=c++14|1=
template&lt; class T = void &gt;
struct bit_not;
}}
{{dcl end}}

Function object for performing bitwise NOT. Effectively calls {{c|operator~}} on type {{tt|T}}.

===Specializations===
The standard library provides a specialization of {{tt|std::bit_not}} when {{tt|T}} is not specified, which leaves the parameter types and return type to be deduced.
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc bit_not_void}}
{{dsc end}}

{{cpp/utility/functional/member types|result=T|arg1=T|inherit=no}}

===Member functions===
{{dsc begin}}
{{dsc mem fun|operator()|nolink=true|returns the result of bitwise NOT of its argument|notes={{mark c++14}}}}
{{dsc end}}

{{member|{{small|std::bit_not::}}operator()|2=
{{dcl begin}}
{{dcl|since=c++14|
constexpr T operator()( const T&amp; arg ) const;
}}
{{dcl end}}

Returns the result of bitwise NOT of {{c|arg}}.

===Parameters===
{{par begin}}
{{par|arg|value to compute bitwise NOT of}}
{{par end}}

===Return value===
The result of {{c|~arg}}.

{{cpp/impldef exception}}

===Possible implementation===
{{eq fun|1=
constexpr T operator()(const T&amp; arg) const
{
    return ~arg;
}
}}
}}

===Notes===
Although {{tt|std::bit_not}} is added via post-C++11 proposal {{wg21|N3421}}, it is treated as a part of the resolution for {{lwg|660}} (except for its transparent specialization {{rlpt|bit_not void|std::bit_not&lt;&gt;}}) by common implementations, and thus available in their C++98/03 mode.

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}