{{cpp/title|minus}}
{{cpp/utility/functional/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl rev begin}}
{{dcl|until=c++14|
template&lt; class T &gt;
struct minus;
}}
{{dcl|since=c++14|
template&lt; class T {{=}} void &gt;
struct minus;
}}
{{dcl rev end}}
{{dcl end}}

Function object for performing subtraction. Effectively calls {{c|operator-}} on two instances of type {{tt|T}}.

===Specializations===
{{rev begin}}
{{rev|since=c++14|
The standard library provides a specialization of {{tt|std::minus}} when {{tt|T}} is not specified, which leaves the parameter types and return type to be deduced.
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc minus_void}}
{{dsc end}}
}}
{{rev end}}

{{cpp/utility/functional/member types|result=T|arg1=T|arg2=T}}

===Member functions===
{{dsc begin}}
{{dsc mem fun|operator()|nolink=true|returns the difference between two arguments}}
{{dsc end}}

{{member|{{small|std::minus::}}operator()|2=
{{dcl begin}}
{{dcla|constexpr=c++14|1=
T operator()( const T&amp; lhs, const T&amp; rhs ) const;
}}
{{dcl end}}

Returns the difference between {{c|lhs}} and {{c|rhs}}.

===Parameters===
{{par begin}}
{{par|lhs, rhs|values to subtract from one another}}
{{par end}}

===Return value===
The result of {{c|lhs - rhs}}.

{{cpp/impldef exception}}

===Possible implementation===
{{eq fun|1=
constexpr T operator()(const T&amp; lhs, const T&amp; rhs) const 
{
    return lhs - rhs;
}
}}
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}