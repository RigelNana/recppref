{{cpp/title|uses_allocator&lt;small&gt;&lt;std::function&gt;&lt;/small&gt;}}
{{cpp/utility/functional/function/navbar}}
{{dcl begin}}
{{dcl header | functional}}
{{dcl | since=c++11 | until=c++17 |
template&lt; class R, class... ArgTypes, class Alloc &gt;
struct uses_allocator&lt;std::function&lt;R(ArgTypes...)&gt;, Alloc&gt; : std::true_type { };
}}
{{dcl end}}

This specialization of {{lc|std::uses_allocator}} informs other library components that all objects of type {{lc|std::function}} support ''uses-allocator construction'', even though they do not have a nested {{tt|allocator_type}}. 

===Notes===

{{tt|std::function}}'s allocator support was poorly specified and inconsistently implemented. Some implementations do not support uses-allocator construction at all, some provide the needed constructor overloads but ignore the supplied allocator argument, and some provide the overloads and use the supplied allocator for construction but not when the {{tt|std::function}} is reassigned. As a result, allocator support was removed in C++17.

{{cpp/types/integral_constant/inherit2 |{{c|true}}|bool}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/memory/dsc uses_allocator}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}