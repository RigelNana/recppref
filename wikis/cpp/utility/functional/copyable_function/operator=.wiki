{{cpp/utility/functional/copyable_function/title|operator{{=}}}}
{{cpp/utility/functional/copyable_function/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++26|1=
copyable_function&amp; operator=( const copyable_function&amp; other );
}}
{{dcl|num=2|since=c++26|1=
copyable_function&amp; operator=( copyable_function&amp;&amp; other );
}}
{{dcl|num=3|since=c++26|1=
copyable_function&amp; operator=( std::nullptr_t ) noexcept;
}}
{{dcl|num=4|since=c++26|1=
template&lt; class F &gt;
copyable_function&amp; operator=( F&amp;&amp; f );
}}
{{dcl end}}

Assigns a new target to {{tt|std::copyable_function}} or destroys its target.

@1@ Assigns a copy of the target of {{c|other}} to {{c|*this}} as if by executing {{c|auto(other).swap(*this)}}.

@2@ Moves the target of {{c|other}} to {{c|*this}} or destroys the target of {{c|*this}} (if any) if {{c|other}} is empty, by {{c|auto(std::move(other)).swap(*this)}}. {{c|other}} is in a valid state with an unspecified value after move assignment.

@3@ Destroys the current target if it exists. {{c|*this}} is empty after the call.

@4@ Sets the target of {{c|*this}} to the callable {{c|f}}, or destroys the current target if {{c|f}} is a null function pointer, a null pointer to member function, or an empty {{tt|std::copyable_function}}, as if by executing {{c|copyable_function(std::forward&lt;F&gt;(f)).swap(*this);}}. {{cpp/enable_if|the constructor of {{tt|copyable_function}} from {{tt|F}} participates in overload resolution}}. The program is ill-formed or has undefined behavior if the selected constructor call is ill-formed or has undefined behavior.

===Parameters===
{{par begin}}
{{par|other|another {{tt|std::copyable_function}} object to copy or move the target of}}
{{par|f|a callable object to initialize the new target with}}
{{par end}}

===Return value===
{{c|*this}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/function/dsc operator{{=}}}}
{{dsc inc|cpp/utility/functional/move_only_function/dsc operator{{=}}}}
{{dsc begin}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}