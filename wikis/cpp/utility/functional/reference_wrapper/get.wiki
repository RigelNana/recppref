{{cpp/utility/functional/reference_wrapper/title|get|operator T&amp;}}
{{cpp/utility/functional/reference_wrapper/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|notes={{mark constexpr since c++20}}|
operator T&amp; () const noexcept;
}}
{{dcl|num=2|since=c++11|notes={{mark constexpr since c++20}}|
T&amp; get() const noexcept;
}}
{{dcl end}}

Returns the stored reference.

===Parameters===
(none)

===Return value===
The stored reference.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;functional&gt;
#include &lt;map&gt;
#include &lt;optional&gt;
#include &lt;string_view&gt;

using Map = std::map&lt;std::string_view, int&gt;;
using Opt = std::optional&lt;std::reference_wrapper&lt;Map::value_type&gt;&gt;;

Opt find(Map&amp; m, std::string_view s)
{
    auto it = m.find(s);
    return it == m.end() ? Opt{} : Opt{*it};
}

int main()
{
    Map m{&lt;!----&gt;{"A", 1}, {"B", 2}, {"C", 3}&lt;!----&gt;};

    if (auto opt = find(m, "C"); opt)
        opt-&gt;get().second = 42;
        // std::optional::operator-&gt;() returns reference to std::reference_wrapper, then
        // reference_wrapper::get() returns reference to map::value_type, i.e. std::pair

    assert(m["C"] == 42);
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/reference_wrapper/dsc operator()}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}