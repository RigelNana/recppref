{{cpp/title|copyable_function}}
{{cpp/utility/functional/copyable_function/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|num=1|since=c++26|
template&lt; class... &gt;
class copyable_function; // not defined
}}
{{dcl|num=2|since=c++26|
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...)&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) noexcept&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) &amp;&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) &amp; noexcept&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) &amp;&amp;&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) &amp;&amp; noexcept&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) const&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) const noexcept&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) const &amp;&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) const &amp; noexcept&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) const &amp;&amp;&gt;;
template&lt; class R, class... Args &gt;
class copyable_function&lt;R(Args...) const &amp;&amp; noexcept&gt;;
}}
{{dcl end}}

Class template {{tt|std::copyable_function}} is a general-purpose polymorphic function wrapper. {{tt|std::copyable_function}} objects can store and invoke any {{named req|CopyConstructible}} {{named req|Callable}} ''target'' â€” functions, [[cpp/language/lambda|lambda expressions]], [[cpp/utility/functional/bind|bind expressions]], or other function objects, as well as pointers to member functions and pointers to member objects.

The stored callable object is called the ''target'' of {{tt|std::copyable_function}}. If a {{tt|std::copyable_function}} contains no target, it is called ''empty''. Unlike {{lc|std::function}}, invoking an ''empty'' {{tt|std::copyable_function}} results in undefined behavior.

{{tt|std::copyable_function}}s supports every possible combination of [[cpp/language/member functions#Member functions with cv-qualifiers|cv-qualifiers]] (not including {{c/core|volatile}}), [[cpp/language/member functions#Member functions with ref-qualifier|ref-qualifiers]], and [[cpp/language/noexcept spec|noexcept-specifiers]]  provided in its template parameter. These qualifiers and specifier (if any) are added to its {{rlt|operator()}}.

{{tt|std::copyable_function}} satisfies the requirements of {{named req|CopyConstructible}} and {{named req|CopyAssignable}}.

===Member types===
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|result_type}}|{{tt|R}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc constructor}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc destructor}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc operator{{=}}}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc swap}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc operator_bool}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc operator()}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc swap2}}
{{dsc inc|cpp/utility/functional/copyable_function/dsc operator{{==}}}}
{{dsc end}}

===Notes===
Implementations may store a callable object of small size within the {{tt|std::copyable_function}} object. Such small object optimization is effectively required for function pointers and {{lc|std::reference_wrapper}} specializations, and can only be applied to types {{tt|T}} for which {{c|std::is_nothrow_move_constructible_v&lt;T&gt;}} is {{c|true}}.

{{feature test macro|__cpp_lib_copyable_function|std=C++26|value=202306L|{{tt|std::copyable_function}}}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc function}}
{{dsc inc|cpp/utility/functional/dsc move_only_function}}
{{dsc inc|cpp/utility/functional/dsc function_ref}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}