{{cpp/title|less}}
{{cpp/utility/functional/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl rev multi
|dcl1=
template&lt; class T &gt;
struct less;
|since2=c++14|dcl2=
template&lt; class T = void &gt;
struct less;
}}
{{dcl end}}

Function object for performing comparisons. The main template invokes {{c|operator&lt;}} on type {{tt|T}}.

===Specializations===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc less_void}}
{{dsc end}}

{{cpp/utility/functional/member types|result=bool|arg1=T|arg2=T}}

===Member functions===
{{dsc begin}}
{{dsc mem fun|operator()|nolink=true|checks whether the first argument is ''less'' than the second}}
{{dsc end}}

{{member|{{small|std::less::}}operator()|2=
{{dcl begin}}
{{dcla|constexpr=c++14|1=
bool operator()( const T&amp; lhs, const T&amp; rhs ) const;
}}
{{dcl end}}

Checks whether {{c|lhs}} is ''less'' than {{c|rhs}}.

===Parameters===
{{par begin}}
{{par|lhs, rhs|values to compare}}
{{par end}}

===Return value===
{{c|lhs &lt; rhs}}.

If {{tt|T}} is a pointer type, the result is consistent with the [[cpp/language/operator comparison#Pointer total order|implementation-defined strict total order over pointers]].

{{cpp/impldef exception}}

===Possible implementation===
{{eq fun|1=
constexpr bool operator()(const T&amp; lhs, const T&amp; rhs) const 
{
    return lhs &lt; rhs; // assumes that the implementation handles pointer total order
}
}}
}}

===Example===
{{example
|code=
#include &lt;functional&gt;

template&lt;typename A, typename B, typename C = std::less&lt;&gt;&gt;
constexpr bool fun(A a, B b, C cmp = C{})
{
    return cmp(a, b);
}

static_assert(fun(1, 2) == true);
static_assert(fun(1.0, 1) == false);
static_assert(fun(1, 2.0) == true);
static_assert(std::less&lt;int&gt;{}(5, 5.6) == false);   // 5 &lt; 5 (warn: implicit conversion)
static_assert(std::less&lt;double&gt;{}(5, 5.6) == true); // 5.0 &lt; 5.6
static_assert(std::less&lt;int&gt;{}(5.6, 5.7) == false); // 5 &lt; 5 (warn: implicit conversion)
static_assert(std::less{}(5, 5.6) == true);         // less&lt;void&gt;: 5.0 &lt; 5.6

int main() {}
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2562|std=C++98|before=the pointer total order might be inconsistent|after=guaranteed to be consistent}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc equal_to}}
{{dsc inc|cpp/utility/functional/dsc greater}}
{{dsc inc|cpp/utility/functional/ranges/dsc {{SUBPAGENAMEE}}}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}