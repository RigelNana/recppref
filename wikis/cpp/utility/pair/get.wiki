{{cpp/title|get{{petty|(std::pair)}}}}
{{cpp/utility/pair/navbar}}
{{dcl begin}}
{{dcl header|utility}}
{{dcla|anchor=no|num=1|since=c++11|constexpr=c++14|
template&lt; std::size_t I, class T1, class T2 &gt;
typename std::tuple_element&lt;I, std::pair&lt;T1,T2&gt; &gt;::type&amp;
    get( std::pair&lt;T1, T2&gt;&amp; p ) noexcept;
}}
{{dcla|anchor=no|num=2|since=c++11|constexpr=c++14|
template&lt; std::size_t I, class T1, class T2 &gt;
const typename std::tuple_element&lt;I, std::pair&lt;T1,T2&gt; &gt;::type&amp;
    get( const std::pair&lt;T1,T2&gt;&amp; p ) noexcept;
}}
{{dcla|anchor=no|num=3|since=c++11|constexpr=c++14|
template&lt; std::size_t I, class T1, class T2 &gt;
typename std::tuple_element&lt;I, std::pair&lt;T1,T2&gt; &gt;::type&amp;&amp;
    get( std::pair&lt;T1,T2&gt;&amp;&amp; p ) noexcept;
}}
{{dcla|anchor=no|num=4|since=c++11|constexpr=c++14|
template&lt; std::size_t I, class T1, class T2 &gt;
const typename std::tuple_element&lt;I, std::pair&lt;T1,T2&gt; &gt;::type&amp;&amp;
    get( const std::pair&lt;T1,T2&gt;&amp;&amp; p ) noexcept;
}}
{{dcl|num=5|since=c++14|
template&lt; class T, class U &gt;
constexpr T&amp; get( std::pair&lt;T, U&gt;&amp; p ) noexcept;
}}
{{dcl|num=6|since=c++14|
template&lt; class T, class U &gt;
constexpr const T&amp; get( const std::pair&lt;T, U&gt;&amp; p ) noexcept;
}}
{{dcl|num=7|since=c++14|
template&lt; class T, class U &gt;
constexpr T&amp;&amp; get( std::pair&lt;T, U&gt;&amp;&amp; p ) noexcept;
}}
{{dcl|num=8|since=c++14|
template&lt; class T, class U &gt;
constexpr const T&amp;&amp; get( const std::pair&lt;T, U&gt;&amp;&amp; p ) noexcept;
}}
{{dcl|num=9|since=c++14|
template&lt; class T, class U &gt;
constexpr T&amp; get( std::pair&lt;U, T&gt;&amp; p ) noexcept;
}}
{{dcl|num=10|since=c++14|
template&lt; class T, class U &gt;
constexpr const T&amp; get( const std::pair&lt;U, T&gt;&amp; p ) noexcept;
}}
{{dcl|num=11|since=c++14|
template&lt; class T, class U &gt;
constexpr T&amp;&amp; get( std::pair&lt;U, T&gt;&amp;&amp; p ) noexcept;
}}
{{dcl|num=12|since=c++14|
template&lt; class T, class U &gt;
constexpr const T&amp;&amp; get( const std::pair&lt;U, T&gt;&amp;&amp; p ) noexcept;
}}
{{dcl end}}

Extracts an element from the pair using {{lt|cpp/utility/tuple/tuple-like}} interface.

@1-4@ The index-based overloads fail to compile if the index {{tt|I}} is neither {{c|0}} nor {{c|1}}.

@5-12@ The type-based overloads fail to compile if the types {{tt|T}} and {{tt|U}} are the same.

===Parameters===
{{par begin}}
{{par|p|pair whose contents to extract}}
{{par end}}

===Return value===

@1-4@ Returns a reference to {{c|p.first}} if {{c|1=I == 0}} and a reference to {{c|p.second}} if {{c|1=I == 1}}.
@5-8@ Returns a reference to {{c|p.first}}.
@9-12@ Returns a reference to {{c|p.second}}.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;utility&gt;

int main()
{
    auto p = std::make_pair(1, 3.14);
    std::cout &lt;&lt; '(' &lt;&lt; std::get&lt;0&gt;(p) &lt;&lt; ", " &lt;&lt; std::get&lt;1&gt;(p) &lt;&lt; ")\n";
    std::cout &lt;&lt; '(' &lt;&lt; std::get&lt;int&gt;(p) &lt;&lt; ", " &lt;&lt; std::get&lt;double&gt;(p) &lt;&lt; ")\n";
}
|output=
(1, 3.14)
(1, 3.14)
}}

===Defect reports===
{{dr list begin}}
{{dr list item|dr=2485|wg=lwg|std=C++11 (by index)&lt;br&gt;C++14 (by type)|before=there are no overloads for const pair&amp;&amp;|after=the overloads are added}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/language/dsc structured binding}}
{{dsc inc|cpp/utility/tuple/dsc get}}
{{dsc inc|cpp/container/array/dsc get}}
{{dsc inc|cpp/utility/variant/dsc get}}
{{dsc inc|cpp/ranges/subrange/dsc get}}
{{dsc inc|cpp/numeric/complex/dsc get}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}