{{cpp/title|swap&lt;small&gt;(std::pair)&lt;/small&gt;}}
{{cpp/utility/pair/navbar}}
{{dcl begin}}
{{dcl header|utility}}
{{dcl rev multi|num=1
|since1=c++11|dcl1=
template&lt; class T1, class T2 &gt;
void swap( std::pair&lt;T1,T2&gt;&amp; x, std::pair&lt;T1,T2&gt;&amp; y )
    noexcept(/* see below */);
|since2=c++20|dcl2=
template&lt; class T1, class T2 &gt;
constexpr void swap( std::pair&lt;T1,T2&gt;&amp; x, std::pair&lt;T1,T2&gt;&amp; y )
    noexcept(/* see below */);
}}
{{dcl|num=2
|since=c++23|
template&lt; class T1, class T2 &gt;
constexpr void swap( const std::pair&lt;T1,T2&gt;&amp; x, const std::pair&lt;T1,T2&gt;&amp; y )
    noexcept(/* see below */);
}}
{{dcl end}}

Swaps the contents of {{tt|x}} and {{tt|y}}. Equivalent to {{c|x.swap(y)}}.

{{rrev|since=c++17|
@1@ {{cpp/enable_if|{{c|std::is_swappable_v&lt;first_type&gt; &amp;&amp; std::is_swappable_v&lt;second_type&gt;}} is {{c|true}}}}.

@2@ {{cpp/enable_if|{{c|std::is_swappable_v&lt;const first_type&gt; &amp;&amp; std::is_swappable_v&lt;const second_type&gt;}} is {{c|true}}}}.
}}

===Parameters===
{{par begin}}
{{par|x, y|pairs whose contents to swap}}
{{par end}}

===Return value===
(none)

===Exceptions===
{{noexcept|noexcept(x.swap(y))}}

===Example===
{{example|
|code=
#include &lt;iostream&gt;
#include &lt;utility&gt;

int main()
{
    auto p1 = std::make_pair(10, 3.14);
    auto p2 = std::pair(12, 1.23); // CTAD, since C++17

    auto print_p1_p2 = [&amp;](auto msg) {
        std::cout &lt;&lt; msg
                  &lt;&lt; "p1 = {" &lt;&lt; std::get&lt;0&gt;(p1)
                  &lt;&lt; ", "     &lt;&lt; std::get&lt;1&gt;(p1) &lt;&lt; "}, "
                  &lt;&lt; "p2 = {" &lt;&lt; std::get&lt;0&gt;(p2)
                  &lt;&lt; ", "     &lt;&lt; std::get&lt;1&gt;(p2) &lt;&lt; "}\n";
    };

    print_p1_p2("Before p1.swap(p2): ");
    p1.swap(p2);
    print_p1_p2("After  p1.swap(p2): ");
    std::swap(p1, p2);
    print_p1_p2("After swap(p1, p2): ");
}
|output=
Before p1.swap(p2): p1 = {10, 3.14}, p2 = {12, 1.23}
After  p1.swap(p2): p1 = {12, 1.23}, p2 = {10, 3.14}
After swap(p1, p2): p1 = {10, 3.14}, p2 = {12, 1.23}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc swap}}
{{dsc inc|cpp/utility/tuple/dsc swap2}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}