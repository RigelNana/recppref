===Individual vendor compatibility checklists===

====GCC {{small|(updated 2025-01)}}====
* [https://gcc.gnu.org/projects/cxx-status.html#cxx11 C++11 core language support status] (complete as of 4.8.1, except for {{stddoc|n2670}}, which is implemented by no compiler and removed in C++23)
* [https://gcc.gnu.org/projects/cxx-status.html#cxx14 C++14 core language support status] (complete as of 5.1)
* [https://gcc.gnu.org/projects/cxx-status.html#cxx17 C++17 core language support status] (complete as of 7.1)
* [https://gcc.gnu.org/projects/cxx-status.html#cxx20 C++20 core language support status](complete as of 11.0, except part of modules)
* [https://gcc.gnu.org/projects/cxx-status.html#cxx23 C++23 core language support status]
* [https://gcc.gnu.org/projects/cxx-status.html#cxx26 C++26 core language support status]
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2011 C++11 library support status] (complete as of 5.1)
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2014 C++14 library support status] (complete as of 5.1)
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017 C++17 library support status] (complete as of 12.0)
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020 C++20 library support status] (complete as of 14.0)
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2023 C++23 library support status]&lt;!--
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2026 C++26 library support status]--&gt;
* [https://gcc.gnu.org/projects/cxx-status.html#tses Technical Specifications support status]
* [https://gcc.gnu.org/projects/cxx-dr-status.html Core language defect report status]

====Clang {{small|(updated 2025-01)}}====
* [https://github.com/orgs/llvm/projects/31 Real-time libc++ conformance status]
* [https://clang.llvm.org/cxx_status.html#cxx11 C++11 core language support status] (complete as of 3.3)
* C++11 library support status (complete as of [https://github.com/llvm-mirror/libcxx/commit/5fec82dc0db3623546038e4a86baa44f749e554f#diff-c330060c0d4b6fb493c2be0ff80a3f7e 2012-07-29])
* [https://clang.llvm.org/cxx_status.html#cxx14 C++14 core language support status] (complete as of 3.4)
* C++14 library support status (complete as of 3.5)
* [https://clang.llvm.org/cxx_status.html#cxx17 C++17 core language support status] (complete as of 5.0)
* [https://libcxx.llvm.org/Status/Cxx17.html C++17 library support status]
* [https://clang.llvm.org/cxx_status.html#cxx20 C++20 core language support status]
* [https://libcxx.llvm.org/Status/Cxx20.html C++20 library support status]
* [https://clang.llvm.org/cxx_status.html#cxx23 C++23 core language support status]
* [https://libcxx.llvm.org/Status/Cxx23.html C++23 library support status]
* [https://clang.llvm.org/cxx_status.html#cxx26 C++26 core language support status]
* [https://libcxx.llvm.org/Status/Cxx2c.html C++26 library support status]
* [https://clang.llvm.org/cxx_status.html#ts Technical Specifications support status]
* [https://clang.llvm.org/cxx_dr_status.html Core language defect report status]

====Apple Clang {{small|(updated 2025-01)}}====
* [https://en.wikipedia.org/wiki/Xcode#Toolchain_versions Xcode toolchain versions on Wikipedia]
* [https://developer.apple.com/xcode/cpp/ Xcode C++ language and C++ standard library support]
* [https://developer.apple.com/documentation/xcode_release_notes Xcode release notes]
* [https://developer.apple.com/documentation/xcode-release-notes/xcode-16-release-notes C++20/23/26 support status in Xcode 16]

====Microsoft Visual Studio {{small|(updated 2025-01)}}====
* [https://docs.microsoft.com/en-us/cpp/overview/visual-cpp-language-conformance Microsoft C/C++ language conformance (Visual Studio 2015 and later)]
* [https://github.com/microsoft/STL/wiki/Changelog Upcoming releases Visual Studio 2022 change log]
* [https://devblogs.microsoft.com/cppblog/cpp17-20-features-and-fixes-in-vs-2019/ C++17/20 Features and Fixes in Visual Studio 2019]
* [https://devblogs.microsoft.com/cppblog/stl-features-and-fixes-in-vs-2017-15-8/ STL Features and Fixes in VS 2017 15.8]
* C++17 [https://devblogs.microsoft.com/cppblog/announcing-msvc-conforms-to-the-c-standard/ Announcing: MSVC Conforms to the C++ Standard] (complete as of 15.7)
* C++17 [https://devblogs.microsoft.com/cppblog/c17-progress-in-vs-2017-15-5-and-15-6/ Features And STL Fixes In VS 2017 15.5]
* C++17 [https://devblogs.microsoft.com/cppblog/c17-features-and-stl-fixes-in-vs-2017-15-3/ Features And STL Fixes In VS 2017 15.3]
* C++11/C++14/C++17 [https://devblogs.microsoft.com/cppblog/c17-features-in-vs-2017-3/ core language and library status in VS2017.3]
* C++11/C++14/C++17 core language support status
** [https://msdn.microsoft.com/en-us/library/hh567368.aspx#featurelist C++11/14/17 core language support status in VS2010, VS2012, VS2013, and VS2015]
** [https://devblogs.microsoft.com/cppblog/c1114-core-language-features-in-vs-2013-and-the-nov-2013-ctp/ VS2013 vs. VS2015 CTP0]
** [https://devblogs.microsoft.com/cppblog/c1114-feature-tables-for-visual-studio-14-ctp1/ VS2013 vs. VS2015 CTP1]
** [https://devblogs.microsoft.com/cppblog/c1114-features-in-visual-studio-14-ctp3/ VS2013 vs. VS2015 CTP3] (includes the roadmap table)
** [https://devblogs.microsoft.com/cppblog/c111417-features-in-vs-2015-preview/ VS2015 ("VS14") preview]
** [https://devblogs.microsoft.com/cppblog/c111417-features-in-vs-2015-rc/ VS2015 ("VS14") release candidate] (C++11 remains incomplete, but C++17 support appears)
** [https://docs.microsoft.com/en-us/cpp/overview/visual-cpp-language-conformance VS2019]
* [https://msdn.microsoft.com/en-us/library/hh567368.aspx#stl C++11 and C++14 library support status]
* [https://devblogs.microsoft.com/cppblog/c111417-features-in-vs-2015-rtm/ C++11/14/17 Features In VS 2015 RTM] including core language and standard library (including technical specifications)
* [https://devblogs.microsoft.com/cppblog/vs-2015-update-2s-stl-is-c17-so-far-feature-complete/ C++14/17 features in VS 2015 Update 2 standard library] library is feature complete up to current C++17 with few minor issues (some defect reports, some constexprs, etc)
* [https://devblogs.microsoft.com/cppblog/c1417-features-and-stl-fixes-in-vs-15-preview-5/ C++14/17 Features and STL Fixes in VS “15” Preview 5] including a detailed C++17 status table

====Intel C++ {{small|(updated 2023-01)}}====
* [https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler C++11 core language support status] (complete as of 15.0)
* [https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler C++14 core language support status] (functionally complete as of 17.0 - N3664 is an optimization)
* [https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler C++17 core language support status] (incomplete)
* [https://www.intel.com/content/www/us/en/developer/articles/technical/c20-features-supported-by-intel-cpp-compiler.html C++20 core language support status] (incomplete)
* [https://software.intel.com/en-us/articles/intel-c-compiler-190-for-linux-release-notes-for-intel-parallel-studio-xe-2019#cpp17 C++17 features of Intel 19.0 beta]
* Intel does not ship an implementation of the C++ standard library, except for
** [https://software.intel.com/en-us/get-started-with-pstl Parallel STL] (an implementation of the C++17 standard library algorithms with support for execution policies)
* [https://charm.cs.illinois.edu/redmine/issues/1560#note-6 Intel's compatibility with versions of libstdc++ from GCC]

====EDG {{small|(updated 2025-01)}}====
* [https://www.edg.com/features.html C++11 core language support status]
* [https://www.edg.com/cpp14_features.html C++14 core language support status]
* [https://www.edg.com/cpp17_features.html C++17 core language support status]
* [https://www.edg.com/cpp20_features.html C++20 core language support status]
* [https://www.edg.com/cpp23_features.html C++23 core language support status]
* [https://www.edg.com/cpp26_features.html C++26 core language support status]
* EDG does not ship an implementation of the C++ standard library

====Oracle C++ {{small|(updated 2017-07)}}====
* Version number is compiler version, not Oracle Studio version
* [https://docs.oracle.com/cd/E37069_01/html/E37071/gncix.html C++11 core language support status in 5.13]
** [https://docs.oracle.com/cd/E60778_01/html/E60742/gkeza.html#scrolltoc Missing C++11 support added in 5.14 (page has a typo, and still says 5.13)]
* [https://docs.oracle.com/cd/E60778_01/html/E60742/gncix.html#scrolltoc C++14 features added in 5.14]
** Full C++14 support added in 5.15.
* Oracle ships 4 implementations of the C++ standard library:
** libCstd (RogueWave Standard Library version 2), predates C++98
** stlport4 (STLport Standard Library version 4.5.3), predates C++03
** stdcxx4 (Apache Standard Library version 4), predates C++11
** libstdc++ (GCC runtime library, support for C++11 and C++14 depending on release)

====IBM XL C++ {{small|(updated 2018-05)}}====
* IBM XL C++ for Linux
** [https://www.ibm.com/support/knowledgecenter/en/SSXVZZ_16.1.0/com.ibm.xlcpp161.lelinux.doc/language_ref/standard_features.html Core language support status]: C++11 complete as of 13.1.6, C++14 partial in 16.1.0
** IBM does not ship an implementation of C++ standard library for Linux (uses GNU libstdc++)
* IBM XL C++ for AIX
** [https://www.ibm.com/support/knowledgecenter/en/SSGH3R_13.1.3/com.ibm.xlcpp1313.aix.doc/language_ref/cpp0x_exts.html Core language support status]: C++11 partial in 13.1.3 and 16.1.0 (xlC frontend), complete in 16.1.0 (xlclang frontend)
** IBM ships [https://www-01.ibm.com/support/knowledgecenter/SSGH3R_13.1.0/com.ibm.xlcpp131.aix.doc/standlib/header_files.html?lang=en  a version of Dinkumware library] for AIX with full support for C++ TR1, including &lt;regex&gt;, but no C++11
** [https://www.ibm.com/support/pages/ibm-xl-cc-compilers-features IBM XL C/C++ compilers features]

====HP aCC====
* [https://h20565.www2.hpe.com/hpsc/doc/public/display?sp4ts.oid=4145774&amp;docLocale=en_US&amp;docId=emr_na-c04221956 HP aC++ A.06.28 release notes (including C++11 core language features)]
* HP ships a version of RogueWave STL 2.0 implementation of the C++98 standard library

====Digital Mars C++====
* [https://www.digitalmars.com/ctg/CPP0x-Language-Implementation.html C++11 core language support status]

====Embarcadero C++====
* [https://docwiki.embarcadero.com/RADStudio/Berlin/en/C%2B%2B11_Language_Features_Compliance_Status Language features compliance status] (RAD Studio 10.1 Berlin), including C++11 features supported by legacy and Clang-enhanced compilers (based on Clang 3.3)
* [https://docwiki.embarcadero.com/RADStudio/Rio/en/Modern_C%2B%2B_Language_Features_Compliance_Status Language features compliance status] (RAD Studio 10.3 Rio), including C++11 features supported by legacy compilers and C++11, C++14, and C++17 features supported by the Clang-enhanced compilers (based on Clang 5.0)

====Cray {{small|(updated 2023-02)}}====
* [https://docs.cray.com/books/S-2179-84/S-2179-84.pdf Cray C and C++ Reference Manual (8.4)] For version 8.4, claims all of C++14 is supported except alignas
* [https://pubs.cray.com/content/S-2179/8.6/cray-c-and-c++-reference-manual-s-2179-86/cray-c-and-c++-dialect-use#concept_kgd_fcr_3s Cray C and C++ Reference Manual (8.6)] For version 8.6, claims all of C++14 is supported
* [https://pubs.cray.com/pdf-attachments/attachment?pubId=00761211-DC&amp;attachmentId=pub_00761211-DC.pdf Cray C and C++ Reference Manual (9.1)] for version 9.1 doesn't claim support beyond C++14
* [https://support.hpe.com/hpesc/public/docDisplay?docLocale=en_US&amp;docId=a00123566en_us HPE Cray Clang C and C++ Quick Reference (14.0) (S-2179)] Versions from 11 onward (through at least 14) are based on Clang, and are generally expected to have corresponding language support. Features that entail 'interesting' code generation or linking behaviors such as coroutines or modules may lag behind, since the compiler supports generating code for GPUs and other similarly limited devices

====Portland Group (PGI) {{small|(updated 2019-01)}}====
* [https://www.pgroup.com/doc/pgirn161.pdf Release notes for 2016] claim C++14 support, except "generalized constexpr and constexpr member functions and implicit const, variable templates, clarifying memory allocation (merged allocation)"
* [https://www.pgroup.com/resources/docs/18.1/pdf/pgirn181-x86.pdf Release notes for 2018]
* [https://www.pgroup.com/resources/docs/19.1/x86/pgi-ref-guide/index.htm Reference manual of PGI 19.1]
* PGI does not ship an implementation of C++ standard library

====Nvidia Cuda nvcc {{small|(updated 2023-01-12)}}====
* [https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#c-language-support CUDA C++ Programming Guide (v12.0)]
* All C++17 language features are supported in nvcc version 11.0 and later, subject to restrictions described [https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cpp17 here]
* All C++20 language features are supported in nvcc version 12.0 and later, subject to restrictions described [https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cpp20 here]
* NVCC does not ship a C++ standard library implementation

====Texas Instruments {{small|(updated 2018-05)}}====
* [https://www.ti.com/lit/ug/slau132r/slau132r.pdf cl430 version v18.1.0] claims C++14 support

====Analog Devices {{small|(updated 2018-05)}}====
* [https://www.analog.com/media/en/dsp-documentation/software-manuals/cces-SharcCompiler-manual.pdf CrossCore Embedded Studio 2.8.0 for SHARC] claims C++11 support