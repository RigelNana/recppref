{{cpp/filesystem/title|relative|proximate}}
{{cpp/filesystem/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|1=
path relative( const std::filesystem::path&amp; p,
               std::error_code&amp; ec );
}}
{{dcl|num=2|since=c++17|1=
path relative( const std::filesystem::path&amp; p,
               const std::filesystem::path&amp; base = std::filesystem::current_path() );
}}
{{dcl|num=3|since=c++17|1=
path relative( const std::filesystem::path&amp; p,
               const std::filesystem::path&amp; base,
               std::error_code&amp; ec );
}}
{{dcl|num=4|since=c++17|1=
path proximate( const std::filesystem::path&amp; p,
                std::error_code&amp; ec );
}}
{{dcl|num=5|since=c++17|1=
path proximate( const std::filesystem::path&amp; p,
                const std::filesystem::path&amp; base = std::filesystem::current_path() );
}}
{{dcl|num=6|since=c++17|1=
path proximate( const std::filesystem::path&amp; p,
                const std::filesystem::path&amp; base,
                std::error_code&amp; ec );
}}
{{dcl end}}

@1@ Returns {{c|relative(p, current_path(), ec)}}.
@2,3@ Returns {{c|p}} made relative to {{c|base}}. Resolves symlinks and normalizes both {{c|p}} and {{c|base}} before other processing. Effectively returns {{c|std::filesystem::weakly_canonical(p).lexically_relative(std::filesystem::weakly_canonical(base))}} or {{c|std::filesystem::weakly_canonical(p, ec).lexically_relative(std::filesystem::weakly_canonical(base, ec))}}, except the error code form returns {{c|path()}} at the first error occurrence, if any.
@4@ Returns {{c|proximate(p, current_path(), ec)}}.
@5,6@ Effectively returns {{c|std::filesystem::weakly_canonical(p).lexically_proximate(std::filesystem::weakly_canonical(base))}} or {{c|std::filesystem::weakly_canonical(p, ec).lexically_proximate(std::filesystem::weakly_canonical(base, ec))}}, except the error code form returns {{c|path()}} at the first error occurrence, if any.

===Parameters===
{{par begin}}
{{par|p|an existing path}}
{{par|base|base path, against which {{c|p}} will be made relative/proximate}}
{{par|ec|error code to store error status to}}
{{par end}}

===Return value===
@1@ {{c|p}} made relative against {{c|current_path()}}.
@2,3@ {{c|p}} made relative against {{c|base}}.
@4@ {{c|p}} made proximate against {{c|current_path()}}.
@5,6@ {{c|p}} made proximate against {{c|base}}.

===Exceptions===
{{cpp/filesystem/error_handling|p|base|throw=2,5/1,3,4,6}}

===Example===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;

void show(std::filesystem::path x, std::filesystem::path y)
{
    std::cout &lt;&lt; "x:\t\t " &lt;&lt; x &lt;&lt; "\ny:\t\t " &lt;&lt; y &lt;&lt; '\n'
              &lt;&lt; "relative(x, y):  "
              &lt;&lt; std::filesystem::relative(x, y) &lt;&lt; '\n'
              &lt;&lt; "proximate(x, y): "
              &lt;&lt; std::filesystem::proximate(x, y) &lt;&lt; "\n\n";
}

int main()
{
    show("/a/b/c", "/a/b");
    show("/a/c", "/a/b");
    show("c", "/a/b");
    show("/a/b", "c");
}
|p=true
|output=
x:               "/a/b/c"
y:               "/a/b"
relative(x, y):  "c"
proximate(x, y): "c"

x:               "/a/c"
y:               "/a/b"
relative(x, y):  "../c"
proximate(x, y): "../c"

x:               "c"
y:               "/a/b"
relative(x, y):  ""
proximate(x, y): "c"

x:               "/a/b"
y:               "c"
relative(x, y):  ""
proximate(x, y): "/a/b"
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc path}}
{{dsc inc|cpp/filesystem/dsc absolute}}
{{dsc inc|cpp/filesystem/dsc canonical}}
{{dsc inc|cpp/filesystem/path/dsc lexically_normal}}
{{dsc end}}

{{langlinks|es|ja|zh}}