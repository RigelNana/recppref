{{cpp/filesystem/title|is_directory}}
{{cpp/filesystem/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|1=
bool is_directory( std::filesystem::file_status s ) noexcept;
}}
{{dcl|num=2|since=c++17|1=
bool is_directory( const std::filesystem::path&amp; p );
}}
{{dcl|num=3|since=c++17|1=
bool is_directory( const std::filesystem::path&amp; p, std::error_code&amp; ec ) noexcept;
}}
{{dcl end}}

Checks if the given file status or path corresponds to a directory.

@1@ Equivalent to {{c|1=s.type() == file_type::directory}}.

@2,3@ Equivalent to {{c|is_directory(status(p))}} or {{c|is_directory(status(p, ec))}}, respectively.

===Parameters===
{{par begin}}
{{par|s|file status to check}}
{{par|p|path to query}}
{{par|ec|error code to modify in case of errors}}
{{par end}}

===Return value===
{{c|true}} if the file indicated by {{c|p}} or if the type indicated {{c|s}} refers to a directory, {{c|false}} otherwise. The non-throwing overload returns {{c|false}} if an error occurs.

===Exceptions===
{{cpp/filesystem/error_handling|p|throw=/2,3}}

===Example===
{{cpp/filesystem/status_example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc status}}
{{dsc inc|cpp/filesystem/dsc file_status}}
{{dsc inc|cpp/filesystem/dsc status_known}}
{{dsc inc|cpp/filesystem/dsc is_block_file}}
{{dsc inc|cpp/filesystem/dsc is_character_file}}
{{dsc inc|cpp/filesystem/dsc is_fifo}}
{{dsc inc|cpp/filesystem/dsc is_other}}
{{dsc inc|cpp/filesystem/dsc is_regular_file}}
{{dsc inc|cpp/filesystem/dsc is_socket}}
{{dsc inc|cpp/filesystem/dsc is_symlink}}
{{dsc inc|cpp/filesystem/dsc exists}}
{{dsc inc|cpp/filesystem/directory_entry/dsc is_directory}}
{{dsc end}}

{{langlinks|es|ja|zh}}