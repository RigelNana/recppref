{{cpp/filesystem/directory_entry/title|is_directory}}
{{cpp/filesystem/directory_entry/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
bool is_directory() const;
}}
{{dcl|num=2|since=c++17|1=
bool is_directory( std::error_code&amp; ec ) const noexcept;
}}
{{dcl end}}

Checks whether the pointed-to object is a directory. Effectively returns:
@1@ {{c|std::filesystem::is_directory(status())}},
@2@ {{c|std::filesystem::is_directory(status(ec))}}.

===Parameters===
{{par begin}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
{{c|true}} if the referred-to filesystem object is a directory, {{c|false}} otherwise.

===Exceptions===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===Example===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;
#include &lt;string_view&gt;

namespace fs = std::filesystem;

void check_directory(fs::directory_entry const&amp; d, std::string_view rem = "")
{
    std::cout &lt;&lt; "is_directory(" &lt;&lt; d &lt;&lt; "): " &lt;&lt; d.is_directory() &lt;&lt; rem &lt;&lt; '\n';
}

int main()
{
    fs::directory_entry d1(".");
    fs::directory_entry d2("file.txt");
    fs::directory_entry d3("new_dir");

    std::cout &lt;&lt; std::boolalpha;

    check_directory(d1);
    check_directory(d2);
    check_directory(d3, " (has not been created yet).");

    std::filesystem::create_directory("new_dir");

    check_directory(d3, " (before refresh).");
    d3.refresh();
    check_directory(d3, " (after refresh).");
}
|p=true
|output=
is_directory("."): true
is_directory("file.txt"): false
is_directory("new_dir"): false (has not been created yet).
is_directory("new_dir"): false (before refresh).
is_directory("new_dir"): true (after refresh).
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc is_directory}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}