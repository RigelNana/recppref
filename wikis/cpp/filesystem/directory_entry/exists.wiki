{{cpp/filesystem/directory_entry/title|exists}}
{{cpp/filesystem/directory_entry/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
bool exists() const;
}}
{{dcl|num=2|since=c++17|1=
bool exists( std::error_code&amp; ec ) const noexcept;
}}
{{dcl end}}

Checks whether the pointed-to object exists. Effectively returns:
@1@ {{c|std::filesystem::exists(status())}},
@2@ {{c|std::filesystem::exists(status(ec))}}.

Note that {{rlpf|status}} follows symlinks to their targets.

===Parameters===
{{par begin}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
{{c|true}} if the referred-to filesystem object exists.

===Exceptions===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===Example===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;

int main()
{
    for (auto const str:
    {
        "/usr/bin/cat",
        "/usr/bin/mouse",
        "/usr/bin/python",
        "/usr/bin/bison",
        "/usr/bin/yacc",
        "/usr/bin/c++",
    })
    {
        std::filesystem::directory_entry entry{str};

        std::cout &lt;&lt; "directory entry " &lt;&lt; entry
                  &lt;&lt; (entry.exists() ? " exists\n" : " does not exist\n");
    }
}
|p=true
|output=
// Output on a POSIX system:
directory entry "/usr/bin/cat" exist
directory entry "/usr/bin/mouse" does not exist
directory entry "/usr/bin/python" exists
directory entry "/usr/bin/bison" exists
directory entry "/usr/bin/yacc" does not exist
directory entry "/usr/bin/c++" exists
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc exists}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}