{{cpp/filesystem/directory_entry/title|assign}}
{{cpp/filesystem/directory_entry/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
void assign( const std::filesystem::path&amp; p );
}}
{{dcl|num=2|since=c++17|1=
void assign( const std::filesystem::path&amp; p, std::error_code&amp; ec );
}}
{{dcl end}}

Assigns new content to the directory entry object. Sets the path to {{c|p}} and calls {{rlpt|refresh}} to update the cached attributes. If an error occurs, the values of the cached attributes are unspecified.

This function does not commit any changes to the filesystem.

===Parameters===
{{par begin}}
{{par|p|path to the filesystem object to which the directory entry will refer}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
(none)

===Exceptions===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===Example===
{{example|code=
#include &lt;filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;

void print_entry_info(const std::filesystem::directory_entry&amp; entry)
{
    if (std::cout &lt;&lt; "The entry " &lt;&lt; entry; not entry.exists())
    {
        std::cout &lt;&lt; " does not exists on the file system\n";
        return;
    }
    std::cout &lt;&lt; " is ";
    if (entry.is_directory())
        std::cout &lt;&lt; "a directory\n";
    if (entry.is_regular_file())
        std::cout &lt;&lt; "a regular file\n";
    /*...*/
}

int main()
{
    std::filesystem::current_path(std::filesystem::temp_directory_path());

    std::filesystem::directory_entry entry{std::filesystem::current_path()};
    print_entry_info(entry);

    std::filesystem::path name{"cppreference.html"};
    std::ofstream{name} &lt;&lt; "C++";

    std::cout &lt;&lt; "entry.assign();\n";
    entry.assign(entry/name);
    print_entry_info(entry);

    std::cout &lt;&lt; "remove(entry);\n";
    std::filesystem::remove(entry);
    print_entry_info(entry); // the entry still contains old "state"

    std::cout &lt;&lt; "entry.assign();\n";
    entry.assign(entry); // or just call entry.refresh()
    print_entry_info(entry);
}
|p=true
|output=
The entry "/tmp" is a directory
entry.assign();
The entry "/tmp/cppreference.html" is a regular file
remove(entry);
The entry "/tmp/cppreference.html" is a regular file
entry.assign();
The entry "/tmp/cppreference.html" does not exists on the file system
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/directory_entry/dsc operator{{=}}}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}