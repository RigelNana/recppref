{{cpp/filesystem/title|absolute}}
{{cpp/filesystem/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|1=
path absolute( const std::filesystem::path&amp; p );
}}
{{dcl|num=2|since=c++17|1=
path absolute( const std::filesystem::path&amp; p, std::error_code&amp; ec );
}}
{{dcl end}}

Returns a path referencing the same file system location as {{c|p}}, for which {{ltt|cpp/filesystem/path/is_absrel|filesystem::path::is_absolute()}} is {{c|true}}.

@2@ This non-throwing overload returns default-constructed path if an error occurs.

===Parameters===
{{par begin}}
{{par|p|path to convert to absolute form}}
{{par|ec|out-parameter for error reporting in the non-throwing overload}}
{{par end}}

===Return value===
Returns an absolute (although not necessarily canonical) pathname referencing the same file as {{c|p}}.

===Exceptions===
{{cpp/filesystem/error handling|p|throw=1/2}}

===Notes===
Implementations are encouraged to not consider {{c|p}} not existing to be an error.

For POSIX-based operating systems, {{c|std::filesystem::absolute(p)}} is equivalent to {{c|std::filesystem::current_path() / p}} except for when {{c|p}} is the empty path.

For Windows, {{tt|std::filesystem::absolute}} may be implemented as a call to [https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getfullpathnamew {{tt|GetFullPathNameW}}].

===Example===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;
namespace fs = std::filesystem;

int main()
{
    std::filesystem::path p = "foo.c";
    std::cout &lt;&lt; "Current path is " &lt;&lt; std::filesystem::current_path() &lt;&lt; '\n';
    std::cout &lt;&lt; "Absolute path for " &lt;&lt; p &lt;&lt; " is " &lt;&lt; fs::absolute(p) &lt;&lt; '\n';
}
|p=true
|output=
Current path is "/tmp/1666297965.0051296"
Absolute path for "foo.c" is "/tmp/1666297965.0051296/foo.c"
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc canonical}}
{{dsc inc|cpp/filesystem/dsc relative}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}