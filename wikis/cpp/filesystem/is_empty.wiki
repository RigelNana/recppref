{{cpp/filesystem/title|is_empty}}
{{cpp/filesystem/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|1=
bool is_empty( const std::filesystem::path&amp; p );
}}
{{dcl|num=2|since=c++17|1=
bool is_empty( const std::filesystem::path&amp; p, std::error_code&amp; ec );
}}
{{dcl end}}

Checks whether the given path refers to an empty file or directory.

===Parameters===
{{par begin}}
{{par|p|path to examine}}
{{par|ec|error code to modify in case of error}}
{{par end}}

===Return value===
{{c|true}} if the path indicated by {{c|p}} refers to an empty file or directory, {{c|false}} otherwise. The non-throwing overload returns {{c|false}} if an error occurs.

===Exceptions===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===Example===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;

int main()
{
    namespace fs = std::filesystem;

    const fs::path tmp_dir{fs::temp_directory_path()};
    std::cout &lt;&lt; std::boolalpha
              &lt;&lt; "Temp dir: " &lt;&lt; tmp_dir &lt;&lt; '\n'
              &lt;&lt; "is_empty(): " &lt;&lt; fs::is_empty(tmp_dir) &lt;&lt; '\n';

    const fs::path tmp_name{tmp_dir / std::tmpnam(nullptr)};
    std::cout &lt;&lt; "Temp file: " &lt;&lt; tmp_name &lt;&lt; '\n';

    std::ofstream file{tmp_name.string()};
    std::cout &lt;&lt; "is_empty(): " &lt;&lt; fs::is_empty(tmp_name) &lt;&lt; '\n';
    file &lt;&lt; "cppreference.com";
    file.flush();
    std::cout &lt;&lt; "is_empty(): " &lt;&lt; fs::is_empty(tmp_name) &lt;&lt; '\n'
              &lt;&lt; "file_size(): " &lt;&lt; fs::file_size(tmp_name) &lt;&lt; '\n';
    file.close();
    fs::remove(tmp_name);
}
|p=true
|output=
Temp dir: "/tmp"
is_empty(): false
Temp file: "/tmp/fileCqd9DM"
is_empty(): true
is_empty(): false
file_size(): 16
}}

===Defect reports===
{{dr list begin}}
{{dr list item|dr=3013|wg=lwg|std=C++17|before={{tt|error_code}} overload marked noexcept but can allocate memory|after=noexcept removed}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc status}}
{{dsc inc|cpp/filesystem/dsc exists}}
{{dsc end}}

{{langlinks|es|ja|zh}}