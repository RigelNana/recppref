{{cpp/filesystem/title|begin{{small|(recursive_directory_iterator)}}|end{{small|(recursive_directory_iterator)}}}}
{{cpp/filesystem/recursive_directory_iterator/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|
recursive_directory_iterator begin( recursive_directory_iterator iter ) noexcept;
}}
{{dcl|num=2|since=c++17|
recursive_directory_iterator end( recursive_directory_iterator ) noexcept;
}}
{{dcl end}}
@1@ Returns {{c|iter}} unchanged.
@2@ Returns a default-constructed {{ltt|cpp/filesystem/recursive_directory_iterator|recursive_directory_iterator}}, which serves as the end iterator. The argument is ignored.

These non-member functions enable the use of {{tt|recursive_directory_iterator}}s with range-based for loops{{rev inl|since=c++20| and make {{tt|recursive_directory_iterator}} a {{lconcept|range}} type}}.

===Parameters===
{{par begin}}
{{par|iter|a {{tt|recursive_directory_iterator}}}}
{{par end}}

===Return value===
@1@ {{c|iter}} unchanged.
@2@ End iterator (default-constructed {{tt|recursive_directory_iterator}}).

===Example===
{{example
|code=
#include &lt;cstdlib&gt;
#include &lt;filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
namespace fs = std::filesystem;

int main()
{
    fs::current_path(fs::temp_directory_path());
    fs::create_directories("sandbox/a/b");
    std::ofstream("sandbox/file1.txt");
    fs::create_symlink("a", "sandbox/syma");

    std::cout &lt;&lt; "Print dir structure using OS specific command 'tree':\n";
    std::system("tree --noreport sandbox");

    std::cout &lt;&lt; "\nPrint dir structure using directory iterator:\n";
    for (auto&amp; p : fs::recursive_directory_iterator("sandbox"))
        std::cout &lt;&lt; p &lt;&lt; '\n';

    fs::remove_all("sandbox");
}
|p=true
|output=
Print dir structure using OS specific command 'tree':
sandbox
├── a
│   └── b
├── file1.txt
└── syma -&gt; a

Print dir structure using directory iterator:
"sandbox/syma"
"sandbox/file1.txt"
"sandbox/a"
"sandbox/a/b"
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3480|std=C++17|before={{tt|end}} took the argument by reference|after=takes the argument by value}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/directory_iterator/dsc begin}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}