{{cpp/io/ostrstream/title|~ostrstream}}
{{cpp/io/ostrstream/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|
virtual ~ostrstream();
}}

Destroys a {{lc|std::ostrstream}} object, which also destroys the member {{lc|std::strstreambuf}}, which may call the deallocation function if the underlying buffer was dynamically-allocated and not frozen.

===Parameters===
(none)

===Notes===
If {{lc|str()}} was called on a dynamic {{tt|ostrstream}} and {{rlpt|freeze|freeze(false)}} was not called after that, this destructor leaks memory.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

int main()
{
    {
        std::ostrstream s; // dynamic buffer 
        s &lt;&lt; 1.23;
        std::cout &lt;&lt; s.str() &lt;&lt; '\n';
        s.freeze(false);
    } // destructor called, buffer deallocated 

    {
        std::ostrstream s;
        s &lt;&lt; 1.23;
        std::cout &lt;&lt; s.str() &lt;&lt; '\n';
//      buf.freeze(false);
    } // destructor called, memory leaked
}
|output=
1.23
1.23
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}