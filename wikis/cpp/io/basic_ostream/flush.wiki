{{cpp/io/basic_ostream/title|flush}}
{{cpp/io/basic_ostream/navbar}}
{{ddcl|
basic_ostream&amp; flush();
}}

Writes uncommitted changes to the underlying output sequence. Behaves as an {{named req|UnformattedOutputFunction}}.

If {{lc|rdbuf()}} is a null pointer, the sentry object is not constructed.

Otherwise, after constructing and checking the sentry object, calls {{c|rdbuf()-&gt;pubsync()}}. If the call returns {{c|-1}}, calls {{c|setstate(badbit)}}.

===Parameters===
(none)

===Return value===
{{c|*this}}

===Exceptions===
May throw {{lc|std::ios_base::failure}} if {{c|1=(exceptions() &amp; badbit) != 0}}.

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;

using namespace std::chrono_literals;

void f()
{
    std::cout &lt;&lt; "Output from thread... ";
    for (int i{1}; i != 10; ++i)
    {
        std::this_thread::sleep_for(250ms);
        std::cout &lt;&lt; i &lt;&lt; ' ';
        
        // output three numbers at once;
        // the effect is observable only in real-time
        if (0 == (i % 3))
            std::cout.flush();
    }
    std::cout &lt;&lt; std::endl; // flushes as well
}

int main()
{
    std::thread tr{f};
    std::this_thread::sleep_for(150ms);
    std::clog &lt;&lt; "Output from main\n";
    tr.join();
}
|output=
Output from main
Output from thread... 1 2 3 4 5 6 7 8 9
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=581|std=C++98|before={{tt|flush()}} did not behave as an {{named req|UnformattedOutputFunction}}&lt;br&gt;because of the resolution of {{lwg|60}}|after=behaves as an&lt;br&gt;{{named req|UnformattedOutputFunction}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubsync}}
{{dsc inc|cpp/io/basic_streambuf/dsc sync}}
{{dsc inc|cpp/io/manip/dsc flush}}
{{dsc inc|cpp/io/manip/dsc endl}}
{{dsc inc|cpp/io/basic_istream/dsc sync}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}