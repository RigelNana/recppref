{{cpp/io/basic_ostream/title|write}}
{{cpp/io/basic_ostream/navbar}}
{{ddcl|
basic_ostream&amp; write( const char_type* s, std::streamsize count );
}}

Behaves as an {{named req|UnformattedOutputFunction}}. After constructing and checking the sentry object, outputs the characters from successive locations in the character array whose first element is pointed to by {{c|s}}. Characters are inserted into the output sequence until one of the following occurs:
* exactly {{c|count}} characters are inserted
* inserting into the output sequence fails (in which case {{c|setstate(badbit)}} is called).

===Parameters===
{{par begin}}
{{par|s|pointer to the character string to write}}
{{par|count|number of characters to write}}
{{par end}}

===Return value===
{{c|*this}}

===Exceptions===
{{include|cpp/io/stream_exceptions}}

===Notes===
This function is not overloaded for the types {{c|signed char}} or {{c|unsigned char}}, unlike the formatted {{rlp|operator_ltlt2|operator&lt;&lt;}}.

Also, unlike the formatted output functions, this function does not set the {{lc|failbit}} on failure.

When using a non-converting locale (the default locale is non-converting), the overrider of this function in {{lc|std::basic_ofstream}} may be optimized for zero-copy bulk I/O (by means of overriding {{lc|std::streambuf::xsputn}}).

===Example===
{{example
|This function may be used to output object representations, i.e. binary output
|code=
#include &lt;iostream&gt;

int main()
{
    int n = 0x41424344;
    std::cout.write(reinterpret_cast&lt;char*&gt;(&amp;n), sizeof n) &lt;&lt; '\n';

    char c[] = "This is sample text.";
    std::cout.write(c, 4).write("!\n", 2);
}
|p=true
|output=
DCBA
This!
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_ostream/dsc operator_ltlt2}}
{{dsc inc|cpp/io/basic_ostream/dsc put}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}