{{cpp/title|basic_streambuf}}
{{cpp/io/basic_streambuf/navbar}}
{{ddcl|header=streambuf|1=
template&lt; 
    class CharT, 
    class Traits = std::char_traits&lt;CharT&gt;
&gt; class basic_streambuf;
}}

The class {{tt|basic_streambuf}} controls input and output to a character sequence. It includes and provides access to

# The ''controlled character sequence'', also called the ''buffer'', which may contain ''input sequence'' (also called ''get area'') for buffering the input operations and/or ''output sequence'' (also called ''put area'') for buffering the output operations.
# The ''associated character sequence'', also called ''source'' (for input) or ''sink'' (for output). This may be an entity that is accessed through OS API (file, TCP socket, serial port, other character device), or it may be an object ({{lc|std::vector}}, {{lt|cpp/language/array}}, {{lt|cpp/language/string literal}}), that can be interpreted as a character source or sink.

The I/O stream objects {{lc|std::basic_istream}} and {{lc|std::basic_ostream}}, as well as all objects derived from them ({{lc|std::ofstream}}, {{lc|std::stringstream}}, etc), are implemented entirely in terms of {{tt|std::basic_streambuf}}.

The controlled character sequence is an array of {{tt|CharT}} which, at all times, represents a subsequence, or a "window" into the associated character sequence. Its state is described by three pointers:

# The ''beginning pointer'', always points at the lowest element of the buffer.
# The ''next pointer'', points at the element that is the next candidate for reading or writing.
# The ''end pointer'', points one past the end of the buffer.

A {{tt|basic_streambuf}} object may support input (in which case the buffer described by the beginning, next, and end pointers is called ''get area''), output (''put area''), or input and output simultaneously. In latter case, six pointers are tracked, which may all point to elements of the same character array or two individual arrays.

If the next pointer is less than the end pointer in the put area, a ''write position'' is available. The next pointer can be dereferenced and assigned to.

If the next pointer is less than the end pointer in the get area, a ''read position'' is available. The next pointer can be dereferenced and read from.

If the next pointer is greater than the beginning pointer in a get area, a ''putback position'' is available, and the next pointer may be decremented, dereferenced, and assigned to, in order to put a character back into the get area.

The character representation and encoding in the controlled sequence may be different from the character representations in the associated sequence, in which case a {{lc|std::codecvt}} locale facet is typically used to perform the conversion. Common examples are UTF-8 (or other multibyte) files accessed through {{lc|std::wfstream}} objects: the controlled sequence consists of {{c/core|wchar_t}} characters, but the associated sequence consists of bytes.

Typical implementation of the {{tt|std::basic_streambuf}} base class holds only the six {{tt|CharT*}} pointers and a copy of {{lc|std::locale}} as data members. In addition, implementations may keep cached copies of locale facets, which are invalidated whenever {{tt|imbue()}} is called. The concrete buffers such as {{lc|std::basic_filebuf}} or {{lc|std::basic_stringbuf}} are derived from {{tt|std::basic_streambuf}}.

{{image|std-streambuf.svg}}

{{cpp/basic char typedefs|streambuf}}

{{cpp/io/member types}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc ~basic_streambuf}}

{{dsc h2|Locales}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubimbue}}
{{dsc inc|cpp/io/basic_streambuf/dsc getloc}}

{{dsc h2|Positioning}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubsetbuf}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubseekoff}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubseekpos}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubsync}}

{{dsc h2|Get area}}
{{dsc inc|cpp/io/basic_streambuf/dsc in_avail}}
{{dsc inc|cpp/io/basic_streambuf/dsc snextc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sbumpc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sgetc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sgetn}}

{{dsc h2|Put area}}
{{dsc inc|cpp/io/basic_streambuf/dsc sputc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sputn}}

{{dsc h2|Putback}}
{{dsc inc|cpp/io/basic_streambuf/dsc sputbackc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sungetc}}

{{dsc h1|Protected member functions}}
{{dsc inc|cpp/io/basic_streambuf/dsc basic_streambuf}}
{{dsc inc|cpp/io/basic_streambuf/dsc operator{{=}}}}
{{dsc inc|cpp/io/basic_streambuf/dsc swap}}

{{dsc h2|Locales}}
{{dsc inc|cpp/io/basic_streambuf/dsc imbue}}

{{dsc h2|Positioning}}
{{dsc inc|cpp/io/basic_streambuf/dsc setbuf}}
{{dsc inc|cpp/io/basic_streambuf/dsc seekoff}}
{{dsc inc|cpp/io/basic_streambuf/dsc seekpos}}
{{dsc inc|cpp/io/basic_streambuf/dsc sync}}

{{dsc h2|Get area}}
{{dsc inc|cpp/io/basic_streambuf/dsc showmanyc}}
{{dsc inc|cpp/io/basic_streambuf/dsc underflow}}
{{dsc inc|cpp/io/basic_streambuf/dsc uflow}}
{{dsc inc|cpp/io/basic_streambuf/dsc xsgetn}}
{{dsc inc|cpp/io/basic_streambuf/dsc gptr}}
{{dsc inc|cpp/io/basic_streambuf/dsc gbump}}
{{dsc inc|cpp/io/basic_streambuf/dsc setg}}

{{dsc h2|Put area}}
{{dsc inc|cpp/io/basic_streambuf/dsc xsputn}}
{{dsc inc|cpp/io/basic_streambuf/dsc overflow}}
{{dsc inc|cpp/io/basic_streambuf/dsc pptr}}
{{dsc inc|cpp/io/basic_streambuf/dsc pbump}}
{{dsc inc|cpp/io/basic_streambuf/dsc setp}}

{{dsc h2|Putback}}
{{dsc inc|cpp/io/basic_streambuf/dsc pbackfail}}
{{dsc end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc FILE}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}