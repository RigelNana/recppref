{{cpp/title|basic_syncbuf}}
{{cpp/io/basic_syncbuf/navbar}}
{{ddcl|header=syncstream|since=c++20|1=
template&lt;
    class CharT,
    class Traits = std::char_traits&lt;CharT&gt;,
    class Allocator = std::allocator&lt;CharT&gt;
&gt; class basic_syncbuf : public std::basic_streambuf&lt;CharT, Traits&gt;
}}

{{tt|std::basic_syncbuf}} is a wrapper for a {{lc|std::basic_streambuf}} (provided at construction time as a pointer). It accumulates output in its own internal buffer, and atomically transmits its entire contents to the wrapped buffer on destruction and when explicitly requested, so that they appear as a contiguous sequence of characters. It guarantees that there are no data races and no interleaving of characters sent to the wrapped buffer as long as all other outputs made to the same buffer are made through, possibly different, instances of {{tt|std::basic_syncbuf}}.

Typical implementation of {{tt|std::basic_syncbuf}} holds a pointer to the wrapped {{lc|std::basic_streambuf}}, a boolean flag indicating whether the buffer will transmit its contents to the wrapped buffer on sync (flush), a boolean flag indicating a pending flush when the policy is to not emit on sync, an internal buffer that uses {{tt|Allocator}} (such as {{lc|std::string}}), and a pointer to a mutex used to synchronize emit between multiple threads accessing the same wrapped stream buffer (these mutexes may be in a hash map with pointers to {{lc|std::basic_streambuf}} objects used as keys).

Like other streambuf classes, {{tt|std::basic_syncbuf}} is normally only accessed through the corresponding stream, {{ltt|cpp/io/basic_osyncstream|std::osyncstream}}, not directly.

{{cpp/basic char typedefs|syncbuf|syncstream}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc inc|cpp/io/dsc char_type}}
{{dsc inc|cpp/io/dsc traits_type}}
{{dsc inc|cpp/io/dsc int_type}}
{{dsc inc|cpp/io/dsc pos_type}}
{{dsc inc|cpp/io/dsc off_type}}
{{dsc|{{tt|allocator_type}}|{{tt|Allocator}}}}
{{dsc|{{tt|streambuf_type}}|{{c/core|std::basic_streambuf&lt;CharT, Traits&gt;}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc h1|Public member functions}}
{{dsc inc|cpp/io/basic_syncbuf/dsc constructor}}
{{dsc inc|cpp/io/basic_syncbuf/dsc operator{{=}}}}
{{dsc inc|cpp/io/basic_syncbuf/dsc swap}}
{{dsc inc|cpp/io/basic_syncbuf/dsc destructor}}
{{dsc inc|cpp/io/basic_syncbuf/dsc emit}}
{{dsc inc|cpp/io/basic_syncbuf/dsc get_wrapped}}
{{dsc inc|cpp/io/basic_syncbuf/dsc get_allocator}}
{{dsc inc|cpp/io/basic_syncbuf/dsc set_emit_on_sync}}

{{dsc h1|Protected member functions}}
{{dsc inc|cpp/io/basic_syncbuf/dsc sync}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/io/basic_syncbuf/dsc swap2}}
{{dsc end}}

{{cpp/io/basic_streambuf/inherit}}

===Notes===
{{feature test macro|__cpp_lib_syncbuf|std=C++20|value=201803L|Synchronized buffered ostream ([[#Top|{{tt|std::syncbuf}}]], {{lc|std::osyncstream}}) and manipulators}}


{{langlinks|de|es|fr|it|ja|pt|ru|zh}}