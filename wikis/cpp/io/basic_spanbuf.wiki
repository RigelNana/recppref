{{cpp/title|basic_spanbuf}}
{{cpp/io/basic_spanbuf/navbar}}
{{ddcl|header=spanstream|since=c++23|1=
template&lt;
    class CharT,
    class Traits = std::char_traits&lt;CharT&gt;
&gt; class basic_spanbuf
    : public std::basic_streambuf&lt;CharT, Traits&gt;
}}

{{tt|std::basic_spanbuf}} is a {{lc|std::basic_streambuf}} whose associated character sequence is a memory-resident sequence of arbitrary characters, which can be initialized from or made available as an instance of {{c/core|std::span&lt;CharT&gt;}}.

{{tt|std::basic_spanbuf}} performs I/O on a fixed buffer, and therefore it does not attempt to obtain a new buffer when the underlying buffer is exhausted.

{{cpp/basic char typedefs|spanbuf|spanstream}}

{{cpp/io/member types}}

===Data members===
{{dsc begin}}
{{dsc hitem|Member name|Definition}}
{{dsc|{{tti|mod}} {{mark|private}}|A {{lc|std::ios_base::openmode}} recording the open mode.&lt;br&gt;{{mark expos mem obj}}}}
{{dsc|{{tti|buf}} {{mark|private}}|A {{c/core|std::span&lt;CharT&gt;}} referencing the underlying buffer.&lt;br&gt;{{mark expos mem obj}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc h2|Public member functions}}
{{dsc inc|cpp/io/basic_spanbuf/dsc constructor}}
{{dsc mem vdtor|cpp/io/basic_spanbuf|inlinemem=true|destroys the {{tt|basic_spanbuf}} object}}
{{dsc inc|cpp/io/basic_spanbuf/dsc operator{{=}}}}
{{dsc inc|cpp/io/basic_spanbuf/dsc swap}}
{{dsc inc|cpp/io/basic_spanbuf/dsc span}}

{{dsc h2|Protected member functions}}
{{dsc inc|cpp/io/basic_spanbuf/dsc setbuf}}
{{dsc inc|cpp/io/basic_spanbuf/dsc seekoff}}
{{dsc inc|cpp/io/basic_spanbuf/dsc seekpos}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/io/basic_spanbuf/dsc swap2}}
{{dsc end}}

{{cpp/io/basic_streambuf/inherit}}

===Notes===
{{tt|std::basic_spanbuf}} does not own the underlying buffer.

It is the responsibility of programmers to ensure the underlying buffer is in its lifetime when used by a {{tt|std::basic_spanbuf}} object. Additional synchronization may be needed if more than one thread operates the same underlying buffer through different {{tt|std::basic_spanbuf}} objects.

{{feature test macro|__cpp_lib_spanstream|std=C++23|value=202106L|{{ttt|std::spanbuf}}, {{lc|std::spanstream}}}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/dsc basic_stringbuf}}
{{dsc inc|cpp/io/dsc strstreambuf}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}