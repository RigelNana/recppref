{{cpp/io/basic_stringbuf/title|''init_buf_ptrs''}}
{{cpp/io/basic_stringbuf/navbar}}
{{ddcl|notes={{mark expos}}|1=
void init_buf_ptrs();
}}

Initializes the input and output sequences from {{c|buf}} according to {{c|mode}}. {{c|buf}} and {{c|mode}} are {{rlp|/#Exposition-only members|exposition-only data members}} of {{c|*this}}.

Immediately after this function returns:
* If {{lc|std::ios_base::out}} is set in {{c|mode}}, {{ltf|cpp/io/basic_streambuf/pptr|pbase}} points to {{c|buf.front()}} and {{c|1=epptr() &gt;= pbase() + buf.size()}} is {{c|true}};
** in addition, if {{lc|std::ios_base::ate}} is set in {{c|mode}}, {{c|1=pptr() == pbase() + buf.size()}} is {{c|true}},
** otherwise {{c|1=pptr() == pbase()}} is {{c|true}}.
* If {{lc|std::ios_base::in}} is set in {{c|mode}}, {{ltf|cpp/io/basic_streambuf/gptr|eback}} points to {{c|buf.front()}}, and {{c|1=gptr() == eback() &amp;&amp; egptr() == eback() + buf.size()}} is {{c|true}}.

===Notes===
For efficiency reasons, stream buffer operations can violate invariants of {{c|buf}} while it is held encapsulated in the {{tt|std::basic_stringbuf}}, e.g., by writing to characters in the range {{range|buf.data() + buf.size()|buf.data() + buf.capacity()}}.

All operations retrieving a {{lc|std::basic_string}} from {{c|buf}} ensure that the {{lc|std::basic_string}} invariants hold on the returned value.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=1448|std=C++98|before=calling {{tt|''init_buf_ptrs''()}} made&lt;br&gt;{{c|1=pptr() == pbase() + buf.data()}}&lt;br&gt;for streams that are both input and output streams|after=makes&lt;br&gt;{{c|1=pptr() == pbase() + buf.size()}}&lt;br&gt;for append streams}}
{{dr list end}}

{{langlinks|ru|zh}}