{{cpp/io/basic_stringbuf/title|seekoff}}
{{cpp/io/basic_stringbuf/navbar}}
{{ddcl|1=
protected:
virtual pos_type seekoff( off_type off,
                          std::ios_base::seekdir dir,
                          std::ios_base::openmode which = std::ios_base::in {{!}} std::ios_base::out );
}}

Repositions {{lc|std::basic_streambuf::gptr}} and/or {{lc|std::basic_streambuf::pptr}}, if possible, to the position that corresponds to exactly {{c|off}} characters from beginning, end, or current position of the get and/or put area of the buffer.

* If {{c|which}} includes {{lc|std::ios_base::in}} and this buffer is open for reading (that is, if {{c|1=(which &amp; std::ios_base::in) == std::ios_base::in}}), then repositions the read pointer {{lc|std::basic_streambuf::gptr}} inside the get area as described below
* If {{c|which}} includes {{lc|std::ios_base::out}} and this buffer is open for writing (that is, {{c|1=(which &amp; std::ios_base::out) == std::ios_base::out}}), then repositions the write pointer {{lc|std::basic_streambuf::pptr}} inside the put area as described below
* If {{c|which}} includes both  {{lc|std::ios_base::in}} and  {{lc|std::ios_base::out}} and the buffer is open for both reading and writing (that is, {{c|1=(which &amp; (std::ios_base::in {{!}} std::ios_base::out)) == (std::ios_base::in {{!}} std::ios_base::out)}}), and {{c|dir}} is either {{lc|std::ios_base::beg}} or {{lc|std::ios_base::end}}, then repositions both read and write pointers as described below.
* Otherwise, this function fails.

If {{ltt|cpp/io/basic_streambuf|gptr}} and/or {{ltt|cpp/io/basic_streambuf|pptr}} is repositioned, it is done as follows:
@1@ The new pointer offset {{c|newoff}} of type {{tt|off_type}} is determined
:@a@ if {{c|1=dir == std::ios_base::beg}}, then {{c|newoff}} is zero
:@b@ if {{c|1=dir == std::ios_base::cur}}, then {{c|newoff}} is the current position of the pointer ({{c|gptr() - eback()}} or {{c|pptr() - pbase()}})
:@c@ if {{c|1=dir == std::ios_base::end}}, then {{c|newoff}} is the length of the entire initialized part of the buffer (if {{rlp|str|over-allocation}} is used, the high watermark pointer minus the beginning pointer)
@2@ If the pointer to be repositioned is a null pointer and {{c|newoff}} would be non-zero, this function fails.
@3@ If {{c|newoff + off &lt; 0}} (the repositioning would move the pointer to before the beginning of the buffer) or if {{c|newoff + off}} would point past the end of the buffer (or past the last initialized character in the buffer if {{rlp|str|over-allocation}} is used), the function fails.
@4@ Otherwise, the pointer is assigned as if by {{c|1=gptr() = eback() + newoff + off}} or {{c|1=pptr() = pbase() + newoff + off}}.

===Parameters===
{{par begin}}
{{par|off|relative position to set the next pointer(s) to}}
{{par|dir|defines base position to apply the relative offset to. It can be one of the following constants:
{{cpp/io/ios_base/seekdir consts}}}}
{{par|which|defines whether the input sequences, the output sequence, or both are affected. It can be one or a combination of the following constants:
{{cpp/io/ios_base/openmode streambuf consts}}}}
{{par end}}

===Return value===
{{c|pos_type(newoff)}} on success, {{c|pos_type(off_type(-1))}} on failure or if {{tt|pos_type}} cannot represent the resulting stream position.

===Example===
{{example
|
|code=
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::stringstream ss("123"); // in/out
    std::cout &lt;&lt; "put pos = " &lt;&lt; ss.tellp()
              &lt;&lt; " get pos = " &lt;&lt; ss.tellg() &lt;&lt; '\n';
    
    // absolute positioning both pointers
    ss.rdbuf()-&gt;pubseekoff(1, std::ios_base::beg); // move both 1 forward
    std::cout &lt;&lt; "put pos = " &lt;&lt; ss.tellp()
              &lt;&lt; " get pos = " &lt;&lt; ss.tellg() &lt;&lt; '\n';
    
    // try to move both pointers 1 forward from current position
    if (-1 == ss.rdbuf()-&gt;pubseekoff(1, std::ios_base::cur))
        std::cout &lt;&lt; "moving both pointers from current position failed\n";
    std::cout &lt;&lt; "put pos = " &lt;&lt; ss.tellp()
              &lt;&lt; " get pos = " &lt;&lt; ss.tellg() &lt;&lt; '\n';
    
    // move the write pointer 1 forward, but not the read pointer
    // can also be called as ss.seekp(1, std::ios_base::cur);
    ss.rdbuf()-&gt;pubseekoff(1, std::ios_base::cur, std::ios_base::out);
    std::cout &lt;&lt; "put pos = " &lt;&lt; ss.tellp()
              &lt;&lt; " get pos = " &lt;&lt; ss.tellg() &lt;&lt; '\n';
    
    ss &lt;&lt; 'a'; // write at put position
    std::cout &lt;&lt; "Wrote 'a' at put position, the buffer is now " &lt;&lt; ss.str() &lt;&lt; '\n';
    
    char ch;
    ss &gt;&gt; ch;
    std::cout &lt;&lt; "reading at get position gives '" &lt;&lt; ch &lt;&lt; "'\n";
}
|output=
put pos = 0 get pos = 0
put pos = 1 get pos = 1
moving both pointers from current position failed
put pos = 1 get pos = 1
put pos = 2 get pos = 1
Wrote 'a' at put position, the buffer is now 12a
reading at get position gives '2'
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=55|std=C++98|before={{tt|seekoff}} returned an undefined&lt;br&gt;invalid stream position on failure|after={{c|pos_type(off_type(-1))}}&lt;br&gt;is returned on failure}}
{{dr list item|wg=lwg|dr=375|std=C++98|before=static constant members of {{lc|std::ios_base}} were&lt;br&gt;misspecified as members of {{lc|std::basic_ios}}|after=corrected}}
{{dr list item|wg=lwg|dr=432|std=C++98|before={{tt|seekoff}} might succeed even if {{c|newoff + off}}&lt;br&gt;would point past the last initialized character|after={{tt|seekoff}} fails&lt;br&gt;in this case}}
{{dr list item|wg=lwg|dr=453|std=C++98|before=repositioning null {{c|gptr()}} and/or null {{c|pptr()}}&lt;br&gt;with a new offset of zero always failed|after=it can succeed in this case}}
{{dr list item|wg=lwg|dr=563|std=C++98|before=the end pointer could not be used to calculate {{c|newoff}} because it could&lt;br&gt;not be precisely controlled by the program after resolving {{lwg|432}}|after=use the high watermark&lt;br&gt;pointer instead}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubseekoff}}
{{dsc inc|cpp/io/basic_stringbuf/dsc seekpos}}
{{dsc inc|cpp/io/basic_filebuf/dsc seekoff}}
{{dsc inc|cpp/io/strstreambuf/dsc seekoff}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}