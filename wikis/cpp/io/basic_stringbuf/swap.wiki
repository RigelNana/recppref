{{cpp/io/basic_stringbuf/title|swap}}
{{cpp/io/basic_stringbuf/navbar}}
{{dcl begin}}
{{dcl rev multi
|since1=c++11|dcl1=
void swap( basic_stringbuf&amp; rhs );
|since2=c++20|dcl2=
void swap( basic_stringbuf&amp; rhs ) noexcept(/* see below */);
}}
{{dcl end}}

Swaps the state and the contents of {{c|*this}} and {{c|rhs}}.

{{rrev|since=c++11|
The behavior is undefined if {{tt|Allocator}} does not propagate on swap and the allocators of {{c|*this}} and {{c|other}} are unequal.
}}

===Parameters===
{{par begin}}
{{par|rhs|another {{tt|basic_stringbuf}}}}
{{par end}}

===Return value===
(none)

===Exceptions===
{{rrev multi
|since1=c++11|rev1=
{{cpp/impldef exception item}}
|since2=c++20|rev2=
{{noexcept|std::allocator_traits&lt;Allocator&gt;::propagate_on_container_swap::value
{{!!}} std::allocator_traits&lt;Allocator&gt;::is_always_equal::value}}
}}

===Notes===
This function is called automatically when swapping {{lc|std::stringstream}} objects. It is rarely necessary to call it directly.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;

int main()
{
    std::istringstream one("one");
    std::ostringstream two("two");

    std::cout &lt;&lt; "Before swap: one = " &lt;&lt; std::quoted(one.str())
              &lt;&lt; ", two = " &lt;&lt; std::quoted(two.str()) &lt;&lt; ".\n";

    one.rdbuf()-&gt;swap(*two.rdbuf());

    std::cout &lt;&lt; "After  swap: one = " &lt;&lt; std::quoted(one.str())
              &lt;&lt; ", two = " &lt;&lt; std::quoted(two.str()) &lt;&lt; ".\n";
}
|output=
Before swap: one = "one", two = "two".
After  swap: one = "two", two = "one".
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_stringbuf/dsc constructor}}
{{dsc inc|cpp/io/basic_stringstream/dsc swap|basic_stringstream}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}