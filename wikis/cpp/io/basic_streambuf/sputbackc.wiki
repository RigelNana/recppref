{{cpp/io/basic_streambuf/title | sputbackc}}
{{cpp/io/basic_streambuf/navbar}}
{{ddcl | 1=
int_type sputbackc( char_type c );
}}

Puts back a character back to the get area.

If a putback position is available in the get area ({{c|gptr() &gt; eback()}}), and the character {{tt|c}} is equal to the character one position to the left of {{lc|gptr()}} (as determined by {{c|Traits::eq(c, gptr()[-1])}}, then simply decrements the next pointer ({{lc|gptr()}}).

Otherwise, calls {{c|pbackfail(Traits::to_int_type(c))}} to either back up the get area or to modify both the get area and possibly the associated character sequence.

The I/O stream function {{l2tt|cpp/io/basic_istream/putback}} is implemented in terms of this function.

===Parameters===
{{par begin}}
{{par | c | character to put back}}
{{par end}}

===Return value===
If putback position was available, returns the character that the next pointer is now pointing at, converted to {{tt|int_type}} with {{c|Traits::to_int_type(*gptr())}}. The next single-character input from this streambuf will return this character.

If putback position was not available, returns what {{lc|pbackfail()}} returns, which is  {{c|Traits::eof()}} on failure.

===Example===
{{example|
 | code=
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::stringstream s("abcdef"); // gptr() points to 'a' in "abcdef"
    std::cout &lt;&lt; "Before putback, string holds " &lt;&lt; s.str() &lt;&lt; '\n';
    char c1 = s.get(); // c1 = 'a', gptr() now points to 'b' in "abcdef"
    char c2 = s.rdbuf()-&gt;sputbackc('z'); // same as s.putback('z')
                                         // gptr() now points to 'z' in "zbcdef"
    std::cout &lt;&lt; "After putback, string holds " &lt;&lt; s.str() &lt;&lt; '\n';
    char c3 = s.get(); // c3 = 'z', gptr() now points to 'b' in "zbcdef"
    char c4 = s.get(); // c4 = 'b', gptr() now points to 'c' in "zbcdef"
    std::cout &lt;&lt; c1 &lt;&lt; c2 &lt;&lt; c3 &lt;&lt; c4 &lt;&lt; '\n';

    s.rdbuf()-&gt;sputbackc('b');  // gptr() now points to 'b' in "zbcdef"
    s.rdbuf()-&gt;sputbackc('z');  // gptr() now points to 'z' in "zbcdef"
    int eof = s.rdbuf()-&gt;sputbackc('x');  // nothing to unget: pbackfail() fails
    if (eof == EOF)
        std::cout &lt;&lt; "No room to putback after 'z'\n";
}
 | output=
Before putback, string holds abcdef
After putback, string holds zbcdef
azzb
No room to putback after 'z'
}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/io/basic_streambuf/dsc sungetc}}
{{dsc inc | cpp/io/basic_istream/dsc putback}}
{{dsc end}}

{{langlinks|ja|zh}}