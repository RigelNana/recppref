{{cpp/io/basic_streambuf/title | sungetc}}
{{cpp/io/basic_streambuf/navbar}}
{{ddcl | 1=
int_type sungetc();
}}

If a putback position is available in the get area ({{c|gptr() &gt; eback()}}), then decrements the next pointer ({{lc|gptr()}}) and returns the character it now points to.

If a putback position is not available, then calls {{lc|pbackfail()}} to back up the input sequence if possible.

The I/O stream function {{l2tt|cpp/io/basic_istream/unget}} is implemented in terms of this function.

===Parameters===
(none)

===Return value===
If putback position was available, returns the character that the next pointer is now pointing at, converted to {{tt|int_type}} with {{c|Traits::to_int_type(*gptr())}}. The next single-character input from this streambuf will return this character.

If putback position was not available, returns what {{lc|pbackfail()}} returns, which is  {{c|Traits::eof()}} on failure.

===Example===
{{example|
 | code=
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::stringstream s("abcdef"); // gptr() points to 'a'
    char c1 = s.get(); // c = 'a', gptr() now points to 'b' 
    char c2 = s.rdbuf()-&gt;sungetc(); // same as s.unget(): gptr() points to 'a' again 
    char c3 = s.get(); // c3 = 'a', gptr() now points to 'b'
    char c4 = s.get(); // c4 = 'b', gptr() now points to 'c'
    std::cout &lt;&lt; c1 &lt;&lt; c2 &lt;&lt; c3 &lt;&lt; c4 &lt;&lt; '\n';

    s.rdbuf()-&gt;sungetc();  // back to 'b'
    s.rdbuf()-&gt;sungetc();  // back to 'a'
    int eof = s.rdbuf()-&gt;sungetc();  // nothing to unget: pbackfail() fails
    if (eof == EOF)
            std::cout &lt;&lt; "Nothing to unget after 'a'\n";
}
 | output=
aaab
Nothing to unget after 'a'
}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/io/basic_streambuf/dsc sputbackc}}
{{dsc inc | cpp/io/basic_istream/dsc unget}}
{{dsc end}}

{{langlinks|ja|zh}}