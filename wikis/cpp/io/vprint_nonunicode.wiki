{{cpp/title|vprint_nonunicode|vprint_nonunicode_buffered}}
{{cpp/io/print/navbar}}

{{dcl begin}}
{{dcl header|print}}
{{dcl|num=1|since=c++23|
void vprint_nonunicode( std::FILE* stream,
                        std::string_view fmt, std::format_args args );
}}
{{dcl|num=2|since=c++23|
void vprint_nonunicode_buffered
    ( std::FILE* stream, std::string_view fmt, std::format_args args );
}}
{{dcl|num=3|since=c++23|
void vprint_nonunicode_buffered
    ( std::string_view fmt, std::format_args args );
}}
{{dcl end}}

Format {{c|args}} according to the format string {{c|fmt}}, and writes the result to the output stream.

@1@ While holding the lock on {{c|stream}}, writes the character representation of formatting arguments provided by {{c|args}} formatted according to specifications given in {{c|fmt}} to {{c|stream}}.
@@ If {{c|stream}} is not a valid pointer to an output C stream, the behavior is undefined.

@2@ Equivalent to {{c multi
|1=std::string out = std::vformat(fmt, args);
|2=std::vprint_nonunicode(stream, "{}", std::make_format_args(out));
}}.

@3@ Equivalent to {{c|std::vprint_nonunicode_buffered(stdout, fmt, args)}}.

===Parameters===
{{par begin}}
{{par|stream|output file stream to write to}}
{{par|fmt|{{include|cpp/utility/format/format string}}}}
{{par|args|arguments to be formatted}}
{{par end}}

===Exceptions===
{{std print exceptions}}

===Notes===
{{ftm begin|std=1|value=1|comment=1}}
{{ftm|__cpp_lib_print|Formatted output|value=202207L|std=C++23|rowspan=3}}
{{ftm|-|Unbuffered formatted output|value=202403L|std=C++26|dr=23}}
{{ftm|-|Enabling unbuffered formatted output for more formattable types|value=202406L|std=C++26|dr=23}}
{{ftm|__cpp_lib_format|Exposing {{lc|std::basic_format_string}}|value=202207L|std=C++23}}
{{ftm end}}

===Example===
{{example
|code=
&lt;!--
#include &lt;print&gt;

int main()
{
}
--&gt;
|output=
}}

===Defect reports===
{{dr list begin}}
{{dr list item|paper=P3107R5|std=C++23|before=printing operations were always buffered|after=provides unbuffered printing operations}}
{{dr list item|paper=P3235R3|std=C++23|before=the names of the functions added&lt;br&gt;by {{stddoc|P3107R5}} were misleading|after=changed the function names}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/dsc vprint_unicode}}
{{dsc inc|cpp/io/basic_ostream/dsc vprint_nonunicode}}
{{dsc inc|cpp/io/dsc print}}
{{dsc inc|cpp/utility/format/dsc format}}
{{dsc end}}

{{langlinks|de|es|fr|ja|pl|ru|zh}}