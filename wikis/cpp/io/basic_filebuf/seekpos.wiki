{{cpp/io/basic_filebuf/title|seekpos}}
{{cpp/io/basic_filebuf/navbar}}
{{ddcl|1=
protected:
virtual pos_type seekpos( pos_type sp,
                          std::ios_base::openmode which = std::ios_base::in {{!}} std::ios_base::out );
}}

Repositions the file pointer, if possible, to the position indicated by {{c|sp}}. If the associated file is not open ({{c|1=is_open() == false}}), fails immediately.

Reposition performs as follows:
@1@ If the file is open for writing, writes the put area and any unshift sequences required by the currently imbued locale, using {{lc|overflow()}}.

@2@ Repositions the file pointer, as if by calling {{lc|std::fsetpos()}}.

@3@ If the file is open for reading, updates the get area if necessary.

If {{c|sp}} was not obtained by calling {{lc|seekoff()}} or {{tt|seekpos()}} on the same file, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|sp|file position obtained by {{lc|seekoff()}} or {{tt|seekpos()}} called earlier on the same file}}
{{par|which|defines which of the input and/or output sequences to affect. It can be one or a combination of the following constants:
{{cpp/io/ios_base/openmode streambuf consts}}}}
{{par end}}

===Return value===
{{c|sp}} on success or {{c|pos_type(off_type(-1))}} on failure.

===Notes===
{{tt|seekpos()}} is called by {{lc|std::basic_streambuf::pubseekpos()}}, which is called by the single-argument versions of {{lc|std::basic_istream::seekg()}} and {{lc|std::basic_ostream::seekp()}}.

Many implementations do not update the get area in {{tt|seekpos()}}, delegating to {{lc|underflow()}} that is called by the next {{lc|sgetc()}}.

===Example===
{{example
|On some implementations, the get area is emptied by {{tt|seekpos()}} and the second {{tt|underflow()}} is necessary to observe the effects.
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;

struct mybuf : std::filebuf
{
    pos_type seekpos(pos_type sp, std::ios_base::openmode which)
    {
        std::cout &lt;&lt; "Before seekpos(" &lt;&lt; sp &lt;&lt; "), size of the get area is "
                  &lt;&lt; egptr() - eback() &lt;&lt; " with "
                  &lt;&lt; egptr() - gptr() &lt;&lt; " read positions available.\n";
        
        pos_type rc = std::filebuf::seekpos(sp, which);
       
        std::cout &lt;&lt; "seekpos() returns " &lt;&lt; rc &lt;&lt; ".\nAfter the call, "
                  &lt;&lt; "size of the get area is "
                  &lt;&lt; egptr() - eback() &lt;&lt; " with "
                  &lt;&lt; egptr() - gptr() &lt;&lt; " read positions available.\n";
// uncomment if get area is emptied by seekpos()
//        std::filebuf::underflow();
//        std::cout &lt;&lt; "after forced underflow(), size of the get area is "
//                  &lt;&lt; egptr() - eback() &lt;&lt; " with "
//                  &lt;&lt; egptr() - gptr() &lt;&lt; " read positions available.\n";
        
        return rc;
    }
};

int main()
{
    mybuf buf;
    buf.open("test.txt", std::ios_base::in);
    std::istream stream(&amp;buf);
    stream.get(); // read one char to force underflow()
    stream.seekg(2);
}
|p=true
|output=
Before seekpos(2), size of the get area is 110 with 109 read positions available.
seekpos() returns 2.
After the call, size of the get area is 110 with 108 read positions available.
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=55|std=C++98|before={{tt|seekpos}} returned an undefined&lt;br&gt;invalid stream position on failure|after={{c|pos_type(off_type(-1))}}&lt;br&gt;is returned on failure}}
{{dr list item|wg=lwg|dr=171|std=C++98|before=the sequence of the operations of reposition was not clear|after=made clear}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubseekpos}}
{{dsc inc|cpp/io/basic_filebuf/dsc seekoff}}
{{dsc inc|cpp/io/c/dsc fseek}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}