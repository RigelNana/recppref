{{cpp/io/basic_filebuf/title|basic_filebuf}}
{{cpp/io/basic_filebuf/navbar}}
{{dcl begin}}
{{dcl|num=1|
basic_filebuf();
}}
{{dcl|num=2|since=c++11|1=
basic_filebuf( const std::basic_filebuf&amp; rhs ) = delete;
}}
{{dcl|num=3|since=c++11|
basic_filebuf( std::basic_filebuf&amp;&amp; rhs );
}}
{{dcl end}}

Constructs new {{tt|std::basic_filebuf}} object.

@1@ Constructs a {{tt|std::basic_filebuf}} object, initializing the base class by calling the default constructor of {{lc|std::basic_streambuf}}. The created {{tt|basic_filebuf}} is not associated with a file, and {{lc|is_open()}} returns {{c|false}}.

@2@ The copy constructor is deleted; {{tt|std::basic_filebuf}} is not {{named req|CopyConstructible}}.

@3@ Move-constructs a {{tt|std::basic_filebuf}} object by moving all contents from another {{tt|std::basic_filebuf}} object {{c|rhs}}, including the buffers, the associated file, the locale, the openmode, the is_open variable, and all other state. After move, {{c|rhs}} is not associated with a file and {{c|1=rhs.is_open() == false}}. The member pointers of the base class {{lc|std::basic_streambuf}} of {{c|rhs}} and of the base class of {{c|*this}} are guaranteed to point to different buffers (unless null).

===Parameters===
{{par begin}}
{{par|rhs|another {{tt|basic_filebuf}}}}
{{par end}}

===Notes===
Typically called by the constructor of {{lc|std::basic_fstream}}.

===Example===
{{example
|code=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_filebuf/dsc operator{{=}}}}
{{dsc inc|cpp/io/basic_filebuf/dsc ~basic_filebuf}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}