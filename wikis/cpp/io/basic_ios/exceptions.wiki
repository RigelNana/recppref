{{cpp/io/basic_ios/title|exceptions}}
{{cpp/io/basic_ios/navbar}}
{{dcl begin}}
{{dcl|num=1|
std::ios_base::iostate exceptions() const;
}}
{{dcl|num=2|
void exceptions( std::ios_base::iostate except );
}}
{{dcl end}}

Gets and sets the exception mask of the stream. The exception mask determines which error states trigger exceptions of type {{lc|failure}}.

@1@ Returns the exception mask.

@2@ Sets the exception mask to {{c|except}}. If the stream has an error state covered by the exception mask when called, an exception is immediately triggered.

===Parameters===
{{par begin}}
{{par|except|exception mask}}
{{par end}}

===Return value===
@1@ The current exception mask.

@2@ (none)

===Notes===
{{todo|discuss [https://cplusplus.github.io/LWG/lwg-active.html#2349 LWG2349] and link from ios_base::clear, and from (un)formatted(i/o)utputfunction requirement pages (or perhaps the behavior should be fully elaborated on the requirement pages and linked from here). See also [https://stackoverflow.com/a/35089910 stackoverflow.com/a/35089910]}}

===Example===
{{example
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;

int main() 
{
    int ivalue;
    try
    {
        std::ifstream in("in.txt");
        in.exceptions(std::ifstream::failbit); // may throw
        in &gt;&gt; ivalue; // may throw
    }
    catch (const std::ios_base::failure&amp; fail)
    {
        // handle exception here
        std::cout &lt;&lt; fail.what() &lt;&lt; '\n';
    }
}
|p=true
|output=basic_ios::clear: iostream error
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}