{{cpp/io/strstreambuf/title|pcount}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|
int pcount() const;
}}

Returns the number of characters written to the output sequence.

If the next pointer for the put area ({{lc|std::streambuf::pptr()}}) is a null pointer, returns zero.

Otherwise, returns the next pointer in the put area minus the beginning pointer in the put area, that is {{c|pptr() - pbase()}}.

===Parameters===
(none)

===Return value===
The number of characters written to the put area.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

int main()
{
    std::strstream dyn; // dynamically-allocated output buffer
    dyn &lt;&lt; "Test: " &lt;&lt; 1.23 &lt;&lt; std::ends;
    std::strstreambuf* buf = dyn.rdbuf();
    std::cout &lt;&lt; "The size of the output is "
              &lt;&lt; buf-&gt;pcount() // or just buf.pcount()
              &lt;&lt; " and it holds \"" &lt;&lt; dyn.str() &lt;&lt; "\"\n";
    dyn.freeze(false); // after calling .str() on a dynamic strstream

    char arr[10];
    std::ostrstream user(arr, 10); // user-provided output buffer
    buf = user.rdbuf();
    user &lt;&lt; 1.23; // note: no std::ends
    std::cout.write(arr, buf-&gt;pcount()); // or just user.pcount()
    std::cout &lt;&lt; '\n';

    std::istrstream lit("1 2 3"); // read-only fixed-size buffer
    buf = lit.rdbuf();
    // istrstream has no member pcount(), so lit.pcount() won't work
    std::cout &lt;&lt; "Input-only pcount() = " &lt;&lt; buf-&gt;pcount() &lt;&lt; '\n';
}
|output=
The size of the output is 11 and it holds "Test: 1.23"
1.23
Input-only pcount() = 0
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/strstream/dsc pcount|strstream}}
{{dsc inc|cpp/io/strstream/dsc pcount|ostrstream}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}