{{cpp/io/strstreambuf/title|seekpos}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
protected:
virtual pos_type seekpos( pos_type sp,
                          std::ios_base::openmode which =
                              std::ios_base::in {{!}} std::ios_base::out );
}}

Repositions {{lc|std::basic_streambuf::gptr}} and/or {{lc|std::basic_streambuf::pptr}}, if possible, to the position indicated by {{c|sp}}.

If {{lc|std::ios_base::in}} is set in {{c|which}}, attempts to reposition {{tt|gptr()}} (the next pointer in the get area). If {{lc|std::ios_base::out}} is set in {{c|which}}, attempts to reposition {{tt|pptr()}} (the next pointer in the put area). If neither bit is set in {{c|which}}, the operation fails.

Each next pointer is repositioned as follows:
* If the next pointer is null, the operation fails.
* Otherwise, the new offset {{c|newoff}} (of type {{tt|off_type}}) is determined by calling {{c|sp.offset()}}. If {{c|newoff}} is negative, out of bounds of the buffer, or invalid, the operation fails.
* Otherwise, the next pointer is assigned as if by {{c|1=gptr() = eback() + newoff}} or {{c|1=pptr() = pbase() + newoff}}.

===Parameters===
{{par begin}}
{{par|sp|stream position, such as one obtained by {{lc|seekoff()}} or {{tt|seekpos()}}}}
{{par|which|defines whether the input sequences, the output sequence, or both are affected. It can be one or a combination of the following constants:
{{cpp/io/ios_base/openmode streambuf consts}}}}
{{par end}}

===Return value===
The resultant offset converted to {{tt|pos_type}} on success or {{c|pos_type(off_type(-1))}} on failure.

===Notes===
{{tt|seekpos()}} is called by {{lc|std::basic_streambuf::pubseekpos()}}, which is called by the single-argument versions of {{lc|std::basic_istream::seekg()}} and {{lc|std::basic_ostream::seekp()}}.

===Example===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;iostream&gt;
#include &lt;strstream&gt;

struct mybuf : std::strstreambuf
{
    mybuf(const char* str) : std::strstreambuf(str, std::strlen(str)) {}
    
    pos_type seekpos(pos_type sp, std::ios_base::openmode which)
    {
        std::cout &lt;&lt; "Before seekpos(" &lt;&lt; sp &lt;&lt; "), size of the get area is "
                  &lt;&lt; egptr() - eback() &lt;&lt; " with "
                  &lt;&lt; egptr() - gptr() &lt;&lt; " read positions available.\n";
        
        pos_type rc = std::strstreambuf::seekpos(sp, which);
        
        std::cout &lt;&lt; "seekpos() returns " &lt;&lt; rc &lt;&lt; ".\nAfter the call, "
                  &lt;&lt; "size of the get area is "
                  &lt;&lt; egptr() - eback() &lt;&lt; " with "
                  &lt;&lt; egptr() - gptr() &lt;&lt; " read positions available.\n";
        
        return rc;
    }
};

int main()
{
    mybuf buf("12345");
    std::iostream stream(&amp;buf);
    stream.seekg(2);
}
|output=
Before seekpos(2), size of the get area is 5 with 5 read positions available.
seekpos() returns 2.
After the call, size of the get area is 5 with 3 read positions available.
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=55|std=C++98|before={{tt|seekpos}} returned an undefined&lt;br&gt;invalid stream position on failure|after={{c|pos_type(off_type(-1))}}&lt;br&gt;is returned on failure}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/strstreambuf/dsc seekoff}}
{{dsc inc|cpp/io/basic_streambuf/dsc seekpos}}
{{dsc inc|cpp/io/basic_stringbuf/dsc seekpos}}
{{dsc inc|cpp/io/basic_filebuf/dsc seekpos}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}