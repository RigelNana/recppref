{{cpp/io/strstreambuf/title|underflow}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
protected:
virtual int_type underflow();
}}

Reads the next character from the get area of the buffer.

If the input sequence has a read position available ({{c|gptr() &lt; egptr()}}, returns {{c|(unsigned char)(*gptr())}}.

Otherwise, if {{lc|pptr()}} is not null and {{c|pptr() &gt; egptr()}} (there is a put area and it is located after the get area), extends the end of the get area to include the characters that were recently written into the put area by incrementing {{lc|egptr()}} to some value between {{c|gptr()}} and {{lc|pptr()}}, and then returns {{c|(unsigned char)(*gptr())}}.

Otherwise, returns {{lc|EOF}} to indicate failure.

===Parameters===
(none)

===Return value===
The next character in the get area, {{c|(unsigned char)(*gptr())}} on success, {{lc|EOF}} on failure.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

struct mybuf : std::strstreambuf
{
    int_type overflow(int_type c) 
    {
        std::cout &lt;&lt; "Before overflow(): size of the get area is " &lt;&lt; egptr()-eback()
                  &lt;&lt; " size of the put area is " &lt;&lt; epptr()-pbase() &lt;&lt; '\n';
        int_type rc = std::strstreambuf::overflow(c);
        std::cout &lt;&lt; "After overflow(): size of the get area is " &lt;&lt; egptr()-eback()
                  &lt;&lt; " size of the put area is " &lt;&lt; epptr()-pbase() &lt;&lt; '\n';
        return rc;
    }

    int_type underflow() 
    {
        std::cout &lt;&lt; "Before underflow(): size of the get area is " &lt;&lt; egptr()-eback()
                  &lt;&lt; " size of the put area is " &lt;&lt; epptr()-pbase() &lt;&lt; '\n';
        int_type ch = std::strstreambuf::underflow();
        std::cout &lt;&lt; "After underflow(): size of the get area is " &lt;&lt; egptr()-eback()
                  &lt;&lt; " size of the put area is " &lt;&lt; epptr()-pbase() &lt;&lt; '\n';
        if (ch == EOF)
            std::cout &lt;&lt; "underflow() returns EOF\n";
        else
            std::cout &lt;&lt; "underflow() returns '" &lt;&lt; char(ch) &lt;&lt; "'\n";
        return ch;
    }
};

int main()
{
    mybuf sbuf; // read-write dynamic strstreambuf
    std::iostream stream(&amp;sbuf);

    int n;
    stream &gt;&gt; n;
    stream.clear();
    stream &lt;&lt; "123";
    stream &gt;&gt; n;
    std::cout &lt;&lt; n &lt;&lt; '\n';
}
|p=true
|output=
Before underflow(): size of the get area is 0 size of the put area is 0
After underflow(): size of the get area is 0 size of the put area is 0
underflow() returns EOF
Before overflow(): size of the get area is 0 size of the put area is 0
After overflow(): size of the get area is 0 size of the put area is 32
Before underflow(): size of the get area is 0 size of the put area is 32
After underflow(): size of the get area is 3 size of the put area is 32
underflow() returns '1'
Before underflow(): size of the get area is 3 size of the put area is 32
After underflow(): size of the get area is 3 size of the put area is 32
underflow() returns EOF
123
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc underflow}}
{{dsc inc|cpp/io/basic_stringbuf/dsc underflow}}
{{dsc inc|cpp/io/basic_filebuf/dsc underflow}}
{{dsc inc|cpp/io/basic_streambuf/dsc sgetc}}
{{dsc inc|cpp/io/basic_istream/dsc get}}
{{dsc end}}

{{langlinks|ja|zh}}