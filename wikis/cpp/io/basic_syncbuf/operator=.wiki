{{cpp/io/basic_syncbuf/title | operator{{=}}}}
{{cpp/io/basic_syncbuf/navbar}}
{{dcl begin}}
{{dcl |1=
basic_syncbuf&amp; operator=( basic_syncbuf&amp;&amp; other );
}}
{{dcl end}}

First, calls {{ltt|cpp/io/basic_syncbuf/emit|emit()}} to transmit all pending output (and delayed flush, if any) to the wrapped stream.

Then performs move-assignment by moving all contents from {{c|other}}, including the temporary storage, the wrapped stream pointer, policy, and all other state (such as the mutex pointer). After move, {{c|other}} is not associated with a stream, and {{c|1=other.get_wrapped() == nullptr}}. The put area member pointers of the base class {{lc|std::basic_streambuf}} of {{c|other}} are guaranteed to be null. Destroying a moved-from {{c|other}} will not produce any output.

If {{c|std::allocator_traits&lt;Allocator&gt;::propagate_on_container_move_assignment::value}} is {{c|false}}, then the allocator is unchanged. Otherwise, after move-assignment, {{c|get_allocator()}} equals {{c|other.get_allocator()}}.

===Parameters===
{{par begin}}
{{par| other | another std::basic_syncbuf to move from}}
{{par end}}

===Return value===
{{c|*this}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/io/basic_osyncstream/dsc operator{{=}}}}
{{dsc inc | cpp/io/basic_syncbuf/dsc constructor}}
{{dsc inc | cpp/io/basic_syncbuf/dsc emit}}
{{dsc inc | cpp/io/basic_syncbuf/dsc swap}}
{{dsc end}}

{{langlinks|es|ja|zh}}