{{cpp/title|println}}
{{cpp/io/print/navbar}}

{{dcl begin}}
{{dcl header|print}}
{{dcl|num=1|since=c++23|
template&lt; class... Args &gt;
void println( std::format_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcl|num=2|since=c++23|
template&lt; class... Args &gt;
void println( std::FILE* stream,
              std::format_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcla|num=3|since=c++26|
void println();
}}
{{dcl|num=4|since=c++26|
void println( std::FILE* stream );
}}
{{dcl end}}

Format {{c|args}} according to the format string {{c|fmt}} with appended {{c|'\n'}} (which means that each output ends with a new-line), and print the result to a stream.

@1@ Equivalent to {{c|std::println(stdout, fmt, std::forward&lt;Args&gt;(args)...)}}.

@2@ Equivalent to performing the following operations:
{{rev begin}}
{{rev|until=c++26|
{{c|std::print(stream, "{}\n", std::format(fmt, std::forward&lt;Args&gt;(args)...));}}
}}
{{rev|since=c++26|
{{c multi|std::print(stream, std::runtime_format(std::string(fmt.get()) + '\n'),|           std::forward&lt;Args&gt;(args)...)}}
}}
{{rev end}}

@3@ Equivalent to {{c|std::println(stdout)}}.

@4@ Equivalent to {{c|std::print(stream, "\n")}}.

If {{c/core|std::formatter&lt;Ti, char&gt;}} does not meet the {{named req|BasicFormatter}} requirements for any {{tt|Ti}} in {{tt|Args}} (as required by {{lc|std::make_format_args}}), the behavior is undefined.

===Parameters===
{{par begin}}
{{par|stream|output file stream to write to}}
{{par|fmt|{{include|cpp/utility/format/format string}}}}
{{par|args...|arguments to be formatted}}
{{par end}}

===Exceptions===
{{std print exceptions}}

===Notes===
Although overloads {{vl|3,4}} are added in C++26, all known implementations make them available in C++23 mode.

{{ftm begin|std=1|value=1|comment=1}}
{{ftm|__cpp_lib_print|Formatted output|value=202207L|std=C++23|rowspan=2}}
{{ftm|-|Unbuffered formatted output&lt;ref&gt;Although P3107R5 is accepted as a DR, {{lc|std::runtime_format}} is only avilable since C++26. As a result, the resolution cannot be applied in C++23.&lt;/ref&gt;|value=202403L|std=C++26}}
{{ftm|__cpp_lib_format|Exposing {{lc|std::basic_format_string}}|value=202207L|std=C++23}}
{{ftm end}}

&lt;references/&gt;

===Example===
{{example
|code=
#include &lt;print&gt;

int main()
{
    // Each call to std::println ends with new-line
    std::println("Please"); // overload (1)
    std::println("enter"); // (1)
    
    std::print("pass");
    std::print("word");
    
    std::println(); // (3); valid since C++26; same effect as std::print("\n"); 
}
|output=
Please
enter
password

&lt;nowiki/&gt;
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/dsc print}}
{{dsc inc|cpp/io/basic_ostream/dsc println}}
{{dsc inc|cpp/utility/format/dsc format}}
{{dsc inc|cpp/io/c/dsc fprintf}}
{{dsc end}}

{{langlinks|de|es|fr|ja|pl|ru|zh}}