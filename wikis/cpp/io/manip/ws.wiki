{{cpp/title|ws}}
{{cpp/io/manip/navbar}}
{{ddcl|header=istream|
template&lt; class CharT, class Traits &gt;
std::basic_istream&lt;CharT, Traits&gt;&amp; ws( std::basic_istream&lt;CharT, Traits&gt;&amp; is );
}}

Discards leading whitespace from an input stream.

Behaves as an {{named req|UnformattedInputFunction}}, except that {{c|is.gcount()}} is not modified. After constructing and checking the sentry object, extracts characters from the stream and discards them until any one of the following conditions occurs:

* end of file condition occurs in the input sequence (in which case the function calls {{c|setstate(eofbit)}} but does not set {{tt|failbit}}; this does not apply if the {{tt|eofbit}} is already set on {{c|is}} prior to the call to {{tt|ws}}, in which case the construction of the sentry object would set {{tt|failbit}}).

* the next available character {{c|c}} in the input sequence is not whitespace as determined by {{c|std::isspace(c, is.getloc())}}. The non-whitespace character is not extracted.

This is an input-only I/O manipulator, it may be called with an expression such as {{c|in &gt;&gt; std::ws}} for any {{c|in}} of type {{lc|std::basic_istream}}.

===Parameters===
{{par begin}}
{{par|is|reference to input stream}}
{{par end}}

===Return value===
{{c|is}} (reference to the stream after extraction of consecutive whitespace).

===Notes===
If {{tt|eofbit}} is set on the stream prior to the call, the construction of the sentry object will set {{tt|failbit}}.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;istream&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;

int main()
{
    for (const char* str : {"     #1 test", "\t #2 test", "#3 test"})
    {
        std::string line;
        std::getline(std::istringstream{str}, line);
        std::cout &lt;&lt; "getline returns:\t" &lt;&lt; std::quoted(line) &lt;&lt; '\n';
        
        std::istringstream iss{str};
        std::getline(iss &gt;&gt; std::ws, line);
        std::cout &lt;&lt; "ws + getline returns:\t" &lt;&lt; std::quoted(line) &lt;&lt; '\n';
    }
}
|output=
getline returns:	"     #1 test"
ws + getline returns:	"#1 test"
getline returns:	"	 #2 test"
ws + getline returns:	"#2 test"
getline returns:	"#3 test"
ws + getline returns:	"#3 test"
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=415|std=C++98|before=calling {{tt|std::ws}} might not construct the sentry&lt;br&gt;object (insonsistent with other input functions)|after=required to construct&lt;br&gt;the sentry object}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_istream/dsc ignore|mem=std::basic_istream}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}