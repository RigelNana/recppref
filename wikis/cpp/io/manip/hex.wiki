{{cpp/title|dec|hex|oct}}
{{cpp/io/manip/navbar}}
{{dcl begin}}
{{dcl header|ios}}
{{dcl|num=1|
std::ios_base&amp; dec( std::ios_base&amp; str );
}}
{{dcl|num=2|
std::ios_base&amp; hex( std::ios_base&amp; str );
}}
{{dcl|num=3|
std::ios_base&amp; oct( std::ios_base&amp; str );
}}
{{dcl end}}

Modifies the default numeric base for integer I/O.

@1@ Sets the {{tt|basefield}} of the stream {{c|str}} to {{tt|dec}} as if by calling {{c|str.setf(std::ios_base::dec, std::ios_base::basefield)}}.

@2@ Sets the {{tt|basefield}} of the stream {{c|str}} to {{tt|hex}} as if by calling {{c|str.setf(std::ios_base::hex, std::ios_base::basefield)}}.

@3@ Sets the {{tt|basefield}} of the stream {{c|str}} to {{tt|oct}} as if by calling {{c|str.setf(std::ios_base::oct, std::ios_base::basefield)}}.

This is an I/O manipulator. It may be called with an expression such as {{c|out &lt;&lt; std::hex}} for any {{tt|out}} of type {{lc|std::basic_ostream}} or with an expression such as {{c|in &gt;&gt; std::hex}} for any {{tt|in}} of type {{lc|std::basic_istream}}.

===Parameters===
{{par begin}}
{{par|str|reference to I/O stream}}
{{par end}}

===Return value===
{{c|str}} (reference to the stream after manipulation).

===Example===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::cout &lt;&lt; "The number 42 in octal:   " &lt;&lt; std::oct &lt;&lt; 42 &lt;&lt; '\n'
              &lt;&lt; "The number 42 in decimal: " &lt;&lt; std::dec &lt;&lt; 42 &lt;&lt; '\n'
              &lt;&lt; "The number 42 in hex:     " &lt;&lt; std::hex &lt;&lt; 42 &lt;&lt; '\n';
    int n;
    std::istringstream("2A") &gt;&gt; std::hex &gt;&gt; n;
    std::cout &lt;&lt; std::dec &lt;&lt; "Parsing \"2A\" as hex gives " &lt;&lt; n &lt;&lt; '\n';
    // the output base is sticky until changed
    std::cout &lt;&lt; std::hex &lt;&lt; "42 as hex gives " &lt;&lt; 42
        &lt;&lt; " and 21 as hex gives " &lt;&lt; 21 &lt;&lt; '\n';

    // Note: there is no I/O manipulator that sets up a stream to print out
    // numbers in binary format (e.g. bin). If binary output is necessary
    // the std::bitset trick can be used:
    std::cout &lt;&lt; "The number 42 in binary:  " &lt;&lt; std::bitset&lt;8&gt;{42} &lt;&lt; '\n';
}
|output=
The number 42 in octal:   52
The number 42 in decimal: 42
The number 42 in hex:     2a
Parsing "2A" as hex gives 42
42 as hex gives 2a and 21 as hex gives 15
The number 42 in binary:  00101010
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/manip/dsc setbase}}
{{dsc inc|cpp/io/manip/dsc showbase}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}