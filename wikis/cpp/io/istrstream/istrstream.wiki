{{cpp/io/istrstream/title|istrstream}}
{{cpp/io/istrstream/navbar}}
{{dcl begin}}
{{dcl|num=1|deprecated=c++98|removed=c++26|1=
explicit istrstream( const char* s );
}}
{{dcl|num=2|deprecated=c++98|removed=c++26|1=
explicit istrstream( char* s );
}}
{{dcl|num=3|deprecated=c++98|removed=c++26|1=
istrstream( const char* s, std::streamsize n );
}}
{{dcl|num=4|deprecated=c++98|removed=c++26|1=
istrstream( char* s, std::streamsize n );
}}
{{dcl end}}

Constructs new {{lc|std::istrstream}} and its underlying {{lc|std::strstreambuf}}.

@1,2@ Constructs the underlying {{lc|std::strstreambuf}} by calling {{c|strstreambuf(s, 0)}} and initializes the base class with the address of the {{tt|strstreambuf}}. The behavior is undefined if {{c|s}} is not pointing at an element of a null-terminated array.

@3,4@ Constructs the underlying {{lc|std::strstreambuf}} by calling {{c|strstreambuf(s, n)}} and initializes the base class with the address of the {{tt|strstreambuf}}. The behavior is undefined if {{c|s}} is not pointing at an element of an array whose length is at least {{c|n}} elements.

===Parameters===
{{par begin}}
{{par|s|C-string or char array to use as the contents of the stream}}
{{par|n|size of the array}}
{{par end}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

int main()
{
    std::istrstream s1("1 2 3"); // string literal
    int n1, n2, n3;
    if (s1 &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3)
        std::cout &lt;&lt; n1 &lt;&lt; ", " &lt;&lt; n2 &lt;&lt; ", " &lt;&lt; n3 &lt;&lt; '\n';

    char arr[] = {'4', ' ', '5', ' ', '6'};
    std::istrstream s2(arr, sizeof arr);
    if (s2 &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3)
        std::cout &lt;&lt; n1 &lt;&lt; ", " &lt;&lt; n2 &lt;&lt; ", " &lt;&lt; n3 &lt;&lt; '\n';
}
|output=
1, 2, 3
4, 5, 6
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/strstreambuf/dsc strstreambuf}}
{{dsc inc|cpp/io/strstream/dsc constructor|ostrstream}}
{{dsc inc|cpp/io/strstream/dsc constructor|strstream}}
{{dsc end}}

{{langlinks|ja|zh}}