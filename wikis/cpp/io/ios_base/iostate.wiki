{{cpp/io/ios_base/title|iostate}}
{{cpp/io/ios_base/navbar}}
{{dcl begin}}
{{dcl|
typedef /*implementation defined*/ iostate;
}}
{{dcl|1=
static constexpr iostate goodbit = 0;
}}
{{dcl|1=
static constexpr iostate badbit  = /* implementation defined */
static constexpr iostate failbit = /* implementation defined */
static constexpr iostate eofbit  = /* implementation defined */
}}
{{dcl end}}

Specifies stream state flags. It is a {{named req|BitmaskType}}, the following constants are defined:
{{cpp/io/ios_base/iostate consts}}

====The eofbit====
The eofbit is set by the following standard library functions:
* The string input function {{lc|std::getline}} if it completes by reaching the end of the stream, as opposed to reaching the specified terminating character.
* The numeric input overloads of {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;}} if the end of the stream was encountered while reading the next character, on Stage 2 of {{l2tt|cpp/locale/num_get/get}} processing. Depending on the parsing state, {{tt|failbit}} may or may not be set at the same time: for example, {{c|1=int n; istringstream buf("1"); buf &gt;&gt; n;}} sets {{tt|eofbit}}, but not {{tt|failbit}}: the integer {{c|1}} was successfully parsed and stored in {{tt|n}}. On the other hand, {{c|1=bool b; istringstream buf("tr"); buf &gt;&gt; boolalpha &gt;&gt; b;}} sets both {{tt|eofbit}} and {{tt|failbit}}: there was not enough characters to complete the parsing of the boolean {{c|true}}.
* The character extraction overloads of {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;{{dsc small|std::basic_istream}}}}, if the end of the stream is reached before the limit (if any) on the number of characters to be extracted.
* The {{lc|std::get_time}} I/O manipulator and any of the {{lc|std::time_get}} parsing functions: {{l2tt|cpp/locale/time_get/get}}, {{l2tt|cpp/locale/time_get/get_time}}, {{l2tt|cpp/locale/time_get/get_date}}, etc., if the end of the stream is reached before the last character needed to parse the expected date/time value was processed.
* The {{lc|std::get_money}} I/O manipulator and {{l2tt|cpp/locale/money_get/get}} function, if the end of the stream is reached before the last character needed to parse the expected monetary value was processed.
* The {{l2tt|cpp/io/basic_istream/sentry}} constructor, executed at the beginning of every formatted input function: unless the {{tt|skipws}} bit is unset (e.g. by issuing {{lc|std::noskipws}}), sentry reads and discards the leading whitespace characters. If the end of the input stream is reached during this operation, both {{tt|eofbit}} and {{tt|failbit}} are set, and no input takes place.
* The I/O manipulator {{lc|std::ws}}, if it reaches the end of the stream while consuming whitespace (but, unlike the formatted input sentry, it does not set {{tt|failbit}} in this case).
* The unformatted input functions {{l2tt|cpp/io/basic_istream/read}}, {{l2tt|cpp/io/basic_istream/get}}, {{l2tt|cpp/io/basic_istream/peek}}, {{l2tt|cpp/io/basic_istream/readsome}}, {{l2tt|cpp/io/basic_istream/ignore}}, and {{l2tt|cpp/io/basic_istream/getline}}, when reaching the end of the stream.
* The discard input function {{l2tt|cpp/io/basic_istream/ignore}}, when reaching the end of the stream before reaching the specified delimiter character.
* The immediate input function {{l2tt|cpp/io/basic_istream/readsome}}, if {{l2tt|cpp/io/basic_streambuf/in_avail}} returns {{c|-1}}.

The following functions clear {{tt|eofbit}} as a side-effect:
* {{l2tt|cpp/io/basic_istream/putback}}
* {{l2tt|cpp/io/basic_istream/unget}}
* {{l2tt|cpp/io/basic_istream/seekg}}

Note that in nearly all situations, if eofbit is set, the failbit is set as well.

====The failbit====
The failbit is set by the following standard library functions:
* The {{l2tt|cpp/io/basic_istream/sentry}} constructor, executed at the beginning of every input function, if either {{tt|eofbit}} or {{tt|badbit}} is already set on the stream, or if the end of stream is encountered while consuming leading whitespace.
* The {{l2tt|cpp/io/basic_ostream/sentry}} constructor, executed at the beginning of every output function, under implementation-defined conditions.
* {{ltt|cpp/string/basic_string/operator_ltltgtgt|operator&gt;&gt;{{dsc small|(std::basic_string&lt;&gt;)}}}} if the function extracts no characters from the input stream.
* {{ltt|cpp/numeric/complex/operator_ltltgtgt|operator&gt;&gt;{{dsc small|(std::complex&lt;&gt;)}}}} if the function fails to extract a valid complex number.
* The character array and single character overloads of {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;}} if they fail to extract any characters.
* The streambuf overload of {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;}} if the streambuf argument is a null pointer or if no characters were inserted into the streambuf.
* The streambuf overload of {{l2tt|cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;}} if the function inserts no characters.
* {{ltt|cpp/utility/bitset/operator_ltltgtgt2|operator&gt;&gt;{{dsc small|(std::bitset&lt;&gt;)}}}} if the function extracts no characters from the input stream.
* {{lc|std::getline}} if the function extracts no characters or if it manages to extract {{l2tt|cpp/string/basic_string/max_size}} characters from the input stream.
* The numeric, pointer, and boolean input overloads of {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;}} (technically, the overloads of {{l2tt|cpp/locale/num_get/get}} they call), if the input cannot be parsed as a valid value or if the value parsed does not fit in the destination type.
* The time input manipulator {{lc|std::get_time}} (technically, {{l2tt|cpp/locale/time_get/get}} it calls), if the input cannot be unambiguously parsed as a time value according to the given format string.
* The currency input manipulator {{lc|std::get_money}} (technically, {{l2tt|cpp/locale/money_get/get}} it calls), if the input cannot be unambiguously parsed as a monetary value according to the locale rules.
* The extraction operators of all {{named req|RandomNumberEngine}}s, if bad input is encountered.
* The extraction operators of all {{named req|RandomNumberDistribution}}s, if bad input is encountered.
* The unformatted input functions {{l2tt|cpp/io/basic_istream/get}} if they fails to extract any characters.
* {{l2tt|cpp/io/basic_istream/getline}}, if it extracts no characters, if it fills in the provided buffer without encountering the delimiter, or if the provided buffer size is less than 1.
* {{l2tt|cpp/io/basic_istream/read}}, if the end-of-file condition occurs on the input stream before all requested characters could be extracted.
* {{l2tt|cpp/io/basic_istream/seekg}} on failure
* {{l2tt|cpp/io/basic_ostream/tellp}} on failure
* The constructors of {{lc|std::basic_fstream}}, {{lc|std::basic_ifstream}}, and {{lc|std::basic_ofstream}} that takes a filename argument, if the file cannot be opened.
* {{l2tt|cpp/io/basic_fstream/open}}, {{l2tt|cpp/io/basic_ifstream/open}}, and {{l2tt|cpp/io/basic_ofstream/open}} if the file cannot be opened.
* {{l2tt|cpp/io/basic_fstream/close}}, {{l2tt|cpp/io/basic_ifstream/close}}, and {{l2tt|cpp/io/basic_ofstream/close}} if the file cannot be closed.

====The badbit====
The badbit is set by the following standard library functions:

* {{l2tt|cpp/io/basic_ostream/put}} if it fails to insert a character into the output stream, for any reason.
* {{l2tt|cpp/io/basic_ostream/write}} if it fails to insert a character into the output stream, for any reason.
* Formatted output functions [[cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;]], {{lc|std::put_money}}, and {{lc|std::put_time}}, if they encounter the end of the output stream before completing output.
* {{l2tt|cpp/io/basic_ios/init}} when called to initialize a stream with a null pointer for {{tt|rdbuf()}}.
* {{l2tt|cpp/io/basic_istream/putback}} and {{l2tt|cpp/io/basic_istream/unget}} when called on a stream with a null {{tt|rdbuf()}}.
* {{l2tt|cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;{{dsc small|(basic_streambuf*)}}}} when a null pointer is passed as the argument.
* {{l2tt|cpp/io/basic_istream/putback}} and {{l2tt|cpp/io/basic_istream/unget}} if {{c|rdbuf()-&gt;sputbackc()}} or {{c|rdbuf()-&gt;sungetc()}} return {{c|traits::eof()}}.
* {{l2tt|cpp/io/basic_istream/sync}}, {{l2tt|cpp/io/basic_ostream/flush}}, and every output function on a {{tt|unitbuf}} output stream, if {{c|rdbuf()-&gt;pubsync()}} returns {{c|-1}}.
* Every stream I/O function if an exception is thrown by any member function of the associated stream buffer (e.g. {{tt|sbumpc()}}, {{tt|xsputn()}}, {{tt|sgetc()}}, {{tt|overflow()}}, etc).
* {{l2tt|cpp/io/ios_base/iword}} and {{l2tt|cpp/io/ios_base/pword}} on failure (e.g. failure to allocate memory).

===Example===
{{example
|
|code=
|output=
}}

===See also===
{{cpp/io/basic ios/iostate accessors}}

{{dsc begin}}
{{dsc inc|cpp/io/basic_ios/dsc rdstate}}
{{dsc inc|cpp/io/basic_ios/dsc setstate}}
{{dsc inc|cpp/io/basic_ios/dsc clear}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}