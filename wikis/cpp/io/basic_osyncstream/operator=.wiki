{{cpp/io/basic_osyncstream/title|operator{{=}}}}
{{cpp/io/basic_osyncstream/navbar}}
{{dcl begin}}
{{dcl|since=c++20|1=
basic_osyncstream&amp; operator=( std::basic_osyncstream&amp;&amp; other );
}}
{{dcl end}}

Move-assigns a synchronized output stream:

Move-assigns the wrapped {{lc|std::basic_syncbuf}} from the corresponding member of {{c|other}} (after this move-assignment, {{c|other.get_wrapped()}} returns a null pointer and destruction of {{c|other}} produces no output; any pending buffered output will be emitted) and [[cpp/io/basic_ostream/operator%3D|move-assigns]] the base {{lc|std::basic_ostream}} (this swaps all stream state variables except for {{tt|rdbuf}} between {{c|*this}} and {{c|other}})
 
===Parameters===
{{par begin}}
{{par|other|another synchronized output stream to move from}}
{{par end}}

===Return value===
{{c|*this}}

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;syncstream&gt;
#include &lt;utility&gt;

int main()
{
    std::osyncstream out(std::cout);
    out &lt;&lt; "test\n";
    std::ostringstream str_out;
    std::osyncstream{str_out} = std::move(out); // Note that out is emitted here
    std::cout &lt;&lt; "str_out = " &lt;&lt; std::quoted(str_out.view()) &lt;&lt; '\n';
}
|output=
test
str_out = ""
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3867|std=C++20|before=the move assignment operator was {{c/core|noexcept}}, but&lt;br&gt;{{ltt std|cpp/io/basic_syncbuf}}'s move assignment operator is not|after=removed {{c/core|noexcept}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_osyncstream/dsc constructor}}
{{dsc inc|cpp/io/basic_osyncstream/dsc destructor}}
{{dsc inc|cpp/io/basic_osyncstream/dsc emit}}
{{dsc end}}

{{langlinks|es|ja|zh}}