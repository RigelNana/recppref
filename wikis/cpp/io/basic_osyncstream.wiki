{{cpp/title|basic_osyncstream}}
{{cpp/io/basic_osyncstream/navbar}}
{{dcl begin}}
{{dcl header|syncstream}}
{{dcl|since=c++20|1=
template&lt;
    class CharT,
    class Traits = std::char_traits&lt;CharT&gt;,
    class Allocator = std::allocator&lt;CharT&gt;
&gt; class basic_osyncstream : public std::basic_ostream&lt;CharT, Traits&gt;
}}
{{dcl end}}

The class template {{tt|std::basic_osyncstream}} is a convenience wrapper for {{ltt|cpp/io/basic_syncbuf|std::basic_syncbuf}}. It provides a mechanism to synchronize threads writing to the same stream.

It can be used with a named variable:
{{source|1=
{
    std::osyncstream synced_out(std::cout); // synchronized wrapper for std::cout
    synced_out &lt;&lt; "Hello, ";
    synced_out &lt;&lt; "World!";
    synced_out &lt;&lt; std::endl; // flush is noted, but not yet performed
    synced_out &lt;&lt; "and more!\n";
} // characters are transferred and std::cout is flushed
}}

as well as with a temporary:
{{source|1=
std::osyncstream(std::cout) &lt;&lt; "Hello, " &lt;&lt; "World!" &lt;&lt; '\n';
}}

It provides the guarantee that all output made to the same final destination buffer ({{lc|std::cout}} in the examples above) will be free of data races and will not be interleaved or garbled in any way, as long as every write to that final destination buffer is made through (possibly different) instances of {{tt|std::basic_osyncstream}}.

Typical implementation of {{tt|std::basic_osyncstream}} holds only one member: the wrapped {{lc|std::basic_syncbuf}}.

{{inheritance diagram/std-basic_osyncstream}}

{{cpp/basic char typedefs|osyncstream|syncstream}}

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc inc|cpp/io/dsc char_type}}
{{dsc inc|cpp/io/dsc traits_type}}
{{dsc inc|cpp/io/dsc int_type}}
{{dsc inc|cpp/io/dsc pos_type}}
{{dsc inc|cpp/io/dsc off_type}}
{{dsc|{{tt|allocator_type}}|{{tt|Allocator}}}}
{{dsc|{{tt|streambuf_type }}|{{c/core|std::basic_streambuf&lt;CharT, Traits&gt;}}}}
{{dsc|{{tt|syncbuf_type }}|{{c/core|std::basic_syncbuf&lt;CharT, Traits, Allocator&gt;}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/io/basic_osyncstream/dsc constructor}}
{{dsc inc|1=cpp/io/basic_osyncstream/dsc operator=}}
{{dsc inc|cpp/io/basic_osyncstream/dsc destructor}}
{{dsc inc|cpp/io/basic_osyncstream/dsc rdbuf}}
{{dsc inc|cpp/io/basic_osyncstream/dsc get_wrapped}}
{{dsc inc|cpp/io/basic_osyncstream/dsc emit}}
{{dsc end}}

{{cpp/io/basic_ostream/inherit}}
{{cpp/io/basic_ios/inherit}}
{{cpp/io/ios_base/inherit}}

===Notes===
{{feature test macro|__cpp_lib_syncbuf|std=C++20|value=201803L|Synchronized buffered ostream ([[#Top|{{tt|std::osyncstream}}]], {{lc|std::syncbuf}}) and manipulators}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}