{{cpp/io/basic_spanbuf/title|basic_spanbuf}}
{{cpp/io/basic_spanbuf/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|
basic_spanbuf() : basic_spanbuf(std::ios_base::in {{!}} std::ios_base::out) {}
}}
{{dcl|num=2|since=c++23|
explicit basic_spanbuf( std::ios_base::openmode which )
    : basic_spanbuf(std::span&lt;CharT&gt;{}, which) {}
}}
{{dcl|num=3|since=c++23|1=
explicit basic_spanbuf( std::span&lt;CharT&gt; buf, std::ios_base::openmode which =
                            std::ios_base::in {{!}} std::ios_base::out );
}}
{{dcl|num=4|since=c++23|1=
basic_spanbuf( const basic_spanbuf&amp; ) = delete;
}}
{{dcl|num=5|since=c++23|1=
basic_spanbuf( basic_spanbuf&amp;&amp; rhs );
}}
{{dcl end}}

@1@ Default constructor. Creates a {{tt|basic_spanbuf}} that has no underlying buffer and is opened for both input and output. The pointers to get and put area are set to the null pointer value.

@2@ Same as {{v|1}}, except that the {{tt|basic_spanbuf}} is opened in mode specified by {{c|which}}.

@3@ Creates a {{tt|basic_spanbuf}} that manages the underlying buffer referenced by {{c|buf}} (or has no underlying buffer if {{c|buf}} is empty) and is opened in mode specified by {{c|which}}. The pointers to get and put area are set as following, or to the null pointer value if not mentioned in the table:
{|class="wikitable"
|-
!rowspan="2"|Set bits in open mode&lt;br&gt;(affecting pointers to get area)
!colspan="3"|Return value after setting
|-
|{{lc|std::basic_streambuf::eback|eback()}}
|{{lc|std::basic_streambuf::gptr|gptr()}}
|{{lc|std::basic_streambuf::egptr|egptr()}}
|-
|{{c|std::ios_base::in}}
|{{c|s.data()}}
|{{c|s.data()}}
|{{c|s.data() + s.size()}}
|-
|colspan="4"|&lt;nowiki/&gt;
|-
!rowspan="2"|Set bits in open mode&lt;br&gt;(affecting pointers to put area)
!colspan="3"|Return value after setting
|-
|{{lc|std::basic_streambuf::pbase|pbase()}}
|{{lc|std::basic_streambuf::pptr|pptr()}}
|{{lc|std::basic_streambuf::epptr|epptr()}}
|-
|{{c|std::ios_base::out &amp;&amp; !std::ios_base::ate}}
|{{c|s.data()}}
|{{c|s.data()}}
|{{c|s.data() + s.size()}}
|-
|{{c|std::ios_base::out &amp;&amp; std::ios_base::ate}}
|{{c|s.data()}}
|{{c|s.data() + s.size()}}
|{{c|s.data() + s.size()}}
|}

@4@ Copy constructor is deleted. {{tt|basic_spanbuf}} is not copyable.

@5@ Move constructor. Move-constructs the {{lc|std::basic_streambuf}} base subobject from that of {{c|rhs}}. The pointers to get and put area, the open mode, and the underlying buffer (if any) are identical to those in {{c|rhs}} before construction.&lt;br&gt;It is implementation-defined whether {{c|rhs}} still holds the underlying buffer after the move-construction.

===Parameters===
{{par begin}}
{{par|buf|a {{ltt|cpp/container/span|std::span}} referencing the underlying buffer}}
{{par|rhs|another {{tt|basic_spanbuf}}}}
{{par|which|specifies stream open mode. It is bitmask type, the following constants are defined:
{{cpp/io/ios_base/openmode consts}}}}
{{par end}}

===Notes===
These constructors are typically called by the constructors of {{lc|std::basic_ispanstream}}, {{lc|std::basic_ospanstream}}, and {{lc|std::basic_spanstream}}.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_spanstream/dsc constructor|basic_ispanstream}}
{{dsc inc|cpp/io/basic_spanstream/dsc constructor|basic_ospanstream}}
{{dsc inc|cpp/io/basic_spanstream/dsc constructor|basic_spanstream}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}