{{cpp/title|io_errc}}
{{cpp/io/io_errc/navbar}}
{{dcl begin}}
{{dcl header|ios}}
{{dcl|since=c++11|1=
enum class io_errc {
    stream = 1,
};
}}
{{dcl end}}

The scoped enumeration {{tt|std::io_errc}} defines the error codes reported by I/O streams in {{lc|std::ios_base::failure}} exception objects. Only one error code ({{tt|std::io_errc::stream}}) is required, although the implementation may define additional error codes. Because the appropriate specialization of {{lc|std::is_error_code_enum}} is provided, values of type {{tt|std::io_errc}} are implicitly convertible to {{lc|std::error_code}}.

===Member constants===
{{dsc begin}}
{{dsc hitem|Enumeration constant|Value}}
{{dsc|{{tt|stream}}|{{c|1}}}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/io/io_errc/dsc make_error_code}}
{{dsc inc|cpp/io/io_errc/dsc make_error_condition}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/io/io_errc/dsc is_error_code_enum}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;

int main()
{
    std::ifstream f("doesn't exist");
    try
    {
        f.exceptions(f.failbit);
    }
    catch (const std::ios_base::failure&amp; e)
    {
        std::cout &lt;&lt; "Caught an ios_base::failure.\n";
        if (e.code() == std::io_errc::stream)
            std::cout &lt;&lt; "The error code is std::io_errc::stream\n";
    }
}
|output=
Caught an ios_base::failure.
The error code is std::io_errc::stream
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/error/dsc error_code}}
{{dsc inc|cpp/error/dsc error_condition}}
{{dsc inc|cpp/io/ios_base/dsc failure|mem=std::ios_base}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}