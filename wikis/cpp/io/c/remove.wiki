{{cpp/title|remove}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
int remove( const char* pathname );
}}

Deletes the file identified by the character string pointed to by {{c|pathname}}.

If the file is currently open by any process, the behavior of this function is implementation-defined. POSIX systems unlink the file name (directory entry), but the filesystem space used by the file is not reclaimed while it is open in any process and while other hard links to the file exist. Windows does not allow the file to be deleted in such cases.

===Parameters===
{{par begin}}
{{par|pathname|pointer to a null-terminated string containing the path identifying the file to delete}}
{{par end}}

===Return value===
{{c|0}} upon success or non-zero value on error.

===Notes===
[https://pubs.opengroup.org/onlinepubs/9699919799/functions/remove.html POSIX specifies] many additional details for the behavior of this function.

The standard library also defines a function template {{ltt|cpp/algorithm/remove|std::remove}} taking a pair of iterators and a value, this overload is one of the standard {{lt|cpp/algorithm}}s.

===Example===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;

int main()
{
    // create a file, check success using operator! of temporary stream object
    if (!std::ofstream("file1.txt").put('a'))
    {
        std::perror("Error creating file1.txt");
        return EXIT_FAILURE;
    }
    std::cout &lt;&lt; std::ifstream("file1.txt").rdbuf() &lt;&lt; '\n'; // print file
 
    std::remove("file1.txt"); // delete file
 
    if (!std::ifstream{"file1.txt"}) // uses operator! of temporary stream object
    {
        std::perror("Error opening deleted file");
        return EXIT_FAILURE;
    }
    return EXIT_SUCCESS;
}
|p=true
|output=
a
Error opening deleted file: No such file or directory
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc remove}}
{{dsc inc|cpp/io/c/dsc rename}}
{{dsc see c|c/io/remove}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}