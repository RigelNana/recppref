{{cpp/title|tmpnam}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
char* tmpnam( char* filename );
}}

Creates a unique filename that does not name a currently existing file, and stores it in the character string pointed to by {{c|filename}}. The function is capable of generating up to {{lc|TMP_MAX}} of unique filenames, but some or all of them may already be in use, and thus not suitable return values. 

{{lc|std::tmpnam}} modifies static state and is not required to be thread-safe.

===Parameters===
{{par begin}}
{{par|filename|pointer to the character array capable of holding at least {{lc|L_tmpnam}} bytes, to be used as a result buffer. If a null pointer is passed, a pointer to an internal static buffer is returned}}
{{par end}}

===Return value===
{{c|filename}} if {{c|filename}} was not a null pointer. Otherwise a pointer to an internal static buffer is returned. If no suitable filename can be generated, a null pointer is returned.

===Notes===
Although the names generated by {{lc|std::tmpnam}} are difficult to guess, it is possible that a file with that name is created by another process between the moment {{lc|std::tmpnam}} returns and the moment this program attempts to use the returned name to create a file. The standard function {{lc|std::tmpfile}} and the POSIX function [https://pubs.opengroup.org/onlinepubs/9699919799/functions/mkdtemp.html {{tt|mkstemp}}] do not have this problem (creating a unique directory using only the standard C library still requires the use of {{tt|tmpnam}}).

POSIX systems additionally define the similarly named function [https://pubs.opengroup.org/onlinepubs/9699919799/functions/tempnam.html {{tt|tempnam}}], which offers the choice of a directory (which defaults to the optionally defined macro [https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/stdio.h.html {{tt|P_tmpdir}}]).

===Example===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string name1 = std::tmpnam(nullptr);
    std::cout &lt;&lt; "temporary file name: " &lt;&lt; name1 &lt;&lt; '\n';

    char name2[L_tmpnam];
    if (std::tmpnam(name2))
        std::cout &lt;&lt; "temporary file name: " &lt;&lt; name2 &lt;&lt; '\n';
}
|p=true
|output=
temporary file name: /tmp/fileDjwifs
temporary file name: /tmp/fileEv2bfW
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc tmpfile}}
{{dsc inc|cpp/filesystem/dsc temp_directory_path}}
{{dsc see c|c/io/tmpnam}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}