{{cpp/title|fputs}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
int fputs( const char* str, std::FILE* stream );
}}

Writes every character from the null-terminated string {{tt|str}} to the output stream {{tt|stream}}, as if by repeatedly executing {{lc|std::fputc}}.

The terminating null character from {{tt|str}} is not written.

===Parameters===
{{par begin}}
{{par|str|null-terminated character string to be written}}
{{par|stream|output stream}}
{{par end}}

===Return value===
On success, returns a non-negative value

On failure, returns {{lc|EOF}} and sets the ''error'' indicator (see {{lc|std::ferror}}) on {{tt|stream}}.

===Notes===
The related function {{lc|std::puts}} appends a newline character to the output, while {{tt|std::fputs}} writes the string unmodified.

Different implementations return different non-negative numbers: some return the last character written, some return the number of characters written (or {{lc|INT_MAX}} if the string was longer than that), some simply return a non-negative constant such as zero.

===Example===
{{example|code=
#include &lt;cstdio&gt;
 
int main(void)
{
    int rc = std::fputs("Hello World", stdout);

    if (rc == EOF)
        std::perror("fputs()"); // POSIX requires that errno is set
}
|output=
Hello World
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fprintf}}
{{dsc inc|cpp/io/c/dsc puts}}
{{dsc inc|cpp/io/c/dsc fputws}}
{{dsc inc|cpp/io/c/dsc fgets}}
{{dsc see c|c/io/fputs}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}