{{cpp/title|fflush}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
int fflush( std::FILE* stream );
}}

For output streams (and for update streams on which the last operation was output), writes any unwritten data from the {{tt|stream}}'s buffer to the associated output device.

For input streams (and for update streams on which the last operation was input), the behavior is undefined.

If {{tt|stream}} is a null pointer, all open output streams are flushed, including the ones manipulated within library packages or otherwise not directly accessible to the program.

===Parameters===
{{par begin}}
{{par|stream|the file stream to write out}}
{{par end}}

===Return value===
Returns zero on success. Otherwise {{lc|EOF}} is returned and the error indicator of the file stream is set.

===Notes===
POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/fflush.html extends the specification of {{tt|fflush}}] by defining its effects on an input stream, as long as that stream represents a file or another seekable device: in that case the POSIX file pointer is repositioned to match the C stream pointer (which effectively undoes any read buffering) and the effects of any {{lc|std::ungetc}} or {{lc|std::ungetwc}} that weren't yet read back from the stream are discarded.

Microsoft also extends the specification of {{tt|fflush}} by defining its effects on an input stream: in Visual Studio 2013 and prior, it [https://learn.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2013/9yky46tz(v=vs.120) discarded the input buffer], in Visual Studio 2015 and newer, it [https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fflush?view=msvc-140 has no effect, buffers are retained].

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fopen}}
{{dsc inc|cpp/io/c/dsc fclose}}
{{dsc see c|c/io/fflush}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}