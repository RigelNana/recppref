{{cpp/title|getchar}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
int getchar();
}}
Reads the next character from {{lc|stdin}}.

Equivalent to {{c|std::getc(stdin)}}.

===Parameters===
(none)

===Return value===
The obtained character on success or {{lc|EOF}} on failure. 

If the failure has been caused by end of file condition, additionally sets the ''eof'' indicator (see {{lc|std::feof()}}) on {{lc|stdin}}. If the failure has been caused by some other error, sets the ''error'' indicator (see {{lc|std::ferror()}}) on {{lc|stdin}}.

===Example===
&lt;!--There is no point to run it online: no user's input supported yet.--&gt;
{{tt|std::getchar}} with error checking. Exit program by entering ESC char.
{{source|1=
#include &lt;cctype&gt;
#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;

int main()
{
    for (int ch; (ch = std::getchar()) != EOF ;) // read/print "abc" from stdin
    {
        if (std::isprint(ch))
            std::cout &lt;&lt; static_cast&lt;char&gt;(ch) &lt;&lt; '\n';
        if (ch == 27) // 'ESC' (escape) in ASCII
            return EXIT_SUCCESS;
    }

    // Test reason for reaching EOF.
    if (std::feof(stdin)) // if failure caused by end-of-file condition
        std::cout &lt;&lt; "End of file reached\n";
    else if (std::ferror(stdin)) // if failure caused by some other error
    {
        std::perror("getchar()");
        std::cerr &lt;&lt; "getchar() failed in file " &lt;&lt; std::quoted(__FILE__)
                  &lt;&lt; " at line # " &lt;&lt; __LINE__ - 14 &lt;&lt; '\n';
        std::exit(EXIT_FAILURE);
    }

    return EXIT_SUCCESS;
}
}}
Possible output:
{{source|1=
abc
a
b
c
^[
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fgetc}}
{{dsc see c|c/io/getchar}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}