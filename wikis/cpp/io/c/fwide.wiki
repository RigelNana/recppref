{{cpp/title|fwide}}
{{cpp/io/c/navbar}}
{{ddcl|header=cwchar|
int fwide( std::FILE* stream, int mode );
}}

If {{c|1=mode &gt; 0}}, attempts to make {{c|stream}} wide-oriented. If {{c|1=mode &lt; 0}}, attempts to make {{c|stream}} byte-oriented. If {{c|1=mode == 0}}, only queries the current orientation of the stream.

If the orientation of the stream has already been decided (by executing output or by an earlier call to fwide), this function does nothing.

===Parameters===
{{par begin}}
{{par|stream|pointer to the C I/O stream to modify or query}}
{{par|mode|integer value greater than zero to set the stream wide, less than zero to set the stream narrow, or zero to query only}}
{{par end}}

===Return value===
An integer greater than zero if the stream is wide-oriented after this call, less than zero if the stream is byte-oriented after this call, and zero if the stream has no orientation.

===Example===
{{example
|The following code sets and resets the stream orientation.
|code=
#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;

void show_orientation(int n)
{
    n &lt; 0 ? std::wcout &lt;&lt; "\tnarrow orientation\n" :
    n &gt; 0 ? std::wcout &lt;&lt; "\twide orientation\n" :
            std::wcout &lt;&lt; "\tno orientation\n";
}

void try_read(FILE* fp)
{
    if (const int c = std::fgetc(fp); c == EOF)
        std::wcout &lt;&lt; "\tnarrow character read failed\n";
    else
        std::wcout &lt;&lt; "\tnarrow character read '" &lt;&lt; static_cast&lt;char&gt;(c) &lt;&lt; "'\n";

    if (const wint_t wc = std::fgetwc(fp); wc == WEOF)
        std::wcout &lt;&lt; "\twide character read failed\n";
    else
        std::wcout &lt;&lt; "\twide character read '" &lt;&lt; static_cast&lt;wchar_t&gt;(wc) &lt;&lt; "'\n";
}

int main()
{
    enum fwide_orientation : int { narrow = -1, query, wide };

    FILE* fp = std::fopen("main.cpp", "r");
    if (!fp)
    {
        std::wcerr &lt;&lt; "fopen() failed\n";
        return EXIT_FAILURE;
    }

    std::wcout &lt;&lt; "1) A newly opened stream has no orientation.\n";
    show_orientation(std::fwide(fp, fwide_orientation::query));

    std::wcout &lt;&lt; "2) Establish byte orientation.\n";
    show_orientation(std::fwide(fp, fwide_orientation::narrow));
    try_read(fp);

    std::wcout &lt;&lt; "3) Only freopen() can reset stream orientation.\n";
    if (std::freopen("main.cpp", "r", fp) == NULL)
    {
        std::wcerr &lt;&lt; "freopen() failed\n";
        return EXIT_FAILURE;
    }

    std::wcout &lt;&lt; "4) A reopened stream has no orientation.\n";
    show_orientation(std::fwide(fp, fwide_orientation::query));

    std::wcout &lt;&lt; "5) Establish wide orientation.\n";
    show_orientation(std::fwide(fp, fwide_orientation::wide));
    try_read(fp);

    std::fclose(fp);
}
|p=true
|output=
1) A newly opened stream has no orientation.
        no orientation
2) Establish byte orientation.
        narrow orientation
        narrow character read '#'
        wide character read failed
3) Only freopen() can reset stream orientation.
4) A reopened stream has no orientation.
        no orientation
5) Establish wide orientation.
        wide orientation
        narrow character read failed
        wide character read '#'
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fopen}}
{{dsc see c|c/io/fwide}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}