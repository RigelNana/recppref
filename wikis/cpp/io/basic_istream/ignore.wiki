{{cpp/io/basic_istream/title|ignore}}
{{cpp/io/basic_istream/navbar}}
{{dcl begin}}
{{dcl|1=
basic_istream&amp; ignore( std::streamsize count = 1, int_type delim = Traits::eof() );
}}
{{dcl end}}

Extracts and discards characters from the input stream until and including {{c|delim}}.

{{tt|ignore}} behaves as an {{named req|UnformattedInputFunction}}. After constructing and checking the sentry object, it extracts characters from the stream and discards them until any of the following conditions occurs:

* {{c|count}} characters were extracted. This test is disabled in the special case when {{c|count}} equals {{c|std::numeric_limits&lt;std::streamsize&gt;::max()}}.

* end of file conditions occurs in the input sequence, in which case the function calls {{c|setstate(eofbit)}}.

* the next available character {{c|c}} in the input sequence is {{c|delim}}, as determined by {{c|Traits::eq_int_type(Traits::to_int_type(c), delim)}}. The delimiter character is extracted and discarded. This test is disabled if {{c|delim}} is {{c|Traits::eof()}}.

===Parameters===
{{par begin}}
{{par|count|number of characters to extract}}
{{par|delim|delimiting character to stop the extraction at. It is also extracted}}
{{par end}}

===Return value===
{{c|*this}}

===Exceptions===
{{include|cpp/io/stream exceptions}}

===Example===
{{example
|The following example uses {{tt|ignore}} to skip over non-numeric input:
|code=
#include &lt;iostream&gt;
#include &lt;limits&gt;
#include &lt;sstream&gt;

constexpr auto max_size = std::numeric_limits&lt;std::streamsize&gt;::max();

int main()
{
    std::istringstream input("1\n"
                             "some non-numeric input\n"
                             "2\n");
    for (;;)
    {
        int n;
        input &gt;&gt; n;
        
        if (input.eof() {{!!}} input.bad())
            break;
        else if (input.fail())
        {
            input.clear(); // unset failbit
            input.ignore(max_size, '\n'); // skip bad input
        }
        else
            std::cout &lt;&lt; n &lt;&lt; '\n';
    }
}
|output=
1
2
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=172|std=C++98|before=the type of {{c|count}} was misspecified as {{c|int}}|after=corrected to {{lc|std::streamsize}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_istream/dsc get}}
{{dsc inc|cpp/io/basic_istream/dsc getline}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}