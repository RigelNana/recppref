{{cpp/io/basic_istream/title|read}}
{{cpp/io/basic_istream/navbar}}
{{ddcl|
basic_istream&amp; read( char_type* s, std::streamsize count );
}}

Extracts characters from stream.

Behaves as {{named req|UnformattedInputFunction}}. After constructing and checking the sentry object, extracts characters and stores them into successive locations of the character array whose first element is pointed to by {{c|s}}. Characters are extracted and stored until any of the following conditions occurs:

* {{c|count}} characters were extracted and stored.

* end of file condition occurs on the input sequence (in which case, {{c|setstate(failbit{{!}}eofbit)}} is called). The number of successfully extracted characters can be queried using {{ltf|cpp/io/basic_istream/gcount}}.

===Parameters===
{{par begin}}
{{par|s|pointer to the character array to store the characters to}}
{{par|count|number of characters to read}}
{{par end}}

===Return value===
{{c|*this}}

===Exceptions===
{{include|cpp/io/stream_exceptions}}

===Notes===
When using a non-converting locale (the default locale is non-converting), the overrider of this function in {{lc|std::basic_ifstream}} may be optimized for zero-copy bulk I/O (by means of overriding {{lc|std::streambuf::xsgetn}}).

===Example===
{{example
|code=
#include &lt;cstdint&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;

int main()
{
    // read() is often used for binary I/O
    std::string bin = {'\x12', '\x12', '\x12', '\x12'};
    std::istringstream raw(bin);
    std::uint32_t n;
    if (raw.read(reinterpret_cast&lt;char*&gt;(&amp;n), sizeof n))
        std::cout &lt;&lt; std::hex &lt;&lt; std::showbase &lt;&lt; n &lt;&lt; '\n';

    // prepare file for next snippet
    std::ofstream("test.txt", std::ios::binary) &lt;&lt; "abcd1\nabcd2\nabcd3";

    // read entire file into string
    if (std::ifstream is{"test.txt", std::ios::binary {{!}} std::ios::ate})
    {
        auto size = is.tellg();
        std::string str(size, '\0'); // construct string to stream size
        is.seekg(0);
        if (is.read(&amp;str[0], size))
            std::cout &lt;&lt; str &lt;&lt; '\n';
    }
}
|output=
0x12121212
abcd1
abcd2
abcd3
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/basic_ostream/dsc write}}
{{dsc inc|cpp/io/basic_istream/dsc operator_gtgt}}
{{dsc inc|cpp/io/basic_istream/dsc readsome}}
{{dsc inc|cpp/io/basic_istream/dsc get}}
{{dsc inc|cpp/io/basic_istream/dsc getline}}
{{dsc inc|cpp/io/c/dsc fread}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}