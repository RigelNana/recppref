{{cpp/title|is_error_code_enum&lt;small&gt;&lt;std::io_errc&gt;&lt;/small&gt;}}
{{cpp/io/io_errc/navbar}}
{{dcl begin}}
{{dcl header|ios}}
{{dcl|since=c++11|
template&lt;&gt;
struct is_error_code_enum&lt;std::io_errc&gt; : public std::true_type {};
}}
{{dcl end}}

This specialization of {{lc|std::is_error_code_enum}} informs other library components that values of type {{lc|std::io_errc}} are enumerations that hold error codes, which makes them implicitly convertible and assignable to objects of type {{lc|std::error_code}}.

{{cpp/types/integral_constant/inherit2|{{c|true}}|bool}}

===Example===
{{example
|The comparison between {{c|e.code()}} and {{lc|std::io_errc::stream}} compiles because {{c|std::is_error_code_enum&lt;std::io_errc&gt;::value {{==}} true}}.
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;

int main()
{
    std::ifstream f("doesn't exist");
    try
    {
        f.exceptions(f.failbit);
    }
    catch (const std::ios_base::failure&amp; e)
    {
        std::cout &lt;&lt; "Caught an ios_base::failure.\n";
        if (e.code() == std::io_errc::stream)
            std::cout &lt;&lt; "The error code is std::io_errc::stream\n";
    }
}
|output=
Caught an ios_base::failure.
The error code is std::io_errc::stream
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/error/error_code/dsc is_error_code_enum}}
{{dsc inc|cpp/error/dsc error_code}}
{{dsc inc|cpp/io/dsc io_errc}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}