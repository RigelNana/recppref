{{cpp/io/strstream/title|strstream}}
{{cpp/io/strstream/navbar}}
{{dcl begin}}
{{dcl|num=1|deprecated=c++98|removed=c++26|1=
strstream();
}}
{{dcl|num=2|deprecated=c++98|removed=c++26|1=
strstream( char* s, int n, std::ios_base::openmode mode =
                               std::ios_base::in {{!}} std::ios_base::out );
}}
{{dcl end}}

Constructs new input/output strstream and its underlying {{lc|std::strstreambuf}}.

@1@ Default-constructs the underlying {{lc|std::strstreambuf}}, which creates a dynamically growing buffer, and initializes the base class with the address of the strstreambuf member.

@2@ Initialized the base class with the address of the underlying {{lc|std::strstreambuf}} member, which is initialized in one of the two possible ways, both of which use a user-provided fixed-size array:
:@a@ if {{c|1=(mode &amp; app) == 0}} (the {{c|app}} bit is not set in {{c|mode}}), constructs the buffer by calling {{c|strstreambuf(s, n, s)}}. The behavior is undefined if there are less than {{c|n}} elements in the array whose first element is pointed to by {{c|s}}.
:@b@ if {{c|1=(mode &amp; app) != 0}} (the {{c|app}} bit is set in {{c|mode}}), constructs the buffer by calling {{c|strstreambuf(s, n, s + std::strlen(s))}}. The behavior is undefined if there are less than {{c|n}} elements in the array whose first element is pointed to by {{c|s}} or if the array does not contain a valid null-terminated character sequence.

===Parameters===
{{par begin}}
{{par|s|{{c|char}} array to use as the output buffer}}
{{par|n|size of the array to be used for output}}
{{par|mode| specifies stream open mode. It is a bitmask type, the following constants are defined (although only {{c|app}} is used): 
{{cpp/io/ios_base/openmode consts}}}}
{{par end}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;strstream&gt;

int main()
{
    // dynamic buffer
    std::strstream s1;
    s1 &lt;&lt; 1 &lt;&lt; ' ' &lt;&lt; 3.14 &lt;&lt; " example" &lt;&lt; std::ends;
    std::cout &lt;&lt; "Buffer holds: '" &lt;&lt; s1.str() &lt;&lt; "'\n";
    s1.freeze(false);

    int n;
    double d;
    std::string w;
    s1 &gt;&gt; n &gt;&gt; d &gt;&gt; w;
    std::cout &lt;&lt; "Read back: n = " &lt;&lt; n
              &lt;&lt; ", d = " &lt;&lt; d
              &lt;&lt; ", w = '" &lt;&lt; w &lt;&lt; "'\n";

    // static buffer
    char arr[20] = "-1 -3.14 ";
    std::strstream s2(arr, sizeof arr, std::ios_base::app);
    s2 &lt;&lt; "another" &lt;&lt; std::ends;
    std::cout &lt;&lt; "Buffer holds: '" &lt;&lt; s2.str() &lt;&lt; "'\n";
    s2 &gt;&gt; n &gt;&gt; d &gt;&gt; w;
    std::cout &lt;&lt; "Read back: n = " &lt;&lt; n
              &lt;&lt; ", d = " &lt;&lt; d
              &lt;&lt; ", w = '" &lt;&lt; w &lt;&lt; "'\n";
}
|output=
Buffer holds: '1 3.14 example'
Read back: n = 1, d = 3.14, w = 'example'
Buffer holds: '-1 -3.14 another'
Read back: n = -1, d = -3.14, w = 'another'
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=115|std=C++98|before=overload (2) only considered the case&lt;br&gt;{{c|1=mode &amp; app == 0}} ({{tt|1===}} has higher precedence than {{tt|&amp;}})|after=considers cases {{c|1=(mode &amp; app) == 0}}&lt;br&gt;and {{c|1=(mode &amp; app) != 0}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/strstreambuf/dsc strstreambuf}}
{{dsc inc|cpp/io/strstream/dsc constructor|istrstream}}
{{dsc inc|cpp/io/strstream/dsc constructor|ostrstream}}
{{dsc end}}

{{langlinks|ja|zh}}