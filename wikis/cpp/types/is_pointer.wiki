{{cpp/types/traits/is|1=is_pointer
|description=
Checks whether {{tt|T}} is a [[cpp/language/pointer#Pointers|pointer to object or function]] (including pointer to {{lc|void}}, but excluding pointer to member) or a cv-qualified version thereof. Provides the member constant {{tt|value}} which is equal to {{c|true}}, if {{tt|T}} is an object/function pointer type. Otherwise, {{tt|value}} is equal to {{c|false}}.
|inherit_desc={{tt|T}} is a pointer type
}}

===Possible implementation===
{{eq fun
|1=
template&lt;class T&gt;
struct is_pointer : std::false_type {};

template&lt;class T&gt;
struct is_pointer&lt;T*&gt; : std::true_type {};

template&lt;class T&gt;
struct is_pointer&lt;T* const&gt; : std::true_type {};

template&lt;class T&gt;
struct is_pointer&lt;T* volatile&gt; : std::true_type {};

template&lt;class T&gt;
struct is_pointer&lt;T* const volatile&gt; : std::true_type {};
}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

int main()
{
    struct A
    {
        int m;
        void f() {}
    };

    int A::*mem_data_ptr = &amp;A::m;     // a pointer to member data
    void (A::*mem_fun_ptr)() = &amp;A::f; // a pointer to member function

    static_assert(
           ! std::is_pointer&lt;A&gt;::value
        &amp;&amp; ! std::is_pointer_v&lt;A&gt;    // same thing as above, but in C++17!
        &amp;&amp; ! std::is_pointer&lt;A&gt;()    // same as above, using inherited operator bool
        &amp;&amp; ! std::is_pointer&lt;A&gt;{}    // ditto
        &amp;&amp; ! std::is_pointer&lt;A&gt;()()  // same as above, using inherited operator()
        &amp;&amp; ! std::is_pointer&lt;A&gt;{}()  // ditto
        &amp;&amp;   std::is_pointer_v&lt;A*&gt;
        &amp;&amp;   std::is_pointer_v&lt;A const* volatile&gt;
        &amp;&amp; ! std::is_pointer_v&lt;A&amp;&gt;
        &amp;&amp; ! std::is_pointer_v&lt;decltype(mem_data_ptr)&gt;
        &amp;&amp; ! std::is_pointer_v&lt;decltype(mem_fun_ptr)&gt;
        &amp;&amp;   std::is_pointer_v&lt;void*&gt;
        &amp;&amp; ! std::is_pointer_v&lt;int&gt;
        &amp;&amp;   std::is_pointer_v&lt;int*&gt;
        &amp;&amp;   std::is_pointer_v&lt;int**&gt;
        &amp;&amp; ! std::is_pointer_v&lt;int[10]&gt;
        &amp;&amp; ! std::is_pointer_v&lt;std::nullptr_t&gt;
        &amp;&amp;   std::is_pointer_v&lt;void (*)()&gt;
    );
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_member_pointer}}
{{dsc inc|cpp/types/dsc is_member_object_pointer}}
{{dsc inc|cpp/types/dsc is_member_function_pointer}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_scalar}}

{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}