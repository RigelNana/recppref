{{cpp/title|remove_all_extents}}
{{cpp/meta/navbar}}
{{dcl begin}}
{{dcl header | type_traits}}
{{dcl | since=c++11 | 1=
template&lt; class T &gt;
struct remove_all_extents;
}}
{{dcl end}}

If {{tt|T}} is a multidimensional array of some type {{tt|X}}, provides the member typedef {{tt|type}} equal to {{tt|X}}, otherwise {{tt|type}} is {{tt|T}}.

{{cpp/types/nospec}}

===Member types===
{{dsc begin}}
{{dsc hitem | Name | Definition}}
{{dsc | {{tt|type}} | the type of the element of {{tt|T}} }}
{{dsc end}}

===Helper types===
{{dcl begin}}
{{dcl | since=c++14 | 1=
template&lt; class T &gt;
using remove_all_extents_t = typename remove_all_extents&lt;T&gt;::type;
}}
{{dcl end}}

===Possible implementation===
{{eq fun
 | 1=
template&lt;class T&gt;
struct remove_all_extents { typedef T type; };

template&lt;class T&gt;
struct remove_all_extents&lt;T[]&gt; {
    typedef typename remove_all_extents&lt;T&gt;::type type;
};

template&lt;class T, std::size_t N&gt;
struct remove_all_extents&lt;T[N]&gt; {
    typedef typename remove_all_extents&lt;T&gt;::type type;
};
}}

===Example===
{{example
 |
 | code=
#include &lt;iostream&gt;
#include &lt;type_traits&gt;
#include &lt;typeinfo&gt;

template&lt;class A&gt;
void info(const A&amp;)
{
    typedef typename std::remove_all_extents&lt;A&gt;::type Type;
    std::cout &lt;&lt; "underlying type: " &lt;&lt; typeid(Type).name() &lt;&lt; '\n';
}

int main()
{
    float a0;
    float a1[1][2][3];
    float a2[1][1][1][1][2];
    float* a3;
    int a4[3][2];
    double a5[2][3];
    struct X { int m; } x0[3][3];

    info(a0);
    info(a1);
    info(a2);
    info(a3);
    info(a4);
    info(a5);
    info(x0);
}
 | p=true
 | output=
underlying type: float
underlying type: float
underlying type: float
underlying type: float*
underlying type: int
underlying type: double
underlying type: main::X
}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/types/dsc is_array}}
{{dsc inc | cpp/types/dsc rank}}
{{dsc inc | cpp/types/dsc extent}}
{{dsc inc | cpp/types/dsc remove_extent}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}