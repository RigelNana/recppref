{{cpp/title|bad_cast}}
{{cpp/types/navbar}}
{{ddcl|header=typeinfo|
class bad_cast : public std::exception;
}}

An exception of this type is thrown when a {{ltt|cpp/language/dynamic_cast}} to a reference type fails the run-time check (e.g. because the types are not related by inheritance), and also from {{lc|std::use_facet}} if the requested facet does not exist in the locale.

{{inheritance diagram/std-bad_cast}}

===Member functions===
{{cpp/error/exception/member of derived|bad_cast}}

{{cpp/error/exception/inherit}}

===Notes===
{{feature test macro|__cpp_lib_constexpr_exceptions|value=202411L|std=C++26|{{c/core|constexpr}} for exception types}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;typeinfo&gt;
 
struct Foo { virtual ~Foo() {} };
struct Bar { virtual ~Bar() { std::cout &lt;&lt; "~Bar\n"; } };
struct Pub : Bar { ~Pub() override { std::cout &lt;&lt; "~Pub\n"; } };
 
int main()
{
    Pub pub;
    try
    {
        [[maybe_unused]]
        Bar&amp; r1 = dynamic_cast&lt;Bar&amp;&gt;(pub); // OK, upcast
 
        [[maybe_unused]]
        Foo&amp; r2 = dynamic_cast&lt;Foo&amp;&gt;(pub); // throws
    }
    catch (const std::bad_cast&amp; e)
    {
        std::cout &lt;&lt; "e.what(): " &lt;&lt; e.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
e.what(): std::bad_cast
~Pub
~Bar
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}