{{cpp/types/traits/is|1=is_void
|description=
Checks whether {{tt|T}} is a void type. Provides the member constant {{c|value}} that is equal to {{c|true}}, if {{tt|T}} is the type {{c/core|void}}, {{c/core|const void}}, {{c/core|volatile void}}, or {{c/core|const volatile void}}. Otherwise, {{c|value}} is equal to {{c|false}}.
|inherit_desc={{tt|T}} is the type {{c/core|void}} (possibly cv-qualified)
}}

===Possible implementation===
{{eq fun|
template&lt;class T&gt;
struct is_void : std::is_same&lt;void, typename std::remove_cv&lt;T&gt;::type&gt; {};
}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

void foo();

static_assert
(
    std::is_void_v&lt;void&gt; == true and
    std::is_void_v&lt;const void&gt; == true and
    std::is_void_v&lt;volatile void&gt; == true and
    std::is_void_v&lt;void*&gt; == false and
    std::is_void_v&lt;int&gt; == false and
    std::is_void_v&lt;decltype(foo)&gt; == false and
    std::is_void_v&lt;std::is_void&lt;void&gt;&gt; == false
);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_pointer}}
{{dsc inc|cpp/types/dsc is_enum}}
{{dsc inc|cpp/types/dsc is_union}}
{{dsc inc|cpp/types/dsc is_class}}
{{dsc inc|cpp/types/dsc is_function}}
{{dsc inc|cpp/types/dsc is_object}}

{{dsc end}}
{{langlinks|de|es|fr|it|ja|pt|ru|zh}}