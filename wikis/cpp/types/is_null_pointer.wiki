{{cpp/types/traits/is|1=is_null_pointer
|std=c++11
|description=
Checks whether {{tt|T}} is the type {{lc|std::nullptr_t}}.

Provides the member constant {{tt|value}} that is equal to {{c|true}}, if {{tt|T}} is the type {{lc|std::nullptr_t}}, {{c/core|const std::nullptr_t}}, {{c/core|volatile std::nullptr_t}}, or {{c/core|const volatile std::nullptr_t}}.

Otherwise, {{c|value}} is equal to {{c|false}}.
|inherit_desc={{tt|T}} is the type {{lc|std::nullptr_t}} (possibly cv-qualified)
}}

===Possible implementation===
{{eq fun
|1=
template&lt;class T&gt;
struct is_null_pointer : std::is_same&lt;std::nullptr_t, std::remove_cv_t&lt;T&gt;&gt; {};
}}

===Notes===
{{lc|std::is_pointer}} is {{c|false}} for {{lc|std::nullptr_t}} because it is not a built-in pointer type.

In libc++, {{tt|std::is_null_pointer}} is not available in C++11 mode.

{{feature test macro|__cpp_lib_is_null_pointer|{{tt|std::is_null_pointer}}|value=201309L|std=C++14|dr=11}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

static_assert(std::is_null_pointer_v&lt;decltype(nullptr)&gt;);
static_assert(!std::is_null_pointer_v&lt;int*&gt;);
static_assert(!std::is_pointer_v&lt;decltype(nullptr)&gt;);
static_assert(std::is_pointer_v&lt;int*&gt;);

int main()
{
}
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2247|std=C++11|before=the type trait for detecting {{lc|std::nullptr_t}} was missing|after=added}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_void}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_pointer}}
{{dsc inc|cpp/types/dsc is_enum}}
{{dsc inc|cpp/types/dsc is_union}}
{{dsc inc|cpp/types/dsc is_class}}
{{dsc inc|cpp/types/dsc is_function}}
{{dsc inc|cpp/types/dsc is_object}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}