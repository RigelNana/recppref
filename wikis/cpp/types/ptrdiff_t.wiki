{{cpp/title|ptrdiff_t}}
{{cpp/types/navbar}}
{{dcl begin}}
{{dcl header|cstddef}}
{{dcl|
typedef /*implementation-defined*/ ptrdiff_t;
}}
{{dcl end}}

{{tt|std::ptrdiff_t}} is the signed integer type of the result of subtracting two pointers.

{{rrev|since=c++11|
The bit width of {{tt|std::ptrdiff_t}} is not less than 17.
}}

===Notes===
{{tt|std::ptrdiff_t}} is used for [[cpp/language/operator_arithmetic#Additive operators|pointer arithmetic]] and array indexing, if negative values are possible. Programs that use other types, such as {{c/core|int}}, may fail on, e.g. 64-bit systems when the index exceeds {{lc|INT_MAX}} or if it relies on 32-bit modular arithmetic.

When working with the C++ container library, the proper type for the difference between iterators is the member typedef {{c|difference_type}}, which is often synonymous with {{tt|std::ptrdiff_t}}.

Only pointers to elements of the same array (including the pointer one past the end of the array) may be subtracted from each other.

If an array is so large (greater than {{lc|PTRDIFF_MAX}} elements, but less than {{lc|SIZE_MAX}} bytes), that the difference between two pointers may not be representable as {{tt|std::ptrdiff_t}}, the result of subtracting two such pointers is undefined.

For char arrays shorter than {{lc|PTRDIFF_MAX}}, {{tt|std::ptrdiff_t}} acts as the signed counterpart of {{lc|std::size_t}}: it can store the size of the array of any type and is, on most platforms, synonymous with {{lc|std::intptr_t}}.

It is unspecified whether the declaration of {{tt|std::ptrdiff_t}} is available in any other standard library header. An implementation may avoid introducing this name even when the standard requires {{tt|std::ptrdiff_t}} to be used.

===Possible implementation===
{{eq fun|1=
// valid since C++11
using ptrdiff_t = decltype(static_cast&lt;int*&gt;(nullptr) - static_cast&lt;int*&gt;(nullptr));
}}

===Example===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;iostream&gt;

int main()
{
    const std::size_t N = 10;
    int* a = new int[N];
    int* end = a + N;
    for (std::ptrdiff_t i = N; i &gt; 0; --i)
        std::cout &lt;&lt; (*(end - i) = i) &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
    delete[] a;
}
|output=
10 9 8 7 6 5 4 3 2 1
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc size_t}}
{{dsc inc|cpp/types/dsc offsetof}}
{{dsc see c|c/types/ptrdiff_t}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}