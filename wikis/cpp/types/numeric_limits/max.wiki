{{cpp/types/numeric_limits/title|max}}
{{cpp/types/numeric_limits/navbar}}
{{dcl begin}}
{{dcl header|limits}}
{{dcl rev multi|until1=c++11
|dcl1=
static T max() throw();
|dcl2=
static constexpr T max() noexcept;
}}
{{dcl end}}

Returns the maximum finite value representable by the numeric type {{tt|T}}. Meaningful for all bounded types.

===Return value===
{{dsc begin}}
{{dsc hitem|{{tt|T}}|{{c|std::numeric_limits&lt;T&gt;::max()}}}}
{{dsc|{{c/core|/* non-specialized */}}|{{c|T()}}}}
{{dsc|{{c/core|bool}}|{{c|true}}}}
{{dsc|{{c/core|char}}|{{c|CHAR_MAX}}}}
{{dsc|{{c/core|signed char}}|{{c|SCHAR_MAX}}}}
{{dsc|{{c/core|unsigned char}}|{{c|UCHAR_MAX}}}}
{{dsc|{{c/core|wchar_t}}|{{c|WCHAR_MAX}}}}
{{dsc|{{c/core|char8_t}} {{mark since c++20}}|{{c|UCHAR_MAX}}}}
{{dsc|{{c/core|char16_t}} {{mark since c++11}}|{{c|UINT_LEAST16_MAX}}}}
{{dsc|{{c/core|char32_t}} {{mark since c++11}}|{{c|UINT_LEAST32_MAX}}}}
{{dsc|{{c/core|short}}|{{c|SHRT_MAX}}}}
{{dsc|{{c/core|unsigned short}}|{{c|USHRT_MAX}}}}
{{dsc|{{c/core|int}}|{{c|INT_MAX}}}}
{{dsc|{{c/core|unsigned int}}|{{c|UINT_MAX}}}}
{{dsc|{{c/core|long}}|{{c|LONG_MAX}}}}
{{dsc|{{c/core|unsigned long}}|{{c|ULONG_MAX}}}}
{{dsc|{{c/core|long long}} {{mark since c++11}}|{{c|LLONG_MAX}}}}
{{dsc|{{c/core|unsigned long long}} {{mark since c++11}}|{{c|ULLONG_MAX}}}}
{{dsc|{{c/core|float}}|{{c|FLT_MAX}}}}
{{dsc|{{c/core|double}}|{{c|DBL_MAX}}}}
{{dsc|{{c/core|long double}}|{{c|LDBL_MAX}}}}
{{dsc end}}

===Example===
{{example
|Demonstrates the use of {{tt|max()}} with some fundamental types and some standard library typedefs (the output is system-specific):
|code=
#include &lt;boost/type_index.hpp&gt;
#include &lt;cstddef&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;limits&gt;
#include &lt;type_traits&gt;

template&lt;typename T&gt;
void print_max_value_of()
{
    constexpr T max{std::numeric_limits&lt;T&gt;::max()};

    std::cout &lt;&lt; std::setw(16) &lt;&lt; boost::typeindex::type_id&lt;T&gt;() &lt;&lt; ": ";
    if constexpr (std::is_floating_point_v&lt;T&gt;)
        std::cout &lt;&lt; std::defaultfloat &lt;&lt; max &lt;&lt; " = " &lt;&lt; std::hexfloat &lt;&lt; max &lt;&lt; '\n';
    else
    {
        constexpr auto m{static_cast&lt;unsigned long long&gt;(max)};
        std::cout &lt;&lt; std::dec &lt;&lt; m &lt;&lt; " = " &lt;&lt; std::hex &lt;&lt; m &lt;&lt; '\n';
    }
}

int main()
{
    std::cout &lt;&lt; std::showbase;

    print_max_value_of&lt;bool&gt;();
    print_max_value_of&lt;short&gt;();
    print_max_value_of&lt;int&gt;();
    print_max_value_of&lt;std::streamsize&gt;();
    print_max_value_of&lt;std::size_t&gt;();
    print_max_value_of&lt;char&gt;();
    print_max_value_of&lt;char16_t&gt;();
    print_max_value_of&lt;wchar_t&gt;();
    print_max_value_of&lt;float&gt;();
    print_max_value_of&lt;double&gt;();
    print_max_value_of&lt;long double&gt;();
}
|p=true
|output=&lt;nowiki/&gt;
            bool: 1 = 0x1
           short: 32767 = 0x7fff
             int: 2147483647 = 0x7fffffff
            long: 9223372036854775807 = 0x7fffffffffffffff
   unsigned long: 18446744073709551615 = 0xffffffffffffffff
            char: 127 = 0x7f
        char16_t: 65535 = 0xffff
         wchar_t: 2147483647 = 0x7fffffff
           float: 3.40282e+38 = 0x1.fffffep+127
          double: 1.79769e+308 = 0x1.fffffffffffffp+1023
     long double: 1.18973e+4932 = 0xf.fffffffffffffffp+16380
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/numeric_limits/dsc lowest}}
{{dsc inc|cpp/types/numeric_limits/dsc min}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}