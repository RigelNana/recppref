{{cpp/types/numeric_limits/title|round_style}}
{{cpp/types/numeric_limits/navbar}}
{{dcl begin}}
{{dcl rev multi|until1=c++11
|dcl1=
static const std::float_round_style round_style;
|dcl2=
static constexpr std::float_round_style round_style;
}}
{{dcl end}}

The value of {{c|std::numeric_limits&lt;T&gt;::round_style}} identifies the rounding style used by the floating-point type {{tt|T}} whenever a value that is not one of the exactly repesentable values of {{tt|T}} is stored in an object of that type.

===Standard specializations===
{{dsc begin}}
{{dsc hitem | {{tt|T}} | value of {{c|std::numeric_limits&lt;T&gt;::round_style}} }}
{{dsc | {{c/core|/* non-specialized */}}     | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|bool}}              | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|char}}              | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|signed char}}       | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|unsigned char}}     | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|wchar_t}}           | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|char8_t}} {{mark since c++20}}  | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|char16_t}} {{mark since c++11}} | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|char32_t}} {{mark since c++11}} | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|short}}             | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|unsigned short}}    | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|int}}               | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|unsigned int}}      | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|long}}              | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|unsigned long}}     | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|long long}} {{mark since c++11}}         | {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|unsigned long long}} {{mark since c++11}}| {{lc|std::round_toward_zero}} }}
{{dsc | {{c/core|float}}             | usually {{lc|std::round_to_nearest}} }}
{{dsc | {{c/core|double}}            | usually {{lc|std::round_to_nearest}} }}
{{dsc | {{c/core|long double}}       | usually {{lc|std::round_to_nearest}} }}
{{dsc end}}

===Notes===
These values are constants, and do not reflect the changes to the rounding made by {{lc|std::fesetround}}. The changed values may be obtained from {{lc|FLT_ROUNDS}} or {{lc|std::fegetround}}.

===Example===
The decimal value {{c|0.1}} cannot be represented by a binary floating-point type. When stored in an IEEE-754 {{c/core|double}}, it falls between {{math|0x1.9999999999999*2{{su|p=-4}}}} and {{math|0x1.999999999999a*2{{su|p=-4}}}}. Rounding to nearest representable value results in {{math|0x1.999999999999a*2{{su|p=-4}}}}. 

Similarly, the decimal value {{c|0.3}}, which is between {{math|0x1.3333333333333*2{{su|p=-2}}}} and {{math|0x1.3333333333334*2{{su|p=-2}}}} is rounded to nearest and is stored as {{math|0x1.3333333333333*2{{su|p=-2}}}}.

{{example
| 
|code=
#include &lt;iostream&gt;
#include &lt;limits&gt;

auto print(std::float_round_style frs)
{
    switch (frs)
    {
        case std::round_indeterminate:
            return "Rounding style cannot be determined";
        case std::round_toward_zero:
            return "Rounding toward zero";
        case std::round_to_nearest:
            return "Rounding toward nearest representable value";
        case std::round_toward_infinity:
            return "Rounding toward positive infinity";
        case std::round_toward_neg_infinity:
            return "Rounding toward negative infinity";
    }
    return "unknown round style";
}

int main()
{
    std::cout &lt;&lt; std::hexfloat
              &lt;&lt; "The decimal 0.1 is stored in a double as "
              &lt;&lt; 0.1 &lt;&lt; '\n'
              &lt;&lt; "The decimal 0.3 is stored in a double as "
              &lt;&lt; 0.3 &lt;&lt; '\n'
              &lt;&lt; print(std::numeric_limits&lt;double&gt;::round_style) &lt;&lt; '\n';
}
|output=
The decimal 0.1 is stored in a double as 0x1.999999999999ap-4
The decimal 0.3 is stored in a double as 0x1.3333333333333p-2
Rounding toward nearest representable value
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/numeric_limits/dsc float_round_style}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}