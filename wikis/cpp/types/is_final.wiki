{{cpp/types/traits/is|1=is_final
|std=c++14
|description=If {{tt|T}} is a {{lt|cpp/language/final}} class, provides the member constant {{tt|value}} equal {{c|true}}. For any other type, {{tt|value}} is {{c|false}}.

If {{tt|T}} is an incomplete class type, the behavior is undefined.
|inherit_desc= {{tt|T}} is a final class type
}}

===Notes===
{{tt|std::is_final}} is introduced by the resolution of {{lwg|2112}}.

A {{lt|cpp/language/union}} can be declared {{tt|final}} (and {{tt|std::is_final}} will detect that), even though unions cannot be used as bases in any case.

{{feature test macro|__cpp_lib_is_final|{{tt|std::is_final}}|value=201402L|std=C++14}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

class A {};
static_assert(std::is_final_v&lt;A&gt; == false);

class B final {};
static_assert(std::is_final_v&lt;B&gt; == true);

union U final
{
    int x;
    double d;
};
static_assert(std::is_final_v&lt;U&gt; == true);

int main()
{
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_class}}
{{dsc inc|cpp/types/dsc is_polymorphic}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}