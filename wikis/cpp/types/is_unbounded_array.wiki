{{cpp/types/traits/is|1=is_unbounded_array
|std=c++20
|description=
Checks whether {{tt|T}} is an {{lsd|cpp/language/array#Arrays of unknown bound}}. Provides the member constant {{c|value}} which is equal to {{c|true}}, if {{tt|T}} is an array type of unknown bound. Otherwise, {{c|value}} is equal to {{c|false}}.
|inherit_desc={{tt|T}} is an array type of unknown bound.
}}

===Possible implementation===
{{eq fun
|1=
template&lt;class T&gt;
struct is_unbounded_array: std::false_type {};

template&lt;class T&gt;
struct is_unbounded_array&lt;T[]&gt; : std::true_type {};
}}

===Notes===
{{feature test macro|__cpp_lib_bounded_array_traits|{{lc|std::is_bounded_array}}, {{tt|std::is_unbounded_array}}|value=201902L|std=C++20}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

class A {};

static_assert
(""
    &amp;&amp; std::is_unbounded_array_v&lt;A&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;A[]&gt; == true
    &amp;&amp; std::is_unbounded_array_v&lt;A[3]&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;float&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;int&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;int[]&gt; == true
    &amp;&amp; std::is_unbounded_array_v&lt;int[3]&gt; == false
);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_bounded_array}}
{{dsc inc|cpp/types/dsc extent}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}