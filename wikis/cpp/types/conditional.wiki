{{cpp/title|conditional}}
{{cpp/meta/navbar}}
{{dcl begin}}
{{dcl header | type_traits}}
{{dcl | since=c++11 | 1=
template&lt; bool B, class T, class F &gt;
struct conditional;
}}
{{dcl end}}

Provides member typedef {{tt|type}}, which is defined as {{tt|T}} if {{tt|B}} is {{c|true}} at compile time, or as {{tt|F}} if {{tt|B}} is {{c|false}}.

{{cpp/types/nospec}}

===Member types===
{{dsc begin}}
{{dsc hitem | Member type | Definition}}
{{dsc | {{tt|type}} | {{tt|T}} if {{c|1=B == true}}, {{tt|F}} if {{c|1=B == false}}}}
{{dsc end}}

===Helper types===
{{dcl begin}}
{{dcl | since=c++14 | 1=
template&lt; bool B, class T, class F &gt;
using conditional_t = typename conditional&lt;B,T,F&gt;::type;
}}
{{dcl end}}

===Possible implementation===
{{eq fun
 | 1=
template&lt;bool B, class T, class F&gt;
struct conditional { using type = T; };

template&lt;class T, class F&gt;
struct conditional&lt;false, T, F&gt; { using type = F; };
}}

===Example===
{{example
 | code=
#include &lt;iostream&gt;
#include &lt;type_traits&gt;
#include &lt;typeinfo&gt;

int main() 
{
    using Type1 = std::conditional&lt;true, int, double&gt;::type;
    using Type2 = std::conditional&lt;false, int, double&gt;::type;
    using Type3 = std::conditional&lt;sizeof(int) &gt;= sizeof(double), int, double&gt;::type;
   
    std::cout &lt;&lt; typeid(Type1).name() &lt;&lt; '\n';
    std::cout &lt;&lt; typeid(Type2).name() &lt;&lt; '\n';
    std::cout &lt;&lt; typeid(Type3).name() &lt;&lt; '\n';
}
 | p=true
 | output=
int
double
double
}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/types/dsc enable_if}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}