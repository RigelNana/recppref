{{cpp/title|make_unsigned}}
{{cpp/meta/navbar}}
{{dcl begin}}
{{dcl header|type_traits}}
{{dcl|since=c++11|1=
template&lt; class T &gt;
struct make_unsigned;
}}
{{dcl end}}

If {{tt|T}} is an integral (except {{c/core|bool}}) or enumeration type, provides the member typedef {{tt|type}} which is the unsigned integer type corresponding to {{tt|T}}, with the same cv-qualifiers.

If {{tt|T}} is signed or unsigned {{c/core|char}}, {{c/core|short}}, {{c/core|int}}, {{c/core|long}}, {{c/core|long long}}; the unsigned type from this list corresponding to {{tt|T}} is provided.

If {{tt|T}} is an enumeration type or {{c/core|char}}, {{c/core|wchar_t}}{{rev inl|since=c++20|, {{c/core|char8_t}}}}, {{c/core|char16_t}}, {{c/core|char32_t}}; the unsigned integer type with the smallest [[cpp/language/implicit conversion#Integral promotion|rank]] having the same {{tt|sizeof}} as {{tt|T}} is provided.

{{rrev multi|until1=c++20
|rev1=Otherwise, the behavior is undefined.
|rev2=Otherwise, the program is ill-formed.
}}

{{cpp/types/nospec}}

===Member types===
{{dsc begin}}
{{dsc hitem|Name|Definition}}
{{dsc|{{tt|type}}|the unsigned integer type corresponding to {{tt|T}}}}
{{dsc end}}

===Helper types===
{{dcl begin}}
{{dcl|since=c++14|1=
template&lt; class T &gt;
using make_unsigned_t = typename make_unsigned&lt;T&gt;::type;
}}
{{dcl end}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

int main()
{
    using uchar_type = std::make_unsigned_t&lt;char&gt;;
    using uint_type  = std::make_unsigned_t&lt;int&gt;;
    using ulong_type = std::make_unsigned_t&lt;volatile long&gt;;
    
    static_assert(
        std::is_same_v&lt;uchar_type, unsigned char&gt; and
        std::is_same_v&lt;uint_type, unsigned int&gt; and
        std::is_same_v&lt;ulong_type, volatile unsigned long&gt;
    );
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_signed}}
{{dsc inc|cpp/types/dsc is_unsigned}}
{{dsc inc|cpp/types/dsc make_signed}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}