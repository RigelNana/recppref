{{cpp/types/traits/is| 1=is_arithmetic
|std=c++11 
|description=If {{tt|T}} is an arithmetic type (that is, an integral type or a floating-point type) or a {{tt|cv-qualified}} version thereof, provides the member constant {{tt|value}} equal to {{c|true}}. For any other type, {{tt|value}} is {{c|false}}.

|inherit_desc= {{tt|T}} is an arithmetic type 
}}

===Notes===
Arithmetic types are the built-in types for which the [[cpp/language/operator arithmetic|arithmetic operators]] ({{tt|+}}, {{tt|-}}, {{tt|*}}, {{tt|/}}) are defined (possibly in combination with the usual arithmetic conversions).

Specializations of {{lc|std::numeric_limits}} are provided for all arithmetic types.

===Possible implementation===
{{eq fun
|1=
template&lt;class T&gt;
struct is_arithmetic : std::integral_constant&lt;bool,
                                              std::is_integral&lt;T&gt;::value {{!!}}
                                              std::is_floating_point&lt;T&gt;::value&gt; {};
}}

===Example===
{{example
|code=
#include &lt;atomic&gt;
#include &lt;cstddef&gt;
#include &lt;type_traits&gt;

class A {};

enum class B : int { e };

static_assert(
    std::is_arithmetic_v&lt;bool&gt;            == true  and
    std::is_arithmetic_v&lt;char&gt;            == true  and
    std::is_arithmetic_v&lt;char const&gt;      == true  and
    std::is_arithmetic_v&lt;int&gt;             == true  and
    std::is_arithmetic_v&lt;int const&gt;       == true  and
    std::is_arithmetic_v&lt;float&gt;           == true  and
    std::is_arithmetic_v&lt;float const&gt;     == true  and
    std::is_arithmetic_v&lt;std::size_t&gt;     == true  and

    std::is_arithmetic_v&lt;char&amp;&gt;           == false and
    std::is_arithmetic_v&lt;char*&gt;           == false and
    std::is_arithmetic_v&lt;int&amp;&gt;            == false and
    std::is_arithmetic_v&lt;int*&gt;            == false and
    std::is_arithmetic_v&lt;float&amp;&gt;          == false and
    std::is_arithmetic_v&lt;float*&gt;          == false and
    std::is_arithmetic_v&lt;A&gt;               == false and
    std::is_arithmetic_v&lt;B&gt;               == false and
    std::is_arithmetic_v&lt;decltype(B::e)&gt;  == false and
    std::is_arithmetic_v&lt;std::byte&gt;       == false and
    std::is_arithmetic_v&lt;std::atomic_int&gt; == false
);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_integral}}
{{dsc inc|cpp/types/dsc is_floating_point}}

{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}