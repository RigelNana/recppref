{{cpp/types/traits/is|1=is_floating_point
|description=
Checks whether {{tt|T}} is a floating-point type. Provides the member constant {{c|value}} which is equal to {{c|true}}, if {{tt|T}} is the type {{c/core|float}}, {{c/core|double}}, {{c/core|long double}}{{rev inl|since=c++23|, or any extended floating-point types ({{c/core|std::float16_t}}, {{c/core|std::float32_t}}, {{c/core|std::float64_t}}, {{c/core|std::float128_t}}, or {{c/core|std::bfloat16_t}})}}, including any cv-qualified variants. Otherwise, {{c|value}} is equal to {{c|false}}.
|inherit_desc={{tt|T}} is a floating-point type (possibly cv-qualified)
}}

===Possible implementation===
{{eq fun
|1=
template&lt;class T&gt;
struct is_floating_point
     : std::integral_constant&lt;
         bool,
         // Note: standard floating-point types
         std::is_same&lt;float, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;double, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;long double, typename std::remove_cv&lt;T&gt;::type&gt;::value
         // Note: extended floating-point types (C++23, if supported)
         {{!!}} std::is_same&lt;std::float16_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::float32_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::float64_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::float128_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::bfloat16_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
     &gt; {};
}}

===Example===
{{example
|code=
#include &lt;type_traits&gt;

class A {};
static_assert(!std::is_floating_point_v&lt;A&gt;);

static_assert(std::is_floating_point_v&lt;float&gt;);
static_assert(!std::is_floating_point_v&lt;float&amp;&gt;);
static_assert(std::is_floating_point_v&lt;double&gt;);
static_assert(!std::is_floating_point_v&lt;double&amp;&gt;);
static_assert(!std::is_floating_point_v&lt;int&gt;);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/numeric_limits/dsc is_iec559}}
{{dsc inc|cpp/types/dsc is_integral}}
{{dsc inc|cpp/types/dsc is_arithmetic}}
{{dsc inc|cpp/concepts/dsc floating_point}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}