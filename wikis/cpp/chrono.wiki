{{title|Date and time utilities}}
{{cpp/chrono/navbar}}

C++ includes support for two types of time manipulation:

* The {{tt|chrono}} library, a flexible collection of types that track time with varying degrees of precision (e.g. {{lc|std::chrono::time_point}}).
* C-style date and time library (e.g. {{lc|std::time}}).

{{anchor|Chrono library}}
===[[cpp/header/chrono|Chrono library]] {{mark since c++11}}===
The {{tt|chrono}} library defines {{rev inl|until=c++20|three}}{{rev inl|since=c++20|five}} main types as well as utility functions and common typedefs:
* clocks
* time points
* durations
{{rrev|since=c++20|
* calendar dates
* time zone information
}}

====Clocks====
A clock consists of a starting point (or epoch) and a tick rate.  For example, a clock may have an epoch of January 1, 1970 and tick every second. C++ defines several clock types:

{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc system_clock}}
{{dsc inc|cpp/chrono/dsc steady_clock}}
{{dsc inc|cpp/chrono/dsc high_resolution_clock}}

{{dsc inc|cpp/chrono/dsc is_clock}}
{{dsc inc|cpp/chrono/dsc utc_clock}}
{{dsc inc|cpp/chrono/dsc tai_clock}}
{{dsc inc|cpp/chrono/dsc gps_clock}}
{{dsc inc|cpp/chrono/dsc file_clock}}
{{dsc inc|cpp/chrono/dsc local_t}}
{{dsc end}}

====Time point====
A time point is a duration of time that has passed since the epoch of a specific clock.

{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc time_point}}
{{dsc inc|cpp/chrono/dsc clock_time_conversion}}
{{dsc inc|cpp/chrono/dsc clock_cast}}
{{dsc end}}

====Duration====
A duration consists of a span of time, defined as some number of ticks of some time unit.  For example, "42 seconds" could be represented by a duration consisting of 42 ticks of a 1-second time unit.

{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc duration}}
{{dsc end}}

{{anchor|Time of day}}
====Time of day {{mark since c++20}}====
{{tt|hh_mm_ss}} splits a duration representing time elapsed since midnight into hours, minutes, seconds, and fractional seconds, as applicable. It is primarily a formatting tool.

{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc hh_mm_ss}}
{{dsc inc|cpp/chrono/dsc hour fun}}
{{dsc end}}

{{anchor|Calendar}}
====Calendar {{mark since c++20}}====
{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc last_spec}}
{{dsc inc|cpp/chrono/dsc day}}
{{dsc inc|cpp/chrono/dsc month}}
{{dsc inc|cpp/chrono/dsc year}}
{{dsc inc|cpp/chrono/dsc weekday}}
{{dsc inc|cpp/chrono/dsc weekday_indexed}}
{{dsc inc|cpp/chrono/dsc weekday_last}}
{{dsc inc|cpp/chrono/dsc month_day}}
{{dsc inc|cpp/chrono/dsc month_day_last}}
{{dsc inc|cpp/chrono/dsc month_weekday}}
{{dsc inc|cpp/chrono/dsc month_weekday_last}}
{{dsc inc|cpp/chrono/dsc year_month}}
{{dsc inc|cpp/chrono/dsc year_month_day}}
{{dsc inc|cpp/chrono/dsc year_month_day_last}}
{{dsc inc|cpp/chrono/dsc year_month_weekday}}
{{dsc inc|cpp/chrono/dsc year_month_weekday_last}}
{{dsc inc|cpp/chrono/dsc operator/}}
{{dsc end}}

{{anchor|Time zone}}
====Time zone {{mark since c++20}}====
{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc tzdb}}
{{dsc inc|cpp/chrono/dsc tzdb_list}}
{{dsc inc|cpp/chrono/dsc tzdb functions}}
{{dsc inc|cpp/chrono/dsc locate_zone}}
{{dsc inc|cpp/chrono/dsc current_zone}}
{{dsc inc|cpp/chrono/dsc time_zone}}
{{dsc inc|cpp/chrono/dsc sys_info}}
{{dsc inc|cpp/chrono/dsc local_info}}
{{dsc inc|cpp/chrono/dsc choose}}
{{dsc inc|cpp/chrono/dsc zoned_traits}}
{{dsc inc|cpp/chrono/dsc zoned_time}}
{{dsc inc|cpp/chrono/dsc leap_second}}
{{dsc inc|cpp/chrono/utc_clock/dsc leap_second_info}}
{{dsc inc|cpp/chrono/utc_clock/dsc get_leap_second_info}}
{{dsc inc|cpp/chrono/dsc time_zone_link}}
{{dsc inc|cpp/chrono/dsc nonexistent_local_time}}
{{dsc inc|cpp/chrono/dsc ambiguous_local_time}}
{{dsc end}}

{{anchor|Literals}}
====Literals {{mark since c++14}}====
{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::literals::chrono_literals|inline=true}}
{{dsc inc|cpp/chrono/dsc operator""y}}
{{dsc inc|cpp/chrono/dsc operator""d}}
{{dsc inc|cpp/chrono/dsc operator""h}}
{{dsc inc|cpp/chrono/dsc operator""min}}
{{dsc inc|cpp/chrono/dsc operator""s}}
{{dsc inc|cpp/chrono/dsc operator""ms}}
{{dsc inc|cpp/chrono/dsc operator""us}}
{{dsc inc|cpp/chrono/dsc operator""ns}}
{{dsc end}}

{{anchor|Chrono I/O}}
====Chrono I/O {{mark since c++20}}====
{{dsc begin}}
{{dsc header|chrono}}
{{dsc namespace|std::chrono}}
{{dsc inc|cpp/chrono/dsc parse}}
{{dsc end}}

===Notes===
{{ftm begin|sort=yes}}
{{ftm|__cpp_lib_chrono|std=C++17|value=201510L|rowspan="4"|Rounding functions for {{lc|std::chrono::duration}} and {{lc|std::chrono::time_point}}}}
{{ftm|-|std=C++17|value=201611L|std=C++17|{{c/core|constexpr}} for all the member functions of {{lc|std::chrono::duration}} and {{lc|std::chrono::time_point}}}}
{{ftm|-|std=C++17|value=201907L|std=C++20|{{ls|cpp/chrono#Calendar}}s and {{ls|cpp/chrono#Time zone}}s}}
{{ftm|-|std=C++26|value=202306L|std=C++26|[[cpp/utility/hash|Hashing]] support for {{tt|std::chrono}} value classes}}
{{ftm end}}

===[[cpp/chrono/c|C-style date and time library]]===

Also provided are the C-style date and time functions, such as {{lc|std::time_t}}, {{lc|std::difftime}}, and {{lc|CLOCKS_PER_SEC}}.

===Example===
{{example
|Measures and displays an execution time of a function call.
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;
 
long Fibonacci(unsigned n)
{
    return n &lt; 2 ? n : Fibonacci(n - 1) + Fibonacci(n - 2);
}
 
int main()
{
    const auto start{std::chrono::steady_clock::now()};
    const auto fb{Fibonacci(42)};
    const auto end{std::chrono::steady_clock::now()};
    const std::chrono::duration&lt;double&gt; elapsed_seconds{end - start};
    
    std::cout &lt;&lt; "Fibonacci(42): " &lt;&lt; fb &lt;&lt; "\nElapsed time: ";
//  std::cout &lt;&lt; elapsed_seconds.count() &lt;&lt; "s\n"; // Before C++20
    std::cout &lt;&lt; elapsed_seconds &lt;&lt; '\n'; // C++20's chrono::duration operator&lt;&lt;
}
|p=true
|output=
Fibonacci(42): 267914296
Elapsed time: 0.791429s
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}