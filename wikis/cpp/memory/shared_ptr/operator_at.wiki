{{cpp/memory/shared_ptr/title|operator[]}}
{{cpp/memory/shared_ptr/navbar}}
{{dcl begin}}
{{dcl|since=c++17|1= 
element_type&amp; operator[]( std::ptrdiff_t idx ) const;
}}
{{dcl end}}

Index into the array pointed to by the stored pointer. 

The behavior is undefined if the stored pointer is null or if {{c|idx}} is negative. 

If {{tt|T}} (the template parameter of {{tt|shared_ptr}}) is an array type {{tt|U[N]}}, {{c|idx}} must be less than {{tt|N}}, otherwise the behavior is undefined.

===Parameters===
{{par begin}}
{{par|idx|the array index}}
{{par end}}

===Return value===
A reference to the {{c|idx}}-th element of the array, i.e., {{c|get()[idx]}}.

===Exceptions===
Throws nothing.

===Remarks===
When {{tt|T}} is not an array type, it is unspecified whether this function is declared. If the function is declared, it is unspecified what its return type is, except that the declaration (although not necessarily the definition) of the function is guaranteed to be legal.

===Example===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;iostream&gt;
#include &lt;memory&gt;

int main()
{
    const std::size_t arr_size = 10;
    std::shared_ptr&lt;int[]&gt; pis(new int[10]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9});
    for (std::size_t i = 0; i &lt; arr_size; ++i)
        std::cout &lt;&lt; pis[i] &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
0 1 2 3 4 5 6 7 8 9 
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/shared_ptr/dsc get}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}