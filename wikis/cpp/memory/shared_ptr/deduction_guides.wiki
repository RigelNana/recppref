{{title|deduction guides for {{tt|std::shared_ptr}}}}
{{cpp/memory/shared_ptr/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|num=1|since=c++17|
template&lt; class T &gt;
shared_ptr( std::weak_ptr&lt;T&gt; ) -&gt; shared_ptr&lt;T&gt;;
}}
{{dcl|num=2|since=c++17|
template&lt; class T, class D &gt;
shared_ptr( std::unique_ptr&lt;T, D&gt; ) -&gt; shared_ptr&lt;T&gt;;
}}
{{dcl end}}

These [[cpp/language/class template argument deduction|deduction guides]] are provided for {{lc|std::shared_ptr}} to account for the edge cases missed by the implicit deduction guides.

Note that there is no class template argument deduction from pointer types because it is impossible to distinguish pointers obtained from array and non-array forms of {{c|new}}.
 
===Example===
{{example|code=
#include &lt;memory&gt;

int main()
{
    auto p = std::make_shared&lt;int&gt;(42);
    std::weak_ptr w{p};    // explicit deduction guide is used in this case
    std::shared_ptr p2{w}; // explicit deduction guide is used in this case
}
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}