{{cpp/memory/shared_ptr/title|unique}}
{{cpp/memory/shared_ptr/navbar}}
{{ddcl|deprecated=c++17|removed=c++20|
bool unique() const noexcept;
}}

Checks if {{c|*this}} is the only {{tt|shared_ptr}} instance managing the current object, i.e. whether {{c|1=use_count() == 1}}.

===Parameters===
(none)

===Return value===
{{c|true}} if {{c|*this}} is the only {{tt|shared_ptr}} instance managing the current object, {{c|false}} otherwise.

===Notes===
This function was deprecated in C++17 and removed in C++20 because {{c|1=use_count() == 1}} is meaningless in multithreaded environment (see {{rlp|use_count#Notes|Notes}} in {{lc|use_count}}).

===Example===
{{example
|code=
#include &lt;iostream&gt; 
#include &lt;memory&gt; 
  
int main() 
{ 
    auto sp1 = std::make_shared&lt;int&gt;(5);
    std::cout &lt;&lt; std::boolalpha;
    std::cout &lt;&lt; "sp1.unique() == " &lt;&lt; sp1.unique() &lt;&lt; '\n'; 

    std::shared_ptr&lt;int&gt; sp2 = sp1; 
    std::cout &lt;&lt; "sp1.unique() == " &lt;&lt; sp1.unique() &lt;&lt; '\n'; 
} 
|output=
sp1.unique() == true
sp1.unique() == false
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/shared_ptr/dsc use_count}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}