{{cpp/title|make_obj_using_allocator}}
{{cpp/memory/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|since=c++20|
template&lt; class T, class Alloc, class... Args &gt;
constexpr T make_obj_using_allocator( const Alloc&amp; alloc, Args&amp;&amp;... args );
}}
{{dcl end}}

Creates an object of the given type {{tt|T}} by means of {{rlp|uses_allocator|uses-allocator construction}}.

Equivalent to 
{{source|1=
return std::make_from_tuple&lt;T&gt;(
    std::uses_allocator_construction_args&lt;T&gt;(alloc, std::forward&lt;Args&gt;(args)...)
);
}}

===Parameters===
{{par begin}}
{{par|alloc|the allocator to use}}
{{par|args|the arguments to pass to T's constructor}}
{{par end}}

===Return value===
The newly-created object of type {{tt|T}}.

===Exceptions===
May throw any exception thrown by the constructor of {{tt|T}}, typically including {{lc|std::bad_alloc}}.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc uses_allocator_construction_args}}
{{dsc inc|cpp/memory/dsc uninitialized_construct_using_allocator}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}