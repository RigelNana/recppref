{{cpp/memory/weak_ptr/title|reset}}
{{cpp/memory/weak_ptr/navbar}}
{{ddcl|since=c++11|
void reset() noexcept;
}}

Releases the reference to the managed object. After the call {{c|*this}} manages no object.

===Parameters===
(none)

===Return value===
(none)

===Example===
{{example|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;

int main()
{
    auto shared = std::make_shared&lt;int&gt;(), shared2 = shared, shared3 = shared2;

    auto weak = std::weak_ptr&lt;int&gt;{shared};

    std::cout &lt;&lt; std::boolalpha 
              &lt;&lt; "shared.use_count(): " &lt;&lt; shared.use_count() &lt;&lt; '\n'
              &lt;&lt; "weak.use_count(): " &lt;&lt; weak.use_count() &lt;&lt; '\n'
              &lt;&lt; "weak.expired(): " &lt;&lt; weak.expired() &lt;&lt; '\n';

    weak.reset();

    std::cout &lt;&lt; "weak.reset();\n"
              &lt;&lt; "shared.use_count(): " &lt;&lt; shared.use_count() &lt;&lt; '\n'
              &lt;&lt; "weak.use_count(): " &lt;&lt; weak.use_count() &lt;&lt; '\n'
              &lt;&lt; "weak.expired(): " &lt;&lt; weak.expired() &lt;&lt; '\n';
}
|output=
shared.use_count(): 3
weak.use_count(): 3
weak.expired(): false
weak.reset();
shared.use_count(): 3
weak.use_count(): 0
weak.expired(): true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/weak_ptr/dsc expired}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}