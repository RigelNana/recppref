{{cpp/memory/weak_ptr/title|use_count}}
{{cpp/memory/weak_ptr/navbar}}
{{ddcl|since=c++11|
long use_count() const noexcept;
}}

Returns the number of {{tt|shared_ptr}} instances that share ownership of the managed object, or {{c|0}} if the managed object has already been deleted, i.e. {{c|*this}} is empty.

===Parameters===
(none)

===Return value===
The number of {{tt|shared_ptr}} instances sharing the ownership of the managed object at the instant of the call.

===Notes===
The usage and behavior of this function are similar to {{lc|std::shared_ptr::use_count}}, but it returns a different count.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;

std::weak_ptr&lt;int&gt; gwp;

void observe_gwp()
{
    std::cout &lt;&lt; "use_count(): " &lt;&lt; gwp.use_count() &lt;&lt; "\t id: ";
    if (auto sp = gwp.lock())
        std::cout &lt;&lt; *sp &lt;&lt; '\n';
    else
        std::cout &lt;&lt; "??\n";
}

void share_recursively(std::shared_ptr&lt;int&gt; sp, int depth)
{
    observe_gwp(); // : 2 3 4
    if (1 &lt; depth)
        share_recursively(sp, depth - 1);
    observe_gwp(); // : 4 3 2
}

int main()
{
    observe_gwp();
    {
        auto sp = std::make_shared&lt;int&gt;(42);
        gwp = sp;
        observe_gwp(); // : 1
        share_recursively(sp, 3); // : 2 3 4 4 3 2
        observe_gwp(); // : 1
    }
    observe_gwp(); // : 0
}
|output=
use_count(): 0   id: ??
use_count(): 1   id: 42
use_count(): 2   id: 42
use_count(): 3   id: 42
use_count(): 4   id: 42
use_count(): 4   id: 42
use_count(): 3   id: 42
use_count(): 2   id: 42
use_count(): 1   id: 42
use_count(): 0   id: ??
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/weak_ptr/dsc expired}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}