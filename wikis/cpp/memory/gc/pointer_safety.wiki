{{cpp/title|pointer_safety}}
{{cpp/memory/navbar}}
{{ddcl | header=memory | since=c++11 | removed=c++23 |
enum class pointer_safety {
     relaxed,
     preferred,
     strict
};
}}

The scoped enumeration type {{tt|pointer_safety}} lists the pointer safety modes supported by C++.

===Enumeration constants===
{{dsc begin}}
{{dsc | {{tt|pointer_safety::strict}} | Only safely-derived pointers (pointers to objects allocated with new or subobjects thereof) may be dereferenced or deallocated. Garbage collector may be active.}}
{{dsc | {{tt|pointer_safety::preferred}} | All pointers are considered valid and may be dereferenced or deallocated. A reachability-based leak detector may be active.}}
{{dsc | {{tt|pointer_safety::relaxed}} | All pointers are considered valid and may be dereferenced or deallocated.}}
{{dsc end}}

===See also===
{{dsc begin}}
{{dsc inc | cpp/memory/gc/dsc get_pointer_safety}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}