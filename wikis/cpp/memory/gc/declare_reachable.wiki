{{cpp/title|declare_reachable}}
{{cpp/memory/navbar}}
{{ddcl|header=memory|since=c++11|removed=c++23|
void declare_reachable( void* p );
}}

Declares the object referenced by the pointer {{c|p}} reachable. Reachable objects will not be deleted by the garbage collector or considered to be a leak by a leak detector even if all pointers to it are destroyed. An object may be declared reachable multiple times, in which case multiple calls to {{lc|std::undeclare_reachable}} would be needed to remove this property. For example, a {{enwiki|XOR linked list}} needs to declare its nodes reachable if the implementation has garbage collection enabled.

===Parameters===
{{par begin}}
{{par|p|a safely-derived pointer or a null pointer}}
{{par end}}

===Return value===
(none)

===Exceptions===
May throw {{lc|std::bad_alloc}} if the system cannot allocate memory required to track reachable objects.

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/gc/dsc undeclare_reachable}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}