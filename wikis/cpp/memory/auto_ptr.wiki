{{cpp/title|auto_ptr}}
{{cpp/memory/auto_ptr/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|until=c++17|deprecated=c++11|num=1|1=
template&lt; class T &gt; class auto_ptr;
}}
{{dcl|until=c++17|deprecated=c++11|num=2|1=
template&lt;&gt; class auto_ptr&lt;void&gt;;
}}
{{dcl end}}

{{tt|auto_ptr}} is a smart pointer that manages an object obtained via [[cpp/language/new|new expression]] and deletes that object when {{tt|auto_ptr}} itself is destroyed. It may be used to provide exception safety for dynamically allocated objects, for passing ownership of dynamically allocated objects into functions and for returning dynamically allocated objects from functions.

Copying an {{tt|auto_ptr}} copies the pointer and transfers ownership to the destination: both copy construction and copy assignment of {{tt|auto_ptr}} modify their right-hand arguments, and the "copy" is not equal to the original. Because of these unusual copy semantics, {{tt|auto_ptr}} may not be placed in standard containers. {{rev inl|since=c++11|{{lc|std::unique_ptr}} is preferred for this and other uses.}}

@2@ Specialization for type {{c/core|void}} is provided, it declares the typedef {{tt|element_type}}, but no member functions.

An additional class template {{tt|auto_ptr_ref}} is referred to throughout the documentation. It is an implementation-defined type that holds a reference to {{tt|auto_ptr}}. The implementation is allowed to provide the template with a different name or implement the functions returning it or accepting it as parameter in other ways.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{c|element_type}}|{{c|T}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/memory/auto_ptr/dsc auto_ptr}}
{{dsc inc|cpp/memory/auto_ptr/dsc ~auto_ptr}}
{{dsc inc|cpp/memory/auto_ptr/dsc operator{{=}}}}
{{dsc inc|cpp/memory/auto_ptr/dsc operator_auto_ptr}}

{{dsc h2|Observers}}
{{dsc inc|cpp/memory/auto_ptr/dsc get}}
{{dsc inc|cpp/memory/auto_ptr/dsc operator*}}

{{dsc h2|Modifiers}}
{{dsc inc|cpp/memory/auto_ptr/dsc reset}}
{{dsc inc|cpp/memory/auto_ptr/dsc release}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}