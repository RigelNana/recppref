{{title|1=operator==,!={{petty|(std::allocator)}}}}
{{cpp/memory/allocator/navbar}}
{{dcl begin}}

{{dcl rev multi|num=1
|until1=c++11|dcl1=
template&lt; class T1, class T2 &gt;
bool operator==( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) throw();
|until2=c++20|dcl2=
template&lt; class T1, class T2 &gt;
bool operator==( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) noexcept;
|dcl3= 
template&lt; class T1, class T2 &gt;
constexpr bool
    operator==( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) noexcept;
}}

{{dcl rev multi|num=2
|until1=c++11|dcl1=
template&lt; class T1, class T2 &gt;
bool operator!=( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) throw();
|until2=c++20|dcl2=
template&lt; class T1, class T2 &gt;
bool operator!=( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) noexcept;
}}

{{dcl end}}

Compares two default allocators. Since default allocators are stateless, two default allocators are always equal.

@1@ Returns {{c|true}}.
@2@ Returns {{c|false}}.

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

===Parameters===
{{par begin}}
{{par|lhs, rhs|default allocators to compare}}
{{par end}}

===Return value===
@1@ {{c|true}}
@2@ {{c|false}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}