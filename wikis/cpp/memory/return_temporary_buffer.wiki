{{cpp/title|return_temporary_buffer}}
{{cpp/memory/navbar}}
{{ddcl|header=memory|deprecated=c++17|removed=c++20| 
template&lt; class T &gt;
void return_temporary_buffer( T* p );
}}

Deallocates the storage referenced by {{c|p}}.

If {{c|p}} is not a pointer value returned by an earlier call to {{lc|std::get_temporary_buffer}}, or has been invalidated by an intervening {{tt|std::return_temporary_buffer}} call, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|p|the pointer referring to the storage to be declloated}}
{{par end}}

===Return value===
(none)

===Exceptions===
Throws nothing.

===Example===
{{include|cpp/memory/example1}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2072|std=C++98|before=the storage allocated by {{lc|std::get_temporary_buffer}}&lt;br&gt;could be deallocated multiple times|after=the behavior is&lt;br&gt;undefined in this case}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc get_temporary_buffer}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}