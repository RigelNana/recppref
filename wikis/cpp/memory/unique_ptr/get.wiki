{{cpp/memory/unique_ptr/title|get}}
{{cpp/memory/unique_ptr/navbar}}
{{ddcl|since=c++11|notes={{mark|constexpr since C++23}}|1=
pointer get() const noexcept;
}}

Returns a pointer to the managed object or {{c|nullptr}} if no object is owned.

===Parameters===
(none)

===Return value===
Pointer to the managed object or {{c|nullptr}} if no object is owned.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;memory&gt;
#include &lt;string&gt;
#include &lt;utility&gt;

class Res
{
    std::string s;

public:
    Res(std::string arg) : s{std::move(arg)}
    {
        std::cout &lt;&lt; "Res::Res(" &lt;&lt; std::quoted(s) &lt;&lt; ");\n";
    }

    ~Res()
    {
        std::cout &lt;&lt; "Res::~Res();\n";
    }

private:
    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, Res const&amp; r)
    {
        return os &lt;&lt; "Res { s = " &lt;&lt; std::quoted(r.s) &lt;&lt; "; }";
    }
};

int main()
{
    std::unique_ptr&lt;Res&gt; up(new Res{"Hello, world!"});
    Res* res = up.get();
    std::cout &lt;&lt; *res &lt;&lt; '\n';
}
|output=
Res::Res("Hello, world!");
Res { s = "Hello, world!"; }
Res::~Res();
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/unique_ptr/dsc release}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}