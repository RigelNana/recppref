{{cpp/memory/unique_ptr/title|swap}}
{{cpp/memory/unique_ptr/navbar}}
{{ddcl|since=c++11|1=
void swap( unique_ptr&amp; other ) noexcept;
}}

Swaps the managed objects and associated deleters of {{c|*this}} and another {{c|unique_ptr}} object {{c|other}}.

===Parameters===
{{par begin}}
{{par|other|another {{c|unique_ptr}} object to swap the managed object and the deleter with}}
{{par end}}

===Return value===
(none)

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;

struct Foo
{
    Foo(int _val) : val(_val) { std::cout &lt;&lt; "Foo...\n"; }
    ~Foo() { std::cout &lt;&lt; "~Foo...\n"; }
    int val;
};

int main()
{
    std::unique_ptr&lt;Foo&gt; up1(new Foo(1));
    std::unique_ptr&lt;Foo&gt; up2(new Foo(2));

    up1.swap(up2);

    std::cout &lt;&lt; "up1-&gt;val:" &lt;&lt; up1-&gt;val &lt;&lt; '\n';
    std::cout &lt;&lt; "up2-&gt;val:" &lt;&lt; up2-&gt;val &lt;&lt; '\n';
}
|output=
Foo...
Foo...
up1-&gt;val:2
up2-&gt;val:1
~Foo...
~Foo...
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}