{{title|Low level memory management}}
{{cpp/memory/new/navbar}}

The [[cpp/language/new |new-expression]] is the only way to create an object or an array of objects with dynamic storage duration, that is, with lifetime not restricted to the scope in which it is created. A new-expression obtains storage by calling an allocation function. A [[cpp/language/delete |delete-expression]] destroys a most derived object or an array created by a new-expression and calls the deallocation function. The default allocation and deallocation functions, along with related functions, types, and objects, are declared in the header {{header|new}}. 

{{dsc begin}}
{{dsc header|new}}
{{dsc h2|Functions}}
{{dsc inc|cpp/memory/new/dsc operator_new}}
{{dsc inc|cpp/memory/new/dsc operator_delete}}
{{dsc inc|cpp/memory/new/dsc get_new_handler}}
{{dsc inc|cpp/memory/new/dsc set_new_handler}}
{{dsc h2|Classes}}
{{dsc inc|cpp/memory/new/dsc bad_alloc}}
{{dsc inc|cpp/memory/new/dsc bad_array_new_length}}
{{dsc inc|cpp/memory/new/dsc align_val_t}}
{{dsc h2|Types}}
{{dsc inc|cpp/memory/new/dsc new_handler}}
{{dsc h2|Objects}}
{{dsc inc|cpp/memory/new/dsc nothrow}}
{{dsc inc|cpp/memory/new/dsc destroying_delete}}
{{dsc h2|Object access}}
{{dsc inc|cpp/utility/dsc launder}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}