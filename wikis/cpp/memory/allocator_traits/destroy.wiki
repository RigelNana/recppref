{{cpp/memory/allocator_traits/title|destroy}}
{{cpp/memory/allocator_traits/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcla|since=c++11|constexpr=c++20|
template&lt; class T &gt;
static void destroy( Alloc&amp; a, T* p );
}}
{{dcl end}}

Calls the destructor of the object pointed to by {{c|p}}. If possible, does so by calling {{c|a.destroy(p)}}. If not possible (e.g. {{tt|Alloc}} does not have the member function {{tt|destroy()}}), then calls {{rev inl|until=c++20|the destructor of {{c|*p}} directly, as {{c|p-&gt;~T()}}}}{{rev inl|since=c++20|{{c|std::destroy_at(p)}}}}.

===Parameters===
{{par begin}}
{{par|a|allocator to use for destruction}}
{{par|p|pointer to the object being destroyed}}
{{par end}}

===Return value===
(none)

===Notes===
Because this function provides the automatic fall back to direct call to the destructor, the member function {{tt|destroy()}} is an optional {{named req|Allocator}} requirement since C++11.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/allocator/dsc destroy}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}