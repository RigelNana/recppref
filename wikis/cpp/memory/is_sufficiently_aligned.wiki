{{cpp/title|is_sufficiently_aligned}}
{{cpp/memory/navbar}}
{{ddcl|header=memory|since=c++26|1=
template&lt; std::size_t N, class T &gt;
bool is_sufficiently_aligned( T* ptr );
}}

Checks whether the pointer {{c|ptr}} points to an object whose alignment has a value of at least {{c|N}}.

The behavior is undefined if {{c|ptr}} does not point to an object of type {{tt|T}} (ignoring cv-qualification at every level).

===Return value===
{{c|true}} if {{c|ptr}} points to an object that has alignment at least {{c|N}}; otherwise {{c|false}}.

===Exceptions===
Throws nothing.

===Notes===
{{tt|std::is_sufficiently_aligned}} can be used as a precondition to {{lc|std::assume_aligned}}.

{{feature test macro|__cpp_lib_is_sufficiently_aligned|{{tt|std::is_sufficiently_aligned}}|value=202411L|std=C++26}}

===Possible implementation===
{{eq fun|1=
template&lt;std::size_t N, class T&gt;
bool is_sufficiently_aligned(T* ptr)
{
    return std::bit_cast&lt;std::uintptr_t&gt;(ptr) % N == 0;
}
}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/language/dsc alignof}}
{{dsc inc|cpp/language/dsc alignas}}
{{dsc inc|cpp/types/dsc aligned_storage}}
{{dsc inc|cpp/memory/dsc align}}
{{dsc inc|cpp/container/mdspan/dsc aligned_accessor}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}