{{cpp/memory/synchronized_pool_resource/title|synchronized_pool_resource}}
{{cpp/memory/synchronized_pool_resource/navbar}}
{{dcl begin}}
{{dcl|since=c++17|num=1|1=
synchronized_pool_resource();
}}
{{dcl|since=c++17|num=2|1=
explicit synchronized_pool_resource( std::pmr::memory_resource* upstream );
}}
{{dcl|since=c++17|num=3|1=
explicit synchronized_pool_resource( const std::pmr::pool_options&amp; opts );
}}
{{dcl|since=c++17|num=4|1=
synchronized_pool_resource( const std::pmr::pool_options&amp; opts,
                            std::pmr::memory_resource* upstream );
}}
{{dcl|since=c++17|num=5|1=
synchronized_pool_resource( const synchronized_pool_resource&amp; ) = delete;
}}
{{dcl end}}

Constructs a {{tt|synchronized_pool_resource}}.

@1-4@ Constructs a {{tt|synchronized_pool_resource}} using the specified upstream memory resource and tuned according to the specified options. The resulting object holds a copy of {{c|upstream}} but does not own the resource to which {{c|upstream}} points.&lt;br&gt;
The overloads not taking {{c|opts}} as a parameter uses a default constructed instance of {{ltt|cpp/memory/pool_options}} as the options. The overloads not taking {{c|upstream}} as a parameter uses the return value of {{lc|std::pmr::get_default_resource}} as the upstream memory resource.

@5@ Copy constructor is deleted.

=== Parameters ===
{{par begin}}
{{par|opts|a {{lc|std::pmr::pool_options}} struct containing the constructor options}}
{{par|upstream|the upstream memory resource to use}}
{{par end}}

=== Exceptions ===
@1-4@ Throws only if a call to the {{tt|allocate()}} function of the upstream resource throws. It is unspecified if or under what conditions such a call takes place.

{{langlinks|es|ja|ru|zh}}