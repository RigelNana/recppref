{{cpp/memory/scoped_allocator_adaptor/title|''outermost'', ''outermost-construct'', ''outermost-destroy''}}
{{cpp/memory/scoped_allocator_adaptor/navbar}}

{{dcl begin}}
{{dcla|num=1|anchor=outermost|expos=yes|1=
template&lt; class Alloc &gt;
/* unspecified */ /*outermost*/( Alloc&amp;&amp; alloc = *this );
}}
{{dcla|num=2|anchor=outermost-construct|expos=yes|
template&lt; class T, class... Args &gt;
void /*outermost-construct*/( T* p, Args&amp;&amp;... args );
}}
{{dcla|num=3|anchor=outermost-destroy|expos=yes|
template&lt; class T &gt;
void /*outermost-destroy*/( T* p );
}}
{{dcl end}}

These exposition-only helper member function templates are used in member functions {{rlpf|construct}} and {{rlpf|destroy}}.

@1@ Obtains the outermost allocator of {{c|alloc}}.
* If the expression {{c|alloc.outer_allocator()}} is valid, returns {{box|{{tti|outermost}}{{sep}}{{c/core|(alloc.outer_allocator())}}}}.
* Otherwise, returns {{c|alloc}}.

@2,3@ Constructs or destroys an object using the outermost allocator of {{c|*this}}.
@@ Given the type {{c/core|std::allocator_traits&lt;std::remove_reference_t&lt;decltype(}}{{tti|outermost}}{{sep}}{{c/core|())&gt;&gt;}} as {{tt|outermost_traits}}:
:@2@ Equivalent to {{box|{{c/core|outermost_traits::construct(}}{{tti|outermost}}{{sep}}{{c/core|(), p, std::forward&lt;Args&gt;(args)...);}}}}.
:@3@ Equivalent to {{box|{{c/core|outermost_traits::destroy(}}{{tti|outermost}}{{sep}}{{c/core|(), p);}}}}.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3116|std=C++11|before=the recursion condition for {{tti|outermost}} was “{{c|alloc}}&lt;br&gt;has the member function {{tt|outer_allocator()}}”|after=changed to “the expression&lt;br&gt;{{c|alloc.outer_allocator()}} is valid”}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/allocator_traits/dsc construct}}
{{dsc inc|cpp/memory/allocator_traits/dsc destroy}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}