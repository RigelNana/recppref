{{cpp/memory/scoped_allocator_adaptor/title|destroy}}
{{cpp/memory/scoped_allocator_adaptor/navbar}}
{{dcl begin}}
{{dcl header|scoped_allocator}}
{{dcl|since=c++11| 
template&lt; class T &gt;
void destroy( T* p );
}}
{{dcl end}}

Uses the outer allocator to call the destructor of the object pointed to by {{c|p}}, by calling

{{c|std::allocator_traits&lt;OUTERMOST&gt;::destroy(OUTERMOST(*this), p)}}

where OUTERMOST is the type that would be returned by calling {{c|this-&gt;outer_allocator()}}, and then calling the {{tt|outer_allocator()}} member function recursively on the result of this call until reaching the type that has no such member function.

===Parameters===
{{par begin}}
{{par|p|pointer to the object that is going to be destroyed}}
{{par end}}

===Return value===
(none)

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/allocator_traits/dsc destroy}}
{{dsc inc|cpp/memory/allocator/dsc destroy}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}