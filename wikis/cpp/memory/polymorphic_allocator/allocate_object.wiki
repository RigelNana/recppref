{{cpp/memory/polymorphic_allocator/title|allocate_object}}
{{cpp/memory/polymorphic_allocator/navbar}}

{{dcl begin}}
{{dcl|since=c++20|1=
template&lt; class U &gt;
U* allocate_object( std::size_t n = 1 );
}}
{{dcl end}}

Allocates storage for {{c|n}} objects of type {{tt|U}} using the underlying memory resource. 

If {{c|std::numeric_limits&lt;std::size_t&gt;::max() / sizeof(U) &lt; n}}, throws {{lc|std::bad_array_new_length}}, otherwise equivalent to {{c|return static_cast&lt;U*&gt;(allocate_bytes(n * sizeof(U), alignof(U)));}}.

===Parameters===
{{par begin}}
{{par|n|the number of objects to allocate storage for}}
{{par end}}

===Return value===
A pointer to the allocated storage. 

===Notes===
This function was introduced for use with the fully-specialized allocator {{c|std::pmr::polymorphic_allocator&lt;&gt;}}, but it may be useful in any specialization as a shortcut to avoid having to rebind from {{c|std::pmr::polymorphic_allocator&lt;T&gt;}} to {{c|std::pmr::polymorphic_allocator&lt;U&gt;}}.

Since {{tt|U}} is not deduced, it must be provided as a template argument when calling this function.

===Exceptions===
Throws {{lc|std::bad_array_new_length}} if {{c|n &gt; std::numeric_limits&lt;std::size_t&gt;::max() / sizeof(U)}}; may also be any exceptions thrown by the call to {{c|resource()-&gt;allocate}}.

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/polymorphic_allocator/dsc allocate_bytes}}
{{dsc inc|cpp/memory/polymorphic_allocator/dsc new_object}}
{{dsc inc|cpp/memory/polymorphic_allocator/dsc allocate}}
{{dsc inc|cpp/memory/allocator traits/dsc allocate}}
{{dsc inc|cpp/memory/memory resource/dsc allocate}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}