{{title|''voidify''}}
{{cpp/memory/navbar}}
{{ddcla|constexpr=c++17&lt;!-- std::addressof is constexpr since C++17 --&gt;|expos=yes|
template&lt; class T &gt;
void* voidify( T&amp; obj ) noexcept;
}}

Returns the address of {{c|obj}} (implicitly converted to {{c/core|void*}}).

===Parameters===
{{par begin}}
{{par|obj|the object whose address will be taken}}
{{par end}}

===Return value===
{{rev begin}}
{{rev|until=c++11|
{{c|&amp;obj}}
}}
{{rev|since=c++11|
{{c|std::addressof(obj)}}
}}
{{rev end}}

===Notes===
This exposition-only function is introduced by {{stddoc|P0896R4}}. It is used to describe the effects of [[cpp/memory#Uninitialized memory algorithms|uninitialized memory algorithms]] which construct objects in uninitialized memory areas. The result pointer is used as the {{spar|placement-params}} of a [[cpp/language/new#Placement new|placement {{c/core|new}} expression]].

Initially, the return value was {{c|const_cast&lt;void*&gt;(static_cast&lt;const volatile void*&gt;(std::addressof(obj)))}}, which breaks const-correctness. The explicit casts were removed by the resolution of {{lwg|3870}}, and the only conversion left is the implicit conversion to {{c/core|void*}}.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3870|std=C++98|before=the explicit casts broke const-correctness|after=removed these casts}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc uninitialized_copy}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_copy}}
{{dsc inc|cpp/memory/dsc uninitialized_fill}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_fill}}
{{dsc inc|cpp/memory/dsc uninitialized_move}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_move}}
{{dsc inc|cpp/memory/dsc uninitialized_default_construct}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_default_construct}}
{{dsc inc|cpp/memory/dsc uninitialized_value_construct}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_value_construct}}
{{dsc inc|cpp/memory/dsc construct_at}}
{{dsc inc|cpp/memory/ranges/dsc construct_at}}
{{dsc end}}

{{langlinks|ar|de|es|fr|it|ja|pt|ru|zh}}