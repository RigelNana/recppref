{{cpp/title|nothrow}}
{{cpp/memory/new/navbar}}
{{dcl begin}}
{{dcl header|new}}
{{dcl rev multi|num=1|until1=c++11
|dcl1=
struct nothrow_t {};
|dcl2=
struct nothrow_t { explicit nothrow_t() = default; };
}}
{{dcl|num=2|1=
extern const std::nothrow_t nothrow;
}}
{{dcl end}}

{{tt|std::nothrow_t}} is an empty class type used to disambiguate the overloads of throwing and non-throwing {{rlp|operator_new|allocation functions}}. {{tt|std::nothrow}} is a constant of it.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;new&gt;

int main()
{
    try
    {
        while (true)
        {
            new int[100000000ul];   // throwing overload
        }
    }
    catch (const std::bad_alloc&amp; e)
    {
        std::cout &lt;&lt; e.what() &lt;&lt; '\n';
    }

    while (true)
    {
        int* p = new(std::nothrow) int[100000000ul]; // non-throwing overload
        if (p == nullptr)
        {
            std::cout &lt;&lt; "Allocation returned nullptr\n";
            break;
        }
    }
}
|output=
std::bad_alloc
Allocation returned nullptr
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2510|std=C++11|before=the default constructor was non-explicit, which could lead to ambiguity|after=made explicit}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/new/dsc operator_new}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}