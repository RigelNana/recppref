{{cpp/memory/pointer_traits/title|pointer_to}}
{{cpp/memory/pointer_traits/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|since=c++11|num=1|notes={{mark|member of {{tt|pointer_traits&lt;Ptr&gt;}} specialization}}|
static pointer
pointer_to( element_type&amp; r );
}}
{{dcl rev multi|num=2
|since1=c++11|dcl1=
static pointer
pointer_to( element_type&amp; r ) noexcept;
|notes1={{mark|member of {{tt|pointer_traits&lt;T*&gt;}} specialization}}
|since2=c++20|dcl2=
static constexpr pointer
pointer_to( element_type&amp; r ) noexcept;
|notes2={{mark|member of {{tt|pointer_traits&lt;T*&gt;}} specialization}}
}}
{{dcl end}}

Constructs a dereferenceable pointer or pointer-like object ([[cpp/named_req/Allocator#Fancy_pointers|"fancy pointer"]]) to its argument.

@1@ The version of this function in the non-specialized {{lc|std::pointer_traits}} template simply calls {{c|Ptr::pointer_to(r)}}, and if Ptr does not provide a static member function {{tt|pointer_to}}, instantiation of this function is a compile-time error.
@2@ The version of this function in the specialization of {{lc|std::pointer_traits}} for pointer types returns {{c|std::addressof(r)}}.

===Parameters===
{{par begin}}
{{par|r|reference to an object of type {{c|element_type&amp;}}, except if element_type is {{c|void}}, in which case the type of {{tt|r}} is unspecified}}
{{par end}}

===Return value===
A dereferenceable pointer to {{c|r}}, of the type {{c|pointer_traits&lt;&gt;::pointer}}.

===Exceptions===
@1@ Unspecified (typically same as {{c|Ptr::pointer_to}}).

===Notes===
The [https://www.boost.org/doc/libs/release/doc/html/boost/intrusive/pointer_traits.html Boost.Intrusive library version] of this function returns {{c|pointer(std::addressof(r))}} if {{c|Ptr::pointer_to}} does not exist.

===See also===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc addressof}}
{{dsc inc|cpp/memory/allocator/dsc address}}
{{dsc inc|cpp/memory/pointer_traits/dsc to_address}}
{{dsc inc|cpp/memory/dsc to_address}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}