{{cpp/title|iswprint}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswprint( std::wint_t ch );
}}

Checks if the given wide character can be printed, i.e. it is either a number ({{tt|0123456789}}), an uppercase letter ({{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}), a lowercase letter ({{tt|abcdefghijklmnopqrstuvwxyz}}), a punctuation character ({{tt|&lt;nowiki&gt;!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{!}~&lt;/nowiki&gt;}}), space or any printable character specific to the current C locale.

{{cpp/string/wide/wint_t args}}

===Parameters===
{{par begin}}
{{par|ch|wide character}}
{{par end}}

===Return value===
Non-zero value if the wide character can be printed, zero otherwise.

===Notes===
[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] specifies which Unicode characters are include in POSIX print category.

===Example===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

void demo_iswprint(std::string_view rem, const std::wint_t c)
{
    std::cout &lt;&lt; std::boolalpha &lt;&lt; std::hex &lt;&lt; std::showbase
              &lt;&lt; rem &lt;&lt; "iswprint('" &lt;&lt; c &lt;&lt; "') = "
              &lt;&lt; !!std::iswprint(c) &lt;&lt; '\n';
}

int main()
{
    const wchar_t c1 = L'\u2002'; // en-space
    const wchar_t c2 = L'\u0082'; // break permitted

    demo_iswprint("In default locale:\n", c1);

    std::setlocale(LC_ALL, "en_US.utf8");
    demo_iswprint("In Unicode locale:\n", c1);
    demo_iswprint("", c2);
}
|p=true
|output=
In default locale:
iswprint('0x2002') = false
In Unicode locale:
iswprint('0x2002') = true
iswprint('0x82') = false
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isprint}}
{{dsc inc|cpp/string/byte/dsc isprint}}
{{dsc see c|c/string/wide/iswprint}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}