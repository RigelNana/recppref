{{cpp/title|iswcntrl}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswcntrl( std::wint_t ch );
}}

Checks if the given wide character is a control character, i.e. codes {{tt|0x00-0x1F}} and {{tt|0x7F}} and any control characters specific to the current locale.

{{cpp/string/wide/wint_t args}}

===Parameters===
{{par begin}}
{{par|ch|wide character}}
{{par end}}

===Return value===
Non-zero value if the wide character is a control character, zero otherwise.

===Notes===
ISO 30112 defines POSIX control characters as Unicode characters U+0000..U+001F, U+007F..U+009F, U+2028, and U+2029 (Unicode classes Cc, Zl, and Zp).

===Example===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

int main()
{
    wchar_t c = L'\u2028'; // the Unicode character "line separator" 

    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase &lt;&lt; std::boolalpha;
    std::cout &lt;&lt; "in the default locale, iswcntrl(" &lt;&lt; (std::wint_t)c &lt;&lt; ") = "
              &lt;&lt; (bool)std::iswcntrl(c) &lt;&lt; '\n';
    std::setlocale(LC_ALL, "en_US.utf8");
    std::cout &lt;&lt; "in Unicode locale, iswcntrl(" &lt;&lt; (std::wint_t)c &lt;&lt; ") = "
              &lt;&lt; (bool)std::iswcntrl(c) &lt;&lt; '\n';
}
|output=
in the default locale, iswcntrl(0x2028) = false
in Unicode locale, iswcntrl(0x2028) = true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc iscntrl}}
{{dsc inc|cpp/string/byte/dsc iscntrl}}
{{dsc see c|c/string/wide/iswcntrl}}
{{dsc end}}

{{cpp/string/character classes}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}