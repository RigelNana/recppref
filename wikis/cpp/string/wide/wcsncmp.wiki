{{cpp/title|wcsncmp}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
int wcsncmp( const wchar_t* lhs, const wchar_t* rhs, std::size_t count );
}}

Compares at most {{c|count}} wide characters of two null-terminated wide strings. The comparison is done lexicographically.

The sign of the result is the sign of the difference between the values of the first pair of wide characters that differ in the strings being compared.

The behavior is undefined if {{c|lhs}} or {{c|rhs}} are not pointers to null-terminated strings.

===Parameters===
{{par begin}}
{{par|lhs, rhs|pointers to the null-terminated wide strings to compare}}
{{par|count|maximum number of characters to compare}}
{{par end}}

===Return value===
Negative value if {{c|lhs}} appears before {{c|rhs}} in lexicographical order.

Zero if {{c|lhs}} and {{c|rhs}} compare equal.

Positive value if {{c|lhs}} appears after {{c|rhs}} in lexicographical order.

===Example===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

void demo(const wchar_t* lhs, const wchar_t* rhs, int sz)
{
    int rc = std::wcsncmp(lhs, rhs, sz);
    if (rc == 0)
        std::wcout &lt;&lt; "First " &lt;&lt; sz &lt;&lt; " characters of ["
                   &lt;&lt; lhs &lt;&lt; "] equal [" &lt;&lt; rhs &lt;&lt; "]\n";
    else if (rc &lt; 0)
        std::wcout &lt;&lt; "First " &lt;&lt; sz &lt;&lt; " characters of ["
                   &lt;&lt; lhs &lt;&lt; "] precede [" &lt;&lt; rhs &lt;&lt; "]\n";
    else if (rc &gt; 0)
        std::wcout &lt;&lt; "First " &lt;&lt; sz &lt;&lt; " characters of ["
                   &lt;&lt; lhs &lt;&lt; "] follow [" &lt;&lt; rhs &lt;&lt; "]\n";
}

int main()
{
    const wchar_t str1[] = L"안녕하세요";
    const wchar_t str2[] = L"안녕히 가십시오";

    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale("en_US.utf8"));
    demo(str1, str2, 5);
    demo(str2, str1, 8);
    demo(str1, str2, 2);
}
|output=
First 5 characters of [안녕하세요] precede [안녕히 가십시오]
First 8 characters of [안녕히 가십시오] follow [안녕하세요]
First 2 characters of [안녕하세요] equal [안녕히 가십시오]
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strncmp}}
{{dsc inc|cpp/string/wide/dsc wcscmp}}
{{dsc inc|cpp/string/wide/dsc wmemcmp}}
{{dsc inc|cpp/string/wide/dsc wcscoll}}
{{dsc see c|c/string/wide/wcsncmp}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}