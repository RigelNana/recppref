{{cpp/title| wcscmp}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
int wcscmp( const wchar_t* lhs, const wchar_t* rhs );
}}

Compares two null-terminated wide strings lexicographically.

The sign of the result is the sign of the difference between the values of the first pair of wide characters that differ in the strings being compared.

The behavior is undefined if {{c|lhs}} or {{c|rhs}} are not pointers to null-terminated wide strings.

===Parameters===
{{par begin}}
{{par|lhs, rhs|pointers to the null-terminated wide strings to compare}}
{{par end}}

===Return value===
Negative value if {{c|lhs}} appears before {{c|rhs}} in lexicographical order.

Zero if {{c|lhs}} and {{c|rhs}} compare equal.

Positive value if {{c|lhs}} appears after {{c|rhs}} in lexicographical order.

===Notes===
This function is not locale-sensitive, unlike {{lc|std::wcscoll}}, and the order may not be meaningful when characters from different Unicode blocks are used together or when the order of code units does not match collation order.

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;const wchar_t*&gt; leaders
    {
        L"Ленин", L"Сталин", L"Маленков", L"Хрущёв",
        L"Брежнев", L"Андропов", L"Черненко", L"Горбачёв"
    };

    std::ranges::sort(leaders, [](auto leaderLHS, auto leaderRHS)
    {
        return std::wcscmp(leaderLHS, leaderRHS) &lt; 0;
    });

    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale("en_US.utf8"));
    for (auto leader : leaders)
        std::wcout &lt;&lt; leader[0] &lt;&lt; ' ';
    std::wcout &lt;&lt; '\n';
}
|output=
А Б Г Л М С Х Ч
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcsncmp}}
{{dsc inc|cpp/string/wide/dsc wmemcmp}}
{{dsc inc|cpp/string/byte/dsc strcmp}}
{{dsc inc|cpp/string/wide/dsc wcscoll}}
{{dsc see c|c/string/wide/wcscmp}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}