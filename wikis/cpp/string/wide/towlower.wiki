{{cpp/title|towlower}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
std::wint_t towlower( std::wint_t ch );
}}
Converts the given wide character to lowercase, if possible.

{{cpp/string/wide/wint_t args}}

===Parameters===
{{par begin}}
{{par|ch|wide character to be converted}}
{{par end}}

===Return value===
Lowercase version of {{c|ch}} or unmodified {{c|ch}} if no lowercase version is listed in the current C locale.

===Notes===
Only 1:1 character mapping can be performed by this function, e.g. the Greek uppercase letter {{c/core|'Σ'}} has two lowercase forms, depending on the position in a word: {{c/core|'σ'}} and {{c/core|'ς'}}. A call to {{tt|std::towlower}} cannot be used to obtain the correct lowercase form in this case. 

[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] specifies which pairs of Unicode characters are included in this mapping.

===Example===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

int main()
{
    wchar_t c = L'\u0190'; // Latin capital open E ('Ɛ')

    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase;
    std::cout &lt;&lt; "in the default locale, towlower("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; std::towlower(c) &lt;&lt; '\n';
    std::setlocale(LC_ALL, "en_US.utf8");
    std::cout &lt;&lt; "in Unicode locale, towlower("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; std::towlower(c) &lt;&lt; '\n';
}
|output=
in the default locale, towlower(0x190) = 0x190
in Unicode locale, towlower(0x190) = 0x25b
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc towupper}}
{{dsc inc|cpp/locale/dsc tolower}}
{{dsc inc|cpp/string/byte/dsc tolower}}
{{dsc see c|c/string/wide/towlower}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}