{{cpp/title|wcsncpy}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
wchar_t* wcsncpy( wchar_t* dest, const wchar_t* src, std::size_t count );
}}

Copies at most {{c|count}} characters of the wide string pointed to by {{c|src}} (including the terminating null wide character) to wide character array pointed to by {{c|dest}}. 

If {{c|count}} is reached before the entire string {{c|src}} was copied, the resulting wide character array is not null-terminated.

If, after copying the terminating null wide character from {{c|src}}, {{c|count}} is not reached, additional null wide characters are written to {{c|dest}} until the total of {{c|count}} characters have been written.

If the strings overlap, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|dest|pointer to the wide character array to copy to}}
{{par|src|pointer to the wide string to copy from}}
{{par|count|maximum number of wide characters to copy}}
{{par end}}

===Return value===
{{c|dest}}

===Notes===
In typical usage, {{c|count}} is the size of the destination array.

===Example===
{{example
|code=
#include &lt;cwchar&gt;
#include &lt;iostream&gt;

int main()
{
    const wchar_t src[] = L"hi";
    wchar_t dest[6] = {L'a', L'b', L'c', L'd', L'e', L'f'};

    std::wcsncpy(dest, src, 5); // this will copy 'hi' and repeat \0 three times

    std::wcout &lt;&lt; "The contents of dest are: ";
    for (const wchar_t c : dest)
    {
        if (c)
            std::wcout &lt;&lt; c &lt;&lt; ' ';
        else
            std::wcout &lt;&lt; "\\0" &lt;&lt; ' ';
    }
    std::wcout &lt;&lt; '\n';
}
|output=
The contents of dest are: h i \0 \0 \0 f 
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcscpy}}
{{dsc inc|cpp/string/wide/dsc wmemcpy}}
{{dsc inc|cpp/string/byte/dsc strncpy}}
{{dsc see c|c/string/wide/wcsncpy}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}