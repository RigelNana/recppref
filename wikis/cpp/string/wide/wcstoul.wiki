{{cpp/title|wcstoul|wcstoull}}
{{cpp/string/wide/navbar}}
{{dcl begin}}
{{dcl header|cwchar}}
{{dcl| 
unsigned long      wcstoul ( const wchar_t* str, wchar_t** str_end, int base );
}}
{{dcl|since=c++11|
unsigned long long wcstoull( const wchar_t* str, wchar_t** str_end, int base );
}}
{{dcl end}}

Interprets an unsigned integer value in a wide string pointed to by {{c|str}}.

{{cpp/string/cvt str2int base|base=base|u=true|w=true}}

The functions sets the pointer pointed to by {{c|str_end}} to point to the wide character past the last character interpreted. If {{c|str_end}} is a null pointer, it is ignored.

===Parameters===
{{par begin}}
{{par|str|pointer to the null-terminated wide string to be interpreted}}
{{par|str_end|pointer to a pointer to a wide character}}
{{par|base|''base'' of the interpreted integer value}}
{{par end}}

===Return value===
Integer value corresponding to the contents of {{c|str}} on success. If the converted value falls out of range of corresponding return type, range error occurs and {{lc|ULONG_MAX}} or {{lc|ULLONG_MAX}} is returned. If no conversion can be performed, {{c|0}} is returned.

===Example===
{{example
|code=
#include &lt;cwchar&gt;
#include &lt;errno.h&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    const wchar_t* p = L"10 200000000000000000000000000000 30 40";
    wchar_t* end;
    std::wcout &lt;&lt; "Parsing L'" &lt;&lt; p &lt;&lt; "':\n";
    for (unsigned long i = std::wcstoul(p, &amp;end, 10);
         p != end;
         i = std::wcstoul(p, &amp;end, 10))
    {
        std::wcout &lt;&lt; '\'' &lt;&lt; std::wstring(p, end - p) &lt;&lt; "' -&gt; ";
        p = end;
        if (errno == ERANGE)
        {
            std::wcout &lt;&lt; "range error, got ";
            errno = 0;
        }
        std::wcout &lt;&lt; i &lt;&lt; '\n';
    }
}
|p=true
|output=
Parsing L'10 200000000000000000000000000000 30 40':
'10' -&gt; 10
' 200000000000000000000000000000' -&gt; range error, got 18446744073709551615
' 30' -&gt; 30
' 40' -&gt; 40
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strtoul}}
{{dsc inc|cpp/string/wide/dsc wcstol}}
{{dsc see c|c/string/wide/wcstoul|wcstoul|wcstoull}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}