{{cpp/title|iswspace}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswspace( wint_t ch );
}}

Checks if the given wide character is a wide whitespace character as classified by the currently installed C locale. In the default locale, the whitespace characters are the following:
* Space ({{tt|0x20}}, {{c|' '}})
* Form feed ({{tt|0x0c}}, {{c|'\f'}})
* Line feed ({{tt|0x0a}}, {{c|'\n'}})
* Carriage return ({{tt|0x0d}}, {{c|'\r'}})
* Horizontal tab ({{tt|0x09}}, {{c|'\t'}}) 
* Vertical tab ({{tt|0x0b}}, {{c|'\v'}}).

{{cpp/string/wide/wint_t args}}

===Parameters===
{{par begin}}
{{par|ch|wide character}}
{{par end}}

===Return value===
Non-zero value if the wide character is a whitespace character, zero otherwise.

===Notes===
ISO 30112 defines POSIX space characters as Unicode characters U+0009..U+000D, U+0020, U+1680, U+180E, U+2000..U+2006, U+2008..U+200A, U+2028, U+2029, U+205F, and U+3000.

===Example===
{{example
|Demonstrates the use of {{tt|iswspace}} with different locales.
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

void try_with(wchar_t c, const char* loc)
{
    std::setlocale(LC_ALL, loc);
    std::wcout &lt;&lt; "isspace('" &lt;&lt; c &lt;&lt; "') in " &lt;&lt; loc &lt;&lt; " locale returned "
               &lt;&lt; std::boolalpha &lt;&lt; static_cast&lt;bool&gt;(std::iswspace(c)) &lt;&lt; '\n';
}

int main()
{
    const wchar_t EM_SPACE = L'\u2003'; // Unicode character 'EM SPACE'
    try_with(EM_SPACE, "C");
    try_with(EM_SPACE, "en_US.UTF8");
}
|output=
isspace(' ') in C locale returned false
isspace(' ') in en_US.UTF8 locale returned true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isspace}}
{{dsc inc|cpp/string/byte/dsc isspace}}
{{dsc see c|c/string/wide/iswspace}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}