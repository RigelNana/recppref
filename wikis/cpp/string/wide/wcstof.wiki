{{cpp/title|wcstof|wcstod|wcstold}}
{{cpp/string/wide/navbar}}
{{dcl begin}}
{{dcl header|cwchar}}
{{dcl|since=c++11|
float       wcstof( const wchar_t* str, wchar_t** str_end );           
}}
{{dcl| 
double      wcstod( const wchar_t* str, wchar_t** str_end );
}}
{{dcl|since=c++11|
long double wcstold( const wchar_t* str, wchar_t** str_end );
}}
{{dcl end}}

Interprets a floating point value in a wide string pointed to by {{c|str}}.

{{cpp/string/cvt str2float|wide}}

The functions sets the pointer pointed to by {{c|str_end}} to point to the wide character past the last character interpreted. If {{c|str_end}} is a null pointer, it is ignored.

===Parameters===
{{par begin}}
{{par|str|pointer to the null-terminated wide string to be interpreted}}
{{par|str_end|pointer to a pointer to a wide character}}
{{par end}}

===Return value===
Floating point value corresponding to the contents of {{c|str}} on success. If the converted value falls out of range of corresponding return type, range error occurs and {{lc|HUGE_VAL}}, {{lc|HUGE_VALF}} or {{lc|HUGE_VALL}} is returned. If no conversion can be performed, {{c|0}} is returned.

===Example===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;clocale&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    const wchar_t* p = L"111.11 -2.22 0X1.BC70A3D70A3D7P+6 -Inf 1.18973e+4932zzz";
    wchar_t* end;
    std::wcout &lt;&lt; "Parsing L\"" &lt;&lt; p &lt;&lt; "\":\n";
    for (double f = std::wcstod(p, &amp;end); p != end; f = std::wcstod(p, &amp;end))
    {
        std::wcout &lt;&lt; "  '" &lt;&lt; std::wstring(p, end-p) &lt;&lt; "' -&gt; ";
        p = end;
        if (errno == ERANGE)
        {
            std::wcout &lt;&lt; "range error, got ";
            errno = 0;
        }
        std::wcout &lt;&lt; f &lt;&lt; '\n';
    }
    
    if (std::setlocale(LC_NUMERIC, "de_DE.utf8"))
    {
        std::wcout &lt;&lt; L"With de_DE.utf8 locale:\n";
        std::wcout &lt;&lt; L"  '123.45' -&gt; " &lt;&lt; std::wcstod(L"123.45", 0) &lt;&lt; L'\n';
        std::wcout &lt;&lt; L"  '123,45' -&gt; " &lt;&lt; std::wcstod(L"123,45", 0) &lt;&lt; L'\n';
    }
}
|output=
Parsing L"111.11 -2.22 0X1.BC70A3D70A3D7P+6 -Inf 1.18973e+4932zzz":
  '111.11' -&gt; 111.11
  ' -2.22' -&gt; -2.22
  ' 0X1.BC70A3D70A3D7P+6' -&gt; 111.11
  ' -Inf' -&gt; -inf
  ' 1.18973e+4932' -&gt; range error, got inf
With de_DE.utf8 locale:
  '123.45' -&gt; 123
  '123,45' -&gt; 123.45
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strtof}}
{{dsc see c|c/string/wide/wcstof}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}