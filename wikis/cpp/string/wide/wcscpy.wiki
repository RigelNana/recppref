{{cpp/title| wcscpy}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
wchar_t* wcscpy( wchar_t* dest, const wchar_t* src );
}}

Copies the wide string pointed to by {{c|src}} (including the terminating null wide character) to wide character array pointed to by {{c|dest}}.

If the strings overlap, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|dest|pointer to the wide character array to copy to}}
{{par|src|pointer to the null-terminated wide string to copy from}}
{{par end}}

===Return value===
{{c|dest}}

===Example===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;memory&gt;
 
int main()
{
    const wchar_t* src = L"犬 means dog";
//  src[0] = L'狗'; // can't modify string literal
    auto dst = std::make_unique&lt;wchar_t[]&gt;(std::wcslen(src) + 1); // +1 for the null
    std::wcscpy(dst.get(), src);
    dst[0] = L'狗';
    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale(""));
    std::wcout &lt;&lt; src &lt;&lt; '\n' &lt;&lt; dst.get() &lt;&lt; '\n';
}
|output=
犬 means dog
狗 means dog
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcsncpy}}
{{dsc inc|cpp/string/wide/dsc wmemcpy}}
{{dsc inc|cpp/string/byte/dsc strcpy}}
{{dsc see c|c/string/wide/wcscpy}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}