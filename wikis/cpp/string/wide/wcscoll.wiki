{{cpp/title| wcscoll}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
int wcscoll( const wchar_t* lhs, const wchar_t* rhs );
}}

Compares two null-terminated wide strings according to the locale most recently installed by {{lc|std::setlocale}}, as defined by the {{lc|LC_COLLATE}} category.

===Parameters===
{{par begin}}
{{par|lhs, rhs|pointers to the null-terminated wide strings to compare}}
{{par end}}

===Return value===
Negative value if {{c|lhs}} is ''less than'' (precedes) {{c|rhs}}.

{{c|0}} if {{c|lhs}} is ''equal to'' {{c|rhs}}.

Positive value if {{c|lhs}} is ''greater than'' (follows) {{c|rhs}}.

===Notes===
{{cpp/locale/collate/collation_note}}

===Example===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;iostream&gt;

void try_compare(const wchar_t* p1, const wchar_t* p2)
{
    if (std::wcscoll(p1, p2) &lt; 0)
        std::wcout &lt;&lt; p1 &lt;&lt; " before " &lt;&lt; p2 &lt;&lt; '\n';
    else
        std::wcout &lt;&lt; p2 &lt;&lt; " before " &lt;&lt; p1 &lt;&lt; '\n';
}

int main()
{
    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout &lt;&lt; "In the American locale: ";
    try_compare(L"hrnec", L"chrt");

    std::setlocale(LC_COLLATE, "cs_CZ.utf8");
    std::wcout &lt;&lt; "In the Czech locale: ";
    try_compare(L"hrnec", L"chrt");

    std::setlocale(LC_COLLATE, "en_US.utf8");
    std::wcout &lt;&lt; "In the American locale: ";
    try_compare(L"år", L"ängel");

    std::setlocale(LC_COLLATE, "sv_SE.utf8");
    std::wcout &lt;&lt; "In the Swedish locale: ";
    try_compare(L"år", L"ängel");
}
|output=
In the American locale: chrt before hrnec
In the Czech locale: hrnec before chrt
In the American locale: ängel before år
In the Swedish locale: år before ängel
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strcoll}}
{{dsc inc|cpp/locale/collate/dsc do_compare}}
{{dsc inc|cpp/string/wide/dsc wcsxfrm}}
{{dsc see c|c/string/wide/wcscoll}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}