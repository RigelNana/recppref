{{cpp/title|wcspbrk}}
{{cpp/string/wide/navbar}}
{{dcl begin}}
{{dcl header|cwchar}}
{{dcl|
const wchar_t* wcspbrk( const wchar_t* dest, const wchar_t* src );
}}
{{dcl|
Â      wchar_t* wcspbrk(       wchar_t* dest, const wchar_t* src );
}}
{{dcl end}}

Finds the first character in wide string pointed to by {{c|dest}}, that is also in wide string pointed to by {{c|src}}.

===Parameters===
{{par begin}}
{{par|dest|pointer to the null-terminated wide string to be analyzed}}
{{par|src|pointer to the null-terminated wide string that contains the characters to search for}}
{{par end}}

===Return value===
Pointer to the first character in {{c|dest}}, that is also in {{c|src}}, or a null pointer if no such character exists.

===Notes===
The name stands for "wide character string pointer break", because it returns a pointer to the first of the separator ("break") characters.

===Example===
{{example
|code=
#include &lt;cwchar&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
 
int main()
{
    const wchar_t* str = L"Hello world, friend of mine!";
    const wchar_t* sep = L" ,!";
 
    unsigned int cnt = 0;
    do
    {
        str = std::wcspbrk(str, sep); // find separator
        std::wcout &lt;&lt; std::quoted(str) &lt;&lt; L'\n';
        if (str)
            str += std::wcsspn(str, sep); // skip separator
        ++cnt; // increment word count
    } while (str &amp;&amp; *str);
 
    std::wcout &lt;&lt; L"There are " &lt;&lt; cnt &lt;&lt; L" words\n";
}
|output=
" world, friend of mine!"
", friend of mine!"
" of mine!"
" mine!"
"!"
There are 5 words
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcscspn}}
{{dsc inc|cpp/string/wide/dsc wcschr}}
{{dsc inc|cpp/string/byte/dsc strpbrk}}
{{dsc see c|c/string/wide/wcspbrk}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}