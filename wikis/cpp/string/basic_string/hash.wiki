{{cpp/title|hash&lt;small&gt;&lt;std::basic_string&gt;&lt;/small&gt;}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcl header|string}}
{{dcl|num=1|since=c++11|
template&lt; class A &gt;
struct hash&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, A&gt;&gt;;
}}
{{dcl|num=2|since=c++11|
template&lt; class A &gt;
struct hash&lt;std::basic_string&lt;char16_t, std::char_traits&lt;char16_t&gt;, A&gt;&gt;;
}}
{{dcl|num=3|since=c++11|
template&lt; class A &gt;
struct hash&lt;std::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, A&gt;&gt;;
}}
{{dcl|num=4|since=c++11|
template&lt; class A &gt;
struct hash&lt;std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, A&gt;&gt;;
}}
{{dcl|num=5|since=c++20|
template&lt; class A &gt;
struct hash&lt;std::basic_string&lt;char8_t, std::char_traits&lt;char8_t&gt;, A&gt;&gt;;
}}
{{dcl end}}

The template specializations of {{lc|std::hash}} for the various string classes allow users to obtain hashes of strings.

{{rrev|since=c++17|
These hashes equal the hashes of corresponding {{lc|std::basic_string_view}} classes: If {{tt|S}} is one of these string types, {{tt|SV}} is the corresponding string view type, and {{tt|s}} is an object of type {{tt|S}}, then {{c|1=std::hash&lt;S&gt;()(s) == std::hash&lt;SV&gt;()(SV(s))}}.
}}

===Example===
{{example
|The following code shows one possible output of a hash function used on a string:
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;memory_resource&gt;
#include &lt;string&gt;
#include &lt;string_view&gt;
using namespace std::literals;
 
int main()
{
    auto sv = "Stand back! I've got jimmies!"sv;
    std::string s(sv);
    std::pmr::string pmrs(sv); // use default allocator
 
    std::cout &lt;&lt; std::hash&lt;std::string_view&gt;{}(sv) &lt;&lt; '\n';
    std::cout &lt;&lt; std::hash&lt;std::string&gt;{}(s) &lt;&lt; '\n';
    std::cout &lt;&lt; std::hash&lt;std::pmr::string&gt;{}(pmrs) &lt;&lt; '\n';
}
|p=true
|output=
3544599705012401047
3544599705012401047
3544599705012401047
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3705|std=C++11|before=hash support for {{lc|std::basic_string}} with customized allocators was not enabled|after=enabled}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc inc|cpp/string/basic_string_view/dsc hash}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}