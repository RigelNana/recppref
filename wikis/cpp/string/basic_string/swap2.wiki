{{cpp/title|swap{{small|(std::basic_string)}}}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcl header|string}}
{{dcl rev multi
|until1=c++17|dcl1=
template&lt; class CharT, class Traits, class Alloc &gt;
void swap( std::basic_string&lt;CharT, Traits, Alloc&gt;&amp; lhs,
           std::basic_string&lt;CharT, Traits, Alloc&gt;&amp; rhs );
|notes2={{mark constexpr since c++20}}|dcl2=
template&lt; class CharT, class Traits, class Alloc &gt;
void swap( std::basic_string&lt;CharT, Traits, Alloc&gt;&amp; lhs,
           std::basic_string&lt;CharT, Traits, Alloc&gt;&amp; rhs ) noexcept(/* see below */);
}}
{{dcl end}}

Specializes the {{lc|std::swap}} algorithm for {{lc|std::basic_string}}. Swaps the contents of {{c|lhs}} and {{c|rhs}}.

Equivalent to {{c|lhs.swap(rhs)}}.

===Parameters===
{{par begin}}
{{par|lhs, rhs|strings whose contents to swap}}
{{par end}}

===Return value===
(none)

===Complexity===
Constant.

{{rrev|since=c++17|
===Exceptions===
{{noexcept|noexcept(lhs.swap(rhs))}}
}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string a = "AAA";
    std::string b = "BBBB";
 
    std::cout &lt;&lt; "Before swap:\n"
                 "a = " &lt;&lt; a &lt;&lt; "\n"
                 "b = " &lt;&lt; b &lt;&lt; "\n\n";

    std::swap(a, b);

    std::cout &lt;&lt; "After swap:\n"
                 "a = " &lt;&lt; a &lt;&lt; "\n"
                 "b = " &lt;&lt; b &lt;&lt; '\n';
}

|output=
Before swap:
a = AAA
b = BBBB
 
After swap:
a = BBBB
b = AAA
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2064|std=C++11|before=non-member {{tt|swap}} was noexcept and inconsistent with member {{tt|swap}}|after=noexcept removed}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc swap}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}