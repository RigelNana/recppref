{{cpp/string/basic_string/title|shrink_to_fit}}
{{cpp/string/basic_string/navbar}}
{{ddcla|constexpr=c++20|
void shrink_to_fit();
}}

Requests the removal of unused capacity.

It is a non-binding request to reduce {{lc|capacity()}} to {{lc|size()}}. It depends on the implementation if the request is fulfilled. 

If (and only if) reallocation takes place, all pointers, references, and iterators are invalidated.

===Complexity===
Linear in the size of the string.

===Notes===
In libstdc++, {{tt|shrink_to_fit()}} is [https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.shrink not available] in C++98 mode.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string s;
    std::cout &lt;&lt; "Size of std::string is " &lt;&lt; sizeof s &lt;&lt; " bytes\n"
        &lt;&lt; "Default-constructed capacity is " &lt;&lt; s.capacity() 
        &lt;&lt; " and size is " &lt;&lt; s.size() &lt;&lt; '\n';
    
    for (int i = 0; i &lt; 42; i++)
        s.append(" 42 ");
    std::cout &lt;&lt; "Capacity after 42 appends is " &lt;&lt; s.capacity() 
        &lt;&lt; " and size is " &lt;&lt; s.size() &lt;&lt; '\n';
    
    s.clear();
    std::cout &lt;&lt; "Capacity after clear() is " &lt;&lt; s.capacity() 
        &lt;&lt; " and size is " &lt;&lt; s.size() &lt;&lt; '\n';
    
    s.shrink_to_fit();
    std::cout &lt;&lt; "Capacity after shrink_to_fit() is " &lt;&lt; s.capacity() 
        &lt;&lt; " and size is " &lt;&lt; s.size() &lt;&lt; '\n';
}
|p=true
|output=
GCC output:
Size of std::string is 32 bytes
Default-constructed capacity is 15 and size 0
Capacity after 42 appends is 240 and size 168
Capacity after clear() is 240 and size 0
Capacity after shrink_to_fit() is 15 and size 0

clang output (with -stdlib=libc++):
Size of std::string is 24 bytes
Default-constructed capacity is 22 and size is 0
Capacity after 42 appends is 191 and size is 168
Capacity after clear() is 191 and size is 0
Capacity after shrink_to_fit() is 22 and size is 0
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=755|std=C++98|before={{tt|std::string}} lacked explicit shrink-to-fit operations|after=provided}}
{{dr list item|wg=lwg|dr=2223|std=C++98|before=1. references, pointers, and iterators were not invalidated&lt;br&gt;2. there was no complexity requirement|after=1. they may be invalidated&lt;br&gt;2. required to be linear}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc size}}
{{dsc inc|cpp/string/basic_string/dsc capacity}}
{{dsc inc|cpp/string/basic_string/dsc resize}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}