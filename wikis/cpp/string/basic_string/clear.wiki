{{cpp/string/basic_string/title|clear}}
{{cpp/string/basic_string/navbar}}
{{ddcla|noexcept=c++11|constexpr=c++20|
void clear();
}}

Removes all characters from the string as if by executing {{c|erase(begin(), end())}}.

All pointers, references, and iterators are invalidated.

===Parameters===
(none)

===Return value===
(none)

===Notes===
Unlike for {{lc|std::vector::clear}}, the C++ standard does not explicitly require that {{lc|capacity}} is unchanged by this function, but existing implementations do not change capacity. This means that they do not release the allocated memory (see also {{lc|shrink_to_fit}}).

===Complexity===
Linear in the size of the string, although existing implementations operate in constant time.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string s{"Exemplar"};
    std::string::size_type const capacity = s.capacity();

    s.clear();
    assert(s.empty());
    assert(s.size() == 0);
    std::cout &lt;&lt; std::boolalpha &lt;&lt; (s.capacity() == capacity) &lt;&lt; '\n';
}
|p=true
|output=
true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc erase}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}