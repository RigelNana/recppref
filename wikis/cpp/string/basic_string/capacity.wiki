{{cpp/string/basic_string/title|capacity}}
{{cpp/string/basic_string/navbar}}
{{ddcla|noexcept=c++11|constexpr=c++20|
size_type capacity() const;
}}

Returns the number of characters that the string has currently allocated space for. 

===Parameters===
(none)

===Return value===
Capacity of the currently allocated storage, i.e. the storage available for storing elements.

===Complexity===
Constant.

===Notes===
Memory locations obtained from the allocator but not available for storing any element are not counted in the allocated storage. Note that the null terminator is not an element of the {{lc|std::basic_string}}.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

void show_capacity(std::string const&amp; s)
{
    std::cout &lt;&lt; std::quoted(s) &lt;&lt; " has capacity " &lt;&lt; s.capacity() &lt;&lt; ".\n";
}

int main()
{
    std::string s{"Exemplar"};
    show_capacity(s);

    s += " is an example string.";
    show_capacity(s);

    s.clear();
    show_capacity(s);

    std::cout &lt;&lt; "\nDemonstrate the capacity's growth policy."
                 "\nSize:  Capacity:  Ratio:\n" &lt;&lt; std::left;

    std::string g;
    auto old_cap{g.capacity()};

    for (int mark{}; mark != 5; ++mark)
    {
        while (old_cap == g.capacity())
            g.push_back('.');

        std::cout &lt;&lt; std::setw( 7) &lt;&lt; g.size()
                  &lt;&lt; std::setw(11) &lt;&lt; g.capacity()
                  &lt;&lt; std::setw(10) &lt;&lt; g.capacity() / static_cast&lt;float&gt;(old_cap) &lt;&lt; '\n';

        old_cap = g.capacity();
    }
}
|p=true
|output=
"Exemplar" has capacity 15.
"Exemplar is an example string." has capacity 30.
"" has capacity 30.

Demonstrate the capacity's growth policy.
Size:  Capacity:  Ratio:
16     30         2
31     60         2
61     120        2
121    240        2
241    480        2
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc size}}
{{dsc inc|cpp/string/basic_string/dsc reserve}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}