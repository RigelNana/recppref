{{cpp/string/basic_string/title|c_str}}
{{cpp/string/basic_string/navbar}}
{{ddcla|noexcept=c++11|constexpr=c++20|
const CharT* c_str() const;
}}

Returns a pointer to a null-terminated character array with data equivalent to those stored in the string.

The pointer is such that the range {{closed range|c_str()|c_str() + size()}} is valid and the values in it correspond to the values stored in the string with an additional null character after the last position.

The pointer obtained from {{tt|c_str()}} may be invalidated by:
* Passing a non-const reference to the string to any standard library function, or
* Calling non-const member functions on the string{{rev inl|since=c++11|, excluding {{lc|operator[]}}, {{lc|at()}}, {{lc|front()}}, {{lc|back()}}, {{lc|begin()}}, {{lc|rbegin()}}, {{lc|end()}} and {{lc|rend()}}}}.

Writing to the character array accessed through {{tt|c_str()}} is undefined behavior.

{{rrev|since=c++11|{{tt|c_str()}} and {{lc|data()}} perform the same function.}}

===Parameters===
(none)

===Return value===
Pointer to the underlying character storage.

{{rrev multi|until1=c++11
|rev1=
{{c|1=c_str()[i] == operator[](i)}} for every {{tt|i}} in {{range|0|size()}}.
|rev2=
{{c|1=c_str() + i == std::addressof(operator[](i))}} for every {{tt|i}} in {{closed range|0|size()}}.}}

===Complexity===
Constant.

===Notes===
The pointer obtained from {{tt|c_str()}} may only be treated as a pointer to a null-terminated character string if the string object does not contain other null characters.

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;cassert&gt;
#include &lt;cstring&gt;
#include &lt;string&gt;

extern "C" void c_func(const char* c_str)
{
    printf("c_func called with '%s'\n", c_str);
}

int main()
{
    std::string const s("Emplary");
    const char* p = s.c_str();
    assert(s.size() == std::strlen(p));
    assert(std::equal(s.begin(), s.end(), p));
    assert(std::equal(p, p + s.size(), s.begin()));
    assert('\0' == *(p + s.size()));

    c_func(s.c_str());
}
|output=
c_func called with 'Emplary'
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc front}}
{{dsc inc|cpp/string/basic_string/dsc back}}
{{dsc inc|cpp/string/basic_string/dsc data}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}