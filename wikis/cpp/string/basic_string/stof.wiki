{{cpp/title|stof|stod|stold}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcl header|string}}
{{dcl|num=1|since=c++11|1=
float       stof ( const std::string&amp; str, std::size_t* pos = nullptr );
}}
{{dcl|num=2|since=c++11|1=
float       stof ( const std::wstring&amp; str, std::size_t* pos = nullptr );
}}
{{dcl|num=3|since=c++11|1=
double      stod ( const std::string&amp; str, std::size_t* pos = nullptr );
}}
{{dcl|num=4|since=c++11|1=
double      stod ( const std::wstring&amp; str, std::size_t* pos = nullptr );
}}
{{dcl|num=5|since=c++11|1=
long double stold( const std::string&amp; str, std::size_t* pos = nullptr );
}}
{{dcl|num=6|since=c++11|1=
long double stold( const std::wstring&amp; str, std::size_t* pos = nullptr );
}}
{{dcl end}}

Interprets a floating point value in a string {{c|str}}. 

Let {{c|ptr}} be an internal (to the conversion functions) pointer of type {{c/core|char*}} {{v|1,3,5}} or {{c/core|wchar_t*}} {{v|2,4,6}}, accordingly. 

@1@ Calls {{c|std::strtof(str.c_str(), &amp;ptr)}}.
@2@ Calls {{c|std::wcstof(str.c_str(), &amp;ptr)}}.
@3@ Calls {{c|std::strtod(str.c_str(), &amp;ptr)}}.
@4@ Calls {{c|std::wcstod(str.c_str(), &amp;ptr)}}.
@5@ Calls {{c|std::strtold(str.c_str(), &amp;ptr)}}.
@6@ Calls {{c|std::wcstold(str.c_str(), &amp;ptr)}}.

{{cpp/string/cvt str2float}}

If {{c|pos}} is not a null pointer, then {{c|ptr}} will receive the address of the first unconverted character in {{c|str.c_str()}}, and the index of that character will be calculated and stored in {{c|*pos}}, giving the number of characters that were processed by the conversion.

===Parameters===
{{par begin}}
{{par|str|the string to convert}}
{{par|pos|address of an integer to store the number of characters processed}}
{{par end}}

===Return value===
The string converted to the specified floating point type.

===Exceptions===
{{lc|std::invalid_argument}} if no conversion could be performed.

{{lc|std::out_of_range}} if the converted value would fall out of the range of the result type or if the underlying function ({{lc|std::strtof}}, {{lc|std::strtod}} or {{lc|std::strtold}}) sets {{lc|errno}} to {{lc|ERANGE}}.

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2009|std=C++11|before={{lc|std::out_of_range}} would not be thrown if the converted&lt;br&gt;value would fall out of the range of the result type|after=will throw}}
{{dr list item|wg=lwg|dr=2403|std=C++11|before={{tt|stof}} called {{lc|std::strtod}} or {{lc|std::wcstod}}|after={{tt|stof}} calls {{lc|std::strtof}} or {{lc|std::wcstof}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc stol}}
{{dsc inc|cpp/string/basic_string/dsc stoul}}
{{dsc inc|cpp/utility/dsc from_chars}} 
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}