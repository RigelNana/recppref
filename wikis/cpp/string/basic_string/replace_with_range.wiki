{{cpp/string/basic_string/title|replace_with_range}}
{{cpp/string/basic_string/navbar}}
{{ddcl|since=c++23|1=
template&lt; container-compatible-range&lt;CharT&gt; R &gt;
constexpr std::basic_string&amp; replace_with_range( const_iterator first,
                                                 const_iterator last,
                                                 R&amp;&amp; rg );
}}

Replaces the characters in the range {{range|first|last}} with the characters from the range {{c|rg}}.

Equivalent to 
{{source|1=
return replace(first,
               last,
               std::basic_string(
                   std::from_range,
                   std::forward&lt;R&gt;(rg),
                   get_allocator())
);
}}

===Parameters===
{{par begin}}
{{par|first, last|range of characters that is going to be replaced}}
{{par|rg|a {{ls|cpp/ranges/to#container compatible range}}}}
{{par end}}

===Return value===
{{c|*this}}

===Complexity===
Linear in size of {{c|rg}}.

===Exceptions===
{{cpp/string/basic_string/length error note}}

{{cpp/strong exception safety guarantee}}

===Notes===
{{feature test macro|__cpp_lib_containers_ranges|value=202202L|std=C++23|member functions that accept {{ls|cpp/ranges/to#container compatible range}}}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;cassert&gt;
#include &lt;forward_list&gt;
#include &lt;iterator&gt;
#include &lt;string&gt;

int main()
{
    using namespace std::literals;

    auto s{"Today is today!"s};
    constexpr auto today{"today"sv};
    constexpr auto tomorrow{"tomorrow's yesterday"sv};
    std::forward_list&lt;char&gt; rg;
    std::ranges::reverse_copy(tomorrow, std::front_inserter(rg));

    const auto pos{s.rfind(today)};
    assert(pos != s.npos);
    const auto first{std::next(s.begin(), pos)};
    const auto last{std::next(first, today.length())};

#ifdef __cpp_lib_containers_ranges
    s.replace_range(first, last, rg);
#else
    s.replace(first, last, rg.cbegin(), rg.cend());
#endif

    assert("Today is tomorrow's yesterday!" == s);
}

}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc replace}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}