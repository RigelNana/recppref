{{cpp/string/basic_string/title|rend|crend}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcla|anchor=no|num=1|noexcept=c++11|constexpr=c++20|
reverse_iterator rend();
}}
{{dcla|anchor=no|num=2|noexcept=c++11|constexpr=c++20|
const_reverse_iterator rend() const;
}}
{{dcla|anchor=no|num=3|since=c++11|constexpr=c++20|
const_reverse_iterator crend() const noexcept;
}}
{{dcl end}}

Returns a reverse iterator to the character following the last character of the reversed string. It corresponds to the character preceding the first character of the non-reversed string. This character acts as a placeholder, attempting to access it results in undefined behavior.

{{image|range-rbegin-rend.svg}}

===Parameters===
(none)

===Return value===
Reverse iterator to the character following the last character.

===Complexity===
Constant.

===Notes===
libc++ backports {{tt|crend()}} to C++98 mode.

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;string&gt;

int main()
{
    std::string p("[A man, a plan, a canal: Panama]");
    std::string q;

    std::copy(p.crbegin(), p.crend(), std::back_inserter(q));
    std::cout &lt;&lt; "q = " &lt;&lt; q &lt;&lt; '\n';

    std::copy(q.crbegin(), q.crend(), p.rbegin());
    std::cout &lt;&lt; "p = " &lt;&lt; p &lt;&lt; '\n';
}
|output=
q = ]amanaP :lanac a ,nalp a ,nam A[
p = ]amanaP :lanac a ,nalp a ,nam A[
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc rbegin}}
{{dsc inc|cpp/string/basic_string_view/dsc rend}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}