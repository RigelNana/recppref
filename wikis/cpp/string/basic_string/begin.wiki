{{cpp/string/basic_string/title|begin|cbegin}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcla|anchor=no|num=1|noexcept=c++11|constexpr=c++20|
iterator begin();
}}
{{dcla|anchor=no|num=2|noexcept=c++11|constexpr=c++20|
const_iterator begin() const;
}}
{{dcla|anchor=no|num=3|constexpr=c++20|since=c++11|
const_iterator cbegin() const noexcept;
}}
{{dcl end}}

Returns an iterator to the first character of the string.

{{tt|begin()}} returns a [[cpp/iterator|mutable]] or [[cpp/iterator|constant]] iterator, depending on the constness of {{c|*this}}.

{{tt|cbegin()}} always returns a [[cpp/iterator|constant]] iterator. It is equivalent to {{c|const_cast&lt;const basic_string&amp;&gt;(*this).begin()}}.

{{image|range-begin-end.svg}}

===Parameters===
(none)

===Return value===
Iterator to the first character.

===Complexity===
Constant.

===Notes===
libc++ backports {{tt|cbegin()}} to C++98 mode.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string s("Exemplar");
    *s.begin() = 'e';
    std::cout &lt;&lt; s &lt;&lt; '\n';

    auto i = s.cbegin();
    std::cout &lt;&lt; *i &lt;&lt; '\n';
//  *i = 'E'; // error: i is a constant iterator
}
|output=
exemplar
e
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc end}}
{{dsc inc|cpp/string/basic_string_view/dsc begin}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}