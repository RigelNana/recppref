{{cpp/string/basic_string/title|replace}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcl|notes={{mark constexpr since c++20}}|num=1|
basic_string&amp; replace( size_type pos, size_type count,
                       const basic_string&amp; str );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=2|
basic_string&amp; replace( const_iterator first, const_iterator last,
                       const basic_string&amp; str );
}}
{{dcl rev multi|num=3
|dcl1=
basic_string&amp; replace( size_type pos, size_type count,
                       const basic_string&amp; str,
                       size_type pos2, size_type count2 );
|since2=c++14|notes2={{mark constexpr since c++20}}|dcl2=
basic_string&amp; replace( size_type pos, size_type count,
                       const basic_string&amp; str,
                       size_type pos2, size_type count2 = npos );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=4|
basic_string&amp; replace( size_type pos, size_type count,
                       const CharT* cstr, size_type count2 );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=5|
basic_string&amp; replace( const_iterator first, const_iterator last,
                       const CharT* cstr, size_type count2 );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=6|
basic_string&amp; replace( size_type pos, size_type count,
                       const CharT* cstr );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=7|
basic_string&amp; replace( const_iterator first, const_iterator last,
                       const CharT* cstr );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=8|
basic_string&amp; replace( size_type pos, size_type count,
                       size_type count2, CharT ch );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=9|
basic_string&amp; replace( const_iterator first, const_iterator last,
                       size_type count2, CharT ch );
}}
{{dcl|notes={{mark constexpr since c++20}}|num=10|
template&lt; class InputIt &gt;
basic_string&amp; replace( const_iterator first, const_iterator last,
                       InputIt first2, InputIt last2 );
}}
{{dcl|since=c++11|notes={{mark constexpr since c++20}}|num=11|
basic_string&amp; replace( const_iterator first, const_iterator last,
                       std::initializer_list&lt;CharT&gt; ilist );
}}
{{dcl|since=c++17|notes={{mark constexpr since c++20}}|num=12|
template&lt; class StringViewLike &gt;
basic_string&amp; replace( size_type pos, size_type count,
                       const StringViewLike&amp; t );
}}
{{dcl|since=c++17|notes={{mark constexpr since c++20}}|num=13|
template&lt; class StringViewLike &gt;
basic_string&amp; replace( const_iterator first, const_iterator last,
                       const StringViewLike&amp; t );
}}
{{dcl|since=c++17|notes={{mark constexpr since c++20}}|num=14|1=
template&lt; class StringViewLike &gt;
basic_string&amp; replace( size_type pos, size_type count,
                       const StringViewLike&amp; t,
                       size_type pos2, size_type count2 = npos );
}}
{{dcl end}}

Replaces the characters in the range {{range|begin() + pos|begin() + std::min(pos + count, size())}} or {{range|first|last}} with given characters.

@1,2@ Those characters are replaced with {{c|str}}.

@3@ Those characters are replaced with a substring {{range|pos2|std::min(pos2 + count2, str.size())}} of {{c|str}}.

@4,5@ Those characters are replaced with the characters in the range {{range|cstr|cstr + count2}}.
@@ If {{range|cstr|cstr + count2}} is not a [[cpp/iterator#Ranges|valid range]], the behavior is undefined.

@6,7@ Those characters are replaced with the characters in the range {{range|cstr|cstr + Traits::length(cstr)}}.

@8,9@ Those characters are replaced with {{c|count2}} copies of {{c|ch}}.

@10@ Those characters are replaced with the characters in the range {{range|first2|last2}} as if by {{c|replace(first, last, basic_string(first2, last2, get_allocator()))}}.

@11@ Those characters are replaced with the characters in {{c|ilist}}.

@12,13@ {{cpp/string/sv hack|plural=yes|those characters are replaced with the characters from {{c|sv}}}}

@14@ {{cpp/string/sv hack|those characters are replaced with the characters from the subview {{c|sv.substr(pos2, count2)}}}}

If {{range|begin()|first}} or {{range|first|last}} is not a [[cpp/iterator#Ranges|valid range]], the behavior is undefined.

===Parameters===
{{par begin}}
{{par|pos|start of the substring that is going to be replaced}}
{{par|count|length of the substring that is going to be replaced}}
{{par|first, last|range of characters that is going to be replaced}}
{{par|str|string to use for replacement}}
{{par|pos2|start of the substring to replace with}}
{{par|count2|number of characters to replace with}}
{{par|cstr|pointer to the character string to use for replacement}}
{{par|ch|character value to use for replacement}}
{{par|first2, last2|range of characters to use for replacement}}
{{par|ilist|initializer list with the characters to use for replacement}}
{{par|t|object (convertible to {{lc|std::basic_string_view}}) with the characters to use for replacement}}
{{par hreq}}
{{par req named|InputIt|InputIterator}}
{{par end}}

===Return value===
{{c|*this}}.

===Exceptions===
@1@ Throws {{lc|std::out_of_range}} if {{c|pos &gt; size()}}.
@3@ Throws {{lc|std::out_of_range}} if {{c|pos &gt; size()}} or {{c|pos2 &gt; str.size()}}.
@4,6,8@ Throws {{lc|std::out_of_range}} if {{c|pos &gt; size()}}.
@12,14@ Throws {{lc|std::out_of_range}} if {{c|pos &gt; size()}}.

{{cpp/string/basic_string/length error note}}

{{cpp/strong exception safety guarantee|plural=yes}}

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=847|std=C++98|before=there was no exception safety guarantee|after=added strong exception safety guarantee}}
{{dr list item|wg=lwg|dr=1323|std=C++98|before=the types of {{c|first}} and {{c|last}} were {{tt|iterator}}|after=changed to {{tt|const_iterator}}}}
{{dr list item|wg=lwg|dr=2946|std=C++17|before=overloads {{v|12,13}} caused ambiguity in some cases|after=avoided by making them templates}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc replace_with_range}}
{{dsc inc|cpp/regex/dsc regex_replace}}
{{dsc inc|cpp/algorithm/dsc replace}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}