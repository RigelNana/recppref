{{cpp/title|mbrtoc8}}
{{cpp/string/multibyte/navbar}}
{{ddcl|header=cuchar|since=c++20|
std::size_t mbrtoc8( char8_t* pc8,
                     const char* s,
                     std::size_t n,
                     std::mbstate_t* ps );
}}

Converts a narrow multibyte character to UTF-8 encoding.

If {{c|s}} is not a null pointer, inspects at most {{c|n}} bytes of the multibyte character string, beginning with the byte pointed to by {{c|s}} to determine the number of bytes necessary to complete the next multibyte character (including any shift sequences). If the function determines that the next multibyte character in {{c|s}} is complete and valid, converts it to UTF-8 and stores the first UTF-8 code unit in {{c|*pc8}} (if {{c|pc8}} is not null).

If UTF-8 encoding of the multibyte character in {{c|*s}} consists of more than one UTF-8 code unit, then after the first call to this function, {{c|*ps}} is updated in such a way that the next call to {{tt|mbrtoc8}} will write out the additional UTF-8 code units, without considering {{c|*s}}.

If {{c|s}} is a null pointer, the values of {{c|n}} and {{c|pc8}} are ignored and the call is equivalent to {{c|std::mbrtoc8(nullptr, "", 1, ps)}}.

If UTF-8 code unit produced is {{c|u8'\0'}}, the conversion state {{c|*ps}} represents the initial shift state.

The multibyte encoding used by this function is specified by the currently active C locale.

===Parameters===
{{par begin}}
{{par|pc8|pointer to the location where the resulting UTF-8 code units will be written}}
{{par|s|pointer to the multibyte character string used as input}}
{{par|n|limit on the number of bytes in s that can be examined}}
{{par|ps|pointer to the conversion state object used when interpreting the multibyte string}}
{{par end}}

===Return value===
The first of the following that applies:
* {{c|0}} if the character converted from {{c|s}} (and stored in {{c|*pc8}} if non-null) was the null character.
* the number of bytes {{c|[1...n]}} of the multibyte character successfully converted from {{c|s}}.
* {{c|static_cast&lt;std::size_t&gt;(-3)}} if the next UTF-8 code unit from a character whose encoding consists of multiple code units has now been written to {{c|*pc8}}. No bytes are processed from the input in this case.
* {{c|static_cast&lt;std::size_t&gt;(-2)}} if the next {{c|n}} bytes constitute an incomplete, but so far valid, multibyte character. Nothing is written to {{c|*pc8}}.
* {{c|static_cast&lt;std::size_t&gt;(-1)}} if encoding error occurs. Nothing is written to {{c|*pc8}}, the value {{lc|EILSEQ}} is stored in {{lc|errno}} and the value of {{c|*ps}} is unspecified.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/multibyte/dsc c8rtomb}}
{{dsc inc|cpp/string/multibyte/dsc mbrtoc16}}
{{dsc see c|c/string/multibyte/mbrtoc8}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}