{{cpp/title|strpbrk}}
{{cpp/string/byte/navbar}}
{{dcl begin}}
{{dcl header|cstring}}
{{dcl|
const char* strpbrk( const char* dest, const char* breakset );
}}
{{dcl|
Â      char* strpbrk(       char* dest, const char* breakset );
}}
{{dcl end}}

Scans the null-terminated byte string pointed to by {{c|dest}} for any character from the null-terminated byte string pointed to by {{c|breakset}}, and returns a pointer to that character.

===Parameters===
{{par begin}}
{{par|dest|pointer to the null-terminated byte string to be analyzed}}
{{par|breakset|pointer to the null-terminated byte string that contains the characters to search for}}
{{par end}}

===Return value===
Pointer to the first character in {{c|dest}}, that is also in {{c|breakset}}, or null pointer if no such character exists.

===Notes===
The name stands for "string pointer break", because it returns a pointer to the first of the separator ("break") characters.

===Example===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;

int main()
{
    const char* str = "hello world, friend of mine!";
    const char* sep = " ,!";

    unsigned int cnt = 0;
    do
    {
        str = std::strpbrk(str, sep); // find separator
        std::cout &lt;&lt; std::quoted(str) &lt;&lt; '\n';
        if (str)
            str += std::strspn(str, sep); // skip separator
        ++cnt; // increment word count
    } while (str &amp;&amp; *str);

    std::cout &lt;&lt; "There are " &lt;&lt; cnt &lt;&lt; " words\n";
}
|output=
" world, friend of mine!"
", friend of mine!"
" of mine!"
" mine!"
"!"
There are 5 words
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strcspn}}
{{dsc inc|cpp/string/byte/dsc strtok}}
{{dsc inc|cpp/string/byte/dsc strchr}}
{{dsc inc|cpp/string/wide/dsc wcspbrk}}
{{dsc see c|c/string/byte/strpbrk}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}