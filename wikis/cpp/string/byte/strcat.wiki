{{cpp/title|strcat}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cstring|
char* strcat( char* dest, const char* src );
}}

Appends a copy of the character string pointed to by {{c|src}} to the end of the character string pointed to by {{c|dest}}. The character {{c|src[0]}} replaces the null terminator at the end of {{c|dest}}. The resulting byte string is null-terminated.

The behavior is undefined if the destination array is not large enough for the contents of both {{c|src}} and {{c|dest}} and the terminating null character.

The behavior is undefined if the strings overlap.

===Parameters===
{{par begin}}
{{par|dest|pointer to the null-terminated byte string to append to}}
{{par|src|pointer to the null-terminated byte string to copy from}}
{{par end}}

===Return value===
{{c|dest}}

===Notes===
Because {{tt|strcat}} needs to seek to the end of {{c|dest}} on each call, it is inefficient to concatenate many strings into one using {{tt|strcat}}.

===Example===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;cstring&gt;
 
int main() 
{
    char str[50] = "Hello ";
    char str2[50] = "World!";
    std::strcat(str, str2);
    std::strcat(str, " Goodbye World!");
    std::puts(str);
}
|output=
Hello World! Goodbye World!
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strncat}}
{{dsc inc|cpp/string/byte/dsc strcpy}}
{{dsc see c|c/string/byte/strcat}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}