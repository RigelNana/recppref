{{cpp/title|strtoimax|strtoumax}}
{{cpp/string/byte/navbar}}
{{dcl begin}}
{{dcl header|cinttypes}}
{{dcl|since=c++11|num=1|
std::intmax_t strtoimax( const char* nptr, char** endptr, int base );
}}
{{dcl|since=c++11|num=2|
std::uintmax_t strtoumax( const char* nptr, char** endptr, int base );
}}
{{dcl end}}

Interprets an integer value in a byte string pointed to by {{c|nptr}}.

{{cpp/string/cvt str2int base|base=base}}

The functions sets the pointer pointed to by {{c|endptr}} to point to the character past the last character interpreted. If {{c|endptr}} is a null pointer, it is ignored.

If the {{c|nptr}} is empty or does not have the expected form, no conversion is performed, and (if {{c|enptr}} is not a null pointer) the value of {{c|nptr}} is stored in the object pointed to by {{c|endptr}}.

===Parameters===
{{par begin}}
{{par|nptr|pointer to the null-terminated byte string to be interpreted}}
{{par|endptr|pointer to a pointer to character.}}
{{par|base|''base'' of the interpreted integer value}}
{{par end}}

===Return value===
* If successful, an integer value corresponding to the contents of {{c|str}} is returned.
* If the converted value falls out of range of corresponding return type, a range error occurs (setting {{lc|errno}} to {{lc|ERANGE}}) and {{lc|INTMAX_MAX}}, {{lc|INTMAX_MIN}}, {{lc|UINTMAX_MAX}} or {{c|0}} is returned, as appropriate.
* If no conversion can be performed, {{c|0}} is returned.

===Example===
{{example
|code=
#include &lt;cinttypes&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string str = "helloworld";
    std::intmax_t val = std::strtoimax(str.c_str(), nullptr, 36);
    std::cout &lt;&lt; str &lt;&lt; " in base 36 is " &lt;&lt; val &lt;&lt; " in base 10\n";

    char* nptr;
    val = std::strtoimax(str.c_str(), &amp;nptr, 30);
    if (nptr != &amp;str[0] + str.size())
        std::cout &lt;&lt; str &lt;&lt; " in base 30 is invalid."
                  &lt;&lt; " The first invalid digit is '" &lt;&lt; *nptr &lt;&lt; "'\n";
}
|output=
helloworld in base 36 is 1767707668033969 in base 10
helloworld in base 30 is invalid. The first invalid digit is 'w'
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc stol}}
{{dsc inc|cpp/string/basic_string/dsc stoul}}
{{dsc inc|cpp/string/byte/dsc strtol}}
{{dsc inc|cpp/string/byte/dsc strtoul}}
{{dsc inc|cpp/string/wide/dsc wcstoimax}}
{{dsc inc|cpp/string/byte/dsc strtof}}
{{dsc inc|cpp/utility/dsc from_chars}}
{{dsc inc|cpp/string/byte/dsc atoi}}
{{dsc see c|c/string/byte/strtoimax|strtoimax|strtoumax}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}