{{cpp/title|strtoul|strtoull}}
{{cpp/string/byte/navbar}}
{{dcl begin}}
{{dcl header|cstdlib}}
{{dcl|num=1|
unsigned long      strtoul ( const char* str, char** str_end, int base );
}}
{{dcl|since=c++11|num=2|
unsigned long long strtoull( const char* str, char** str_end, int base );
}}
{{dcl end}}

Interprets an unsigned integer value in a byte string pointed to by {{c|str}}.

{{cpp/string/cvt str2int base|base=base|u=true}}

The functions sets the pointer pointed to by {{c|str_end}} to point to the character past the last character interpreted. If {{c|str_end}} is a null pointer, it is ignored.

===Parameters===
{{par begin}}
{{par|str|pointer to the null-terminated byte string to be interpreted}}
{{par|str_end|pointer to a pointer to character, might be set to a position past the last character interpreted}}
{{par|base|''base'' of the interpreted integer value}}
{{par end}}

===Return value===
Integer value corresponding to the contents of {{c|str}} on success. If the converted value falls out of range of corresponding return type, range error occurs ({{lc|errno}} is set to {{tt|ERANGE}}) and {{lc|ULONG_MAX}} or {{lc|ULLONG_MAX}} is returned. If no conversion can be performed, {{c|0}} is returned.

===Example===
{{example
|code=
#include &lt;cstdlib&gt;
#include &lt;errno.h&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    const char* p = "10 200000000000000000000000000000 30 -40 - 42";
    char* end = nullptr;
    std::cout &lt;&lt; "Parsing '" &lt;&lt; p &lt;&lt; "':\n";
    for (unsigned long i = std::strtoul(p, &amp;end, 10);
        p != end;
        i = std::strtoul(p, &amp;end, 10))
    {
        std::cout &lt;&lt; "'" &lt;&lt; std::string(p, end - p) &lt;&lt; "' -&gt; ";
        p = end;
        if (errno == ERANGE)
        {
            errno = 0;
            std::cout &lt;&lt; "range error, got ";
        }
        std::cout &lt;&lt; i &lt;&lt; '\n';
    }
    std::cout &lt;&lt; "After the loop p points to '" &lt;&lt; p &lt;&lt; "'\n";
}
|p=true
|output=
Parsing '10 200000000000000000000000000000 30 -40 - 42':
'10' -&gt; 10
' 200000000000000000000000000000' -&gt; range error, got 18446744073709551615
' 30' -&gt; 30
' -40' -&gt; 18446744073709551576
After the loop p points to ' - 42'
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc stoul}}
{{dsc inc|cpp/string/byte/dsc strtol}}
{{dsc inc|cpp/string/byte/dsc strtoimax}}
{{dsc inc|cpp/string/wide/dsc wcstoul}}
{{dsc inc|cpp/string/byte/dsc strtof}}
{{dsc inc|cpp/utility/dsc from_chars}}
{{dsc inc|cpp/string/byte/dsc atoi}}
{{dsc see c|c/string/byte/strtoul|strtoul|strtoull}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}