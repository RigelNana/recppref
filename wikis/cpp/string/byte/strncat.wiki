{{cpp/title|strncat}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cstring|
char* strncat( char* dest, const char* src, std::size_t count );
}}

Appends a byte string pointed to by {{c|src}} to a byte string pointed to by {{c|dest}}. At most {{c|count}} characters are copied. The resulting byte string is null-terminated. 

The destination byte string must have enough space for the contents of both {{c|dest}} and {{c|src}} plus the terminating null character, except that the size of {{c|src}} is limited to {{c|count}}.

The behavior is undefined if the strings overlap.

===Parameters===
{{par begin}}
{{par|dest|pointer to the null-terminated byte string to append to}}
{{par|src|pointer to the null-terminated byte string to copy from}}
{{par|count|maximum number of characters to copy}}
{{par end}}

===Return value===
{{c|dest}}

===Notes===
Because {{tt|std::strncat}} needs to seek to the end of {{c|dest}} on each call, it is inefficient to concatenate many strings into one using {{tt|std::strncat}}.

===Example===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;cstring&gt;
 
int main() 
{
    char str[50] = "Hello ";
    const char str2[50] = "World!";
    std::strcat(str, str2);
    std::strncat(str, " Goodbye World!", 3); // may issue "truncated output" warning
    std::puts(str);
}
|output=
Hello World! Go
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strcat}}
{{dsc inc|cpp/string/byte/dsc strcpy}}
{{dsc see c|c/string/byte/strncat}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}