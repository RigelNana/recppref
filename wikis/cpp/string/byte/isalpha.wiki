{{cpp/title|isalpha}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cctype|
int isalpha( int ch );
}}

Checks if the given character is an alphabetic character as classified by the currently installed C locale. In the default locale, the following characters are alphabetic:
* uppercase letters {{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}
* lowercase letters {{tt|abcdefghijklmnopqrstuvwxyz}}

In locales other than {{c|"C"}}, an alphabetic character is a character for which {{lc|std::isupper()}} or {{lc|std::islower()}} returns non-zero or any other character considered alphabetic by the locale. In any case, {{lc|std::iscntrl()}}, {{lc|std::isdigit()}}, {{lc|std::ispunct()}} and {{lc|std::isspace()}} will return zero for this character.

The behavior is undefined if the value of {{c|ch}} is not representable as {{c/core|unsigned char}} and is not equal to {{lc|EOF}}.

===Parameters===
{{par begin}}
{{par|ch|character to classify}}
{{par end}}

===Return value===
Non-zero value if the character is an alphabetic character, zero otherwise.

===Notes===
{{cpp/string/byte/note unsigned char}}

===Example===
{{example
|Demonstrates the use of {{tt|std::isalpha}} with different locales (OS-specific).
|code=
#include &lt;cctype&gt;
#include &lt;clocale&gt;
#include &lt;iostream&gt;
         
int main()
{
    unsigned char c = '\xdf'; // German letter ÃŸ in ISO-8859-1
 
    std::cout &lt;&lt; "isalpha(\'\\xdf\', default C locale) returned "
              &lt;&lt; std::boolalpha &lt;&lt; !!std::isalpha(c) &lt;&lt; '\n';

    std::setlocale(LC_ALL, "de_DE.iso88591");
    std::cout &lt;&lt; "isalpha(\'\\xdf\', ISO-8859-1 locale) returned "
              &lt;&lt; static_cast&lt;bool&gt;(std::isalpha(c)) &lt;&lt; '\n';
    
}
|p=true
|output=
isalpha('\xdf', default C locale) returned false
isalpha('\xdf', ISO-8859-1 locale) returned true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isalpha}}
{{dsc inc|cpp/string/wide/dsc iswalpha}}
{{dsc see c|c/string/byte/isalpha}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|es|fr|it|ja|pt|ru|tr|zh}}