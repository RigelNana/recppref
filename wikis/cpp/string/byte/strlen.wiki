{{cpp/title|strlen}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cstring|
std::size_t strlen( const char* str );
}}

Returns the length of the given byte string, that is, the number of characters in a character array whose first element is pointed to by {{c|str}} up to and not including the first null character. The behavior is undefined if there is no null character in the character array pointed to by {{c|str}}.

===Parameters===
{{par begin}}
{{par|str|pointer to the null-terminated byte string to be examined}}
{{par end}}

===Return value===
The length of the null-terminated string {{c|str}}.

===Possible implementation===
{{eq fun
|1=
std::size_t strlen(const char* start)
{
    // NB: start is not checked for nullptr!
    const char* end = start;
    while (*end != '\0')
        ++end;
    return end - start;
}
}}

===Example===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;iostream&gt;

int main()
{
    const char str[] = "dog cat\0mouse";

    std::cout &lt;&lt; "without null character: " &lt;&lt; std::strlen(str) &lt;&lt; '\n'
              &lt;&lt; "with null character: " &lt;&lt; sizeof str &lt;&lt; '\n';
}
|output=
without null character: 7
with null character: 14
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcslen}}
{{dsc inc|cpp/string/multibyte/dsc mblen}}
{{dsc see c|c/string/byte/strlen}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}