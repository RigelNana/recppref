{{cpp/title|strxfrm}}
{{cpp/string/byte/navbar}}
{{dcl begin}}
{{dcl header|cstring}}
{{dcl|
std::size_t strxfrm( char* dest, const char* src, std::size_t count );
}}
{{dcl end}}

Transforms the null-terminated byte string pointed to by {{c|src}} into the implementation-defined form such that comparing two transformed strings with {{lc|std::strcmp}} gives the same result as comparing the original strings with {{lc|std::strcoll}}, in the current C locale.

The first {{c|count}} characters of the transformed string are written to destination, including the terminating null character, and the length of the full transformed string is returned, excluding the terminating null character.

The behavior is undefined if the {{c|dest}} array is not large enough. The behavior is undefined if {{c|dest}} and {{c|src}} overlap.

If {{c|count}} is {{c|0}}, then {{c|dest}} is allowed to be a null pointer.

===Notes===
The correct length of the buffer that can receive the entire transformed string is {{c|1 + std::strxfrm(nullptr, src, 0)}}.

This function is used when making multiple locale-dependent comparisons using the same string or set of strings, because it is more efficient to use {{lc|std::strxfrm}} to transform all the strings just once, and subsequently compare the transformed strings with {{lc|std::strcmp}}.

===Parameters===
{{par begin}}
{{par|dest|pointer to the first element of the array where the transformed string will be written}}
{{par|src|pointer to the first character of a null-terminated byte string to transform}}
{{par|count|maximum number of characters to be written}}
{{par end}}

===Return value===
The length of the transformed string, not including the terminating null-character.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;cstring&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    char* loc = std::setlocale(LC_COLLATE, "cs_CZ.iso88592");
    assert(loc);

    std::string in1 = "hrnec";
    std::string out1(1 + std::strxfrm(nullptr, in1.c_str(), 0), ' ');
    std::string in2 = "chrt";
    std::string out2(1 + std::strxfrm(nullptr, in2.c_str(), 0), ' ');

    std::strxfrm(&amp;out1[0], in1.c_str(), out1.size());
    std::strxfrm(&amp;out2[0], in2.c_str(), out2.size());

    std::cout &lt;&lt; "In the Czech locale: ";
    if (out1 &lt; out2)
        std::cout &lt;&lt; in1 &lt;&lt; " before " &lt;&lt; in2 &lt;&lt; '\n';
    else
        std::cout &lt;&lt; in2 &lt;&lt; " before " &lt;&lt; in1 &lt;&lt; '\n';

    std::cout &lt;&lt; "In lexicographical comparison: ";
    if (in1 &lt; in2)
        std::cout &lt;&lt; in1 &lt;&lt; " before " &lt;&lt; in2 &lt;&lt; '\n';
    else
        std::cout &lt;&lt; in2 &lt;&lt; " before " &lt;&lt; in1 &lt;&lt; '\n';
}
|p=true
|output=
In the Czech locale: hrnec before chrt
In lexicographical comparison: chrt before hrnec
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcsxfrm}}
{{dsc inc|cpp/locale/collate/dsc do_transform}}
{{dsc inc|cpp/string/byte/dsc strcoll}}
{{dsc see c|c/string/byte/strxfrm}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}