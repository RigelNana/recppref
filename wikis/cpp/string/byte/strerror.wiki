{{cpp/title|strerror}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cstring|
char* strerror( int errnum );
}}

Returns a pointer to the textual description of the system error code {{c|errnum}}, identical to the description that would be printed by {{lc|std::perror()}}.

{{c|errnum}} is usually acquired from the {{tt|errno}} variable, however the function accepts any value of type {{c/core|int}}. The contents of the string are locale-specific.

The returned string must not be modified by the program, but may be overwritten by a subsequent call to the {{tt|strerror}} function. {{tt|strerror}} is not required to be thread-safe. Implementations may be returning different pointers to static read-only string literals or may be returning the same pointer over and over, pointing at a static buffer in which {{tt|strerror}} places the string.

===Parameters===
{{par begin}}
{{par|errnum|integer value referring to an error code}}
{{par end}}

===Return value===
Pointer to a null-terminated byte string corresponding to the {{lc|errno}} error code {{c|errnum}}.

===Notes===
[https://pubs.opengroup.org/onlinepubs/9699919799/functions/strerror.html POSIX] allows subsequent calls to {{tt|strerror}} to invalidate the pointer value returned by an earlier call. It also specifies that it is the {{ltt|cpp/locale/LC_categories|LC_MESSAGES}} locale facet that controls the contents of these messages.

POSIX has a thread-safe version called {{tt|strerror_r}} defined. Glibc [https://www.club.cc.cmu.edu/~cmccabe/blog_strerror.html defines an incompatible version].

===Example===
{{example template|cpp/error/example errno}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc perror}}
{{dsc inc|cpp/error/dsc errno macros}}
{{dsc see c|c/string/byte/strerror}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}