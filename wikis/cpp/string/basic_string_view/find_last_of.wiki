{{cpp/string/basic_string_view/title|find_last_of}}
{{cpp/string/basic_string_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
constexpr size_type
    find_last_of( basic_string_view v, size_type pos = npos ) const noexcept;
}}
{{dcl|num=2|since=c++17|1=
constexpr size_type
    find_last_of( CharT ch, size_type pos = npos ) const noexcept;
}}
{{dcl|num=3|since=c++17|
constexpr size_type
    find_last_of( const CharT* s, size_type pos, size_type count ) const;
}}
{{dcl|num=4|since=c++17|1=
constexpr size_type
    find_last_of( const CharT* s, size_type pos = npos ) const;
}}
{{dcl end}}

Finds the last character equal to one of characters in the given character sequence. Exact search algorithm is not specified. The search considers only the interval {{closed range|0|pos}}. If the character is not present in the interval, {{lc|npos}} will be returned.

@1@ Finds the last occurence of any of the characters of {{c|v}} in this view, ending at position {{c|pos}}.
@2@ Equivalent to {{c|find_last_of(basic_string_view(std::addressof(ch), 1), pos)}}.
@3@ Equivalent to {{c|find_last_of(basic_string_view(s, count), pos)}}.
@4@ Equivalent to {{c|find_last_of(basic_string_view(s), pos)}}.

===Parameters===
{{par begin}}
{{par|v|view to search for}}
{{par|pos|position at which the search is to finish}}
{{par|count|length of the string of characters to search for}}
{{par|s|pointer to a string of characters to search for}}
{{par|ch|character to search for}}
{{par end}}

===Return value===
Position of the last occurrence of any character of the substring, or {{lc|npos}} if no such character is found.

===Complexity===
O({{lc|size()}} * v.{{lc|size()}}) at worst.

===Example===
{{example
|code=
#include &lt;string_view&gt;

using namespace std::literals;
constexpr auto N = std::string_view::npos;
 
static_assert(
    5 == "delete"sv.find_last_of("cdef"sv) &amp;&amp;
      //       └────────────────────┘
    N == "double"sv.find_last_of("fghi"sv) &amp;&amp;
      //
    0 == "else"sv.find_last_of("bcde"sv, 2 /* pos [0..2]: "els" */) &amp;&amp;
      //  └────────────────────────┘
    N == "explicit"sv.find_last_of("abcd"sv, 4 /* pos [0..4]: "expli" */) &amp;&amp;
      //
    3 == "extern"sv.find_last_of('e') &amp;&amp;
      //     └────────────────────┘
    N == "false"sv.find_last_of('x') &amp;&amp;
      //
    0 == "inline"sv.find_last_of('i', 2 /* pos [0..2]: "inl" */) &amp;&amp;
      //  └───────────────────────┘
    N == "mutable"sv.find_last_of('a', 2 /* pos [0..2]: "mut" */) &amp;&amp;
      //
    3 == "namespace"sv.find_last_of("cdef", 3 /* pos [0..3]: "name" */, 3 /* "cde" */) &amp;&amp;
      //     └─────────────────────────┘
    N == "namespace"sv.find_last_of("cdef", 3 /* pos [0..3]: "name" */, 2 /* "cd" */)
);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string_view/dsc find}}
{{dsc inc|cpp/string/basic_string_view/dsc rfind}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_not_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_last_not_of}}
{{dsc inc|cpp/string/basic_string/dsc find_last_of}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}