{{cpp/string/basic_string_view/title|rfind}}
{{cpp/string/basic_string_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
constexpr size_type rfind( basic_string_view v, size_type pos = npos ) const noexcept;
}}
{{dcl|num=2|since=c++17|1=
constexpr size_type rfind( CharT ch, size_type pos = npos ) const noexcept;
}}
{{dcl|num=3|since=c++17|1=
constexpr size_type rfind( const CharT* s, size_type pos, size_type count ) const;
}}
{{dcl|num=4|since=c++17|1=
constexpr size_type rfind( const CharT* s, size_type pos = npos ) const;
}}
{{dcl end}}

Finds the last substring that is equal to the given character sequence. The search begins at {{c|pos}} and proceeds from right to left (thus, the found substring, if any, cannot begin in a position following {{c|pos}}). If {{lc|npos}} or any value not smaller than {{box|{{lc|size()}}{{c/core| - 1}}}} is passed as {{c|pos}}, the whole string will be searched.

@1@ Finds the last occurrence of {{c|v}} in this view, starting at position {{c|pos}}.
@2@ Equivalent to {{c|rfind(basic_string_view(std::addressof(ch), 1), pos)}}.
@3@ Equivalent to {{c|rfind(basic_string_view(s, count), pos)}}.
@4@ Equivalent to {{c|rfind(basic_string_view(s), pos)}}.

===Parameters===
{{par begin}}
{{par|v|view to search for}}
{{par|pos|position at which to start the search}}
{{par|count|length of substring to search for}}
{{par|s|pointer to a character string to search for}}
{{par|ch|character to search for}}
{{par end}}

===Return value===
Position of the first character of the found substring or {{lc|npos}} if no such substring is found.

===Complexity===
O({{lc|size()}} * v.{{lc|size()}}) at worst.

===Example===
{{example
|code=
#include &lt;string_view&gt;

int main()
{
    using namespace std::literals;
    constexpr auto N = std::string_view::npos;

    static_assert(true
        &amp;&amp; (6 == "AB AB AB"sv.rfind("AB"))
        &amp;&amp; (6 == "AB AB AB"sv.rfind("ABCD", N, 2))
        &amp;&amp; (3 == "AB AB AB"sv.rfind("AB", 5))
        &amp;&amp; (0 == "AB CD EF"sv.rfind("AB", 0))
        &amp;&amp; (2 == "B AB AB "sv.rfind("AB", 2))
        &amp;&amp; (N == "B AB AB "sv.rfind("AB", 1))
        &amp;&amp; (5 == "B AB AB "sv.rfind('A'))
        &amp;&amp; (4 == "AB AB AB"sv.rfind('B', 4))
        &amp;&amp; (N == "AB AB AB"sv.rfind('C'))
    );
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string_view/dsc find}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_last_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_not_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_last_not_of}}
{{dsc inc|cpp/string/basic_string/dsc rfind}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}