{{cpp/string/basic_string_view/title|find_last_not_of}}
{{cpp/string/basic_string_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
constexpr size_type
    find_last_not_of( basic_string_view v, size_type pos = npos ) const noexcept;
}}
{{dcl|num=2|since=c++17|1=
constexpr size_type
    find_last_not_of( CharT ch, size_type pos = npos ) const noexcept;
}}
{{dcl|num=3|since=c++17|
constexpr size_type
    find_last_not_of( const CharT* s, size_type pos, size_type count ) const;
}}
{{dcl|num=4|since=c++17|1=
constexpr size_type
    find_last_not_of( const CharT* s, size_type pos = npos ) const;
}}
{{dcl end}}

Finds the last character not equal to any of the characters in the given character sequence. The search considers only the interval {{closed range|0|pos}}.

@1@ Finds the last character not equal to any of the characters of {{c|v}} in this view, starting at position {{c|pos}}.
@2@ Equivalent to {{c|find_last_not_of(basic_string_view(std::addressof(ch), 1), pos)}}.
@3@ Equivalent to {{c|find_last_not_of(basic_string_view(s, count), pos)}}.
@4@ Equivalent to {{c|find_last_not_of(basic_string_view(s), pos)}}.

===Parameters===
{{par begin}}
{{par|v|view to search for}}
{{par|pos|position at which to start the search}}
{{par|count|length of the string of characters to compare}}
{{par|s|pointer to a string of characters to compare}}
{{par|ch|character to compare}}
{{par end}}

===Return value===
Position of the last character not equal to any of the characters in the given string, or {{lc|npos}} if no such character is found.

===Complexity===
O({{lc|size()}}{{tt|&lt;!----&gt; * v.}}{{lc|size()}}) at worst.

===Example===
{{example|code=
#include &lt;string_view&gt;
using std::operator""sv;

int main()
{
    static_assert(1 == "BCDEF"sv.find_last_not_of("DEF"));
                    //   ^
    static_assert(2 == "BCDEFG"sv.find_last_not_of("EFG", 3));
                    //    ^
    static_assert(2 == "ABBA"sv.find_last_not_of('A'));
                    //    ^
    static_assert(1 == "ABBA"sv.find_last_not_of('A', 1));
                    //   ^
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string_view/dsc find}}
{{dsc inc|cpp/string/basic_string_view/dsc rfind}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_last_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_not_of}}
{{dsc inc|cpp/string/basic_string/dsc {{SUBPAGENAMEE}}}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}