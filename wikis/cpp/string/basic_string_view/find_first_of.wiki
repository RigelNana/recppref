{{cpp/string/basic_string_view/title|find_first_of}}
{{cpp/string/basic_string_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
constexpr size_type
    find_first_of( basic_string_view v, size_type pos = 0 ) const noexcept;
}}
{{dcl|num=2|since=c++17|1=
constexpr size_type
    find_first_of( CharT ch, size_type pos = 0 ) const noexcept;
}}
{{dcl|num=3|since=c++17|
constexpr size_type
    find_first_of( const CharT* s, size_type pos, size_type count ) const;
}}
{{dcl|num=4|since=c++17|1=
constexpr size_type
    find_first_of( const CharT* s, size_type pos = 0 ) const;
}}
{{dcl end}}

Finds the first character equal to any of the characters in the given character sequence.

@1@ Finds the first occurrence of any of the characters of {{c|v}} in this view, starting at position {{c|pos}}.
@2@ Equivalent to {{c|find_first_of(basic_string_view(std::addressof(ch), 1), pos)}}.
@3@ Equivalent to {{c|find_first_of(basic_string_view(s, count), pos)}}.
@4@ Equivalent to {{c|find_first_of(basic_string_view(s), pos)}}.

===Parameters===
{{par begin}}
{{par|v|view to search for}}
{{par|pos|position at which to start the search}}
{{par|count|length of the string of characters to search for}}
{{par|s|pointer to a string of characters to search for}}
{{par|ch|character to search for}}
{{par end}}

===Return value===
Position of the first occurrence of any character of the substring, or {{lc|npos}} if no such character is found.

===Complexity===
O({{lc|size()}} * v.{{lc|size()}}) at worst.

===Example===
{{example
|code=
#include &lt;string_view&gt;

using namespace std::literals;
constexpr auto N = std::string_view::npos;

constexpr bool is_white_space(const char c)
{
    return " \t\n\f\r\v"sv.find_first_of(c) != N;
};

static_assert(
    1 == "alignas"sv.find_first_of("klmn"sv) &amp;&amp;
      //   └─────────────────────────┘
    N == "alignof"sv.find_first_of("wxyz"sv) &amp;&amp;
      //
    3 == "concept"sv.find_first_of("bcde"sv, /* pos= */ 1) &amp;&amp;
      //     └───────────────────────┘
    N == "consteval"sv.find_first_of("oxyz"sv, /* pos= */ 2) &amp;&amp;
      //
    6 == "constexpr"sv.find_first_of('x') &amp;&amp;
      //        └─────────────────────┘
    N == "constinit"sv.find_first_of('x') &amp;&amp;
      //
    6 == "const_cast"sv.find_first_of('c', /* pos= */ 4) &amp;&amp;
      //        └──────────────────────┘
    N == "continue"sv.find_first_of('c', /* pos= */ 42) &amp;&amp;
      //
    5 == "co_await"sv.find_first_of("cba", /* pos= */ 4) &amp;&amp;
      //       └───────────────────────┘
    7 == "decltype"sv.find_first_of("def", /* pos= */ 2, /* count= */ 2) &amp;&amp;
      //         └────────────────────┘
    N == "decltype"sv.find_first_of("def", /* pos= */ 2, /* count= */ 1) &amp;&amp;
      //
    is_white_space(' ') &amp;&amp; is_white_space('\r') &amp;&amp; !is_white_space('\a')
);

int main() {}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string_view/dsc find}}
{{dsc inc|cpp/string/basic_string_view/dsc rfind}}
{{dsc inc|cpp/string/basic_string_view/dsc find_last_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_first_not_of}}
{{dsc inc|cpp/string/basic_string_view/dsc find_last_not_of}}
{{dsc inc|cpp/string/basic_string/dsc find_first_of}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}