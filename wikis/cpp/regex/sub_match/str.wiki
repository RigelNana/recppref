{{cpp/regex/sub_match/title|operator string_type|str}}
{{cpp/regex/sub_match/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
operator string_type() const;
}}
{{dcl|num=2|1=
string_type str() const;
}}
{{dcl end}}

Converts to an object of the underlying {{lc|std::basic_string}} type.
@1@ An implicit conversion.
@2@ An explicit conversion.

===Return value===
The matched character sequence as an object of the underlying {{lc|std::basic_string}} type. If the {{tt|matched}} member is {{c|false}}, then returns the empty string.

===Complexity===
Linear in the length of the underlying character sequence.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;

int main()
{
    const std::string html{R"("&lt;a href="https://cppreference.com/"&gt;)"};
    const std::regex re{"(http{{!}}https{{!}}ftp)://([a-z]+)\\.([a-z]{3})"};
    std::smatch parts;
    std::regex_search(html, parts, re);
    for (std::ssub_match const&amp; sub : parts)
    {
        const std::string s = sub; // (1) implicit conversion
        assert(s == sub.str());    // (2)
        std::cout &lt;&lt; s &lt;&lt; '\n';
    }
}
|output=
https://cppreference.com
https
cppreference
com
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}