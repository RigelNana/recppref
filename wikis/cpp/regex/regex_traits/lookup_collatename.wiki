{{cpp/regex/regex_traits/title|lookup_collatename}}
{{cpp/regex/regex_traits/navbar}}
{{ddcl|1=
template&lt; class ForwardIt &gt;
string_type lookup_collatename( ForwardIt first, ForwardIt last ) const;
}}

If the character sequence {{range|first|last}} represents the name of a valid collating element in the currently imbued locale, returns the name of that collating element. Otherwise, returns an empty string.

Collating elements are the symbols found in POSIX regular expressions between {{tt|[.}} and {{tt|.]}}. For example, {{tt|[.a.]}} matches the character {{tt|a}} in the C locale. {{tt|[.tilde.]}} matches the character {{tt|~}} in the C locale as well. {{tt|[.ch.]}} matches the digraph {{tt|ch}} in Czech locale, but generates {{lc|std::regex_error}} with error code {{lc|std::regex_constants::error_collate}} in most other locales.

===Parameters===
{{par begin}}
{{par|first, last|a pair of iterators which determines the sequence of characters that represents a collating element name}}
{{par hreq}}
{{par req named|ForwardIt|ForwardIterator}}
{{par end}}

===Return value===
The representation of the named collating element as a character string.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;

struct noisy_traits : std::regex_traits&lt;char&gt;
{
    template&lt;class Iter&gt;
    string_type lookup_collatename(Iter first, Iter last) const
    {
        string_type result = regex_traits::lookup_collatename(first, last);
        std::cout &lt;&lt; "regex_traits&lt;&gt;::lookup_collatename(\""
                  &lt;&lt; string_type(first, last)
                  &lt;&lt; "\") returns \"" &lt;&lt; result &lt;&lt; "\"\n";
        return result;
    }
};

int main()
{
    std::string str = "z{{!}}}a"; // C locale collation order: x,y,z,{,{{!}},},~
    std::basic_regex&lt;char, noisy_traits&gt; re("[x-[.tilde.]]*a", std::regex::basic);
    std::cout &lt;&lt; std::boolalpha &lt;&lt; std::regex_match(str, re) &lt;&lt; '\n';
}
|p=true
|output=
regex_traits&lt;&gt;::lookup_collatename("tilde") returns "~"
true
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}