{{cpp/regex/regex_traits/title|lookup_classname}}
{{cpp/regex/regex_traits/navbar}}
{{ddcl|1=
template&lt; class ForwardIt &gt;
char_class_type lookup_classname( ForwardIt first,
                                  ForwardIt last,
                                  bool icase = false ) const;
}}

If the character sequence {{range|first|last}} represents the name of a valid character class in the currently imbued locale (that is, the string between {{tt|[:}} and {{tt|:]}} in regular expressions), returns the implementation-defined value representing this character class. Otherwise, returns zero.

If the parameter {{c|icase}} is {{c|true}}, the character class ignores character case, e.g. the regex {{tt|[:lower:]}} with {{lc|std::regex_constants::icase}} generates a call to {{c/core|std::regex_traits&lt;&gt;::lookup_classname()}} with {{range|first|last}} indicating the string {{c|"lower"}} and {{c|1=icase == true}}. This call returns the same bitmask as the call generated by the regex {{tt|[:alpha:]}} with {{c|1=icase == false}}.

The following narrow and wide character class names are always recognized by {{c/core|std::regex_traits&lt;char&gt;}} and {{c/core|std::regex_traits&lt;wchar_t&gt;}} respectively, and the classifications returned (with {{c|1=icase == false}}) correspond to the matching classifications obtained by the {{lc|std::ctype}} facet of the imbued locale, as follows:

{|class="wikitable" style="text-align: center;"
|-
!colspan=2|{{nbsp|2}}Character class name{{nbsp|2}}
!rowspan=2|{{nbsp|2}}{{lc|std::ctype}} classification{{nbsp|2}}
|-
!Narrow
!Wide
|-
|{{c|"alnum"}}
|{{c|L"alnum"}}
|{{lc|std::ctype_base::alnum}}
|-
|{{c|"alpha"}}
|{{c|L"alpha"}}
|{{lc|std::ctype_base::alpha}}
|-
|{{c|"blank"}}
|{{c|L"blank"}}
|{{lc|std::ctype_base::blank}}
|-
|{{c|"cntrl"}}
|{{c|L"cntrl"}}
|{{lc|std::ctype_base::cntrl}}
|-
|{{c|"digit"}}
|{{c|L"digit"}}
|{{lc|std::ctype_base::digit}}
|-
|{{c|"graph"}}
|{{c|L"graph"}}
|{{lc|std::ctype_base::graph}}
|-
|{{c|"lower"}}
|{{c|L"lower"}}
|{{lc|std::ctype_base::lower}}
|-
|{{c|"print"}}
|{{c|L"print"}}
|{{lc|std::ctype_base::print}}
|-
|{{c|"punct"}}
|{{c|L"punct"}}
|{{lc|std::ctype_base::punct}}
|-
|{{c|"space"}}
|{{c|L"space"}}
|{{lc|std::ctype_base::space}}
|-
|{{c|"upper"}}
|{{c|L"upper"}}
|{{lc|std::ctype_base::upper}}
|-
|{{c|"xdigit"}}
|{{c|L"xdigit"}}
|{{lc|std::ctype_base::xdigit}}
|-
|{{c|"d"}}
|{{c|L"d"}}
|{{lc|std::ctype_base::digit}}
|-
|{{c|"s"}}
|{{c|L"s"}}
|{{lc|std::ctype_base::space}}
|-
|{{c|"w"}}
|{{c|L"w"}}
|{{lc|std::ctype_base::alnum}}&lt;br&gt;with {{c|'_'}} optionally added
|}

The classification returned for the string {{c|"w"}} may be exactly the same as {{c|"alnum"}}, in which case {{lc|isctype()}} adds {{c|'_'}} explicitly.

Additional classifications such as {{c|"jdigit"}} or {{c|"jkanji"}} may be provided by system-supplied locales (in which case they are also accessible through {{lc|std::wctype}}).

===Parameters===
{{par begin}}
{{par|first, last|a pair of iterators which determines the sequence of characters that represents a name of a character class}}
{{par|icase|if {{c|true}}, ignores the upper/lower case distinction in the character classification}}
{{par hreq}}
{{par req named|ForwardIt|ForwardIterator}}
{{par end}}

===Return value===
The bitmask representing the character classification determined by the given character class, or {{c|char_class_type()}} if the class is unknown.

===Example===
{{cpp/regex/isctype example}}

===See also===
{{dsc begin}}
{{dsc mem fun|cpp/regex/regex_traits/isctype|indicates membership in a character class}}
{{dsc inc|cpp/string/wide/dsc wctype}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}