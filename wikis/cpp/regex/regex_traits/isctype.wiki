{{cpp/regex/regex_traits/title|isctype}}
{{cpp/regex/regex_traits/navbar}}
{{ddcl|
bool isctype( CharT c, char_class_type f ) const;
}}

Determines whether the character {{c|c}} belongs to the character class identified by {{c|f}}, which, in turn, is a value returned by {{lc|lookup_classname()}} or a bitwise OR of several such values.

The version of this function provided in the standard library specializations of {{lc|std::regex_traits}} does the following:

@1@ First converts {{c|f}} to a value {{c|m}} of type {{lc|std::ctype_base::mask}}.
@@ For each {{lc|std::ctype}} category listed in the table in the page {{lc|lookup_classname()}}, if the bits in {{c|f}} corresponding to the category are set, the corresponding bits in {{c|m}} will also be set.

@2@ Then attempts to classify the character in the imbued locale by calling {{c|std::use_facet&lt;std::ctype&lt;CharT&gt;&gt;(getloc()).is(m, c)}}.
* If that returns {{c|true}}, {{tt|isctype()}} will also return {{c|true}}.
* Otherwise, if {{c|c}} equals {{c|'_'}}, and {{c|f}} includes the result of calling {{lc|lookup_classname()}} for the character class {{tt|[:w:]}}, {{c|true}} is returned, otherwise {{c|false}} is returned.

===Parameters===
{{par begin}}
{{par|c|the character to classify}}
{{par|f|the bitmask obtained from one or several calls to {{lc|lookup_classname()}}}}
{{par end}}

===Return value===
{{c|true}} if {{c|c}} is classified by {{c|f}}, {{c|false}} otherwise.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;

int main()
{
    std::regex_traits&lt;char&gt; t;
    std::string str_alnum = "alnum";
    auto a = t.lookup_classname(str_alnum.begin(), str_alnum.end());
    std::string str_w = "w"; // [:w:] is [:alnum:] plus '_'
    auto w = t.lookup_classname(str_w.begin(), str_w.end());
    std::cout &lt;&lt; std::boolalpha
              &lt;&lt; t.isctype('A', w) &lt;&lt; ' ' &lt;&lt; t.isctype('A', a) &lt;&lt; '\n'
              &lt;&lt; t.isctype('_', w) &lt;&lt; ' ' &lt;&lt; t.isctype('_', a) &lt;&lt; '\n'
              &lt;&lt; t.isctype(' ', w) &lt;&lt; ' ' &lt;&lt; t.isctype(' ', a) &lt;&lt; '\n';
}
|output=
true true
true false
false false
}}

{{cpp/regex/isctype example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2018|std=C++11|before=the value of {{c|m}} was unspecified|after=matches {{lc|lookup_classname()}}'s minimal support}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/regex/regex_traits/dsc lookup_classname}}
{{dsc inc|cpp/locale/ctype/dsc do_is}}
{{dsc inc|cpp/string/wide/dsc iswctype}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}