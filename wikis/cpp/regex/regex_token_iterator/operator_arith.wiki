{{cpp/regex/regex_token_iterator/title|operator++, operator++{{small|(int)}}}}
{{cpp/regex/regex_token_iterator/navbar}}
{{dcl begin}}
{{dcl|since=c++11|1=
regex_token_iterator&amp; operator++();
}}
{{dcl|since=c++11|1=
regex_token_iterator operator++( int );
}}
{{dcl end}}

Advances the iterator on the next sub match.

{{todo|Explain better. For example, {{tt|subs}} is an exposition-only vector of matched sub-expressions.}}

If {{c|*this}} is a suffix iterator, sets {{c|*this}} to an end-of-sequence iterator.

Otherwise, if {{c|N + 1 &lt; subs.size()}}, increments N and sets result to the address of the current match.

Otherwise, sets {{tt|N}} to {{c|0}} and increments {{tt|position}}. If {{tt|position}} is not an end-of-sequence iterator the operator sets result to the address of the current match.

Otherwise, if any of the values stored in subs is equal to {{c|-1}} and {{cc|prev-&gt;suffix().length()}} is not {{c|0}} the operator sets {{tt|*this}} to a suffix iterator that points to the range [{{c|prev-&gt;suffix().first}}, {{c|prev-&gt;suffix().second}}).

Otherwise, sets {{c|*this}} to an end-of-sequence iterator.

The behavior is undefined if the iterator is end-of-sequence iterator.

===Parameters===
(none)

===Return value===
@1@ {{c|*this}}

@2@ The previous value of the iterator.

{{langlinks|de|es|ja|ru|zh}}