{{cpp/regex/match_results/title|match_results}}
{{cpp/regex/match_results/navbar}}
{{dcl begin}}
{{dcl|num=1|
match_results() : match_results(Allocator()) {}
}}
{{dcl|num=2|
explicit match_results( const Allocator&amp; a );
}}
{{dcl|num=3|
match_results( const match_results&amp; rhs );
}}
{{dcl|num=4|
match_results( const match_results&amp; rhs, const Allocator&amp; a );
}}
{{dcl|num=5|
match_results( match_results&amp;&amp; rhs ) noexcept;
}}
{{dcl|num=6|
match_results( match_results&amp;&amp; rhs, const Allocator&amp; a );
}}
{{dcl end}}

@1,2@ Constructs a match result with no established result state.
:@1@ The default constructor.
:@2@ Constructs the match result using a copy of {{c|a}} as the allocator.
@@ When the construction finishes, {{rlpf|ready}} returns {{c|false}} and {{rlpf|size}} returns {{c|0}}.

@3-6@ Constructs a match result from {{c|rhs}}.
:@3@ The copy constructor.
:@4@ Constructs the match result using a copy of {{c|a}} as the allocator.
:@5@ The move constructor. When the construction finishes, {{c|rhs}} is in a valid but unspecified state.
:@6@ Constructs the match result using a copy of {{c|a}} as the allocator. When the construction finishes, {{c|rhs}} is in a valid but unspecified state.
@@ Given the value of {{c|rhs}} before the construction as {{c|m}} and any integer in {{range|0|m.size()}} as {{c|n}}, when the construction finishes, the following member functions should return the specified values:
{|class="wikitable" style="text-align: center;"
!{{nbsp}}Member function{{nbsp}}
!Value
|-
|{{rlpf|ready}}
|{{c|m.ready()}}
|-
|{{rlpf|size}}
|{{c|m.size()}}
|-
|{{rlpf|str|args=n}}
|{{c|m.str(n)}}
|-
|{{rlpf|prefix}}
|{{c|m.prefix()}}
|-
|{{rlpf|suffix}}
|{{c|m.suffix()}}
|-
|{{rlpf|operator at|operator[]|args=n}}
|{{c|m[n]}}
|-
|{{rlpf|length|args=n}}
|{{c|m.length(n)}}
|-
|{{rlpf|position|args=n}}
|{{nbsp}}{{c|m.position(n)}}{{nbsp}}
|}

===Parameters===
{{par begin}}
{{par|a|allocator to use for all memory allocations of this container}}
{{par|rhs|another {{tt|match_results}} to use as source to initialize the {{tt|match_results}} with}}
{{par end}}

===Exceptions===
@1-4@ {{cpp/impldef exception item}}
@6@ Throws nothing if {{c|1=a == rhs.get_allocator()}} is {{c|true}}.

===Example===
{{example
|code=
|output=
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2191|std=C++11|before={{c|n}} could be negative in the postconditions of overloads {{v|3-6}}|after=can only be non-negative}}
{{dr list item|wg=lwg|dr=2195|std=C++11|before=the constructors required by {{named req|AllocatorAwareContainer}} were missing|after=added}}
{{dr list item|paper=P0935R0|std=C++11|before=default constructor was explicit|after=made implicit}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}