{{cpp/regex/basic_regex/title|operator{{=}}}}
{{cpp/regex/basic_regex/navbar}}
{{dcl begin}}
{{dcl header|regex}}
{{dcl|num=1|since=c++11|1=
basic_regex&amp; operator=( const basic_regex&amp; other );
}}
{{dcl|num=2|since=c++11|1=
basic_regex&amp; operator=( basic_regex&amp;&amp; other ) noexcept;
}}
{{dcl|num=3|since=c++11|1=
basic_regex&amp; operator=( const CharT* ptr );
}}
{{dcl|num=4|since=c++11|1=
basic_regex&amp; operator=( std::initializer_list&lt;CharT&gt; il );
}}
{{dcl|num=5|since=c++11|1=
template&lt; class ST, class SA &gt;
basic_regex&amp; operator=( const std::basic_string&lt;CharT,ST,SA&gt;&amp; p );
}}
{{dcl end}}

Assigns the contents.

@1@ Copy assignment operator. Assigns the contents of {{c|other}}. Equivalent to {{c|assign(other);}}.

@2@ Move assignment operator. Assigns the contents of {{c|other}} using move semantics. {{c|other}} is in valid, but unspecified state after the operation. Equivalent to {{c|assign(other);}}.

@3@ Assigns a null-terminated character string pointed to by {{c|ptr}}. Equivalent to {{c|assign(ptr);}}.

@4@ Assigns characters contained in initializer list {{c|il}}. Equivalent to {{c|assign(il);}}.

@5@ Assigns the contents of the string {{c|p}}. Equivalent to {{c|assign(p);}}.

===Parameters===
{{par begin}}
{{par|other|another regex object}}
{{par|ptr|pointer to a null-terminated character string}}
{{par|il|initializer list containing characters to assign}}
{{par|p|string containing characters to assign}}
{{par end}}

===Return value===
{{c|*this}}

===Exceptions===
@1@ {{cpp/impldef exception item}}

@3-5@ {{lc|std::regex_error}} if the supplied regular expression is not valid. The object is not modified in that case.

===See also===
{{dsc begin}}
{{dsc inc|cpp/regex/basic_regex/dsc assign}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}