{{cpp/ranges/elements_view/title|elements_view}}
{{cpp/ranges/elements_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
elements_view() requires std::default_initializable&lt;V&gt; = default;&lt;!-- P2325R3 --&gt;
}}
{{dcl|num=2|since=c++20|1=
constexpr explicit elements_view( V base );
}}
{{dcl end}}

Constructs an {{tt|elements_view}}.

@1@ Default constructor. [[cpp/language/value_initialization|Value-initializes]] the underlying view {{rlpi|/#Data members|base_}}. After construction, {{rlpt|base|base()}} returns a copy of {{c|V()}}.

@2@ Initializes the underlying view {{tti|base_}} with {{c|std::move(base)}}.

===Parameters===
{{par begin}}
{{par|base|the underlying view}}
{{par end}}

===Example===
{{example
|code=
#include &lt;array&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;tuple&gt;

void println(auto const&amp; v)
{
    for (auto const&amp; e : v)
        std::cout &lt;&lt; e &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

int main()
{
    using namespace std::literals;

    const std::array&lt;std::tuple&lt;int, char, std::string&gt;, 2&gt; vt
    {
        std::tuple{1, 'A', "α"s},
        std::tuple{2, 'B', "β"s},
    };

    [[maybe_unused]]
    auto empty = std::views::elements&lt;0&gt;;

    println(std::views::elements&lt;0&gt;(vt));
    println(std::views::elements&lt;1&gt;(vt));
    println(std::views::elements&lt;2&gt;(vt));
}
|output=
1 2
A B
α β
}}

{{langlinks|es|ja|ru|zh}}