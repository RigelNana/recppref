{{cpp/ranges/elements_view/iterator/title | 1=operator++,--,+=,-=}}
{{cpp/ranges/elements_view/navbar}}

{{dcl begin}}
{{dcl | num=1 | since=c++20 |
constexpr /*iterator*/&amp; operator++();
}}
{{dcl | num=2 | since=c++20 |
constexpr void operator++( int );
}}
{{dcl | num=3 | since=c++20 |
constexpr /*iterator*/ operator++( int )
  requires ranges::forward_range&lt;Base&gt;;
}}
{{dcl | num=4 | since=c++20 |
constexpr /*iterator*/&amp; operator--()
  requires ranges::bidirectional_range&lt;Base&gt;;
}}
{{dcl | num=5 | since=c++20 |
constexpr /*iterator*/ operator--( int )
  requires ranges::bidirectional_range&lt;Base&gt;;
}}
{{dcl | num=6 | since=c++20 |1=
constexpr /*iterator*/&amp; operator+=( difference_type n )
  requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl | num=7 | since=c++20 |1=
constexpr /*iterator*/&amp; operator-=( difference_type n )
  requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl end}}

Increments or decrements the iterator.

Let {{tt|current_}} be the underlying iterator.
@1@ Equivalent to {{c|1=++current_; return *this;}}
@2@ Equivalent to {{c|1=++current_;}}
@3@ Equivalent to {{c|1=auto tmp = *this; ++*this; return tmp;}}
@4@ Equivalent to {{c|1=--current_; return *this;}}
@5@ Equivalent to {{c|1=auto tmp = *this; --*this; return tmp;}}
@6@ Equivalent to {{c|1=current_ += n; return *this;}}
@7@ Equivalent to {{c|1=current_ -= n; return *this;}}

===Parameters===
{{par begin}}
{{par | n | position relative to current location}}
{{par end}}

===Return value===
@1,4,6,7@ {{c|*this}}
@2@ (none)
@3,5@ a copy of {{c|*this}} that was made before the change

{{langlinks|de|es|ja|ru|zh}}