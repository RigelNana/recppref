{{cpp/ranges/elements_view/iterator/title|operator*}}
{{cpp/ranges/elements_view/navbar}}

{{dcl begin}}
{{dcl|since=c++20|1=
constexpr decltype(auto) operator*() const;
}}
{{dcl end}}

Returns the element into {{tt|V}} the underlying iterator points to.

Effectively returns {{c|/*get-element*/(this-&gt;base())}}, {{elements_view_iterator_get_element}}

===Parameters===
(none)

===Return value===
The current element.

===Notes===
{{c|operator-&gt;}} is not provided.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;
#include &lt;tuple&gt;

int main()
{
    using T = std::tuple&lt;int, char, std::string_view&gt;;

    const auto il = {
        T{1, 'A', "α"},
        T{2, 'B', "β"},
        T{3, 'C', "γ"},
    };

    const auto view {il {{!}} std::views::elements&lt;2&gt;};

    const auto iter {view.begin() + 1};

    std::cout &lt;&lt; *iter &lt;&lt; '\n';
}
|output=β
}}

===See also===
{{dsc begin}}
{{dsc mem fun|cpp/ranges/elements_view/iterator/operator_at|title=operator[]|accesses an element by index|notes={{mark c++20}}}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}