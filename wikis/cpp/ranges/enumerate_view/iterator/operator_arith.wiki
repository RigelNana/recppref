{{cpp/ranges/enumerate_view/iterator/title|1=operator++,--,+=,-=}}
{{cpp/ranges/enumerate_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr /*iterator*/&amp; operator++();
}}
{{dcl|num=2|since=c++23|
constexpr void operator++( int );
}}
{{dcl|num=3|since=c++23|
constexpr /*iterator*/ operator++( int )
    requires ranges::forward_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
constexpr /*iterator*/&amp; operator--()
    requires ranges::bidirectional_range&lt;Base&gt;;
}}
{{dcl|num=5|since=c++23|
constexpr /*iterator*/ operator--( int )
    requires ranges::bidirectional_range&lt;Base&gt;;
}}
{{dcl|num=6|since=c++23|1=
constexpr /*iterator*/&amp; operator+=( difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=7|since=c++23|1=
constexpr /*iterator*/&amp; operator-=( difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl end}}

Increments or decrements the {{rlp|iterator}}.

Let {{rlpi|/#Data members|current_}} be the underlying iterator and {{rlpi|/#Data members|pos_}} be the underlying index.

@1@ Equivalent to {{c|1=++current_; ++pos_; return *this;}}
@2@ Equivalent to {{c|1=++current_;}}
@3@ Equivalent to {{c|1=auto tmp = *this; ++*this; return tmp;}}
@4@ Equivalent to {{c|1=--current_; --pos_; return *this;}}
@5@ Equivalent to {{c|1=auto tmp = *this; --*this; return tmp;}}
@6@ Equivalent to {{c|1=current_ += n; pos_ += n; return *this;}}
@7@ Equivalent to {{c|1=current_ -= n; pos_ -= n; return *this;}}

===Parameters===
{{par begin}}
{{par|n|position relative to current location}}
{{par end}}

===Return value===
@1,4,6,7@ {{c|*this}}
@2@ (none)
@3,5@ a copy of {{c|*this}} that was made before the change

===See also===
{{dsc begin}}
{{dsc fun|cpp/ranges/enumerate_view/iterator/operator_arith2|title=operator+&lt;br&gt;operator-|performs iterator arithmetic|notes={{mark c++23}}}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}