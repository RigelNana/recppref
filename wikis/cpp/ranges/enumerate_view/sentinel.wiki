{{cpp/ranges/enumerate_view/title|''sentinel''}}
{{cpp/ranges/enumerate_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
template&lt; bool Const &gt;
class /*sentinel*/;
}}

The return type of {{rlpt|end|enumerate_view::end}} when the underlying view is not a {{lconcept|common_range}}.

The type {{c|/*sentinel*/&lt;true&gt;}} is returned by the const-qualified overload. The type {{c|/*sentinel*/&lt;false&gt;}} is returned by the non-const-qualified overload.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc expos mem type|Base|private=yes|{{c|const V}} if {{tt|Const}} is {{c|true}}, otherwise {{c|V}}.}}
{{dsc end}}

===Data members===
{{dsc begin}}
{{dsc hitem|Member object|Definition}}
{{dsc expos mem obj|end_|private=yes|A sentinel of type {{c|ranges::sentinel_t&lt;Base&gt;}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc constructor|enumerate_view}}
{{dsc mem fun|cpp/ranges/enumerate_view/sentinel/base|returns a sentinel indicating the end of a range}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator cmp|enumerate_view}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator-|enumerate_view}}
{{dsc end}}

===Example===
{{example}}

===References===
{{ref std c++23}}
{{ref std|title=Class template {{tt|enumerate_view::sentinel}}|id=range.enumerate.sentinel|section=26.7.23.4}}
{{ref std end}}

===See also===
{{dsc begin}}
&lt;!--
{{dsc inc|cpp/ranges/enumerate_transform_view/dsc sentinel}}
--&gt;
{{dsc end}}

{{langlinks|es|ja|ru|zh}}