{{cpp/ranges/enumerate_view/title|end}}
{{cpp/ranges/enumerate_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto end() requires (!__simple_view&lt;V&gt;);
}}
{{dcl|num=2|since=c++23|
constexpr auto end() const requires /*range-with-movable-references*/&lt;const V&gt;;
}}
{{dcl end}}

Returns an {{rlp|iterator}} or a {{rlp|sentinel}} that compares equal to the end iterator of the {{tt|enumerate_view}}.

Let {{rlpt|/#Data members|''base_''}} denote the underlying view.

@1@ Equivalent to:
{{source|1=
if constexpr (ranges::forward_range&lt;V&gt; and 
              ranges::common_range&lt;V&gt;  and 
              ranges::sized_range&lt;V&gt;)
    return /*iterator*/&lt;false&gt;(ranges::end(base_), ranges::distance(base_));
else
    return /*sentinel*/&lt;false&gt;(ranges::end(base_));
}}

@2@ Equivalent to:
{{source|1=
if constexpr (ranges::forward_range&lt;const V&gt; and 
              ranges::common_range&lt;const V&gt;  and 
              ranges::sized_range&lt;const V&gt;)
    return /*iterator*/&lt;true&gt;(ranges::end(base_), ranges::distance(base_));
else
    return /*sentinel*/&lt;true&gt;(ranges::end(base_));
}}

===Parameters===
(none)

===Return value===
An {{rlp|iterator}} or a {{rlp|sentinel}} representing the end of the {{tt|enumerate_view}}, as described above.

===Example===
{{example
|code=
|output=
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3919|std=C++23|before={{tt|ranges::distance}} may invoke UB for sized common&lt;br&gt; non-forward underlying ranges|after=sentinel type is returned for such ranges}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|enumerate_view}}
{{dsc inc|cpp/ranges/dsc end}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}