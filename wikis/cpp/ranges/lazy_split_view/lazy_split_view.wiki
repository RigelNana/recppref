{{cpp/ranges/lazy_split_view/title|lazy_split_view}}
{{cpp/ranges/lazy_split_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
lazy_split_view()
    requires std::default_initializable&lt;V&gt; &amp;&amp;
             std::default_initializable&lt;Pattern&gt; = default;
}}
{{dcla|num=2|since=c++20|1=
constexpr explicit lazy_split_view( V base, Pattern pattern );
}}
{{dcl|num=3|since=c++20|1=
template&lt; ranges::input_range R &gt;
    requires std::constructible_from&lt;V, views::all_t&lt;R&gt;&gt; &amp;&amp;
             std::constructible_from&lt;Pattern, ranges::single_view&lt;
                                                  ranges::range_value_t&lt;R&gt;&gt;&gt;
constexpr explicit lazy_split_view( R&amp;&amp; r, ranges::range_value_t&lt;R&gt; e );
}}
{{dcl end}}

Constructs a {{tt|lazy_split_view}}.

@1@ Default constructor. [[cpp/language/value initialization|Value-initializes]] the underlying view {{rlpsi|/#base_}} and the delimiter {{rlpsi|/#pattern_}}.
@2@ Initializes the underlying view {{tti|base_}} with {{c|std::move(base)}} and the delimiter {{tti|pattern_}} with {{c|std::move(pattern)}}.
@3@ Initializes the underlying view {{tti|base_}} with {{c|views::all(std::forward&lt;R&gt;(r))}} and the delimiter {{tti|pattern_}} with {{c|ranges::single_view{std::move(e)}&lt;!----&gt;}}.

===Parameters===
{{par begin}}
{{par|base|the underlying view to be split}}
{{par|pattern|a view to be used as the delimiter}}
{{par|e|an element to be used as the delimiter}}
{{par end}}

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3714|paper=P2711R1|std=C++20|before=the multi-parameter constructor {{vl|2}} was not explicit|after=made explicit}}
{{dr list end}}

{{langlinks|es|ja|ru|zh}}