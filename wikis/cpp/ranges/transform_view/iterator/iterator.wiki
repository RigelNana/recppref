{{cpp/ranges/transform_view/iterator/title|''iterator''}}
{{cpp/ranges/transform_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
/*iterator*/()
    requires std::default_initializable&lt;ranges::iterator_t&lt;Base&gt;&gt; = default;
}}
{{dcl|num=2|since=c++20|1=
constexpr /*iterator*/( Parent&amp; parent, ranges::iterator_t&lt;Base&gt; current );
}}
{{dcl|num=3|since=c++20|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
             std::convertible_to&lt;ranges::iterator_t&lt;V&gt;, ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

Construct an iterator.

@1@ Default constructor. [[cpp/language/value_initialization|Value-initializes]] the underlying iterator, and initializes the pointer to parent {{tt|transform_view}} with {{c|nullptr}}.
@2@ Initializes the underlying iterator with {{c|std::move(current)}}, and the pointer to parent with {{c|std::addressof(parent)}}.
@3@ Conversion from {{c|/*iterator*/&lt;false&gt;}} to {{c|/*iterator*/&lt;true&gt;}}. Move constructs corresponding members.

===Parameters===
{{par begin}}
{{par|parent|a (possibly const-qualified) {{lc|std::ranges::transform_view}}}}
{{par|current|an iterator into (possibly const-qualified) {{tt|V}}}}
{{par|i|an {{c|/*iterator*/&lt;false&gt;}}}}
{{par end}}

===Example===
{{example
|code=
|output=
}}

{{langlinks|es|ja|ru|zh}}