{{cpp/ranges/slide_view/title|begin}}
{{cpp/ranges/slide_view/navbar}}

{{dcl begin}}
{{dcla|num=1|since=c++23|
constexpr auto begin()
    requires (!(/*simple-view*/&lt;V&gt; &amp;&amp; /*slide-caches-nothing*/&lt;const V&gt;));
}}
{{dcla|num=2|since=c++23|
constexpr auto begin() const
    requires /*slide-caches-nothing*/&lt;const V&gt;;
}}
{{dcl end}}

Returns an iterator to the first element of the {{tt|slide_view}}.

@1@ If {{c/core|V}} models {{rlpsi|#slide-caches-first}}, equivalent to:
{{c|1=
return iterator&lt;false&gt;(
           ranges::begin(base_),
           ranges::next(ranges::begin(base_), n_ - 1, ranges::end(base_)),
           n_
       );
}}
Otherwise, equivalent to: {{c|return iterator&lt;false&gt;(ranges::begin(base_), n_);}}.

@@ If {{c/core|V}} models {{rlpsi|#slide-caches-first}} this function caches the result within the {{rlpi|/#Data members|cached_begin_}} for use on subsequent calls. This is necessary to provide the amortized constant-time complexity required by the {{lconcept|range}}.

@2@ Equivalent to: {{c|return iterator&lt;true&gt;(ranges::begin(base_), n_);}}.

===Parameters===
(none)

===Return value===
An {{rlp|iterator}} to the first element of {{rlpt|/|slide_view}}, which points to the {{rlpi|/#Data members|n_}}-sized subrange of the possibly const-qualified underlying view type &amp;ndash; {{c/core|V}} for overload {{vl|1}} or {{c/core|const V}} for overload {{vl|2}}.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;
using namespace std::literals;

int main()
{
    static constexpr auto source = {"∀x"sv, "∃y"sv, "ε"sv, "δ"sv};
    auto view{std::ranges::slide_view(source, 2)};
    const auto subrange{*(view.begin())};
    for (std::string_view const s : subrange)
        std::cout &lt;&lt; s &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
∀x ∃y
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|slide_view}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator cmp|slide_view}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}