{{title|operator+,-{{small|(ranges::slide_view::''iterator'')}}}}
{{cpp/ranges/slide_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i,
                                         difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/ operator+( difference_type n,
                                         const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /*iterator*/ operator-( const /*iterator*/&amp; i,
                                         difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            const /*iterator*/&amp; j )
    requires std::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;, 
                                     ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

Performs iterator arithmetic.

@1,2@ Equivalent to: {{c|1=auto r = i; r += n; return r;}}.

@3@ Equivalent to: {{c|1=auto r = i; r -= n; return r;}}.

@4@ Let {{rlpi|/#Data members|current_}} and {{rlpi|/#Data members|last_ele_}} be the underlying iterators to the begin and end of the sliding window, respectively. Equivalent to:
* {{c|1=return x.last_ele_ - y.last_ele_;}}, if {{tti|last_ele_}} is present. Otherwise,
* {{c|1=return x.current_ - y.current_;}}.

{{cpp/hidden friend|{{tt|slide_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===Parameters===
{{par begin}}
{{par|i, j|the iterators}}
{{par|n|position relative to current location}}
{{par end}}

===Return value===
@1,2@ An incremented iterator.
@3@ A decremented iterator.
@4@ A distance between given iterators.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|slide_view}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}