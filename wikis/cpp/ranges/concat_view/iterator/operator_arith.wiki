{{cpp/ranges/concat_view/iterator/title|1=operator++,--,+=,-=}}
{{cpp/ranges/concat_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr /*iterator*/&amp; operator++();
}}
{{dcl|num=2|since=c++26|
constexpr void operator++( int );
}}
{{dcl|num=3|since=c++26|
constexpr /*iterator*/ operator++( int )
    requires /*all-forward*/&lt;Const, Views...&gt;;
}}
{{dcl|num=4|since=c++26|
constexpr /*iterator*/&amp; operator--()
    requires /*concat-is-bidirectional*/&lt;Const, Views...&gt;;
}}
{{dcl|num=5|since=c++26|
constexpr /*iterator*/ operator--( int )
    requires /*concat-is-bidirectional*/&lt;Const, Views...&gt;;
}}
{{dcl|num=6|since=c++26|1=
constexpr /*iterator*/&amp; operator+=( difference_type n )
    requires /*concat-is-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=7|since=c++26|1=
constexpr /*iterator*/&amp; operator-=( difference_type n )
    requires /*concat-is-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl end}}

Increments or decrements the {{rlp|/|iterator}}.

{|class="wikitable" style="text-align: center;"
!{{nbsp}}Overload{{nbsp}}
!Equivalent to&lt;br&gt;{{nbsp}}{{small|(let {{c|I}} be {{box|{{rlpsi|/#it_}}{{sep}}{{c/core|.index()}}}})}}{{nbsp}}
|-
|{{v|1}}
|{{box|{{c/core|++}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;I&gt;();}}{{nbspt}}{{rlpsi|helpers#satisfy}}{{sep}}{{c/core|&lt;I&gt;(); return *this;}}}}
|-
|{{v|2}}
|{{c|++*this;}}
|-
|{{v|3}}
|{{c|1=auto tmp = *this; ++*this; return tmp;}}
|-
|{{v|4}}
|{{box|{{rlpsi|helpers#prev}}{{sep}}{{c/core|&lt;I&gt;(); return *this;}}}}
|-
|{{v|5}}
|{{c|1=auto tmp = *this; --*this; return tmp;}}
|-
|{{v|6}}
|style="text-align: start;"|{{box|
{{c/core|1=auto offset =}}{{nbspt}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;I&gt;() -}}{{nbspt}}{{rlpsi|helpers#get-begin}}{{sep}}{{c/core|&lt;I&gt;();}}&lt;br&gt;
{{c/core|if (n &gt; 0)}}&lt;br&gt;
{{nbspt|4}}{{rlpsi|helpers#advance-fwd}}{{sep}}{{c/core|&lt;I&gt;(offset, n);}}&lt;br&gt;
{{c/core|else if (n &lt; 0)}}&lt;br&gt;
{{nbspt|4}}{{rlpsi|helpers#advance-bwd}}{{sep}}{{c/core|&lt;I&gt;(offset, -n);}}&lt;br&gt;
{{c/core|return *this;}}
}}
|-
|{{v|7}}
|{{c|1=*this += -n; return *this;}}
|}

If {{box|{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} is {{c|true}}, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|n|position relative to current location}}
{{par end}}

===Return value===
As described above.

===Example===
{{example}}

{{langlinks|de|es|fr|ja|ru|zh}}