{{cpp/ranges/adjacent_view/iterator/title|operator*}}
{{cpp/ranges/adjacent_view/navbar}}

{{ddcl|since=c++23|1=
constexpr auto operator*() const;
}}

Returns the elements into {{c|V}} the underlying array of iterators points to.

Let {{rlpi|/#Data members|current_}} be an underlying array of iterators.

Equivalent to:
{{source|1=
return /*tuple-transform*/([](auto&amp; i) -&gt; decltype(auto) { return *i; }, current_);
}}

===Parameters===
(none)

===Return value===
The current element, which is a {{lc|std::tuple}} of references to underlying elements.

===Notes===
{{c|operator-&gt;}} is not provided.

===Example===
{{example
|code=
#include &lt;ranges&gt;
#include &lt;tuple&gt;

int main()
{
    constexpr static auto v = {0, 1, 2, 3, 4, 5};
    //                               └──┬──┘
    //                                  └─────────────────┐
    constexpr auto view {v {{!}} std::views::adjacent&lt;3&gt;}; // │
    constexpr auto iter {view.begin() + 2};            // │
    //              ┌────────────────────┬────────────────┘
    //              │                 ┌──┴──┐
    static_assert(*iter == std::tuple{2, 3, 4});
}
}}

===See also===
{{dsc begin}}
{{dsc mem fun|cpp/ranges/adjacent_view/iterator/operator_at|title=operator[]|accesses an element by index|notes={{mark c++23}}}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}