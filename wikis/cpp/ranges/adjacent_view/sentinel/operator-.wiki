{{title|operator-{{small|(ranges::adjacent_view::''sentinel'')}}}}
{{cpp/ranges/adjacent_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
template&lt; bool OtherConst &gt;
    requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                     ranges::iterator_t&lt;/*maybe-const*/&lt;OtherConst, V&gt;&gt;&gt;
friend constexpr ranges::range_difference_t&lt;/*maybe-const*/&lt;OtherConst, V&gt;&gt;
    operator-( const /*iterator*/&lt;OtherConst&gt;&amp; x, const /*sentinel*/&amp; y );
}}
{{dcl|num=2|since=c++23|
template&lt; bool OtherConst &gt;
    requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                     ranges::iterator_t&lt;/*maybe-const*/&lt;OtherConst, V&gt;&gt;&gt;
friend constexpr ranges::range_difference_t&lt;/*maybe-const*/&lt;OtherConst, V&gt;&gt;
    operator-( const /*sentinel*/&amp; y, const /*iterator*/&lt;OtherConst&gt;&amp; x );
}}
{{dcl end}}

Computes the distance between the underlying iterator of {{c|x}} and the underlying sentinel of {{c|y}}.

Let [[cpp/ranges/adjacent_view/iterator#Data members|{{tti|current_}}]] denote the underlying array of iterators in {{c|x}}, and {{rlpi|/#Data members|end_}} denote the underlying sentinel in {{c|y}}.

@1@ Equivalent to: {{c|return x.current_.back() - y.end_;}}
@2@ Equivalent to: {{c|return y.end_ - x.current_.back();}}

{{cpp/hidden friend|{{tt|adjacent_view::''sentinel''}}|plural=yes|tmpl=yes}}

===Parameters===
{{par begin}}
{{par|x|an [[cpp/ranges/adjacent_view/iterator|iterator]]}}
{{par|y|a {{rlp|/|sentinel}}}}
{{par end}}

===Return value===
The distance between {{c|x}} and {{c|y}}.

===Example===
{{example}}

===See also===

{{langlinks|de|es|fr|ja|pl|ru|zh}}