{{cpp/ranges/adjacent_view/title|begin}}
{{cpp/ranges/adjacent_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
constexpr auto begin() requires (!__SimpleView&lt;V&gt;);
}}
{{dcl|num=2|since=c++23|1=
constexpr auto begin() const requires ranges::range&lt;const V&gt;;
}}
{{dcl end}}

Returns an {{rlp|iterator}} to the first element of the {{rlpt|/|adjacent_view}}.

Let {{rlpi|/#Data members|base_}} be the underlying view.

@1@ Equivalent to {{c|1=return /*iterator*/&lt;false&gt;(ranges::begin(base_), ranges::end(base_));}}.
@2@ Equivalent to {{c|1=return /*iterator*/&lt;true&gt;(ranges::begin(base_), ranges::end(base_));}}.

===Parameters===
(none)

===Return value===
Iterator to the first element.

===Example===
{{example
|code=
#include &lt;ranges&gt;
#include &lt;tuple&gt;
#include &lt;type_traits&gt;

int main()
{
    constexpr static auto v = {'A', 'B', 'C', 'D', 'E'};
  
    constexpr auto view = std::views::adjacent&lt;3&gt;(v);

    constexpr auto tuple = *view.begin();

    static_assert
    (
        std::is_same_v
        &lt;
            decltype(tuple),
            const std::tuple&lt;char const&amp;, char const&amp;, char const&amp;&gt;
        &gt;
    );

    static_assert
    (
        std::get&lt;0&gt;(tuple) == 'A' &amp;&amp;
        std::get&lt;1&gt;(tuple) == 'B' &amp;&amp;
        std::get&lt;2&gt;(tuple) == 'C'
    );
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|adjacent_view}}
{{dsc inc|cpp/ranges/dsc begin}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}