{{cpp/ranges/common_view/title|size}}
{{cpp/ranges/common_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
constexpr auto size() requires ranges::sized_range&lt;V&gt;;
}}
{{dcl|num=2|since=c++20|1=
constexpr auto size() const requires ranges::sized_range&lt;const V&gt;;
}}
{{dcl end}}

Returns the number of elements.

Equivalent to {{c|return ranges::size(base_);}}, where {{tti|base_}} is the underlying view.

===Parameters===
(none)

===Return value===
The number of elements.

===Example===
{{example
|code=
#include &lt;ranges&gt;
#include &lt;string_view&gt;

int main()
{
    constexpr static auto v1 = {1, 2, 3, 4, 5};
    constexpr auto common1 { v1 {{!}} std::views::common };
    static_assert(common1.size() == 5);

    constexpr auto take3 { v1 {{!}} std::views::reverse {{!}} std::views::take(3) };
    constexpr auto common2 { take3 {{!}} std::views::common };
    static_assert(common2.size() == 3);

    using namespace std::literals;
    constexpr static auto v2 = { "∧"sv, "∨"sv, "∃"sv, "∀"sv };
    static_assert(std::ranges::views::common(v2).size() == 4);
}
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc size}}
{{dsc inc|cpp/ranges/dsc ssize}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}