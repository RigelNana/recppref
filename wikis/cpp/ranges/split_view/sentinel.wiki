{{cpp/ranges/title|n=split_view&lt;V,Pattern&gt;::|''sentinel''}}
{{cpp/ranges/split_view/navbar}}
{{ddcla|since=c++20|expos=yes|
class /*sentinel*/;
}}

The return type of {{ltt|cpp/ranges/split_view|split_view::end}} when the underlying {{lconcept|view}} type {{tt|V}} does not models {{lconcept|common_range}}.

===Data members===
{{dsc begin}}
{{dsc hitem|Member|Description}}
{{dsc expos mem obj|end_|id=end|private=yes|spec={{c/core|ranges::sentinel_t&lt;V&gt;}}|the sentinel for the underlying {{lconcept|view}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|nolink=true|constructs a sentinel|notes={{mark c++20}}}}
&lt;!-- {{dsc mem fun|nolink=true|base|returns the underlying sentinel|notes={{mark c++20}}}} --&gt;
{{dsc end}}

{{member|{{small|std::ranges::split_view::''sentinel''::}}''sentinel''|2=
{{dcl begin}}
{{dcl|since=c++20|num=1|1=
/*sentinel*/() = default;
}}
{{dcl|since=c++20|num=2|1=
constexpr explicit /*sentinel*/( ranges::split_view&amp; parent );
}}
{{dcl end}}

@1@ Value-initializes {{lsi|#end_}} via its default member initializer ({{c|1== ranges::sentinel_t&lt;V&gt;()}}).
@2@ Initializes {{lsi|#end_}} with {{c|1=ranges::end(parent.base_)}}.
}}

===Non-member functions===
{{dsc begin}}
{{dsc fun|nolink=true|operator{{==}}|compares the underlying iterator and the underlying sentinel|notes={{mark c++20}}}}
{{dsc end}}

{{member|1=operator=={{small|(std::ranges::split_view::''iterator'', std::ranges::split_view::''sentinel'')}}|2=
{{ddcl|since=c++20|1=
friend constexpr bool operator==( const /*iterator*/&amp; x,
                                  const /*sentinel*/&amp; y );
}}
Equivalent to {{c|1=return x.cur_ == y.end_ and !x.trailing_empty_;}}.

{{cpp/note synthesized eq}}

{{cpp/hidden friend|plural=no|{{tt|std::ranges::split_view::''sentinel''}}}}
}}

{{langlinks|es|ja|ru|zh}}