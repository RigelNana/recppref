{{cpp/ranges/zip_view/iterator/title|1=operator++,--,+=,-=}}
{{cpp/ranges/zip_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr /*iterator*/&amp; operator++();
}}
{{dcl|num=2|since=c++23|
constexpr void operator++( int );
}}
{{dcl|num=3|since=c++23|
constexpr /*iterator*/ operator++( int )
    requires /*all-forward*/&lt;Const, Views...&gt;;
}}
{{dcl|num=4|since=c++23|
constexpr /*iterator*/&amp; operator--()
    requires /*all-bidirectional*/&lt;Const, Views...&gt;;
}}
{{dcl|num=5|since=c++23|
constexpr /*iterator*/ operator--( int )
    requires /*all-bidirectional*/&lt;Const, Views...&gt;;
}}
{{dcl|num=6|since=c++23|1=
constexpr /*iterator*/&amp; operator+=( difference_type n )
    requires /*all-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=7|since=c++23|1=
constexpr /*iterator*/&amp; operator-=( difference_type n )
    requires /*all-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl end}}

Increments or decrements each of the underlying {{tti|is_...}} iterators in the underlying tuple-like object {{rlpi|/#Data members|current_}}.

@1@ Equivalent to
{{c|1=/*tuple-for-each*/([](auto&amp; i) { ++i; }, current_); return *this;}}
@2@ Equivalent to {{c|1=++*this;}}
@3@ Equivalent to {{c|1=auto tmp = *this; ++*this; return tmp;}}
@4@ Equivalent to
{{c|1=/*tuple-for-each*/([](auto&amp; i) { --i; }, current_); return *this;}}
@5@ Equivalent to {{c|1=auto tmp = *this; --*this; return tmp;}}
@6@ Equivalent to
{{c|1=/*tuple-for-each*/([&amp;]&lt;class I&gt;(I&amp; i) { i += iter_difference_t&lt;I&gt;(x); }, current_); return *this;}}
@7@ Equivalent to
{{c|1=/*tuple-for-each*/([&amp;]&lt;class I&gt;(I&amp; i) { i -= iter_difference_t&lt;I&gt;(x); }, current_); return *this;}}

===Parameters===
{{par begin}}
{{par|n|position relative to current location}}
{{par end}}

===Return value===
@1,4,6,7@ {{c|*this}}
@2@ (none)
@3,5@ a copy of {{c|*this}} that was made before the change

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|fr|ja|ru|zh}}