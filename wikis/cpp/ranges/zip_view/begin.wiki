{{cpp/ranges/zip_view/title|begin}}
{{cpp/ranges/zip_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
constexpr auto begin()
    requires (!(/*simple-view*/&lt;Views&gt; &amp;&amp; ...));
}}
{{dcl|num=2|since=c++23|1=
constexpr auto begin() const
    requires (ranges::range&lt;const Views&gt; &amp;&amp; ...);
}}
{{dcl end}}

Obtains the beginning {{rlp|iterator}} of {{rlpt|/|zip_view}}.

===Return value===
@1@ {{box|{{rlpi|iterator}}{{sep}}{{c/core|&lt;false&gt;(}}{{lsi|cpp/ranges#tuple-transform}}{{c/core|(ranges::begin,}}{{nbspt}}{{rlpsi|/#views_}}{{sep}}{{c/core|));}}}}.

@2@ {{box|{{rlpi|iterator}}{{sep}}{{c/core|&lt;true&gt;(}}{{lsi|cpp/ranges#tuple-transform}}{{c/core|(ranges::begin,}}{{nbspt}}{{rlpsi|/#views_}}{{sep}}{{c/core|));}}}}.

===Notes===
{{c/core|ranges::range&lt;const ranges::zip_view&lt;Views...&gt;&gt;}} is modeled if and only if for every type {{tt|Vi}} in {{tt|Views...}}, {{c/core|const Vi}} models {{lconcept|range}}.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|zip_view}}
{{dsc inc|cpp/ranges/dsc begin}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}