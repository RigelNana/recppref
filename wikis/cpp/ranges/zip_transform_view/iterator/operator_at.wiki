{{cpp/ranges/zip_transform_view/iterator/title|operator[]}}
{{cpp/ranges/zip_transform_view/navbar}}
{{dcl begin}}
{{dcl|since=c++23|1=
constexpr decltype(auto) operator[]( difference_type n ) const
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl end}}

Returns the element at specified relative location, after transformation. 

Equivalent to
{{source|1=
return
    std::apply
    (
        [&amp;]&lt;class... Is&gt;(const Is&amp;... iters) -&gt; decltype(auto)
        {
            return std::invoke(*parent_-&gt;fun_, iters[std::iter_difference_t&lt;Is&gt;(n)]...);
        },
        inner_.current_
    );
}}
where {{c|*parent_-&gt;fun_}} is the transformation function of type {{c|F}} stored in the parent {{lc|ranges::zip_transform_view}}, and {{tt|''current_''}} is the underlying tuple of iterators into {{c|Views...}}.

===Parameters===
{{par begin}}
{{par|n|position relative to current location.}}
{{par end}}

===Return value===
The element which is the result of transformation (mapping).

===Notes===
The behavior is undefined if the {{tt|''parent_''}} pointer to parent {{lc|ranges::zip_transform_view}} is null (e.g. if {{c|*this}} is default constructed).

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|fr|ja|ru|zh}}