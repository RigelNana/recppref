{{cpp/ranges/zip_transform_view/iterator/title|''iterator''}}
{{cpp/ranges/zip_transform_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/iterator() = default;
}}
{{dcl|num=2|since=c++23|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
             std::convertible_to&lt;/*ziperator*/&lt;false&gt;, /*ziperator*/&lt;Const&gt;&gt;;
}}
{{dcl|num=3|notes={{mark expos}}|1=
constexpr /*iterator*/( Parent&amp; parent, /*ziperator*/&lt;Const&gt; inner );
}}
{{dcl end}}

Construct an iterator.

@1@ Default constructor. [[cpp/language/default initialization|Default-initializes]] the underlying iterators, and [[cpp/language/value initialization|value-initializes]] the pointer to parent {{lc|ranges::zip_transform_view}} with {{c|nullptr}}.

@2@ Conversion from {{c|/*iterator*/&lt;false&gt;}} to {{c|/*iterator*/&lt;true&gt;}}. Move constructs the underlying pointer to parent {{rlpi|/#Data members|parent_}} with {{c|i.parent_}} and {{rlpi|/#Data members|inner_}} with {{c|std::move(i.inner_)}}.

@3@ Initializes the pointer to parent {{tti|parent_}} with {{c|std::addressof(parent)}}, and the underlying {{tti|inner_}} iterator with {{c|std::move(inner)}}. This constructor is not accessible to users.

===Parameters===
{{par begin}}
{{par|i|an {{c|/*iterator*/&lt;false&gt;}}}}
{{par|parent|a (possibly const-qualified) {{lc|ranges::zip_transform_view}}}}
{{par|inner|an iterator of type [[cpp/ranges/zip_transform_view#Member types|{{tti|ziperator}}{{tt|&lt;Const&gt;}}]]}}
{{par end}}

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|ja|ru|zh}}