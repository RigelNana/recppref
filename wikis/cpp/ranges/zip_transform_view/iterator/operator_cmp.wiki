{{title|1=operator==,&lt;=&gt;{{small|(ranges::zip_transform_view::''iterator'')}}}}
{{cpp/ranges/zip_transform_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
friend constexpr bool operator==( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires std::equality_comparable&lt;/*ziperator*/&lt;Const&gt;&gt;;
}}
{{dcl|num=2|since=c++23|1=
friend constexpr auto operator&lt;=&gt;( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires ranges::random_access_range&lt;Base&gt; &amp;&amp; 
             std::three_way_comparable&lt;/*ziperator*/&lt;Const&gt;&gt;;
}}
{{dcl end}}

Compares the underlying iterators. Let {{rlpi|/#Data members|inner_}} denote the underlying iterator.

Equivalent to:
@1@ {{c|1= return x.inner_ == y.inner_;}}
@2@ {{c|1= return x.inner_ &lt;=&gt; y.inner_;}}

{{cpp/hidden friend|{{tt|std::ranges::zip_transform_view::''iterator''&lt;Const&gt;}}|plural=yes}}

{{cpp/note synthesized compare}}

===Parameters===
{{par begin}}
{{par|x, y|iterators to compare}}
{{par end}}

===Return value===
The result of comparison

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator cmp|zip_transform_view}}
{{dsc end}}

{{langlinks|de|es|fr|ja|ru|zh}}