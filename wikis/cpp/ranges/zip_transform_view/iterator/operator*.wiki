{{cpp/ranges/zip_transform_view/iterator/title|operator*}}
{{cpp/ranges/zip_transform_view/navbar}}
{{ddcl|since=c++23|
constexpr decltype(auto) operator*() const
    noexcept(/* see description */);
}}

Returns the transformed element obtained by application of the invocable object of type {{c|F}} to the underlying poined-to elements.

Equivalent to
{{source|1=
return
    std::apply
    (
        [&amp;](auto const&amp;... iters) -&gt; decltype(auto)
        {
            return std::invoke(*parent_-&gt;fun_, *iters...);
        },
        inner_.current_
    );
}}
where {{c|*parent_-&gt;fun_}} is the transformation function stored in the parent {{lc|ranges::zip_transform_view}}, and {{tt|''current_''}} is the underlying tuple of iterators into {{c|Views...}}.

===Parameters===
(none)

===Return value===
The element which is the result of transformation (mapping).

===Exceptions===
{{noexcept|std::invoke(*parent_-&gt;fun_, *std::get&lt;INTS&gt;(inner_.current_)...)}}
:: where {{tt|''INTS''}} is the pack of integers {{tt|0, 1, ..., (sizeof...(Views)-1)&lt;!----&gt;}}.

===Notes===
{{c|operator-&gt;}} is not provided.

The behavior is undefined if the {{tt|''parent_''}} pointer to parent {{lc|ranges::zip_transform_view}} is null (e.g. if {{c|*this}} is default constructed).

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|ja|zh|ru}}