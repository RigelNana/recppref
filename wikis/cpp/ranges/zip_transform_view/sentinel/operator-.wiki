{{title|operator-{{small|(ranges::zip_transform_view::''sentinel'')}}}}
{{cpp/ranges/zip_transform_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|
template&lt; bool OtherConst &gt;
    requires std::sized_sentinel_for&lt;/*zentinel*/&lt;Const&gt;, /*ziperator*/&lt;OtherConst&gt;&gt;
friend constexpr ranges::range_difference_t&lt;/*maybe-const*/&lt;OtherConst, /*InnerView*/&gt;&gt;
    operator-( const /*iterator*/&lt;OtherConst&gt;&amp; x, const /*sentinel*/&amp; y );
}}
{{dcl|num=2|since=c++23|
template&lt; bool OtherConst &gt;
    requires std::sized_sentinel_for&lt;/*zentinel*/&lt;Const&gt;, /*ziperator*/&lt;OtherConst&gt;&gt;
friend constexpr ranges::range_difference_t&lt;/*maybe-const*/&lt;OtherConst, /*InnerView*/&gt;&gt;
    operator-( const /*sentinel*/&amp; y, const /*iterator*/&lt;OtherConst&gt;&amp; x );
}}
{{dcl end}}

Computes the distance between the underlying iterator of {{c|x}} and the underlying sentinel of {{c|y}}.

{{cpp/hidden friend|{{tt|zip_transform_view::''sentinel''}}|plural=yes|tmpl=yes}}

===Parameters===
{{par begin}}
{{par|x|an [[cpp/ranges/zip_transform_view/iterator|iterator]]}}
{{par|y|a [[cpp/ranges/zip_transform_view/sentinel|sentinel]]}}
{{par end}}

===Return value===
Let {{tti|inner_}} denote the underlying iterator or sentinel respectively.
@1@ {{c|x.inner_ - y.inner_}}
@2@ {{c|y.inner_ - x.inner_}}

{{langlinks|de|es|ja|ru|zh}}