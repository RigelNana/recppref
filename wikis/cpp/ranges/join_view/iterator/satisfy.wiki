{{cpp/ranges/join_view/iterator/title|satisfy}}
{{cpp/ranges/join_view/navbar}}

{{ddcl|since=c++20|notes={{mark expos}}|
constexpr void satisfy();
}}

Skips over empty inner ranges and initializes the underlying iterator {{rlpi|/#Data members|inner_}}.

Let the constant {{c|/*ref-is-glvalue*/}} be {{c|std::is_reference_v&lt;ranges::range_reference_t&lt;Base&gt;&gt;}}.

The function body is equivalent to
{{source|1=
auto update_inner = [this](const ranges::iterator_t&lt;Base&gt;&amp; x) -&gt; auto&amp;&amp;
{
    if constexpr (/*ref-is-glvalue*/)     // *x is a reference
        return *x;
    else
        return parent_-&gt;inner_./*emplace-deref*/(x);
};

for (; outer_ != ranges::end(parent_-&gt;base_); ++outer_)
{
    auto&amp;&amp; inner = update_inner(outer_);
    inner_ = ranges::begin(inner);
    if (inner_ != ranges::end(inner))
        return;
}

if constexpr (/*ref-is-glvalue*/)
    inner_ = InnerIter();

}}

===Parameters===
(none)

===Return value===
(none)

{{langlinks|es|ja|ru|zh}}