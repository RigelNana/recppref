{{cpp/ranges/join_view/iterator/title|1=operator++,--}}
{{cpp/ranges/join_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr /*iterator*/&amp; operator++();
}}
{{dcl|num=2|since=c++20|
constexpr void operator++( int );
}}
{{dcl|num=3|since=c++20|
constexpr /*iterator*/ operator++( int )
    requires /*ref-is-glvalue*/ &amp;&amp; ranges::forward_range&lt;Base&gt; &amp;&amp;
             ranges::forward_range&lt;ranges::range_reference_t&lt;Base&gt;&gt;;
}}
{{dcl|num=4|since=c++20|
constexpr iterator&amp; operator--()
    requires /*ref-is-glvalue*/ &amp;&amp; ranges::bidirectional_range&lt;Base&gt; &amp;&amp;
             ranges::bidirectional_range&lt;ranges::range_reference_t&lt;Base&gt;&gt; &amp;&amp;
             ranges::common_range&lt;ranges::range_reference_t&lt;Base&gt;&gt;;
}}
{{dcl|num=5|since=c++20|
constexpr /*iterator*/ operator--( int )
    requires /*ref-is-glvalue*/ &amp;&amp; ranges::bidirectional_range&lt;Base&gt; &amp;&amp;
             ranges::bidirectional_range&lt;ranges::range_reference_t&lt;Base&gt;&gt; &amp;&amp;
             ranges::common_range&lt;ranges::range_reference_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

Increments or decrements the underlying iterator.

Let {{rlpi|/#Data members|inner_}} and {{rlpi|/#Data members|outer_}} be the underlying iterators, and {{rlpi|/#Data members|parent_}} be the pointer to parent {{lc|ranges::join_view}}, the constant {{c/core|/*ref-is-glvalue*/}} be {{c|std::is_reference_v&lt;ranges::range_reference_t&lt;Base&gt;&gt;}}.

@1@ Let {{c/core|/*inner-range*/}} be:
* {{c|*outer_}}, if {{c|1=/*ref-is-glvalue*/ == true}};
* {{c|*parent_-&gt;inner_}} otherwise.
Equivalent to:
{{source|1=
auto&amp;&amp; inner_rng = /*inner-range*/;
if (++inner_ == ranges::end(inner_rng))
{
    ++outer_;
    satisfy();
}
return *this;
}}

@2@ Equivalent to: {{c|1=++*this}}.

@3@ Equivalent to:
{{source|1=
auto tmp = *this;
++*this;
return tmp;
}}

@4@ Equivalent to:
{{source|1=
if (outer_ == ranges::end(parent_-&gt;base_))
    inner_ = ranges::end(*--outer_);
while (inner_ == ranges::begin(*outer_))
    inner_ = ranges::end(*--outer_);
--inner_;
return *this;
}}

@5@ Equivalent to: {{source|1=
auto tmp = *this;
--*this;
return tmp;
}}

===Parameters===
(none)

===Return value===
@1,4@ {{c|*this}}
@2@ (none)
@3,5@ a copy of {{c|*this}} that was made before the change.

{{langlinks|de|es|ja|ru|zh}}