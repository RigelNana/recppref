{{cpp/ranges/take_while_view/title|base}}
{{cpp/ranges/take_while_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
constexpr V base() const&amp; requires std::copy_constructible&lt;V&gt;;
}}
{{dcl|num=2|since=c++20|1=
constexpr V base() &amp;&amp;;
}}
{{dcl end}}

Returns a copy of the underlying view.

@1@ Copy constructs the result from the underlying view {{rlpi|/#Data members|base_}}.
@2@ Move constructs the result from the underlying view {{tti|base_}}.

===Parameters===
(none)

===Return value===
A copy of the underlying view.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;

namespace stq {
void println(auto, const auto&amp; v)
{
    for (const auto&amp; e : v)
        std::cout &lt;&lt; e &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
}

int main()
{
    static constexpr int a[]{1, 2, 3, 4, 5};
    constexpr auto view = a {{!}} std::views::take_while([](int x){ return x &lt; 4; });
    stq::println("{}", view);
    const auto base = view.base();
    stq::println("{}", base);
}
|output=
1 2 3
1 2 3 4 5
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc pred|take_while_view}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}