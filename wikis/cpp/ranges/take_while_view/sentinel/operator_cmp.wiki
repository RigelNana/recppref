{{title|1= operator=={{small|(ranges::take_while_view::''sentinel'')}}}}
{{cpp/ranges/take_while_view/navbar}}

{{ddcl|since=c++20|1=
friend constexpr bool operator==( const ranges::iterator_t&lt;Base&gt;&amp; x,
                                  const /*sentinel*/&amp; y );
}}

Compares a {{c|take_while_view::/*sentinel*/}} with an iterator into (possibly const-qualified) view {{tt|V}}. The iterator is typically obtained from a call to {{ltt|cpp/ranges/take_while_view/begin|take_while_view::begin}}.

Returns {{c|true}} if {{c|x}} compares equal to the underlying sentinel of {{c|y}} (i.e. {{rlpt|base|y.base()}}), or if the predicate returns {{c|false}} when applied to {{c|*x}}.

{{cpp/hidden friend|{{tt|take_while_view::''sentinel''&lt;Const&gt;}}}}

{{cpp/note synthesized eq}}

===Parameters===
{{par begin}}
{{par|x|iterator to compare}}
{{par|y|sentinel to compare}}
{{par end}}

===Return value===
{{c|1= y.end_ == x {{!!}} !std::invoke(*y.pred_, *x)}}, where {{tti|end_}} denotes the stored sentinel and {{tti|pred_}} denotes the stored pointer to predicate.

===Example===
{{example
|code=
|output=
}}

{{langlinks|es|ja|ru|zh}}