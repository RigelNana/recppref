{{cpp/ranges/take_while_view/title|begin}}
{{cpp/ranges/take_while_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr auto begin() requires (!/*simple-view*/&lt;V&gt;);
}}
{{dcl|num=2|since=c++20|
constexpr auto begin() const requires
    ranges::range&lt;const V&gt; &amp;&amp;
    std::indirect_unary_predicate&lt;const Pred, ranges::iterator_t&lt;const V&gt;&gt;;
}}
{{dcl end}}

Returns an iterator to the first element of the view. Effectively calls {{c/core|ranges::begin}} on the underlying view {{rlpi|/#Data members|base_}}.

Overload {{v|1}} does not participate in overload resolution if {{tt|V}} is a [[cpp/ranges#Helper concepts|simple view]] (that is, if {{tt|V}} and {{c/core|const V}} are views with the same iterator and sentinel types).

===Parameters===
(none)

===Return value===
{{c|ranges::begin(base_)}}, where {{rlpi|/#Data members|base_}} is the underlying view.

===Example===
{{example
|code=
|output=
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3450|std=C++20|before=the {{c/core|const}} overload might return an iterator non-comparable to the sentinel|after=constrained}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|take_while_view}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator cmp|take_while_view}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}