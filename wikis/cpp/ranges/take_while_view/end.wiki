{{cpp/ranges/take_while_view/title|end}}
{{cpp/ranges/take_while_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr auto end() requires (!/*simple-view*/&lt;V&gt;);
}}
{{dcl|num=2|since=c++20|
constexpr auto end() const requires
    ranges::range&lt;const V&gt; &amp;&amp;
    std::indirect_unary_predicate&lt;const Pred, ranges::iterator_t&lt;const V&gt;&gt;;
}}
{{dcl end}}

Returns a {{rlp|sentinel}} representing the end of the view.

Let {{rlpi|/#Data members|base_}} denote the underlying view.
@1@ Effectively returns {{c|/*sentinel*/&lt;false&gt;(ranges::end(base_), std::addressof(pred()))}}.
@2@ Effectively returns {{c|/*sentinel*/&lt;true&gt;(ranges::end(base_), std::addressof(pred()))}}.

Overload {{v|1}} does not participate in overload resolution if {{tt|V}} is a [[cpp/ranges#Helper concepts|simple view]] (that is, if {{tt|V}} and {{c/core|const V}} are views with the same iterator and sentinel types).

===Parameters===
(none)

===Return value===
A {{rlp|sentinel}} representing the end of the view.

===Example===
{{example
|code=
|output=
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3450|std=C++20|before=the {{c/core|const}} overload might return a sentinel non-comparable to the iterator|after=constrained}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|take_while_view}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator cmp|take_while_view}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}