{{cpp/ranges/view title|join}}
{{cpp/ranges/join_view/navbar}}

{{dcl begin}}
{{dcl header|ranges}}
{{dcl|num=1|since=c++20|
template&lt; ranges::input_range V &gt;
    requires ranges::view&lt;V&gt; and
             ranges::input_range&lt;ranges::range_reference_t&lt;V&gt;&gt;
class join_view
    : public ranges::view_interface&lt;join_view&lt;V&gt;&gt;
}}
{{dcl|num=2|since=c++20|1=
namespace views {
    inline constexpr /* unspecified */ join = /* unspecified */;
}
}}
{{dcl h|Call signature}}
{{dcl|since=c++20|1=
template&lt; ranges::viewable_range R &gt;
    requires /* see below */
constexpr ranges::view auto join( R&amp;&amp; r );
}}
{{dcl end}}

@1@ A range adaptor that represents {{lconcept|view}} consisting of the sequence obtained from flattening a view of ranges.

@2@ {{named req|RangeAdaptorObject}} (and also {{named req|RangeAdaptorClosureObject}}). The expression {{c|views::join(e)}} is [[cpp/language/expressions#Expression-equivalence|expression-equivalent]] to {{c|join_view&lt;views::all_t&lt;decltype((e))&gt;&gt;{e}&lt;!----&gt;}} for any suitable subexpressions {{c|e}}.

{{tt|join_view}} models {{lconcept|input_range}}.

{{tt|join_view}} models {{lconcept|forward_range}} when:
* {{c|ranges::range_reference_t&lt;V&gt;}} is a reference type, and
* {{c|V}} and {{c|ranges::range_reference_t&lt;V&gt;}} each model {{lconcept|forward_range}}.

{{tt|join_view}} models {{lconcept|bidirectional_range}} when:
* {{c|ranges::range_reference_t&lt;V&gt;}} is a reference type,
* {{c|V}} models {{lconcept|bidirectional_range}}, and
* {{c|ranges::range_reference_t&lt;V&gt;}} models both {{lconcept|bidirectional_range}} and {{lconcept|common_range}}.

{{tt|join_view}} models {{lconcept|common_range}} when:
* {{c|ranges::range_reference_t&lt;V&gt;}} is a reference type, and
* {{c|V}} and {{c|ranges::range_reference_t&lt;V&gt;}} each model {{lconcept|forward_range}} and  {{lconcept|common_range}}.

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc constructor|join_view}}
{{dsc inc|cpp/ranges/adaptor/dsc base|join_view}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|join_view}}
{{dsc inc|cpp/ranges/adaptor/dsc end|join_view}}

{{cpp/ranges/view_interface/inherit|embedded=yes|data=invalid|size=invalid|operator[]=invalid}}
{{dsc end}}

==={{rl|deduction guides|Deduction guides}}===

===Nested classes===
{{dsc begin}}
{{dsc expos mem tclass|cpp/ranges/join_view/iterator|the iterator type}}
{{dsc expos mem tclass|cpp/ranges/join_view/sentinel|the sentinel type}}
{{dsc end}}

===Notes===
Before {{wg21|P2328R1}} was adopted, the inner range type ({{c/core|ranges::range_reference_t&lt;V&gt;}}) cannot be a container type (but can be reference to container). For example, it was not allowed to join a {{rlpt|transform_view}} of {{lc|std::string}} prvalue.

{{source|1=
struct Person { int age; std::string name; };

auto f(std::vector&lt;Person&gt;&amp; v) {
//  return v {{!}} std::views::transform([](auto&amp; p){ return p.name; })
//           {{!}} std::views::join; // error before P2328R1
    return v {{!}} std::views::transform([](auto&amp; p) -&gt; std::string&amp; { return p.name; })
             {{!}} std::views::join; // OK
}
}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;
#include &lt;vector&gt;

int main()
{
    using namespace std::literals;

    const auto bits = {"https:"sv, "//"sv, "cppreference"sv, "."sv, "com"sv};
    for (char const c : bits {{!}} std::views::join)
        std::cout &lt;&lt; c;
    std::cout &lt;&lt; '\n';
    
    const std::vector&lt;std::vector&lt;int&gt;&gt; v{&lt;!----&gt;{1, 2}, {3, 4, 5}, {6}, {7, 8, 9}&lt;!----&gt;};
    auto jv = std::ranges::join_view(v);
    for (int const e : jv)
        std::cout &lt;&lt; e &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
https://cppreference.com
1 2 3 4 5 6 7 8 9
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3474|std=C++20|before={{c|views::join(e)}} returned a copy of {{c|e}} when {{c|e}} is a {{tt|join_view}}|after=returns a nested {{tt|join_view}}}}
{{dr list item|paper=P2328R1|std=C++20|before=non-view {{lconcept|range}} prvalues could not be joined by {{tt|join_view}}|after=made joinable}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc join_with_view}}
{{dsc inc|cpp/ranges/dsc concat_view}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}