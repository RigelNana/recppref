{{title|deduction guides for {{tt|std::ranges::iota_view}}}}
{{cpp/ranges/iota_view/navbar}}

{{dcl begin}}
{{dcl header|ranges}}
{{dcl|since=c++20|1=
template&lt; class W, class Bound &gt;
    requires (!/*is-integer-like*/&lt;W&gt; {{!!}}
              !/*is-integer-like*/&lt;Bound&gt; {{!!}}
              /*is-signed-integer-like*/&lt;W&gt; == /*is-signed-integer-like*/&lt;Bound&gt;)
iota_view( W, Bound ) -&gt; iota_view&lt;W, Bound&gt;;
}}
{{dcl end}}

This [[cpp/language/class template argument deduction|deduction guide]] is provided for {{rlpt|/|iota_view}} to allow deduction from an initial value and a bounding value.

For the definitions of {{c/core|/*is-integer-like*/}} and {{c/core|/*is-signed-integer-like*/}}, see {{lti|cpp/iterator/is-integer-like}}{{sep}}.

Note that the guide protects itself against bugs arising from sign mismatch, like {{c|views::iota(0, v.size())}}, where {{c|0}} is signed and {{c|v.size()}} is unsigned.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;ranges&gt;

int main()
{
    auto io = std::ranges::iota_view(1L, 7L); // deduces W and Bound as “long”
    assert(io.front() == 1L and io.back() == 6L);
}
}}

{{langlinks|de|es|ja|ru|zh}}