{{cpp/ranges/iota_view/title|end}}
{{cpp/ranges/iota_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr auto end() const;
}}
{{dcl|num=2|since=c++20|
constexpr /*iterator*/ end() const requires std::same_as&lt;W, Bound&gt;;
}}
{{dcl end}}

@1@ Obtains a {{rlp|sentinel}} representing the sentinel value:
* If {{tt|Bound}} is {{lc|std::unreachable_sentinel_t}}, returns {{c|std::unreachable_sentinel}}.
* Otherwise, returns {{box|{{rlpi|sentinel}}{{sep}}{{c/core|{}}{{rlpsi|/#bound_}}{{sep}}{{c/core|}&lt;!----&gt;}}}}.

@2@ Obtains an {{rlp|iterator}} to the sentinel value.

===Return value===
@1@ As specified above.

@2@ {{box|{{rlpi|iterator}}{{sep}}{{c/core|{}}{{rlpsi|/#bound_}}{{sep}}{{c/core|}&lt;!----&gt;}}}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;

int main()
{
    auto iota{std::views::iota(2, 6)};
    auto end{iota.end()};
    for (auto iter{iota.begin()}; iter != end; ++iter)
        std::cout &lt;&lt; *iter &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
2 3 4 5
}}

{{langlinks|de|es|ja|ru|zh}}