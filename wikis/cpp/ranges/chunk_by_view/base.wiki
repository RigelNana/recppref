{{cpp/ranges/chunk_by_view/title|base}}
{{cpp/ranges/chunk_by_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr V base() const&amp; requires std::copy_constructible&lt;V&gt;;
}}
{{dcl|num=2|since=c++23|
constexpr V base() &amp;&amp;;
}}
{{dcl end}}

Returns a copy of the underlying view {{rlpsi|/#base_}}.

@1@ Copy constructs the result from the underlying view. Equivalent to:
{{box|{{c/core|return}}{{nbspt}}{{rlpsi|/#base_}}{{c/core|;}}}}
@2@ Move constructs the result from the underlying view. Equivalent to: 
{{box|{{c/core|return std::}}{{ltt|cpp/utility/move}}{{c/core|(}}{{rlpsi|/#base_}}{{c/core|);}}}}

===Parameters===
(none)

===Return value===
A copy of the underlying view.

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;functional&gt;
#include &lt;ranges&gt;

int main()
{
    static constexpr auto v = {1, 1, 2, 2, 3, 3, 3};
    constexpr auto chunks = v {{!}} std::views::chunk_by(std::equal_to{});
    static_assert(std::ranges::equal(v, chunks.base()));
}
}}

{{langlinks|es|ja|zh}}