{{cpp/ranges/chunk_by_view/title|''iterator''}}
{{cpp/ranges/chunk_by_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
class /*iterator*/
}}

The return type of {{rlpt|begin|chunk_by_view::begin}}, and of {{rlpt|end|chunk_by_view::end}} when the underlying view {{tt|V}} is a {{lconcept|common_range}}.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|value_type}}|{{c/core|ranges::subrange&lt;ranges::iterator_t&lt;V&gt;&gt;}}}}
{{dsc|{{tt|difference_type}}|{{c/core|ranges::range_difference_t&lt;V&gt;}}}}
{{dsc|{{tt|iterator_category}}|{{c/core|std::input_iterator_tag}}}}
{{dsc|{{tt|iterator_concept}}|
* {{c/core|std::bidirectional_iterator_tag}}, if {{tt|V}} models {{lconcept|bidirectional_range}}, otherwise
* {{c/core|std::forward_iterator_tag}}.
}}
{{dsc end}}

===Data members===
{{dsc begin}}
{{dsc hitem|Member name|Definition}}
{{dsc expos mem obj|parent_|private=yes|A pointer to the parent {{tt|chunk_by_view}}.}}
{{dsc expos mem obj|current_|private=yes|{{c|ranges::iterator_t&lt;V&gt;}}, an iterator to the begin of current chunk.}}
{{dsc expos mem obj|next_|private=yes|{{c|ranges::iterator_t&lt;V&gt;}}, an iterator to the begin of next chunk, if present.}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|cpp/ranges/chunk_by_view/iterator/iterator|constructs an iterator}}
{{dsc mem fun|cpp/ranges/chunk_by_view/iterator/operator*|accesses the element}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|chunk_by_view}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc fun|cpp/ranges/chunk_by_view/iterator/operator_cmp|title=operator==|compares the underlying iterators|notes={{mark c++23}}}}
{{dsc end}}

===Example===
{{example}}

===References===
{{ref std c++23}}
{{ref std|title=Class {{tt|chunk_by_view​::​iterator}}|id=range.chunk.by.iter|section=26.7.30.3}}
{{ref std end}}

===See also===
{{dsc begin}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}