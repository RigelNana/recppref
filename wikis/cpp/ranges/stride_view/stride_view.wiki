{{cpp/ranges/stride_view/title|stride_view}}
{{cpp/ranges/stride_view/navbar}}
{{ddcl|since=c++23|1=
constexpr explicit stride_view( V base, ranges::range_difference_t&lt;V&gt; stride );
}}

Constructs a {{tt|stride_view}} initializing the underlying data members:
* move construct the underlying view {{rlpi|/#Data members|base_}} with {{c|std::move(base)}},
* construct the {{rlpi|/#Data members|stride_}} with {{c|stride}}.

If {{c|stride &lt; 1}} the behavior is undefined.

===Parameters===
{{par begin}}
{{par|base|the source view}}
{{par|stride|the stride value}}
{{par end}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;

void print(std::string_view rem, auto v, std::string_view term = "\n")
{
    std::cout &lt;&lt; rem &lt;&lt; ": ";
    std::ranges::copy(v, std::ostream_iterator&lt;int&gt;(std::cout, " "));
    std::cout &lt;&lt; term;
};

int main()
{
    auto source = std::views::iota(1, 10);
    print("source", source);

    for (int stride_value : std::views::iota(1, 6))
    {
        auto strided_view = std::views::stride(source, stride_value);

        print("stride", std::views::single(stride_value), "-&gt; ");
        print("result", strided_view);
    }
}
|output=
source: 1 2 3 4 5 6 7 8 9
stride: 1 -&gt; result: 1 2 3 4 5 6 7 8 9
stride: 2 -&gt; result: 1 3 5 7 9
stride: 3 -&gt; result: 1 4 7
stride: 4 -&gt; result: 1 5 9
stride: 5 -&gt; result: 1 6
}}

{{langlinks|de|es|ja|ru|zh}}