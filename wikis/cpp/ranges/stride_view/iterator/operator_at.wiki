{{cpp/ranges/stride_view/iterator/title|operator[]}}
{{cpp/ranges/stride_view/navbar}}

{{ddcl|since=c++23|1=
constexpr decltype(auto) operator[]( difference_type n ) const
    requires ranges::random_access_range&lt;Base&gt;
}}

Returns an element at specified relative location.

Equivalent to: {{c|return *(*this + n);}}.

===Parameters===
{{par begin}}
{{par|n|position relative to current location}}
{{par end}}

===Return value===
The element at displacement {{c|n}} relative to the current location.

===Example===
{{example
|code=
#include &lt;ranges&gt;

int main()
{
    constexpr static auto v = {'a', 'b', 'c', 'd', 'e'};
    constexpr auto view{v {{!}} std::views::stride(2)};
    constexpr auto iter{view.begin() + 1};
    static_assert(*iter == 'c');
    static_assert(iter[0] == 'c');
    static_assert(iter[1] == 'e');
}
}}

===See also===
{{dsc begin}}
{{dsc mem fun|cpp/ranges/stride_view/iterator/operator*|title=operator*|accesses an element|notes={{mark c++23}}}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}