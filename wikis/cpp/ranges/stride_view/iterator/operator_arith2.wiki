{{title|operator+,-{{small|(ranges::stride_view::''iterator'')}}}}
{{cpp/ranges/stride_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/
    operator+( const /*iterator*/&amp; i, difference_type n )
        requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/
    operator+( difference_type n, const /*iterator*/&amp; i )
        requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /*iterator*/
    operator-( const /*iterator*/&amp; i, difference_type n )
        requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type
    operator-( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
        requires std::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;,
                                         ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=5|since=c++23|
friend constexpr difference_type
    operator-( std::default_sentinel_t, const /*iterator*/&amp; x )
        requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                         ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=6|since=c++23|
friend constexpr difference_type
    operator-( const /*iterator*/&amp; x, std::default_sentinel_t s )
        requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                         ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

Increments or decrements the {{rlp|iterator}}.

Let {{rlpi|/#Data members|current_}}, {{rlpi|/#Data members|end_}}, {{rlpi|/#Data members|stride_}}, and {{rlpi|/#Data members|missing_}} be the data members of the {{rlp|iterator}}.

@1,2@ Equivalent to {{c|1=auto r = i; r += n; return r;}}.

@3@ Equivalent to {{c|1=auto r = i; r -= n; return r;}}.

@4@ Let {{tti|N}} be {{c|x.current_ - y.current_}}. Returns:
* {{c|(N + x.missing_ - y.missing_) / x.stride_}}, if {{rlpi|/#Member types|Base}} models {{lconcept|forward_range}}.
* {{c|-/*div-ceil*/(-N, x.stride_)}}, if {{tti|N &lt; 0}}.
* {{c|/*div-ceil*/(N, x.stride_)}} otherwise.

@5@ Equivalent to {{c|return /*div-ceil*/(x.end_ - x.current_, x.stride_);}}.

@6@ Equivalent to {{c|return -(s - x);}}.

{{cpp/hidden friend|{{tt|stride_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===Parameters===
{{par begin}}
{{par|x, y, i|the {{rlp|/|iterator}}s}}
{{par|s|a {{lt|cpp/iterator/default_sentinel_t|sentinel}}}}
{{par end}}

===Return value===
@1,2@ An incremented iterator
@3@ A decremented iterator
@4@ A distance between given iterators
@5,6@ A distance between given iterator and sentinel

===Example===
{{example
|code=
|output=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|stride_view}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}