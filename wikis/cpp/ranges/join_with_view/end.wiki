{{cpp/ranges/join_with_view/title|end}}
{{cpp/ranges/join_with_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto end();
}}
{{dcl|num=2|since=c++23|
constexpr auto end() const
    requires ranges::forward_range&lt;const V&gt; &amp;&amp;
             ranges::forward_range&lt;const Pattern&gt; &amp;&amp;
             std::is_reference_v&lt;ranges::range_reference_t&lt;const V&gt;&gt;&gt; &amp;&amp;
             ranges::input_range&lt;ranges::range_reference_t&lt;const V&gt;&gt; &amp;&amp;
             /*concatable*/&lt;ranges::range_reference_t&lt;const V&gt;,
                            const Pattern&gt;;
}}
{{dcl end}}

Returns an {{rlp|iterator}} or a {{rlp|sentinel}} that compares equal to the past-the-end iterator of the {{rlpt|/|join_with_view}}.

@1@ Returns a mutable iterator/sentinel or const iterator/sentinel.
* If all following conditions are satisfied, returns an iterator:
:* {{tt|V}} models {{lconcept|forward_range}} and {{lconcept|common_range}}.
:* {{box|{{c/core|std::is_reference_v&lt;}}{{rlpsi|/#InnerRng}}{{sep}}{{c/core|&gt;}}}} is {{c|true}}.
:* {{rlpsi|/#InnerRng}} models {{lconcept|forward_range}} and {{lconcept|common_range}}.
* Otherwise, returns a sentinel.

@2@ Returns a const iterator/sentinel.
* If all following conditions are satisfied, returns an iterator:
:* {{c/core|const V}} models {{lconcept|common_range}}.
:* {{c/core|ranges::range_reference_t&lt;const V&gt;}} models {{lconcept|forward_range}} and {{lconcept|common_range}}.
* Otherwise, returns a sentinel.
@@ For the definition of {{c/core|/*concatable*/}}, see {{l2tt std|cpp/ranges/concat_view}}.

===Return value===
{|class="wikitable" style="text-align: center;"
!rowspan=2|{{nbsp}}Overload{{nbsp}}
!colspan=2|Return value
|-
!Iterator
!Sentinel
|-
|{{v|1}}
|&lt;span style="text-align: left;"&gt;{{box|{{rlpi|iterator}}{{sep}}{{c/core|&lt;}}{{lti|cpp/ranges#Helper concepts|simple-view}}{{sep}}{{c/core|&lt;V&gt; &amp;&amp;}}&lt;br&gt;{{nbspt|9}}{{lti|cpp/ranges#Helper concepts|simple-view}}{{sep}}{{c/core|&lt;Pattern&gt;&gt;}}&lt;br&gt;{{nbspt|4}}{{c/core|{*this, ranges::end(}}{{rlpsi|/#base_}}{{c/core|)}&lt;!----&gt;}}}}&lt;/span&gt;
|&lt;span style="text-align: left;"&gt;{{nbsp}}{{box|{{rlpi|sentinel}}{{sep}}{{c/core|&lt;}}{{lti|cpp/ranges#Helper concepts|simple-view}}{{sep}}{{c/core|&lt;V&gt; &amp;&amp;}}&lt;br&gt;{{nbspt|9}}{{lti|cpp/ranges#Helper concepts|simple-view}}{{sep}}{{c/core|&lt;Pattern&gt;&gt;}}&lt;br&gt;{{nbspt|4}}{{c/core|{*this}&lt;!----&gt;}}}}{{nbsp}}&lt;/span&gt;
|-
|{{v|2}}
|{{nbsp}}{{box|{{rlpi|iterator}}{{sep}}{{c/core|&lt;true&gt;{*this, ranges::end(}}{{rlpsi|/#base_}}{{c/core|)}&lt;!----&gt;}}}}{{nbsp}}
|{{box|{{rlpi|sentinel}}{{sep}}{{c/core|&lt;true&gt;{*this}&lt;!----&gt;}}}}
|}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|join_with_view}}
{{dsc inc|cpp/ranges/dsc end}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}