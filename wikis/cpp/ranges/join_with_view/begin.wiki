{{cpp/ranges/join_with_view/title|begin}}
{{cpp/ranges/join_with_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto begin();
}}
{{dcl|num=2|since=c++23|
constexpr auto begin() const
    requires ranges::forward_range&lt;const V&gt; &amp;&amp;
             ranges::forward_range&lt;const Pattern&gt; &amp;&amp;
             std::is_reference_v&lt;ranges::range_reference_t&lt;const V&gt;&gt; &amp;&amp;
             ranges::input_range&lt;ranges::range_reference_t&lt;const V&gt;&gt; &amp;&amp;
             /*concatable*/&lt;ranges::range_reference_t&lt;const V&gt;,
                            const Pattern&gt;;
}}
{{dcl end}}

Returns an {{rlp|iterator}} to the beginning of the {{rlpt|/|join_with_view}}.

@1@ Returns a mutable iterator or const iterator.
* If {{tt|V}} models {{lconcept|forward_range}}, equivalent to {{box|{{c/core|1=constexpr bool use_const =}}&lt;br&gt;{{nbspt|4}}{{lsi|cpp/ranges#simple-view}}{{sep}}{{c/core|&lt;V&gt; &amp;&amp; std::is_reference_v&lt;}}{{rlpsi|/#InnerRng}}{{sep}}{{c/core|&gt; &amp;&amp;}}{{nbspt}}{{lsi|cpp/ranges#simple-view}}{{sep}}{{c/core|&lt;Pattern&gt;;}}&lt;br&gt;{{c/core|return}}{{nbspt}}{{rlpi|iterator}}{{sep}}{{c/core|&lt;use_const&gt;{*this, ranges::begin(}}{{rlpsi|/#base_}}{{c/core|)};}}}}.
* Otherwise, equivalent to {{box|{{rlpsi|/#outer_it_}}{{nbspt}}{{c/core|1== ranges::begin(}}{{rlpsi|/#base_}}{{c/core|);}}&lt;br&gt;{{c/core|return}}{{nbspt}}{{rlpi|iterator}}{{sep}}{{c/core|&lt;false&gt;{*this};}}}}.

@2@ Returns a const iterator.
@@ For the definition of {{lsi|cpp/ranges/concat_view#concatable}}, see {{l2tt std|cpp/ranges/concat_view}}.

===Return value===
@1@ As described above.

@2@ {{box|{{rlpi|iterator}}{{sep}}{{c/core|&lt;true&gt;{*this, ranges::begin(}}{{rlpsi|/#base_}}{{c/core|)}&lt;!----&gt;}}}}.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|join_with_view}}
{{dsc inc|cpp/ranges/dsc begin}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}