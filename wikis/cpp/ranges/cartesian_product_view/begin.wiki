{{cpp/ranges/cartesian_product_view/title|begin}}
{{cpp/ranges/cartesian_product_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
constexpr iterator&lt;false&gt; begin()
    requires (!/*simple-view*/&lt;First&gt; {{!!}} ... {{!!}} !/*simple-view*/&lt;Vs&gt;);
}}
{{dcl|num=2|since=c++23|1=
constexpr iterator&lt;true&gt; begin() const
    requires (ranges::range&lt;const First&gt; &amp;&amp; ... &amp;&amp; ranges::range&lt;const Vs&gt;);
}}
{{dcl end}}

Returns an {{rlp|iterator}} to the first element of the {{rlpt|/|cartesian_product_view}}.

Let {{rlpi|/#Data members|bases_}} be the tuple of underlying views.

@1@ Equivalent to {{box|{{c/core|return /*iterator*/&lt;false&gt;(}}{{lsi|cpp/ranges#tuple-transform|tuple-transform}}{{c/core|(ranges::begin, bases_));}}}}.

@2@ Equivalent to {{box|{{c/core|return /*iterator*/&lt;true&gt;(}}{{lsi|cpp/ranges#tuple-transform|tuple-transform}}{{c/core|(ranges::begin, bases_));}}}}.

===Parameters===
(none)

===Return value===
An {{rlp|iterator}} to the first element.

===Example===
{{example
|code=
#include &lt;array&gt;
#include &lt;format&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;
#include &lt;tuple&gt;
using namespace std::literals;

int main()
{
    constexpr auto a = std::array{"Curiously"sv, "Recurring"sv, "Template"sv, "Pattern"sv};

    constexpr auto v = std::ranges::cartesian_product_view(a[0], a[1], a[2], a[3]);

    constexpr std::tuple&lt;char const&amp;,
                         char const&amp;,
                         char const&amp;,
                         char const&amp;&gt; first{*v.begin()};

    std::cout &lt;&lt; std::format("{}{}{}{}{}",
                             std::get&lt;0&gt;(first),
                             std::get&lt;1&gt;(first),
                             std::get&lt;2&gt;(first),
                             std::get&lt;3&gt;(first),
                             '\n');
}
|output=CRTP
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|cartesian_product_view}}
{{dsc inc|cpp/ranges/dsc begin}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}