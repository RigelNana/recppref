{{cpp/ranges/drop_while_view/title|base}}
{{cpp/ranges/drop_while_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
constexpr V base() const&amp; requires std::copy_constructible&lt;V&gt;;
}}
{{dcl|num=2|since=c++20|1=
constexpr V base() &amp;&amp;;
}}
{{dcl end}}

Returns a copy of the underlying view.

@1@ Copy constructs the result from the underlying view {{rlpi|/#Data members|base_}}.
@2@ Move constructs the result from the underlying view {{tti|base_}}.

===Parameters===
(none)

===Return value===
A copy of the underlying view.

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;array&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;

void print(auto first, auto last)
{
    for (; first != last; ++first)
        std::cout &lt;&lt; *first &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

int main()
{
    std::array data{1, 2, 3, 4, 5};
    print(data.cbegin(), data.cend());

    auto func = [](int x) { return x &lt; 3; };
    auto view = std::ranges::drop_while_view{data, func};
    print(view.begin(), view.end());

    auto base = view.base(); // `base` refers to the `data`
    std::ranges::reverse(base); //&lt; changes `data` indirectly
    print(data.cbegin(), data.cend());
}
|output=
1 2 3 4 5
3 4 5
5 4 3 2 1 
}}

{{langlinks|es|ja|ru|zh}}