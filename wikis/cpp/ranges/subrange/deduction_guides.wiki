{{title|deduction guides for {{tt|std::ranges::subrange}}}}
{{cpp/ranges/subrange/navbar}}
{{dcl begin}}
{{dcl header|ranges}}
{{dcl|num=1|since=c++20|
template&lt; std::input_or_output_iterator I, std::sentinel_for&lt;I&gt; S &gt;
subrange(I, S) -&gt; subrange&lt;I, S&gt;;
}}
{{dcl|num=2|since=c++20|
template&lt; std::input_or_output_iterator I, std::sentinel_for&lt;I&gt; S &gt;
subrange(I, S, /*make-unsigned-like-t*/&lt;std::iter_difference_t&lt;I&gt;&gt;) -&gt;
    subrange&lt;I, S, ranges::subrange_kind::sized&gt;;
}}
{{dcl|num=3|since=c++20|
template&lt; ranges::borrowed_range&lt;R&gt; &gt;
subrange(R&amp;&amp;) -&gt;
    subrange&lt;ranges::iterator_t&lt;R&gt;, ranges::sentinel_t&lt;R&gt;,
             (ranges::sized_range&lt;R&gt; {{!!}}
              std::sized_sentinel_for&lt;ranges::sentinel_t&lt;R&gt;,
              ranges::iterator_t&lt;R&gt;&gt;) ?
             ranges::subrange_kind::sized : ranges::subrange_kind::unsized&gt;;
}}
{{dcl|num=4|since=c++20|
template&lt; ranges::borrowed_range&lt;R&gt; &gt;
subrange(R&amp;&amp;, /*make-unsigned-like-t*/&lt;ranges::range_difference_t&lt;R&gt;&gt;) -&gt;
    subrange&lt;ranges::iterator_t&lt;R&gt;, ranges::sentinel_t&lt;R&gt;,
             ranges::subrange_kind::sized&gt;;
}}
{{dcl end}}

These [[cpp/language/class template argument deduction|deduction guides]] are provided for {{lc|std::ranges::subrange}}.

@1@ Deduces the template arguments from the type of iterator and sentinel. The {{tt|subrange}} is sized if {{c|std::sized_sentinel_for&lt;S, I&gt;}} is satisfied, as determined by the default template argument.

@2@ Deduces the template arguments from the type of iterator and sentinel, while the size of range is specified. The {{tt|subrange}} is always sized.

@3@ Deduces the template arguments from the type of range. The {{tt|subrange}} is sized if the size can be obtained from the range or its iterator and sentinel.

@4@ Deduces the template arguments from the type of range, while the size of range is specified. The {{tt|subrange}} is always sized.

For the definition of {{c/core|/* make-unsigned-like-t */}}, see {{lsi|cpp/ranges#make-unsigned-like-t}}{{sep}}.

===Notes===
While constructing the {{tt|subrange}} object,
* for {{v|1,2}}, the behavior is undefined if the iterator-sentinel pair does not denote a valid range,
* for {{v|2,4}}, the behavior is undefined if the given size is not equal to the size of the range.

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3404|std=C++20|before=meaningless deduction guides from pair-like types were provided|after=removed}}
{{dr list end}}

{{langlinks|es|ja|ru|zh}}