{{cpp/ranges/adjacent_transform_view/iterator/title|''iterator''}}
{{cpp/ranges/adjacent_transform_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/() = default;
}}
{{dcl|num=2|since=c++23|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
        std::convertible_to&lt;/*inner-iterator*/&lt;false&gt;, /*inner-iterator*/&lt;Const&gt;&gt;;
}}
{{dcl|num=3|notes={{mark expos}}|1=
private:
constexpr /*iterator*/( Parent&amp; parent, /*inner-iterator*/&lt;Const&gt; inner );
}}
{{dcl end}}

Construct an iterator.

@1@ Default constructor. [[cpp/language/value_initialization|Value-initializes]] the underlying pointer {{rlpi|/#Data members|parent_}} with {{c/core|nullptr}}, and [[cpp/language/default_initialization|default-initializes]] the underlying iterator {{rlpi|/#Data members|inner_}}.

@2@ Conversion from {{c|/*iterator*/&lt;false&gt;}} to {{c|/*iterator*/&lt;true&gt;}}. Initializes the underlying pointer {{rlpi|/#Data members|parent_}} with {{c|i.parent_}}, and move constructs the underlying iterator {{rlpi|/#Data members|inner_}} with {{box|{{ltt std|cpp/utility/move}}{{c/core|(i.inner_)}}}}.

@3@ This iterator also has a private constructor which is used by {{lc|ranges::adjacent_transform_view::begin}} and {{lc|ranges::adjacent_transform_view::end}}. This constructor is not accessible to users. Initializes {{rlpi|/#Data members|parent_}} with {{c|std::addressof(parent)}}, and move constructs {{rlpi|/#Data members|inner_}} with {{c|std::move(inner)}}.

===Parameters===
{{par begin}}
{{par|i|an {{c|/*iterator*/&lt;false&gt;}}}}
{{par|parent|an owning object of type {{lc|ranges::adjacent_transform_view|adjacent_transform_view}}}}
{{par|inner|an iterator of type {{lc|ranges::adjacent_transform_view|adjacent_transform_view::}}{{ltt|cpp/ranges/adjacent_transform_view#Member types|''inner_iterator''}}}}
{{par end}}

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|ja|ru|zh}}