{{title|1= operator=={{small|(ranges::adjacent_transform_view::''sentinel'')}}}}
{{cpp/ranges/adjacent_transform_view/navbar}}

{{dcl begin}}
{{dcl|since=c++23|1=
template&lt; bool OtherConst &gt;
    requires std::sentinel_for&lt;/*inner-sentinel*/&lt;Const&gt;,
                               /*inner-iterator*/&lt;OtherConst&gt;&gt;
friend constexpr bool operator==( const /*iterator*/&lt;OtherConst&gt;&amp; x,
                                  const /*sentinel*/&amp; y );
}}
{{dcl end}}

Compares the underlying iterator of {{c|x}} with the underlying sentinel of {{c|y}}.

Equivalent to: &lt;!--{{c|1=return x.inner_ == y.inner_;}}--&gt;
{{box|
{{c/core|return x.}}
{{lti|cpp/ranges/adjacent_transform_view/iterator#Data members|inner_}}
{{nbspt}}{{c/core|1=== y.}}
{{rlpi|/#Data members|inner_}}{{c/core|;}}
}}.

{{cpp/hidden friend|{{tt|adjacent_transform_view::''sentinel''}}|tmpl=yes}}

{{cpp/note synthesized eq}}

===Parameters===
{{par begin}}
{{par|x|an {{lt|cpp/ranges/adjacent_transform_view/iterator}} to compare}}
{{par|y|a {{rlp|/|sentinel}} to compare}}
{{par end}}

===Return value===
The result of comparison.

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|ja|ru|zh}}