{{cpp/ranges/adjacent_transform_view/sentinel/title|''sentinel''}}
{{cpp/ranges/adjacent_transform_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*sentinel*/() = default;
}}
{{dcl|num=2|since=c++23|1=
constexpr /*sentinel*/( /*sentinel*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
        std::convertible_to&lt;/*inner-sentinel*/&lt;false&gt;, /*inner-sentinel*/&lt;Const&gt;&gt;;
}}
{{dcl|num=3|notes={{mark expos}}|1=
private:
constexpr explicit /*sentinel*/( /*inner-sentinel*/&lt;Const&gt; inner );
}}
{{dcl end}}

Construct a sentinel.

@1@ Default constructor. [[cpp/language/default_initialization|Default-initializes]] the underlying sentinel {{rlpi|/#Data members|inner_}}.

@2@ Conversion from {{c|/*sentinel*/&lt;false&gt;}} to {{c|/*sentinel*/&lt;true&gt;}}. Move constructs the underlying sentinel {{rlpi|/#Data members|inner_}} with {{box|{{ltt std|cpp/utility/move}}{{c/core|(i.inner_)}}}}.

@3@ This sentinel also has a private constructor which is used by {{lc|ranges::adjacent_transform_view::end}}. This constructor is not accessible to users. Initializes the underlying sentinel {{rlpi|/#Data members|inner_}} with {{c|inner}}.

===Parameters===
{{par begin}}
{{par|i|an {{c|/*sentinel*/&lt;false&gt;}}}}
{{par|inner|a sentinel of type {{lc|ranges::adjacent_transform_view|adjacent_transform_view::}}{{lti|cpp/ranges/adjacent_transform_view#Member types|inner_sentinel}}}}
{{par end}}

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|ja|ru|zh}}