{{cpp/ranges/chunk_view/title|''outer-iterator''}}
{{cpp/ranges/chunk_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
class /*outer-iterator*/
}}

The return type of {{rlpt|begin|chunk_view::begin}} if {{tt|V}} models {{lconcept|input_range}}.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|iterator_concept}}|{{c|std::input_iterator_tag}}}}
{{dsc|{{tt|difference_type}}|{{c|ranges::range_difference_t&lt;V&gt;}}}}
{{dsc end}}

===Data members===
{{dsc begin}}
{{dsc hitem|Member object|Definition}}
{{dsc expos mem obj|parent_|private=yes|A pointer to the "parent object" of type {{c|ranges::chunk_view*}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|cpp/ranges/chunk_view/outer_iterator/outer_iterator|constructs an iterator|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/outer_iterator/operator{{=}}|move assigns another iterator|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/outer_iterator/operator*|accesses the element|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/outer_iterator/operator_inc|title=operator++|increments the iterator|notes={{mark c++23}}}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc fun|cpp/ranges/chunk_view/outer_iterator/operator_cmp|title=operator==|compares the iterator with {{lt|cpp/iterator/default_sentinel_t|default sentinel}}|notes={{mark c++23}}}}
{{dsc fun|cpp/ranges/chunk_view/outer_iterator/operator-|title=operator-|calculates the number of chunks remaining|notes={{mark c++23}}}}
{{dsc end}}

===Nested classes===
{{dsc begin}}
{{dsc mem class|cpp/ranges/chunk_view/outer_iterator/value_type|notes={{mark c++23}}|the value type of {{c|/*output-iterator*/}}}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;ranges&gt;
#include &lt;sstream&gt;

int main()
{
    const std::string source{"ABCDEFGHIJ"};

    auto letters = std::istringstream{source};
    auto chunks = std::ranges::istream_view&lt;char&gt;(letters)
                {{!}} std::views::chunk(4);

    for (auto outer_iter = chunks.begin(); outer_iter != std::default_sentinel;
         ++outer_iter)
    {
        auto chunk = *outer_iter; // chunk is an object of type
                                  // chunk_view::outer_iterator::value_type
        std::cout &lt;&lt; '[';
        for (auto inner_iter = chunk.begin(); inner_iter != std::default_sentinel;
             ++inner_iter)
            std::cout &lt;&lt; *inner_iter;
        std::cout &lt;&lt; "] ";
    }
    std::cout &lt;&lt; '\n';

    // The same output using range-for loops
    auto letters2 = std::istringstream{source};
    auto chunks2 = std::ranges::istream_view&lt;char&gt;(letters2)
                 {{!}} std::views::chunk(4);
    for (auto chunk : chunks2)
    {
        std::cout &lt;&lt; '[';
        for (auto ch : chunk)
            std::cout &lt;&lt; ch;
        std::cout &lt;&lt; "] ";
    }
    std::cout &lt;&lt; '\n';
}
|output=
[ABCD] [EFGH] [IJ]
[ABCD] [EFGH] [IJ]
}}

===References===
{{ref std c++23}}
{{ref std|title=Class chunk_view::outer-iterator|id=range.chunk.outer.iter|section=26.7.28.3}}
{{ref std end}}

===See also===
{{dsc begin}}&lt;!--
{{dsc inc|cpp/ranges/chunk_view/dsc iterator}}--&gt;
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}