{{cpp/ranges/chunk_view/title|end}}
{{cpp/ranges/chunk_view/navbar}}
{{dcl begin}}
{{dcl h|{{tt|V}} models only {{lconcept|input_range}}}}
{{dcl|num=1|since=c++23|
constexpr std::default_sentinel_t end() const noexcept;
}}
{{dcl h|{{tt|V}} models {{lconcept|forward_range}}}}
{{dcl|num=2|since=c++23|
constexpr auto end() requires (!__simple_view&lt;V&gt;);
}}
{{dcl|num=3|since=c++23|
constexpr auto end() const requires ranges::forward_range&lt;const V&gt;;
}}
{{dcl end}}

Returns an {{rlp|/#Nested classes|iterator}} or a {{lc|std::default_sentinel}} that compares equal to the end iterator of the {{rlpt|/|chunk_view}}.

@1@ Available only if {{c|V}} models {{lconcept|input_range}}. Equivalent to: {{c|return std::default_sentinel}}.

@2,3@ Available if {{c|V}} models {{lconcept|forward_range}}. Let {{rlpt|/#Data members|''base_''}} denote the underlying adapted view, {{rlpt|/#Data members|''n_''}} denote the stored chunk size, and {{rlpt|/#Nested classes|''iterator''}} denote the nested iterator class.
@2@ Equivalent to:
{{source|1=
if constexpr (ranges::common_range&lt;V&gt; &amp;&amp; ranges::sized_range&lt;V&gt;)
{
    auto missing = (n_ - ranges::distance(base_) % n_) % n_;
    return iterator&lt;false&gt;(this, ranges::end(base_), missing);
}
else if constexpr (ranges::common_range&lt;V&gt; &amp;&amp; !ranges::bidirectional_range&lt;V&gt;)
    return iterator&lt;false&gt;(this, ranges::end(base_));
else
    return std::default_sentinel;
}}

@3@ Equivalent to:
{{source|1=
if constexpr (ranges::common_range&lt;const V&gt; &amp;&amp; ranges::sized_range&lt;const V&gt;)
{
    auto missing = (n_ - ranges::distance(base_) % n_) % n_;
    return iterator&lt;true&gt;(this, ranges::end(base_), missing);
}
else if constexpr (ranges::common_range&lt;const V&gt; &amp;&amp; !ranges::bidirectional_range&lt;const V&gt;)
    return iterator&lt;true&gt;(this, ranges::end(base_));
else
    return std::default_sentinel;
}}

===Parameters===
(none)

===Return value===
An iterator or sentinel representing the end of the {{rlpt|/|chunk_view}}, as described above.

===Example===
{{example
|code=
|output=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|chunk_view}}
{{dsc inc|cpp/ranges/dsc end}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}