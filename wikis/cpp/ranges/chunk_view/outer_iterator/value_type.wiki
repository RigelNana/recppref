{{cpp/ranges/chunk_view/outer_iterator/title|value_type}}
{{cpp/ranges/chunk_view/navbar}}

{{ddcl|header=ranges|since=c++23|
struct value_type : view_interface&lt;value_type&gt;
}}

A value type of the iterator {{rlpt|/|chunk_view::''outer-iterator''}}, formed when {{tt|V}} models {{lconcept|input_range}}.

===Data members===
{{dsc begin}}
{{dsc hitem|Member object|Definition}}
{{dsc expos mem obj|parent_|private=yes|A pointer to the "parent object" of type {{c|ranges::chunk_view*}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|{{PAGENAME}}#ctor|constructs an {{tt|value_type}}|notes={{mark c++23}}}}
{{dsc mem fun|{{PAGENAME}}#begin|title=begin|returns the beginning {{ltt|cpp/ranges/chunk_view/inner_iterator|chunk_view::''inner-iterator''}}|notes={{mark c++23}}}}
{{dsc mem fun|{{PAGENAME}}#end|title=end|returns the default sentinel|notes={{mark c++23}}}}
{{dsc mem fun|{{PAGENAME}}#size|title=size|returns the size of the view|notes={{mark c++23}}}}
{{cpp/ranges/view_interface/inherit|embedded=yes|size=invalid|front=invalid|back=invalid|operator[]=invalid|data=invalid}}
{{dsc end}}

{{anchor|ctor}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}value_type|
{{ddcl|since=c++23|1=
private:
// exposition only
constexpr explicit value_type( chunk_view&amp; parent );
}}

Constructs the {{tt|value_type}} object so that {{tti|parent_}} is initialized with {{c|std::addressof(parent)}}.

===Parameters===
{{par begin}}
{{par|parent|the {{tt|chunk_view}} object}}
{{par end}}
}}

{{anchor|begin}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}begin|
{{ddcl|since=c++23|
constexpr /*inner-iterator*/ begin() const noexcept;
}}

Equivalent to {{c|return /*inner-iterator*/(*parent_);}}.
}}

{{anchor|end}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}end|
{{ddcl|since=c++23|
constexpr std::default_sentinel_t end() const noexcept;
}}

Equivalent to {{c|return std::default_sentinel;}}.
}}

{{anchor|size}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}size|
{{ddcl|since=c++23|
constexpr auto size() const
    requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;V&gt;, ranges::iterator_t&lt;V&gt;&gt;;
}}

Returns the size of the view.

Equivalent to&lt;br&gt;{{c|
return /*to-unsigned-like*/(
    ranges::min(parent_-&gt;remainder_, ranges::end(parent_-&gt;base_) - *parent_-&gt;current_));
}}
}}

===Example===
{{todo|example}}

===References===
{{ref std c++23}}
{{ref std|title=Class chunk_view::outer-iterator::value_type|id=range.chunk.outer.value|section=26.7.28.4}}
{{ref std end}}

===See also===
{{dsc begin}}
{{dsc expos mem class|cpp/ranges/chunk_view/outer_iterator|notes={{mark c++23}}|the output ("chunk-wise") iterator type when {{c|V}} models {{lconcept|input_range}}}}
{{dsc expos mem class|cpp/ranges/chunk_view/inner_iterator|notes={{mark c++23}}|the inner ("element-wise") iterator type when {{c|V}} models {{lconcept|input_range}}}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}