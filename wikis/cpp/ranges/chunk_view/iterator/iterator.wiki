{{cpp/ranges/chunk_view/iterator/title|''iterator''}}
{{cpp/ranges/chunk_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/() = default;
}}
{{dcl|num=2|since=c++23|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires
        Const and
        std::convertible_to&lt;ranges::iterator_t&lt;V&gt;, ranges::iterator_t&lt;Base&gt;&gt; and
        std::convertible_to&lt;ranges::sentinel_t&lt;V&gt;, ranges::sentinel_t&lt;Base&gt;&gt;;
}}
{{dcl|num=3|notes={{mark expos}}|1=
private:
constexpr /*iterator*/( Parent* parent,
                        ranges::iterator_t&lt;Base&gt; current,
                        ranges::range_difference_t&lt;Base&gt; missing = 0 );
}}
{{dcl end}}

Construct an iterator.

@1@ Default constructor. [[cpp/language/value_initialization|Value-initializes]] the underlying {{rlp|/#Data members|data members}}:
* {{tti|current_}} with {{c|ranges::iterator_t&lt;Base&gt;()}},
* {{tti|end_}} with {{c|ranges::sentinel_t&lt;Base&gt;()}},
* {{tti|n_}} with {{c|0}},
* {{tti|missing_}} with {{c|0}}.

@2@ Conversion from {{c|/*iterator*/&lt;false&gt;}} to {{c|/*iterator*/&lt;true&gt;}}. Initializes the underlying {{rlp|/#Data members|data members}}:
* {{tti|current_}} with {{c|std::move(i.current_)}},
* {{tti|end_}} with {{c|std::move(i.end_)}},
* {{tti|n_}} with {{c|i.n_}},
* {{tti|missing_}} with {{c|i.missing_}}.

@3@ A private constructor which is used by {{lc|ranges::chunk_view::begin}} and {{lc|ranges::chunk_view::end}}. This constructor is not accessible to users. Initializes the underlying {{rlp|/#Data members|data members}}:
* {{tti|current_}} with {{c|current}},
* {{tti|end_}} with {{c|ranges::end(parent-&gt;base_)}},
* {{tti|n_}} with {{c|parent-&gt;n_}},
* {{tti|missing_}} with {{c|missing}}.

===Parameters===
{{par begin}}
{{par|i|an {{c|/*iterator*/&lt;false&gt;}}}}
{{par|parent|a pointer to owning {{tt|chunk_view}}}}
{{par|current|an iterator to the begin of current chunk}}
{{par|missing|a difference between expected ({{rlpi|/#Data members|n_}}) and actual size of current chunk}}
{{par end}}

===Example===
{{example
|code=
|output=
}}

{{langlinks|de|es|ja|ru|zh}}