{{title|operator+,-{{small|(ranges::chunk_view::''iterator'')}}}}
{{cpp/ranges/chunk_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i,
                                         difference_type pos )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/ operator+( difference_type pos,
                                         const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /*iterator*/ operator-( const /*iterator*/&amp; i,
                                         difference_type pos )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            const /*iterator*/&amp; j )
    requires std::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;,
                                     ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=5|since=c++23|
friend constexpr difference_type operator-( std::default_sentinel_t,
                                            const /*iterator*/&amp; i )
    requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                     ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=6|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            std::default_sentinel_t )
    requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                     ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

Performs {{rlp|/|iterator}} arithmetic or calculates the distance.

Let {{tti|current_}}, {{tti|end_}}, {{tti|n_}}, and {{tti|missing_}} be the underlying {{rlp|/#Data members|data members}}.

Equivalent to:
@1,2@ {{c|1=auto r = i; r += pos; return r;}}.
@3@ {{c|1=auto r = i; r -= pos; return r;}}.
@4@ {{c|1=return (i.current_ - j.current_ + i.missing_ - j.missing_) / i.n_;}}.
@5@ {{c|1=return /*div-ceil*/(i.end_ - i.current_, i.n_);}}.
@6@ {{c|1=return -(y - x);}}.

{{cpp/hidden friend|{{tt|chunk_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===Parameters===
{{par begin}}
{{par|i, j|the iterators}}
{{par|pos|the position relative to current location}}
{{par end}}

===Return value===
@1,2@ An incremented iterator.
@3@ A decremented iterator.
@4@ A distance (in number of elements, i.e. chunks) between given iterators.
@5,6@ A distance (in number of elements) between given iterator and sentinel.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|chunk_view}}
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}