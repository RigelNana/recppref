{{cpp/ranges/chunk_view/title|''inner-iterator''}}
{{cpp/ranges/chunk_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
class /*inner-iterator*/
}}

The return type of {{rlpt|outer_iterator/value_type#begin|chunk_view::''outer-iterator''::value_type::begin}} if {{tt|V}} models {{lconcept|input_range}}.

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|iterator_concept}}|{{c|std::input_iterator_tag}}}}
{{dsc|{{tt|difference_type}}|{{c|ranges::range_difference_t&lt;V&gt;}}}}
{{dsc|{{tt|value_type}}|{{c|ranges::range_value_t&lt;V&gt;}}}}
{{dsc end}}

===Data members===
{{dsc begin}}
{{dsc hitem|Member object|Definition}}
{{dsc expos mem obj|parent_|private=yes|A pointer to the "parent object" of type {{c|ranges::chunk_view*}}.}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|cpp/ranges/chunk_view/inner_iterator/inner_iterator|constructs an iterator|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/inner_iterator/operator{{=}}|move assigns another iterator|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/inner_iterator/base|returns an iterator to the current element|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/inner_iterator/operator*|accesses the element|notes={{mark c++23}}}}
{{dsc mem fun|cpp/ranges/chunk_view/inner_iterator/operator_inc|title=operator++|increments the iterator|notes={{mark c++23}}}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc fun|cpp/ranges/chunk_view/inner_iterator/operator_cmp|title=operator==|compares the iterator with {{lt|cpp/iterator/default_sentinel_t|default sentinel}}|notes={{mark c++23}}}}
{{dsc fun|cpp/ranges/chunk_view/inner_iterator/operator-|title=operator-|calculates the remained number of elements|notes={{mark c++23}}}}
{{dsc fun|cpp/ranges/chunk_view/inner_iterator/iter_move|casts the result of dereferencing the underlying iterator to its associated rvalue reference type|notes={{mark c++23}}}}
{{dsc fun|cpp/ranges/chunk_view/inner_iterator/iter_swap|swaps the objects pointed to by two underlying iterators|notes={{mark c++23}}}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;ranges&gt;
#include &lt;sstream&gt;

int main()
{
    auto letters = std::istringstream{"ABCDEFGHIJK"};

    auto chunks = std::ranges::istream_view&lt;char&gt;(letters)
                {{!}} std::views::chunk(4);

    for (auto chunk : chunks)
    {
        // chunk is an object of type chunk_view::outer_iterator::value_type
        std::cout &lt;&lt; '[';
        for (auto inner_iter = chunk.begin(); inner_iter != std::default_sentinel;
             ++inner_iter)
            std::cout &lt;&lt; *inner_iter;
        std::cout &lt;&lt; "] ";
    }
    std::cout &lt;&lt; '\n';
}
|output=
[ABCD] [EFGH] [IJK]
}}

===References===
{{ref std c++23}}
{{ref std|title=Class chunk_view::''inner-iterator''|id=range.chunk.inner.iter|section=26.7.28.5}}
{{ref std end}}

===See also===
{{dsc begin}}&lt;!--
{{dsc inc|cpp/ranges/chunk_view/dsc outer_iterator}}
{{dsc inc|cpp/ranges/chunk_view/dsc iterator}}--&gt;
{{dsc end}}

{{langlinks|de|es|ja|ru|zh}}