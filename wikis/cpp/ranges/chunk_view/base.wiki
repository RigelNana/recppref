{{cpp/ranges/chunk_view/title|base}}
{{cpp/ranges/chunk_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr V base() const&amp; requires std::copy_constructible&lt;V&gt;;
}}
{{dcl|num=2|since=c++23|
constexpr V base() &amp;&amp;;
}}
{{dcl end}}

Returns a copy of the underlying view.

Let {{rlpi|/#Data members|base_}} be the underlying view.

@1@ Copy constructs the result from the underlying view. Equivalent to {{c|return base_; }}
@2@ Move constructs the result from the underlying view. Equivalent to {{c|return std::move(base_); }}

===Parameters===
(none)

===Return value===
A copy of the underlying view.

===Example===
{{example
|A link to test the example online: [https://godbolt.org/z/K6KT6M6K3 Compiler Explorer].
|code=
#include &lt;print&gt;
#include &lt;ranges&gt;

int main()
{
    static constexpr auto v = {1, 2, 3, 4};
    constexpr auto w{std::ranges::chunk_view(v, 2)};
    std::println("{}", w.base());
}
|output=[1, 2, 3, 4]
}}

{{langlinks|de|es|fr|it|ja|pl|ru|zh}}