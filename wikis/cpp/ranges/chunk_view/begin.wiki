{{cpp/ranges/chunk_view/title|begin}}
{{cpp/ranges/chunk_view/navbar}}
{{dcl begin}}
{{dcl h|{{tt|V}} models only {{lconcept|input_range}}}}
{{dcl|num=1|since=c++23|
constexpr __outer_iterator begin();
}}
{{dcl h|{{tt|V}} models {{lconcept|forward_range}}}}
{{dcl|num=2|since=c++23|
constexpr auto begin() requires (!__simple_view&lt;V&gt;);
}}
{{dcl|num=3|since=c++23|
constexpr auto begin() const requires ranges::forward_range&lt;const V&gt;;
}}
{{dcl end}}

Returns an {{rlp|iterator}} to the first element of the {{tt|chunk_view}}.

@@ Let {{rlpt|/#Data members|''base_''}} denote the underlying view.

@1@ Available only if {{c|V}} models {{lconcept|input_range}}. Equivalent to:
{{source|1=
current_ = ranges::begin(base_);
remainder_ = n_;
return __outer_iterator(*this);
}}
{{rlpt|/#Data members|''current_''}}, {{rlpt|/#Data members|''remainder_''}}, and {{rlpt|/#Data members|''n_''}} are underlying exposition only data members of {{rlpt|/|chunk_view}}.

@2@ Available if {{c|V}} models {{lconcept|forward_range}}. Equivalent to: {{c|return iterator&lt;false&gt;(this, ranges::begin(base_));}}, where {{rlpt|/#Nested classes|iterator}} is exposition only nested class.

@3@ Available if {{c|V}} models {{lconcept|forward_range}}. Equivalent to: {{c|return iterator&lt;true&gt;(this, ranges::begin(base_));}}, where {{rlpt|/#Nested classes|iterator}} is exposition only nested class.

===Parameters===
(none)

===Return value===
An iterator to the first element of the {{rlpt|/|chunk_view}}, as described above.

===Example===
{{example
|code=
|output=
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|chunk_view}}
{{dsc inc|cpp/ranges/dsc begin}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}