{{cpp/chrono/title|ceil{{small|(std::chrono::duration)}}}}
{{cpp/chrono/duration/navbar}}
{{ddcl|since=c++17|header=chrono|
template&lt; class ToDuration, class Rep, class Period &gt;
constexpr ToDuration ceil( const std::chrono::duration&lt;Rep, Period&gt;&amp; d );
}}

Returns the smallest duration {{tt|t}} representable in {{tt|ToDuration}} that is greater or equal to {{c|d}}.

The function does not participate in the overload resolution unless {{tt|ToDuration}} is a specialization of {{lc|std::chrono::duration}}.

===Parameters===
{{par begin}}
{{par|d|duration to convert}}
{{par end}}

===Return value===
{{c|d}} rounded up to a duration of type {{tt|ToDuration}}.

===Possible implementation===
{{eq fun|1=
namespace detail
{
    template&lt;class&gt; inline constexpr bool is_duration_v = false;
    template&lt;class Rep, class Period&gt; inline constexpr bool is_duration_v&lt;
        std::chrono::duration&lt;Rep, Period&gt;&gt; = true;
}

template&lt;class To, class Rep, class Period,
         class = std::enable_if_t&lt;detail::is_duration_v&lt;To&gt;&gt;&gt;
constexpr To ceil(const std::chrono::duration&lt;Rep, Period&gt;&amp; d)
{
    To t = std::chrono::duration_cast&lt;To&gt;(d);
    if (t &lt; d)
        return t + To{1};
    return t;
}
}}

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::chrono_literals;
    using Min = std::chrono::minutes;

    std::cout
        &lt;&lt; std::showpos
        &lt;&lt; "ceil(+2.4min) = " &lt;&lt; std::chrono::ceil&lt;Min&gt;(+2.4min).count() &lt;&lt; "min\n"
        &lt;&lt; "ceil(-2.4min) = " &lt;&lt; std::chrono::ceil&lt;Min&gt;(-2.4min).count() &lt;&lt; "min\n"
        &lt;&lt; "ceil(+0.0min) = " &lt;&lt; std::chrono::ceil&lt;Min&gt;(+0.0min).count() &lt;&lt; "min\n";
}
|output=
ceil(+2.4min) = +3min
ceil(-2.4min) = -2min
ceil(+0.0min) = +0min
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/duration/dsc duration_cast}}
{{dsc inc|cpp/chrono/duration/dsc floor}}
{{dsc inc|cpp/chrono/duration/dsc round}}
{{dsc inc|cpp/chrono/time_point/dsc ceil}}
{{dsc inc|cpp/numeric/math/dsc ceil}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}