{{cpp/chrono/title|operator+|operator- {{small|(std::chrono::year_month_day_last)}}}}
{{cpp/chrono/year_month_day_last/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day_last
    operator+( const std::chrono::year_month_day_last&amp; ymdl,
               const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day_last
    operator+( const std::chrono::months&amp; dm,
               const std::chrono::year_month_day_last&amp; ymdl ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day_last
    operator+( const std::chrono::year_month_day_last&amp; ymdl,
               const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day_last
    operator+( const std::chrono::years&amp; dy,
               const std::chrono::year_month_day_last&amp; ymdl ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day_last
    operator-( const std::chrono::year_month_day_last&amp; ymdl,
               const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day_last
    operator-( const std::chrono::year_month_day_last&amp; ymdl,
               const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl end}}

@1,2@ Adds {{c|dm.count()}} months to the date represented by {{c|ymdl}}. The result has the same {{rlpf|accessors|year}} and {{rlpf|accessors|month}} as {{c|std::chrono::year_month(ymdl.year(), ymdl.month()) + dm}}.
@3,4@ Adds {{c|dy.count()}} years to the date represented by {{c|ymdl}}. The result is equivalent to {{c|std::chrono::year_month_day_last(ymdl.year() + dy, ymdl.month_day_last())}}.
@5@ Subtracts {{c|dm.count()}} months from the date represented by {{c|ymdl}}. Equivalent to {{c|ymdl + -dm}}.
@6@ Subtracts {{c|dy.count()}} years from the date represented by {{c|ymdl}}. Equivalent to {{c|ymdl + -dy}}.

For durations that are convertible to both {{lc|std::chrono::years}} and {{lc|std::chrono::months}}, the {{tt|years}} overloads {{v|3,4,6}} are preferred if the call would otherwise be ambiguous.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    auto ymdl{11/std::chrono::last/2020};
    std::cout &lt;&lt; ymdl &lt;&lt; '\n';

    ymdl = std::chrono::years(10) + ymdl;
    std::cout &lt;&lt; ymdl &lt;&lt; '\n';
    assert(ymdl == std::chrono::day(30)/
                   std::chrono::November/
                   std::chrono::year(2030));

    ymdl = ymdl - std::chrono::months(6);
    std::cout &lt;&lt; ymdl &lt;&lt; '\n';
    assert(ymdl == std::chrono::day(31)/
                   std::chrono::May/
                   std::chrono::year(2030));
}
|output=
2020/Nov/last
2030/Nov/last
2030/May/last
}}

{{langlinks|de|es|ja|ru|zh}}