{{cpp/chrono/title|weekday_indexed}}
{{cpp/chrono/weekday_indexed/navbar}}
{{ddcl|header=chrono|since=c++20|
class weekday_indexed;
}}

The class {{tt|weekday_indexed}} combines a {{ltt|cpp/chrono/weekday}}, representing a day of the week in the {{enwiki|proleptic Gregorian calendar}}, with a small index {{tti|n}} in the range {{closed range plain|1|5}}. It represents the first, second, third, fourth, or fifth weekday of some month.

{{tt|weekday_indexed}} is a {{named req|TriviallyCopyable}} {{named req|StandardLayoutType}}.

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/chrono/weekday_indexed/dsc constructor}}
{{dsc inc|cpp/chrono/weekday_indexed/dsc weekday}}
{{dsc inc|cpp/chrono/weekday_indexed/dsc index}}
{{dsc inc|cpp/chrono/weekday_indexed/dsc ok}}
{{dsc end}}

===Nonmember functions===
{{dsc begin}}
{{dsc inc|cpp/chrono/weekday_indexed/dsc operator cmp}}
{{dsc inc|cpp/chrono/weekday_indexed/dsc operator ltlt}}
{{dsc end}}

===Helper classes===
{{dsc begin}}
{{dsc inc|cpp/chrono/dsc formatter|weekday_indexed}}
{{dsc hash|cpp/chrono/weekday_indexed|nested=true|notes={{mark c++26}}}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::chrono;
    
    constexpr weekday_indexed wi = Friday[2];
    
    // Indexed weekday can be used at any place where chrono::day can be used:
    constexpr year_month_weekday ymwd = 2021y / August / wi;
    static_assert(ymwd == August / wi / 2021y &amp;&amp;
                  ymwd == wi / August / 2021y);
    std::cout &lt;&lt; ymwd &lt;&lt; '\n';
    
    constexpr year_month_day ymd{ymwd}; // a conversion
    static_assert(ymd == 2021y / 8 / 13);
    std::cout &lt;&lt; ymd &lt;&lt; '\n';
}
|p=true
|output=
2021/Aug/Fri[2]
2021-08-13
}}

{{langlinks|ar|cs|de|es|fr|it|ja|ko|pl|pt|ru|zh}}