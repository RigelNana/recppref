{{title|Deduction guides for {{tt|std::chrono::zoned_time}}}}
{{cpp/chrono/zoned_time/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|
zoned_time() -&gt; zoned_time&lt;std::chrono::seconds&gt;;
}}
{{dcl|since=c++20|num=2|
template&lt; class Duration &gt;
zoned_time( std::chrono::sys_time&lt;Duration&gt; )
    -&gt; zoned_time&lt;std::common_type_t&lt;Duration, std::chrono::seconds&gt;&gt;;
}}
{{dcl|since=c++20|num=3|
template&lt; class TimeZonePtrOrName &gt;
zoned_time( TimeZonePtrOrName&amp;&amp; ) -&gt; zoned_time&lt;std::chrono::seconds, /* see below */&gt;;
}}
{{dcl|since=c++20|num=4|
template&lt; class TimeZonePtrOrName, class Duration &gt;
zoned_time( TimeZonePtrOrName&amp;&amp;, std::chrono::sys_time&lt;Duration&gt; )
    -&gt; zoned_time&lt;std::common_type_t&lt;Duration, std::chrono::seconds&gt;, /* see below */&gt;;
}}
{{dcl|since=c++20|num=5|1=
template&lt; class TimeZonePtrOrName, class Duration &gt;
zoned_time( TimeZonePtrOrName&amp;&amp;, std::chrono::local_time&lt;Duration&gt;,
            std::chrono::choose = std::chrono::choose::earliest )
    -&gt; zoned_time&lt;std::common_type_t&lt;Duration, std::chrono::seconds&gt;, /* see below */&gt;;
}}
{{dcl|since=c++20|num=6|1=
template&lt; class TimeZonePtrOrName, class Duration, class TimeZonePtr2 &gt;
zoned_time( TimeZonePtrOrName&amp;&amp;, std::chrono::zoned_time&lt;Duration, TimeZonePtr2&gt;,
            std::chrono::choose = std::chrono::choose::earliest )
    -&gt; zoned_time&lt;std::common_type_t&lt;Duration, std::chrono::seconds&gt;, /* see below */&gt;;
}}
{{dcl end}}

These deduction guides normalize {{tt|Duration}} to a minimum resolution of {{lc|std::chrono::seconds}}, and provide correct handling for time zone names specified using types convertible to {{c|std::string_view}}.

@3-6@ If {{c|std::is_convertible_v&lt;TimeZonePtrOrName, std::string_view&gt;}} is {{c|true}}, the deduced second template argument is {{c|const std::chrono::time_zone*}}. Otherwise it is {{c|std::remove_cvref_t&lt;TimeZonePtrOrName&gt;}}.

{{langlinks|es|ja|ru|zh}}