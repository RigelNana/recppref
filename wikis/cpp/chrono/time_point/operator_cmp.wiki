{{title|1=operator==,!=,&lt;,&lt;=,&gt;,&gt;=,&lt;=&gt;{{small|(std::chrono::time_point)}}}}
{{cpp/chrono/time_point/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl rev multi|num=1
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator==( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator==( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=2
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator!=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|until2=c++20|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator!=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=3
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&lt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&lt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                          const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=4
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&lt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&lt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=5
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&gt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&gt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                          const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=6
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&gt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&gt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl|num=7|since=c++20|1=
template&lt; class Clock, class Dur1, std::three_way_comparable_with&lt;Dur1&gt; Dur2 &gt;
constexpr auto operator&lt;=&gt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                            const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl end}}

Compares two time points. The comparison is done by comparing the results {{lc|time_since_epoch()}} for the time points.

@1,2@ Checks if the time points {{c|lhs}} and {{c|rhs}} refer to the same time point for the given clock.

@3-6@ Compares the time points {{c|lhs}} and {{c|rhs}}.

@7@ Compares the time points {{c|lhs}} and {{c|rhs}}. The return type is deduced from {{c|1=lhs.time_since_epoch() &lt;=&gt; rhs.time_since_epoch()}}, and hence the three-way comparison result type of {{tt|Dur1}} and {{tt|Dur2}}.

{{rrev|since=c++20|1=
{{cpp/note synthesized eq}}
}}

===Parameters===
{{par begin}}
{{par|lhs, rhs|time points to compare}}
{{par end}}

===Return value===
@1@ {{c|true}} if the {{c|lhs}} and {{c|rhs}} refer to the same time point, {{c|false}} otherwise.

@2@ {{c|true}} if the {{c|lhs}} and {{c|rhs}} refer to different time points, {{c|false}} otherwise.

@3@ {{c|true}} if the {{c|lhs}} refers to time point ''before'' {{c|rhs}}, {{c|false}} otherwise.

@4@ {{c|true}} if the {{c|lhs}} refers to time point ''before'' {{c|rhs}}, or to the same time point as {{c|rhs}}, {{c|false}} otherwise.

@5@ {{c|true}} if the {{c|lhs}} refers to time point ''after'' {{c|rhs}}, {{c|false}} otherwise.

@6@ {{c|true}} if the {{c|lhs}} refers to time point ''after'' {{c|rhs}}, or to the same time point as {{c|rhs}}, {{c|false}} otherwise.

@7@ {{c|1=lhs.time_since_epoch() &lt;=&gt; rhs.time_since_epoch()}}.

{{cpp/impldef exception}}

===Notes===
Two-way comparison operators of {{tt|time_point}} were not {{c/core|constexpr}} in C++11, this was corrected in C++14.

{{langlinks|es|ja|ru|zh}}