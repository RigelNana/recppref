{{cpp/chrono/year_month_weekday/title|year|month|weekday|index|weekday_indexed}}
{{cpp/chrono/year_month_weekday/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|
constexpr std::chrono::year year() const noexcept;
}}
{{dcl|since=c++20|num=2|
constexpr std::chrono::month month() const noexcept;
}}
{{dcl|since=c++20|num=3|
constexpr std::chrono::weekday weekday() const noexcept;
}}
{{dcl|since=c++20|num=4|
constexpr unsigned index() const noexcept;
}}
{{dcl|since=c++20|num=5|
constexpr std::chrono::weekday_indexed weekday_indexed() const noexcept;
}}
{{dcl end}}

Retrieves the field values stored in this {{tt|year_month_weekday}} object.

===Return value===
@1@ Returns the stored {{lc|std::chrono::year}} value.
@2@ Returns the stored {{lc|std::chrono::month}} value.
@3@ Returns the stored {{lc|std::chrono::weekday}} value.
@4@ Returns the stored weekday index.
@5@ {{c|weekday()[index()]}}

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;

int main()
{
    constexpr auto ym{std::chrono::year(2021)/std::chrono::January};
    constexpr auto wdi{std::chrono::Wednesday[1]};
    auto ymwdi{ym/wdi};
    const auto index{ymwdi.index() + 1};
    auto weekday{ymwdi.weekday() + std::chrono::days(1)};
    ymwdi = {ymwdi.year()/ymwdi.month()/weekday[index]};
    // Second Thursday in January, 2021
    assert(std::chrono::year_month_day{ymwdi} == std::chrono::January/14/2021);
}
}}

{{langlinks|es|ja|ru|zh}}