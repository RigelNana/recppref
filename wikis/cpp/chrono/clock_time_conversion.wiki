{{cpp/chrono/title|clock_time_conversion}}
{{cpp/chrono/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|1=
template&lt; class Dest, class Source &gt;
struct clock_time_conversion {};
}}
{{dcl end}}

{{tt|std::chrono::clock_time_conversion}} is a trait that specifies how to convert a {{lc|std::chrono::time_point}} of the {{tt|Source}} clock to that of the {{tt|Dest}} clock. It does so by providing a const-callable {{tt|operator()}} that accepts an argument of type {{c|std::chrono::time_point&lt;Source, Duration&gt;}} and returns a {{c|std::chrono::time_point&lt;Dest, OtherDuration&gt;}} that represents an equivalent point in time. The duration of the returned time point is computed from the source duration in a manner that varies for each specialization. {{tt|clock_time_conversion}} is normally only used indirectly, via {{lc|std::chrono::clock_cast}}.

A program may specialize {{tt|clock_time_conversion}} if at least one of the template parameters is a user-defined clock type.

The primary template is an empty struct. The standard defines the following specializations:

{{dcl begin}}
{{dcl|since=c++20|num=1|1=
template&lt; class Clock &gt;
struct clock_time_conversion&lt;Clock, Clock&gt;;
}}
{{dcl|since=c++20|num=2|1=
template&lt;&gt;
struct clock_time_conversion&lt;std::chrono::system_clock, std::chrono::system_clock&gt;;
}}
{{dcl|since=c++20|num=3|1=
template&lt;&gt;
struct clock_time_conversion&lt;std::chrono::utc_clock, std::chrono::utc_clock&gt;;
}}
{{dcl|since=c++20|num=4|1=
template&lt;&gt;
struct clock_time_conversion&lt;std::chrono::system_clock, std::chrono::utc_clock&gt;;
}}
{{dcl|since=c++20|num=5|1=
template&lt;&gt;
struct clock_time_conversion&lt;std::chrono::utc_clock, std::chrono::system_clock&gt;;
}}
{{dcl|since=c++20|num=6|1=
template&lt; class Clock &gt;
struct clock_time_conversion&lt;Clock, std::chrono::system_clock&gt;;
}}
{{dcl|since=c++20|num=7|1=
template&lt; class Clock &gt;
struct clock_time_conversion&lt;std::chrono::system_clock, Clock&gt;;
}}
{{dcl|since=c++20|num=8|1=
template&lt; class Clock &gt;
struct clock_time_conversion&lt;Clock, std::chrono::utc_clock&gt;;
}}
{{dcl|since=c++20|num=9|1=
template&lt; class Clock &gt;
struct clock_time_conversion&lt;std::chrono::utc_clock, Clock&gt;;
}}
{{dcl end}}

@1-3@ Identity conversion: {{tt|operator()}} returns a copy of the argument.
@4,5@ Conversions between {{lc|std::chrono::sys_time}} and {{lc|std::chrono::utc_time}}: {{tt|operator()}} calls {{lc|std::chrono::utc_clock::to_sys}} and {{lc|std::chrono::utc_clock::from_sys}}, respectively.
@6,7@ Conversions to and from {{lc|std::chrono::sys_time}} when {{tt|Clock}} supports {{tt|from_sys}} and {{tt|to_sys}}: {{tt|operator()}} calls {{c|Clock::to_sys}} and {{c|Clock::from_sys}}, respectively.
@8,9@ Conversions to and from {{lc|std::chrono::utc_time}} when {{tt|Clock}} supports {{tt|from_utc}} and {{tt|to_utc}}: {{tt|operator()}} calls {{c|Clock::to_utc}} and {{c|Clock::from_utc}}, respectively.

===Member functions===

Each specialization has an implicitly-declared default constructor, copy constructor, move constructor, copy assignment operator, move assignment operator, and destructor.

{{member|{{small|std::chrono::clock_time_conversion::}}operator()|2=
{{dcl begin}}
{{dcl|num=1|notes={{mark|member of specialization {{v|1}}}}|1=
template&lt; class Duration &gt;
std::chrono::time_point&lt;Clock, Duration&gt;
    operator()( const std::chrono::time_point&lt;Clock, Duration&gt;&amp; t ) const;
}}
{{dcl|num=2|notes={{mark|member of specialization {{v|2}}}}|1=
template&lt; class Duration &gt;
std::chrono::sys_time&lt;Duration&gt;
    operator()( const std::chrono::sys_time&lt;Duration&gt; &amp; t ) const;
}}
{{dcl|num=3|notes={{mark|member of specialization {{v|3}}}}|1=
template&lt; class Duration &gt;
std::chrono::utc_time&lt;Duration&gt;
    operator()( const std::chrono::utc_time&lt;Duration&gt;&amp; t ) const;
}}
{{dcl|num=4|notes={{mark|member of specialization {{v|4}}}}|1=
template&lt; class Duration &gt;
std::chrono::sys_time&lt;Duration&gt;
    operator()( const std::chrono::utc_time&lt;Duration&gt;&amp; t ) const;
}}
{{dcl|num=5|notes={{mark|member of specialization {{v|5}}}}|1=
template&lt; class Duration &gt;
std::chrono::utc_time&lt;Duration&gt;
    operator()( const std::chrono::sys_time&lt;Duration&gt;&amp; t ) const;
}}
{{dcl|num=6|notes={{mark|member of specialization {{v|6}}}}|1=
template&lt; class Duration &gt;
auto operator()( const std::chrono::sys_time&lt;Duration&gt;&amp; t ) const
    -&gt; decltype(Clock::from_sys(t));
}}
{{dcl|num=7|notes={{mark|member of specialization {{v|7}}}}|1=
template&lt; class Duration &gt;
auto operator()( const std::chrono::time_point&lt;SourceClock, Duration&gt;&amp; t ) const
    -&gt; decltype(Clock::to_sys(t));
}}
{{dcl|num=8|notes={{mark|member of specialization {{v|8}}}}|1=
template&lt; class Duration &gt;
auto operator()( const std::chrono::utc_time&lt;Duration&gt;&amp; t ) const
    -&gt; decltype(Clock::from_utc(t));
}}
{{dcl|num=9|notes={{mark|member of specialization {{v|9}}}}|1=
template&lt; class Duration &gt;
auto operator()( const std::chrono::time_point&lt;Clock, Duration&gt;&amp; t ) const
    -&gt; decltype(Clock::to_utc(t));
}}
{{dcl end}}

Converts the argument {{lc|std::chrono::time_point}} to the destination clock.

@1-3@ Identity conversion. Returns {{tt|t}} unchanged.
@4@ Returns {{c|std::chrono::utc_clock::to_sys(t)}}.
@5@ Returns {{c|std::chrono::utc_clock::from_sys(t)}}.
@6@ Returns {{c|Clock::from_sys(t)}}. {{cpp/enable_if|the expression {{c|Clock::from_sys(t)}} is well-formed}}. The program is ill-formed if {{c|Clock::from_sys(t)}} does not return {{c|std::chrono::time_point&lt;Clock, Duration&gt;}} where {{tt|Duration}} is some valid specialization of {{lc|std::chrono::duration}}.
@7@ Returns {{c|Clock::to_sys(t)}}. {{cpp/enable_if|the expression {{c|Clock::to_sys(t)}} is well-formed}}. The program is ill-formed if {{c|Clock::to_sys(t)}} does not return {{c|std::chrono::sys_time&lt;Duration&gt;}} where {{tt|Duration}} is some valid specialization of {{lc|std::chrono::duration}}.
@8@ Returns {{c|Clock::from_utc(t)}}. {{cpp/enable_if|the expression {{c|Clock::from_utc(t)}} is well-formed}}. The program is ill-formed if {{c|Clock::from_utc(t)}} does not return {{c|std::chrono::time_point&lt;Clock, Duration&gt;}} where {{tt|Duration}} is some valid specialization of {{lc|std::chrono::duration}}.
@9@ Returns {{c|Clock::to_utc(t)}}. {{cpp/enable_if|the expression {{c|Clock::to_utc(t)}} is well-formed}}. The program is ill-formed if {{c|Clock::to_utc(t)}} does not return {{c|std::chrono::utc_time&lt;Duration&gt;}} where {{tt|Duration}} is some valid specialization of {{lc|std::chrono::duration}}.

===Parameters===
{{par begin}}
{{par|t|time point to convert}}
{{par end}}

===Return value===
The result of the conversion as described above:
@1-3@ {{c|t}}.
@4@ {{c|std::chrono::utc_clock::to_sys(t)}}.
@5@ {{c|std::chrono::utc_clock::from_sys(t)}}.
@6@ {{c|Clock::from_sys(t)}}.
@7@ {{c|Clock::to_sys(t)}}.
@8@ {{c|Clock::from_utc(t)}}.
@9@ {{c|Clock::to_utc(t)}}.
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/dsc clock_cast}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}