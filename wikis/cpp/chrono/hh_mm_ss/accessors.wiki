{{cpp/chrono/hh_mm_ss/title|is_negative|hours|minutes|seconds|subseconds}}
{{cpp/chrono/hh_mm_ss/navbar}}
{{dcl begin}}
{{dcl|num=1|
constexpr bool is_negative() const noexcept;
}}
{{dcl|num=2|
constexpr std::chrono::hours hours() const noexcept;
}}
{{dcl|num=3|
constexpr std::chrono::minutes minutes() const noexcept;
}}
{{dcl|num=4|
constexpr std::chrono::seconds seconds() const noexcept;
}}
{{dcl|num=5|
constexpr precision subseconds() const noexcept;
}}
{{dcl end}}

Obtains the components of the stored "broken down" time.

===Return value===
Let {{tt|d}} be the represented duration:
@1@ {{c|true}} if {{tt|d}} is negative, {{c|false}} otherwise.
@2@ {{c|std::chrono::duration_cast&lt;std::chrono::hours&gt;(abs(d))}}
@3@ {{c|std::chrono::duration_cast&lt;std::chrono::minutes&gt;(abs(d) - hours())}}
@4@ {{c|std::chrono::duration_cast&lt;std::chrono::seconds&gt;(abs(d) - hours() - minutes())}}
@5@ {{c|abs(d) - hours() - minutes() - seconds()}} if {{c|std::chrono::treat_as_floating_point_v&lt;precision::rep&gt;}} is {{c|true}}; otherwise {{c|std::chrono::duration_cast&lt;precision&gt;(abs(d) - hours() - minutes() - seconds())}}.

===Example===
{{example}}

{{langlinks|es|ja|ru|zh}}