{{cpp/chrono/hh_mm_ss/title|hh_mm_ss}}
{{cpp/chrono/hh_mm_ss/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
constexpr hh_mm_ss() noexcept : hh_mm_ss{Duration::zero()} {}
}}
{{dcl|num=2|
constexpr explicit hh_mm_ss( Duration d );
}}
{{dcl end}}
Constructs a {{tt|hh_mm_ss}} object.

@1@ Constructs a {{tt|hh_mm_ss}} object corresponding to {{tt|Duration::zero()}}.
@2@ Constructs a {{tt|hh_mm_ss}} object corresponding to {{c|d}}:
* {{lc|is_negative()}} returns {{c|d &lt; Duration::zero()}}.
* {{lc|hours()}} returns {{c|std::chrono::duration_cast&lt;std::chrono::hours&gt;(abs(d))}}.
* {{lc|minutes()}} returns {{c|std::chrono::duration_cast&lt;std::chrono::minutes&gt;(abs(d) - hours())}}.
* {{lc|seconds()}} returns&lt;br&gt;{{c|std::chrono::duration_cast&lt;std::chrono::seconds&gt;(abs(d) - hours() - minutes())}}.
* {{lc|subseconds()}} returns {{c|abs(d) - hours() - minutes() - seconds()}} if {{c|std::chrono::treat_as_floating_point_v&lt;precision::rep&gt;}} is {{c|true}}; otherwise it returns {{c|std::chrono::duration_cast&lt;precision&gt;(abs(d) - hours() - minutes() - seconds())}}.

===Parameters===
{{par begin}}
{{par|d|the duration to be broken down}}
{{par end}}

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;print&gt;
 
int main()
{
    std::println("Default constructor: {}", std::chrono::hh_mm_ss&lt;std::chrono::minutes&gt;{});

    std::chrono::time_point now = std::chrono::system_clock::now();
    std::chrono::hh_mm_ss time_of_day{now - std::chrono::floor&lt;std::chrono::days&gt;(now)};
    std::println("The time of day is: {}", time_of_day);
}
|p=true
|output=
Default constructor: 00:00:00
The time of day is: 12:13:14.151617189
}}

{{langlinks|es|ja|ru|zh}}