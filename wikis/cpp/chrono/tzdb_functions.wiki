{{cpp/chrono/title|get_tzdb_list|get_tzdb|remote_version|reload_tzdb}}
{{cpp/chrono/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|1=
std::chrono::tzdb_list&amp; get_tzdb_list();
}}
{{dcl|since=c++20|num=2|1=
const std::chrono::tzdb&amp; get_tzdb();
}}
{{dcl|since=c++20|num=3|1=
std::string remote_version();
}}
{{dcl|since=c++20|num=4|1=
const std::chrono::tzdb&amp; reload_tzdb();
}}
{{dcl end}}

These functions provide access to the program-wide time zone database. 

@1@ Returns a reference to the global {{lc|std::chrono::tzdb_list}} singleton. If this is the first access to the database, initialize the database. After the initialization, the database will hold a single initialized {{lc|std::chrono::tzdb}} object. This function is thread-safe: concurrent calls to this function from multiple threads do not introduce a data race.
@2@ Returns a reference to the first {{lc|std::chrono::tzdb}} object held by the {{tt|tzdb_list}} singleton. Equivalent to {{c|std::chrono::get_tzdb_list().front()}}.
@3@ Returns a string containing the latest remote database version.
@4@ If {{c|remote_version() !{{=}} get_tzdb().version}}, pushes a new {{tt|tzdb}} object representing the remote database to the front of the {{tt|tzdb_list}} singleton referenced by {{tt|get_tzdb_list()}}. Otherwise there are no effects. No references, pointers or iterators are invalidated. Calling this function concurrently with {{c|get_tzdb_list().front()}} or {{c|get_tzdb_list().erase_after()}}  does not introduce a data race.

=== Exceptions ===
@1@ {{lc|std::runtime_error}} if for any reason a reference to a {{tt|tzdb_list}} containing one or more valid {{tt|tzdb}} cannot be returned.

=== Return value ===
@1@ A reference to the global {{lc|std::chrono::tzdb_list}} singleton.
@2@ {{c|std::chrono::get_tzdb_list().front()}}.
@3@ A string containing the latest remote database version.
@4@ {{c|std::chrono::get_tzdb_list().front()}} (after any update made by this function).

{{langlinks|es|ja|ru|zh}}