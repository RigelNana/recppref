{{cpp/chrono/weekday/title|1=ok}}
{{cpp/chrono/weekday/navbar}}
{{ddcl|since=c++20|
constexpr bool ok() const noexcept;
}}
Checks if the weekday value stored in {{c|*this}} is in the valid range, i.e., {{closed range|0|6}}.

===Return value===
{{c|true}} if the weekday value stored in {{c|*this}} is in the range {{closed range|0|6}}. Otherwise {{c|false}}.

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;string&gt;

struct weekday_ok : std::numpunct&lt;char&gt;
{
    std::string do_truename()  const override { return " (is valid weekday)"; }
    std::string do_falsename() const override { return " (is not valid weekday)"; }
};

int main()
{
    std::cout.imbue(std::locale(std::cout.getloc(), new weekday_ok));
    std::cout &lt;&lt; std::boolalpha;

    for (const unsigned u : {0 /* Sun */, 1 /* Mon */, 6, 7 /* Sun */, 8, 9})
    {
        const std::chrono::weekday wd{u};
        std::cout &lt;&lt; "u: " &lt;&lt; u &lt;&lt; "; wd: " &lt;&lt; wd.c_encoding() &lt;&lt; wd.ok() &lt;&lt; '\n';
    }
}
|output=
u: 0; wd: 0 (is valid weekday)
u: 1; wd: 1 (is valid weekday)
u: 6; wd: 6 (is valid weekday)
u: 7; wd: 0 (is valid weekday)
u: 8; wd: 8 (is not valid weekday)
u: 9; wd: 9 (is not valid weekday)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/weekday/dsc encoding}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}