{{cpp/chrono/weekday/title|operator+{{=}}|operator-{{=}}}}
{{cpp/chrono/weekday/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|1=
constexpr std::chrono::weekday&amp; operator+=( const std::chrono::days&amp; d ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::chrono::weekday&amp; operator-=( const std::chrono::days&amp; d ) noexcept;
}}
{{dcl end}}

Adds or subtracts {{c|d.count()}} from the weekday value, reducing the result modulo 7 to an integer in the range {{closed range|0|6}}.
@1@ Performs {{c|1=*this = *this + d;}}.
@2@ Performs {{c|1=*this = *this - d;}}.

===Return value===
A reference to this {{tt|weekday}} after modification.

===Notes===
After a call to one of these functions, {{lc|ok()}} is always true if no overflow occurred during the operation.

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;
 
int main()
{
    std::cout &lt;&lt; std::boolalpha;
 
    std::chrono::weekday wd{5}; // Friday is 5
    wd += std::chrono::days(2);
    std::cout &lt;&lt; (wd == std::chrono::weekday(0)) &lt;&lt; ' '
              &lt;&lt; (wd == std::chrono::Sunday) &lt;&lt; ' ';
 
    wd -= std::chrono::days(3);
    std::cout &lt;&lt; (wd == std::chrono::weekday(4)) &lt;&lt; ' '
              &lt;&lt; (wd == std::chrono::Thursday) &lt;&lt; ' ';
 
    wd = std::chrono::Wednesday;
    wd += std::chrono::days{8}; // ((3 += 8 == 11) % 7) == 4;
    std::cout &lt;&lt; (wd == std::chrono::Thursday) &lt;&lt; ' ';
 
    wd -= (std::chrono::Sunday - std::chrono::Tuesday); // -= -2
    // (4 -= -2) == 6
    std::cout &lt;&lt; (wd == std::chrono::Saturday) &lt;&lt; '\n';
}
|output=
true true true true true true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/weekday/dsc operator_inc dec}}
{{dsc inc|cpp/chrono/weekday/dsc operator_arith 2}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}