{{cpp/chrono/title|1=operator=={{small|(std::chrono::weekday)}}}}
{{cpp/chrono/weekday/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|1=
constexpr bool operator==( const std::chrono::weekday&amp; x,
                           const std::chrono::weekday&amp; y ) noexcept;
}}
{{dcl end}}

Compare the two {{lc|std::chrono::weekday}} {{c|x}} and {{c|y}}.

{{cpp/note synthesized eq}}

===Return value===
{{c|1=x.c_encoding() == y.c_encoding()}}

===Notes===
{{tt|weekday}} does not support the {{tt|&lt;}}, {{tt|1=&lt;=}}, {{tt|&gt;}} and {{tt|1=&gt;=}} operators because there is no universal consensus on which day is the first day of the week.

===Example===
{{example
|code=
#include &lt;chrono&gt;

int main()
{
    using namespace std::literals;
 
    constexpr std::chrono::weekday wd1{2};
    constexpr std::chrono::weekday wd2{std::chrono::Friday};
    static_assert(wd1 != wd2);

    // 13 January 1313 is a Friday
    constexpr std::chrono::weekday wd3{1313y/1/13d};
    static_assert(wd2 == wd3);
}
}}

{{langlinks|es|ja|ru|zh}}