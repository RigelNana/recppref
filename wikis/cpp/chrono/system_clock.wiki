{{cpp/chrono/title|system_clock}}
{{cpp/chrono/system_clock/navbar}}
{{ddcl|header=chrono|since=c++11|1=
class system_clock;
}}

Class {{tt|std::chrono::system_clock}} represents the system-wide real time wall clock.

It may not be monotonic: on most systems, the system time can be adjusted at any moment. It is the only C++ clock that has the ability to map its time points to C-style time.

{{tt|std::chrono::system_clock}} meets the requirements of {{named req|TrivialClock}}.

{{rrev multi|until1=c++20|rev1=
The epoch of {{tt|system_clock}} is unspecified, but most implementations use Unix Time (i.e., time since 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970, not counting leap seconds).
|rev2=
{{tt|system_clock}} measures Unix Time (i.e., time since 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970, not counting leap seconds).
}}

{{cpp/chrono/clock time point family}}

{{cpp/chrono/clock member types}}

{{cpp/chrono/clock is steady}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/chrono/system_clock/dsc now}}
{{dsc inc|cpp/chrono/system_clock/dsc to_time_t}}
{{dsc inc|cpp/chrono/system_clock/dsc from_time_t}}
{{dsc end}}

===Notes===
The {{tt|system_clock}}'s time value can be internally adjusted at any time by the operating system, for example due to NTP synchronization or the user changing the system's clock. Daylight Saving Time and time zone changes, however, do not affect it since it is based on the [https://en.wikipedia.org/wiki/Coordinated_Universal_Time UTC] time-zone.

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/dsc steady_clock}}
{{dsc inc|cpp/chrono/dsc high_resolution_clock}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}