{{cpp/title|n=literals::chrono_literals::|operator""h}}
{{cpp/chrono/duration/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|num=1|since=c++14|
constexpr std::chrono::hours
    operator""h( unsigned long long hrs );
}}
{{dcl|num=2|since=c++14|
constexpr std::chrono::duration&lt;/*unspecified*/, std::ratio&lt;3600,1&gt;&gt;
    operator""h( long double hrs );
}}
{{dcl end}}

Forms a {{lc|std::chrono::duration}} literal representing hours.

@1@ Integer literal, returns exactly {{c|std::chrono::hours(hrs)}}.
@2@ Floating-point literal, returns a floating-point duration equivalent to {{lc|std::chrono::hours}}.

===Parameters===
{{par begin}}
{{par|hrs|the number of hours}}
{{par end}}

===Return value===
The {{lc|std::chrono::duration}} literal.

===Possible implementation===
{{eq fun
|1=
constexpr std::chrono::hours operator""h(unsigned long long h)
{
    return std::chrono::hours(h);
}

constexpr std::chrono::duration&lt;long double, ratio&lt;3600,1&gt;&gt; operator""h(long double h)
{
    return std::chrono::duration&lt;long double, std::ratio&lt;3600,1&gt;&gt;(h);
}
}}

===Notes===
{{cpp/chrono/chrono_literals_namespace}}

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::chrono_literals;
    auto day = 24h;
    auto halfhour = 0.5h;
    std::cout &lt;&lt; "one day is " &lt;&lt; day.count() &lt;&lt; " hours (" &lt;&lt; day &lt;&lt; ")\n"
              &lt;&lt; "half an hour is " &lt;&lt; halfhour.count() &lt;&lt; " hours ("
              &lt;&lt; halfhour &lt;&lt; ")\n";
}
|output=
one day is 24 hours (24h)
half an hour is 0.5 hours (0.5h)
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/duration/dsc constructor}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}