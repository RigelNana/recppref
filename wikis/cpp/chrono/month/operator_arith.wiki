{{cpp/chrono/month/title|operator+{{=}}|operator-{{=}}}}
{{cpp/chrono/month/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|1=
constexpr std::chrono::month&amp; operator+=( const std::chrono::months&amp; m ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::chrono::month&amp; operator-=( const std::chrono::months&amp; m ) noexcept;
}}
{{dcl end}}

Adds or subtracts {{c|m.count()}} from the month value, reducing the result modulo 12 to an integer in the range {{closed range|1|12}}.
@1@ Performs {{c|1=*this = *this + m;}}.
@2@ Performs {{c|1=*this = *this - m;}}.

===Return value===
A reference to this {{tt|month}} after modification.

===Notes===
After a call to one of these functions, {{rlpf|ok}} is always {{c|true}} if no overflow occurred during the operation.

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::boolalpha;

    std::chrono::month m{6};
    m += std::chrono::months(2);
    std::cout &lt;&lt; (m == std::chrono::month(8)) &lt;&lt; ' '
              &lt;&lt; (m == std::chrono::August) &lt;&lt; ' ';

    m -= std::chrono::months(3);
    std::cout &lt;&lt; (m == std::chrono::month(5)) &lt;&lt; ' '
              &lt;&lt; (m == std::chrono::May) &lt;&lt; ' ';
    
    m = std::chrono::October;
    m += std::chrono::months{8}; // ((10 += 8 == 18) % 12) == 6;
    std::cout &lt;&lt; (m == std::chrono::June) &lt;&lt; ' ';

    m -= std::chrono::months{std::chrono::December - std::chrono::February}; // -= 10
    // (6 -= 10) == -4; -4 % 12 == (12 - 4) == 8
    std::cout &lt;&lt; (m == std::chrono::August) &lt;&lt; '\n';
}
|output=true true true true true true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/month/dsc operator_inc dec}}
{{dsc inc|cpp/chrono/month/dsc operator_arith 2}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}