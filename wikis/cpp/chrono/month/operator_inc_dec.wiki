{{cpp/chrono/month/title|operator++|operator--}}
{{cpp/chrono/month/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|
constexpr std::chrono::month&amp; operator++() noexcept;
}}
{{dcl|since=c++20|num=2|
constexpr std::chrono::month operator++( int ) noexcept;
}}
{{dcl|since=c++20|num=3|
constexpr std::chrono::month&amp; operator--() noexcept;
}}
{{dcl|since=c++20|num=4|
constexpr std::chrono::month operator--( int ) noexcept;
}}
{{dcl end}}

Adds or subtracts 1 from the month value, reducing the result modulo 12 to an integer in the range {{closed range|1|12}}.
@1,2@ Performs {{c|1=*this += std::chrono::months{1};}}.
@3,4@ Performs {{c|1=*this -= std::chrono::months{1};}}.

===Parameters===
(none)

===Return value===
@1,3@ A reference to this {{tt|month}} after modification.
@2,4@ A copy of the {{tt|month}} made before modification.

===Notes===
After a call to one of these functions, {{c|ok()}} is always {{c|true}}.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    std::chrono::month m{6};

    ++m;
    assert(m == std::chrono::month(7));

    --m;
    assert(m == std::chrono::month(6));

    m = std::chrono::December;
    m++; // rounds up to January
    assert(m.ok());
    std::cout &lt;&lt; unsigned(m) &lt;&lt; '\n';

    m = std::chrono::January;
    m--; // rounds down to December
    assert(m.ok());
    std::cout &lt;&lt; unsigned(m) &lt;&lt; '\n';
}
|output=
1
12
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/month/dsc operator_arith}}
{{dsc inc|cpp/chrono/month/dsc operator_arith 2}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}