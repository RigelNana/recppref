{{cpp/title|mktime}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|
std::time_t mktime( std::tm* time );
}}

Converts local calendar time to a time since epoch as a {{lc|std::time_t}} object. {{c|time-&gt;tm_wday}} and {{c|time-&gt;tm_yday}} are ignored. The values in {{c|time}} are permitted to be outside their normal ranges.

A negative value of {{c|time-&gt;tm_isdst}} causes {{tt|mktime}} to attempt to determine if Daylight Saving Time was in effect.

If the conversion is successful, the {{c|time}} object is modified. All fields of {{c|time}} are updated to fit their proper ranges. {{c|time-&gt;tm_wday}} and {{c|time-&gt;tm_yday}} are recalculated using information available in other fields.

===Parameters===
{{par begin}}
{{par|time|pointer to a {{lc|std::tm}} object specifying local calendar time to convert}}
{{par end}}

===Return value===
Time since epoch as a {{lc|std::time_t}} object on success or {{c|-1}} if {{c|time}} cannot be represented as a {{lc|std::time_t}} object.

===Notes===
If the {{lc|std::tm}} object was obtained from {{lc|std::get_time}} or the POSIX [https://pubs.opengroup.org/onlinepubs/009695399/functions/strptime.html {{tt|strptime}}], the value of {{tt|tm_isdst}} is indeterminate, and needs to be set explicitly before calling {{tt|mktime}}.

===Example===
{{example
|Construct a local time explicitly. 
|code=
#include &lt;ctime&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
 
int main()
{
    setenv("TZ", "/usr/share/zoneinfo/America/Los_Angeles", 1); // POSIX-specific
 
    std::tm tm{}; // Zero initialise
    tm.tm_year = 2020 - 1900; // 2020
    tm.tm_mon = 2 - 1; // February
    tm.tm_mday = 15; // 15th
    tm.tm_hour = 10;
    tm.tm_min = 15;
    tm.tm_isdst = 0; // Not daylight saving
    std::time_t t = std::mktime(&amp;tm); 
    std::tm local = *std::localtime(&amp;t);
 
    std::cout &lt;&lt; "local: " &lt;&lt; std::put_time(&amp;local, "%c %Z") &lt;&lt; '\n';
}
|p=true
|output=
local: Sat Feb 15 10:15:00 2020 PST
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc localtime}}
{{dsc see c|c/chrono/mktime}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pl|pt|ru|zh}}