{{cpp/title|asctime}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|
char* asctime( const std::tm* time_ptr );
}}

Converts given calendar time {{lc|std::tm}} to a textual representation of the following fixed 25-character form: {{c|Www Mmm dd hh:mm:ss yyyy\n}}.
*{{tt|Www}} - three-letter English abbreviated day of the week from {{c|time_ptr-&gt;tm_wday}}, one of {{tt|Mon}}, {{tt|Tue}}, {{tt|Wed}}, {{tt|Thu}}, {{tt|Fri}}, {{tt|Sat}}, {{tt|Sun}}.
*{{tt|Mmm}} - three-letter English abbreviated month name from {{c|time_ptr-&gt;tm_mon}}, one of {{tt|Jan}}, {{tt|Feb}}, {{tt|Mar}}, {{tt|Apr}}, {{tt|May}}, {{tt|Jun}}, {{tt|Jul}}, {{tt|Aug}}, {{tt|Sep}}, {{tt|Oct}}, {{tt|Nov}}, {{tt|Dec}}.
*{{tt|dd}} - 2-digit day of the month from {{c|timeptr-&gt;tm_mday}} as if printed by {{lc|sprintf}} using {{c|%2d}}.
*{{tt|hh}} - 2-digit hour from {{c|timeptr-&gt;tm_hour}} as if printed by {{lc|sprintf}} using {{c|%.2d}}.
*{{tt|mm}} - 2-digit minute from {{c|timeptr-&gt;tm_min}} as if printed by {{lc|sprintf}} using {{c|%.2d}}.
*{{tt|ss}} - 2-digit second from {{c|timeptr-&gt;tm_sec}} as if printed by {{lc|sprintf}} using {{c|%.2d}}.
*{{tt|yyyy}} - 4-digit year from {{c|timeptr-&gt;tm_year + 1900}} as if printed by {{lc|sprintf}} using {{c|%4d}}.

The behavior is undefined if any member of {{c|*time_ptr}} is outside its normal range.

The behavior is undefined if the calendar year indicated by {{c|time_ptr-&gt;tm_year}} has more than 4 digits or is less than the year 1000.

The function does not support localization, and the newline character cannot be removed.

The function modifies static storage and is not thread-safe.

===Parameters===
{{par begin}}
{{par|time_ptr|pointer to a {{lc|std::tm}} object specifying the time to print}}
{{par end}}

===Return value===
Pointer to a static null-terminated character string holding the textual representation of date and time. The string may be shared between {{tt|std::asctime}} and {{lc|std::ctime}}, and may be overwritten on each invocation of any of those functions.

===Notes===
This function returns a pointer to static data and is not thread-safe. POSIX marks this function obsolete and recommends locale-dependent {{lc|std::strftime}} instead. In {{lc|std::locale}}{{tt|("C")}} the {{lc|std::strftime}} format string {{c|"%c\n"}} will be an exact match to {{tt|std::asctime}} output, while in other locales the format string {{c|"%a %b %e %H:%M:%S %Y\n"}} will be a potentially closer but not always exact match.

POSIX limits undefined behaviors only to the cases when the output string would be longer than 25 characters, when {{tt|timeptr-&gt;tm_wday}} or {{tt|timeptr-&gt;tm_mon}} are not within the expected ranges, or when {{tt|timeptr-&gt;tm_year}} exceeds {{c|INT_MAX-1990}}.

Some implementations handle {{c|1=timeptr-&gt;tm_mday == 0}} as meaning the last day of the preceding month.

===Example===
{{example
|code=
#include &lt;ctime&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;

int main()
{
    const std::time_t now = std::time(nullptr);

    for (const char* localeName : {"C", "en_US.utf8", "de_DE.utf8", "ja_JP.utf8"})
    {
        std::cout &lt;&lt; "locale " &lt;&lt; localeName &lt;&lt; ":\n" &lt;&lt; std::left;
        std::locale::global(std::locale(localeName));

        std::cout &lt;&lt; std::setw(40) &lt;&lt; "    asctime" &lt;&lt; std::asctime(std::localtime(&amp;now));

        // strftime output for comparison:
        char buf[64];
        if (strftime(buf, sizeof buf, "%c\n", std::localtime(&amp;now)))
            std::cout &lt;&lt; std::setw(40) &lt;&lt; "    strftime %c" &lt;&lt; buf;

        if (strftime(buf, sizeof buf, "%a %b %e %H:%M:%S %Y\n", std::localtime(&amp;now)))
            std::cout &lt;&lt; std::setw(40) &lt;&lt; "    strftime %a %b %e %H:%M:%S %Y" &lt;&lt; buf;

        std::cout &lt;&lt; '\n';
    }
}
|p=true
|output=
locale C:
    asctime                             Wed Nov  4 00:45:01 2020
    strftime %c                         Wed Nov  4 00:45:01 2020
    strftime %a %b %e %H:%M:%S %Y       Wed Nov  4 00:45:01 2020

locale en_US.utf8:
    asctime                             Wed Nov  4 00:45:01 2020
    strftime %c                         Wed 04 Nov 2020 12:45:01 AM UTC
    strftime %a %b %e %H:%M:%S %Y       Wed Nov  4 00:45:01 2020

locale de_DE.utf8:
    asctime                             Wed Nov  4 00:45:01 2020
    strftime %c                         Mi 04 Nov 2020 00:45:01 UTC
    strftime %a %b %e %H:%M:%S %Y       Mi Nov  4 00:45:01 2020

locale ja_JP.utf8:
    asctime                             Wed Nov  4 00:45:01 2020
    strftime %c                         2020年11月04日 00時45分01秒
    strftime %a %b %e %H:%M:%S %Y       水 11月  4 00:45:01 2020
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc ctime}}
{{dsc inc|cpp/chrono/c/dsc strftime}}
{{dsc inc|cpp/io/manip/dsc put_time}}
{{dsc see c|c/chrono/asctime}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|tr|ru|zh}}