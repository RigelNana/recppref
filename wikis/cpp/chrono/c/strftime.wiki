{{cpp/title|strftime}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|
std::size_t strftime( char* str, std::size_t count, const char* format, const std::tm* tp );
}}

Converts the date and time information from a given calendar time {{c|tp}} to a null-terminated multibyte character string {{c|str}} according to [[#Format string|format string]] {{c|format}}. Up to {{c|count}} bytes are written.

===Parameters===
{{par begin}}
{{par|str|pointer to the first element of the char array for output}}
{{par|count|maximum number of bytes to write}}
{{par|format|pointer to a null-terminated multibyte character string specifying the [[#Format string|format of conversion]]}}
{{par|tp|pointer to the object containing date and time information to be converted}}
{{par end}}

===Format string===
{{cpp/chrono/c/strftime format}}

===Return value===
The number of bytes written into the character array pointed to by {{c|str}} not including the terminating {{c|'\0'}} on success. If {{c|count}} was reached before the entire string could be stored, {{c|0}} is returned and the contents are indeterminate.

===Example===
{{example
|code=
#include &lt;ctime&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;locale&gt;

void utcExample()
{
    // Example of the very popular RFC 3339 format UTC time
    std::time_t time = std::time({});
    char timeString[std::size("yyyy-mm-ddThh:mm:ssZ")];
    std::strftime(std::data(timeString), std::size(timeString),
                  "%FT%TZ", std::gmtime(&amp;time));
    std::cout &lt;&lt; timeString &lt;&lt; '\n';
}

int main()
{
    std::time_t t = std::time(nullptr);
    char mbstr[100];
    
    if (std::strftime(mbstr, sizeof(mbstr), "%A %c", std::localtime(&amp;t)))
        std::cout &lt;&lt; mbstr &lt;&lt; '\n';

    std::locale::global(std::locale("ja_JP.utf8"));
    if (std::strftime(mbstr, sizeof(mbstr), "%A %c", std::localtime(&amp;t)))
        std::cout &lt;&lt; mbstr &lt;&lt; '\n';

    utcExample();
}
|p=true
|output=
Tuesday Tue Sep  7 19:40:35 2021
火曜日 2021年09月07日 19時40分35秒
2021-09-07T19:40:35Z
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc asctime}}
{{dsc inc|cpp/chrono/c/dsc ctime}}
{{dsc inc|cpp/chrono/c/dsc wcsftime}}
{{dsc inc|cpp/io/manip/dsc put_time}}
{{dsc inc|cpp/chrono/dsc formatter|hh_mm_ss}}
{{dsc see c|c/chrono/strftime}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}