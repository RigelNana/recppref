{{cpp/title|tm}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|
struct tm;
}}

Structure holding a calendar date and time broken down into its components.

===Member objects===
{{dsc begin}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_sec|seconds after the minute &amp;ndash; {{rev inl|until=c++11|{{closed range|0|61}}}} {{rev inl|since=c++11|{{closed range|0|60}}}}&lt;ref name="leapsecond" group="note"&gt;Range allows for a positive leap second. Two leap seconds in the same minute are not allowed (the range {{closed range|0|61}} was a defect introduced in C89 and corrected in C99).&lt;/ref&gt;}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_min|minutes after the hour &amp;ndash; {{closed range|0|59}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_hour|hours since midnight &amp;ndash; {{closed range|0|23}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_mday|day of the month &amp;ndash; {{closed range|1|31}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_mon|months since January &amp;ndash; {{closed range|0|11}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_year|years since 1900}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_wday|days since Sunday &amp;ndash; {{closed range|0|6}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_yday|days since January 1 &amp;ndash; {{closed range|0|365}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_isdst|Daylight Saving Time flag. The value is positive if DST is in effect, zero if not and negative if no information is available.}}
{{dsc end}}

&lt;references group="note"/&gt;

===Notes===
BSD, GNU and musl C library support two additional members, which are standardized in [https://pubs.opengroup.org/onlinepubs/9799919799/basedefs/time.h.html POSIX.1-2024].

{{dsc begin}}
{{dsc mem obj|nolink=true|{{dsc small|long}} tm_gmtoff|seconds east of UTC}}
{{dsc mem obj|nolink=true|{{dsc small|const char*}} tm_zone|timezone abbreviation}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;ctime&gt;
#include &lt;iostream&gt;

int main()
{
    std::tm tm{};
    tm.tm_year = 2022 - 1900;
    tm.tm_mday = 1;
    std::mktime(&amp;tm);

    std::cout &lt;&lt; std::asctime(&amp;tm); // note implicit trailing '\n'
}
|p=true
|output=
Sat Jan  1 00:00:00 2022
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc localtime}}
{{dsc inc|cpp/chrono/c/dsc gmtime}}
{{dsc see c|c/chrono/tm}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}