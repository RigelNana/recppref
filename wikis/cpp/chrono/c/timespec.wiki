{{cpp/title|timespec}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|since=c++17|
struct timespec;
}}

Structure holding an interval broken down into seconds and nanoseconds.

===Data members===
{{dsc begin}}
{{dsc hitem|Member|Description}}
{{dsc mem obj|nolink=true|{{dsc small|{{lc|std::time_t}}}} {{tt|tv_sec}}|2=whole seconds, the value is  &amp;gt;= {{c|0}}}}
{{dsc mem obj|nolink=true|{{dsc small|{{c/core|long}}}} {{tt|tv_nsec}}|nanoseconds, the value is in range {{closed range|0|999999999}}}}
{{dsc end}}

The declaration order of {{tt|tv_sec}} and {{tt|tv_nsec}} is unspecified. Implementation may add other data members to {{tt|timespec}}.

===Notes===
The type of {{tt|tv_nsec}} is {{c/core|long long}} on some platforms, which is currently non-conforming in C++, but is allowed in C since C23.

===Example===
{{example
|code=
#include &lt;ctime&gt;
#include &lt;iostream&gt;

int main()
{
    std::timespec ts;
    std::timespec_get(&amp;ts, TIME_UTC);
    char buff[0x80];
    std::strftime(buff, sizeof buff, "%D %T", std::gmtime(&amp;ts.tv_sec));

//  auto [sec, nsec] = ts; // UB: structured bindings should not be used because the
                           // declaration order and data member list are unspecified

    std::cout &lt;&lt; "Current time: " &lt;&lt; buff &lt;&lt; " (UTC)\n"
              &lt;&lt; "Raw timespec.tv_sec: " &lt;&lt; ts.tv_sec &lt;&lt; '\n'
              &lt;&lt; "Raw timespec.tv_nsec: " &lt;&lt; ts.tv_nsec &lt;&lt; '\n';
}
|p=true
|output=
Current time: 04/06/23 12:03:31 (UTC)
Raw timespec.tv_sec: 1680782611
Raw timespec.tv_nsec: 678437213
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc timespec_get}}
{{dsc inc|cpp/chrono/c/dsc tm}}
{{dsc see c|c/chrono/timespec}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}