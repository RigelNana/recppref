{{cpp/chrono/system_clock/title|to_time_t}}
{{cpp/chrono/system_clock/navbar}}
{{dcl begin}}
{{dcl|since=c++11|
static std::time_t to_time_t( const time_point&amp; t ) noexcept;
}}
{{dcl end}}

Converts {{c|t}} to a {{lc|std::time_t}} type. 

If {{lc|std::time_t}} has lower precision, it is implementation-defined whether the value is rounded or truncated.

===Parameters===
{{par begin}}
{{par|t|system clock time point to convert}}
{{par end}}

===Return value===
A {{lc|std::time_t}} value representing {{c|t}}.

===Example===
{{example
|Get the current time as a {{lc|std::time_t}} two ways. 
|code=
#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;
using namespace std::chrono_literals;

int main()
{
    // The old way
    std::time_t oldt = std::time({});

    std::this_thread::sleep_for(2700ms);

    // The new way
    auto const now = std::chrono::system_clock::now();
    std::time_t newt = std::chrono::system_clock::to_time_t(now);

    std::cout &lt;&lt; "newt - oldt == " &lt;&lt; newt - oldt &lt;&lt; " s\n";
}
|p=true
|output=
newt - oldt == 3 s
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/system_clock/dsc from_time_t}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}