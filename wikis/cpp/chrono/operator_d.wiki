{{cpp/title|n=literals::chrono_literals::|operator""d}}
{{cpp/chrono/day/navbar}}
{{ddcl|header=chrono|since=c++20|
constexpr std::chrono::day operator ""d( unsigned long long d ) noexcept;
}}

Forms a {{lc|std::chrono::day}} literal representing a day of the month in the calendar.

===Parameters===
{{par begin}}
{{par|d|the day value}}
{{par end}}

===Return value===
A {{lc|std::chrono::day}} storing {{c|d}}. If {{c|d &gt; 255}}, the stored value is unspecified.

===Possible implementation===
{{eq fun
|1=
constexpr std::chrono::day operator ""d(unsigned long long d) noexcept
{
    return std::chrono::day(d);
}
}}

===Notes===
{{cpp/chrono/chrono_literals_namespace|plural=no}}

===Example===
{{example|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::literals::chrono_literals;

    std::cout &lt;&lt; static_cast&lt;unsigned&gt;(42d) &lt;&lt; '\t' &lt;&lt; 42d &lt;&lt; '\n'
              &lt;&lt; static_cast&lt;unsigned&gt;(256d) &lt;&lt; '\t' &lt;&lt; 256d &lt;&lt; '\n' // unspecified
              &lt;&lt; static_cast&lt;unsigned&gt;(298d) &lt;&lt; '\t' &lt;&lt; 298d &lt;&lt; '\n'; // unspecified
}
|p=true
|output=
42      42 is not a valid day
0       00 is not a valid day
42      42 is not a valid day
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/day/dsc constructor}}
{{dsc inc|cpp/chrono/day/dsc operator_unsigned}}
{{dsc end}}

{{langlinks|ja|ru|zh}}