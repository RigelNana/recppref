{{cpp/chrono/title|1=operator&lt;&lt;{{small|(std::chrono::day)}}}}
{{cpp/chrono/day/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|
template&lt; class CharT, class Traits &gt;
std::basic_ostream&lt;CharT, Traits&gt;&amp;
    operator&lt;&lt;( std::basic_ostream&lt;CharT, Traits&gt;&amp; os, const std::chrono::day&amp; d );
}}
{{dcl end}}

Forms a {{c|std::basic_string&lt;CharT&gt;}} {{tt|s}} consisting of the day value stored in {{c|d}} formatted as a decimal number, with a leading zero if the result would otherwise be a single decimal digit. Then, if {{c|!d.ok()}}, append {{c|" is not a valid day"}} to the formatted string. Inserts that string into {{c|os}}.

Equivalent to

{{cc|
return os &lt;&lt; (d.ok() ?
    std::format(STATICALLY_WIDEN&lt;CharT&gt;("{:%d}"), d) :
    std::format(STATICALLY_WIDEN&lt;CharT&gt;("{:%d} is not a valid day"), d));
}}

where {{c|STATICALLY_WIDEN&lt;CharT&gt;("...")}} is {{c|"..."}} if {{tt|CharT}} is {{c|char}}, and {{c|L"..."}} if {{tt|CharT}} is {{c|wchar_t}}.

===Return value===
{{c|os}}

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    constexpr std::chrono::day d1{31}, d2{7}, d3{42}, d4{};
    std::cout &lt;&lt; d1 &lt;&lt; '\n'
              &lt;&lt; d2 &lt;&lt; '\n'
              &lt;&lt; d3 &lt;&lt; '\n'
              &lt;&lt; d4 &lt;&lt; '\n';
}
|p=true
|output=
31
07
42 is not a valid day
00 is not a valid day
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/utility/format/dsc format}}
{{dsc inc|cpp/chrono/dsc formatter|day}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}