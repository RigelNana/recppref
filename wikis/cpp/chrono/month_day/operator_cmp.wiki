{{cpp/chrono/title|1=operator==,&lt;=&gt;{{small|(std::chrono::month_day)}}}}
{{cpp/chrono/month_day/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|num=1|1=
constexpr bool operator==( const std::chrono::month_day&amp; x,
                           const std::chrono::month_day&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::strong_ordering operator&lt;=&gt;( const std::chrono::month_day&amp; x,
                                            const std::chrono::month_day&amp; y ) noexcept;
}}
{{dcl end}}

Compares two {{tt|month_day}} values.

{{cpp/note synthesized compare}}

===Return value===
@1@ {{c|1=x.month() == y.month() &amp;&amp; x.day() == y.day()}}
@2@ {{c|1=x.month() &lt;=&gt; y.month() != 0 ? x.month() &lt;=&gt; y.month() : x.day() &lt;=&gt; y.day()}}

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    constexpr auto md1{std::chrono::August/15};
    constexpr auto md2{std::chrono::month(8)/std::chrono::day(15)};
    std::cout &lt;&lt; std::boolalpha &lt;&lt; (md1 == md2) &lt;&lt; '\n';

    static_assert(md1 &lt;= md2);
}
|output=
true
}}

{{langlinks|es|ja|ru|zh}}