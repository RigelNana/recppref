{{cpp/chrono/file_clock/title|to_sys|from_sys}}
{{cpp/chrono/file_clock/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|notes={{mark tooltip|optional|provided only if to_utc and from_utc are not provided}}|
template&lt; class Duration &gt;
static std::chrono::sys_time&lt;/*see below*/&gt;
    to_sys( const std::chrono::file_time&lt;Duration&gt;&amp; t );
}}
{{dcl|num=2|since=c++20|notes={{mark tooltip|optional|provided only if to_utc and from_utc are not provided}}|
template&lt; class Duration &gt;
static std::chrono::file_time&lt;/*see below*/&gt;
    from_sys( const std::chrono::sys_time&lt;Duration&gt;&amp; t );
}}
{{dcl end}}

@1@ Converts the {{tt|file_time}} {{c|t}} to a {{tt|sys_time}} representing the same point in time.
@2@ Converts the {{tt|sys_time}} {{c|t}} to a {{tt|file_time}} representing the same point in time.

The duration of the return type is computed from {{tt|Duration}} in an unspecified manner.

These function templates are optional: an implementation may choose to instead provide {{rlpf|to from utc|to_utc}} and {{rlpf|to from utc|from_utc}}.

===Return value===
@1@ A {{tt|sys_time}} representing the same point in time as the argument.
@2@ A {{tt|file_time}} representing the same point in time as the argument.

===Notes===
User code should usually use {{c/core|std::chrono::clock_cast}}, which provides a generic interface to convert time points between clocks, rather than call these functions directly.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/chrono/file clock/dsc to from utc}}
{{dsc inc|cpp/chrono/dsc clock_cast}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}