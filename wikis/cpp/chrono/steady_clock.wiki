{{cpp/title|n=chrono::|steady_clock}}
{{cpp/chrono/steady_clock/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++11|1=
class steady_clock;
}}
{{dcl end}}

Class {{tt|std::chrono::steady_clock}} represents a monotonic clock. The time points of this clock cannot decrease as physical time moves forward and the time between ticks of this clock is constant. This clock is not related to wall clock time (for example, it can be time since last reboot), and is most suitable for measuring intervals.

{{tt|std::chrono::steady_clock}} meets the requirements of {{named req|TrivialClock}}. 

===Member types===
{{dsc begin}}
{{dsc hitem|Member type|Definition}}
{{dsc|{{tt|rep}}|arithmetic type representing the number of ticks in the clock's duration}}
{{dsc|{{tt|period}}|a {{lc|std::ratio}} type representing the tick period of the clock, in seconds}}
{{dsc|{{tt|duration}}|{{c|std::chrono::duration&lt;rep, period&gt;}}}}
{{dsc|{{tt|time_point}}|{{c|std::chrono::time_point&lt;std::chrono::steady_clock&gt;}}}}
{{dsc end}}

===Member constants===
{{dsc begin}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr bool}} is_steady|steady clock flag, always {{c|true}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem sfun|cpp/chrono/steady_clock/now|returns a time_point representing the current value of the clock}}
{{dsc end}}

===See also===
{{dsc begin}}
{{dsc class|cpp/chrono/system_clock|wall clock time from the system-wide realtime clock|notes={{mark c++11}}}}
{{dsc class|cpp/chrono/high_resolution_clock|the clock with the shortest tick period available|notes={{mark c++11}}}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}