{{cpp/chrono/title|operator+|operator- {{small|(std::chrono::year_month_weekday_last)}}}}
{{cpp/chrono/year_month_weekday_last/navbar}}
{{dcl begin}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last 
    operator+( const std::chrono::year_month_weekday_last&amp; ymwdl,
               const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last 
    operator+( const std::chrono::months&amp; dm, 
               const std::chrono::year_month_weekday_last&amp; ymwdl ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last
    operator+( const std::chrono::year_month_weekday_last&amp; ymwdl, 
               const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last
    operator+( const std::chrono::years&amp; dy, 
               const std::chrono::year_month_weekday_last&amp; ymwdl ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last
    operator-( const std::chrono::year_month_weekday_last&amp; ymwdl, 
               const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last 
    operator-( const std::chrono::year_month_weekday_last&amp; ymwdl,
               const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl end}}

@1,2@ Adds {{c|dm.count()}} months to the date represented by {{c|ymwdl}}. The result has the same {{rlpf|accessors|year}} and {{rlpf|accessors|month}} as {{c|std::chrono::year_month(ymwdl.year(), ymwdl.month()) + dm}} and the same {{rlpf|accessors|weekday}} as {{c|ymwdl}}.
@3,4@ Adds {{c|dy.count()}} years to the date represented by {{c|ymwdl}}. The result is equivalent to {{c|std::chrono::year_month_weekday_last(ymwdl.year() + dy, ymwdl.month(), ymwd.weekday_last())}}.
@5@ Subtracts {{c|dm.count()}} months from the date represented by {{c|ymwdl}}. Equivalent to {{c|ymwdl + -dm}}.
@6@ Subtracts {{c|dy.count()}} years from the date represented by {{c|ymwdl}}. Equivalent to {{c|ymwdl + -dy}}.

For durations that are convertible to both {{lc|std::chrono::years}} and {{lc|std::chrono::months}}, the {{tt|years}} overloads {{v|3,4,6}} are preferred if the call would otherwise be ambiguous.

===Example===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;
using namespace std::chrono;

int main()
{
    constexpr auto ymwdl1{Tuesday[last]/11/2021};
    auto ymwdl2 = ymwdl1;
    ymwdl2 = std::chrono::months(12) + ymwdl2;
    ymwdl2 = ymwdl2 - std::chrono::years(1);
    assert(ymwdl1 == ymwdl2);
}
}}

{{langlinks|es|ja|ru|zh}}