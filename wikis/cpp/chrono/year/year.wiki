{{cpp/chrono/year/title|1=year}}
{{cpp/chrono/year/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|1=
year() = default;
}}
{{dcl|num=2|since=c++20|
constexpr explicit year( int y ) noexcept;
}}
{{dcl end}}

Constructs a {{tt|year}} object.
@1@ Default constructor leaves the year value uninitialized.
@2@ If {{c|y}} is in the range {{closed range|-32767|32767}}, constructs a {{tt|year}} object holding the year value {{c|y}}. Otherwise the value held is unspecified.

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::chrono;

    constexpr int leap_years = []
    {
        int count{};
        for (int i{year::min()}; i &lt;= int{year::max()}; ++i)
            if (year{i}.is_leap()) // uses constructor (2)
                ++count;
        return count;
    } ();

    static_assert(15891 == leap_years);

    std::cout &lt;&lt; "There are " &lt;&lt; leap_years &lt;&lt; " leap years in the range ["
              &lt;&lt; int(year::min()) &lt;&lt; ", " &lt;&lt; int(year::max()) &lt;&lt; "].\n";
}
|output=There are 15891 leap years in the range [-32767, 32767].
}}

{{langlinks|es|ja|ru|zh}}