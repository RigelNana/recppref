{{cpp/chrono/title|1=operator==,&lt;,&lt;=,&gt;,&gt;=,&lt;=&gt;{{small|(std::chrono::leap_second)}}}}
{{cpp/chrono/leap_second/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|num=1|1=
constexpr bool operator==( const std::chrono::leap_second&amp; x,
                           const std::chrono::leap_second&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::strong_ordering operator&lt;=&gt;( const std::chrono::leap_second&amp; x,
                                            const std::chrono::leap_second&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=3|1=
template&lt; class Duration &gt;
constexpr bool operator==( const std::chrono::leap_second&amp; x,
                           const std::chrono::sys_time&lt;Duration&gt;&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=4|1=
template&lt; class Duration &gt;
constexpr bool operator&lt; ( const std::chrono::leap_second&amp; x,
                           const std::chrono::sys_time&lt;Duration&gt;&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=5|1=
template&lt; class Duration &gt;
constexpr bool operator&lt; ( const std::chrono::sys_time&lt;Duration&gt;&amp; x,
                           const std::chrono::leap_second&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=6|1=
template&lt; class Duration &gt;
constexpr bool operator&gt; ( const std::chrono::leap_second&amp; x,
                           const std::chrono::sys_time&lt;Duration&gt;&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=7|1=
template&lt; class Duration &gt;
constexpr bool operator&gt; ( const std::chrono::sys_time&lt;Duration&gt;&amp; x,
                           const std::chrono::leap_second&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=8|1=
template&lt; class Duration &gt;
constexpr bool operator&lt;=( const std::chrono::leap_second&amp; x,
                           const std::chrono::sys_time&lt;Duration&gt;&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=9|1=
template&lt; class Duration &gt;
constexpr bool operator&lt;=( const std::chrono::sys_time&lt;Duration&gt;&amp; x,
                           const std::chrono::leap_second&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=10|1=
template&lt; class Duration &gt;
constexpr bool operator&gt;=( const std::chrono::leap_second&amp; x,
                           const std::chrono::sys_time&lt;Duration&gt;&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=11|1=
template&lt; class Duration &gt;
constexpr bool operator&gt;=( const std::chrono::sys_time&lt;Duration&gt;&amp; x,
                           const std::chrono::leap_second&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=12|1=
template&lt; class Duration &gt;
    requires std::three_way_comparable_with&lt;
        std::chrono::sys_seconds, std::chrono::sys_time&lt;Duration&gt;&gt;
constexpr auto operator&lt;=&gt;( const std::chrono::leap_second&amp; x,
                            const std::chrono::sys_time&lt;Duration&gt;&amp; y ) noexcept;
}}
{{dcl end}}

Compares the date and time represented by the objects {{c|x}} and {{c|y}}.

Return type of {{v|12}} is deduced from {{c|1=x.date() &lt;=&gt; y}}, and hence the three-way comparison result type of {{lc|std::chrono::seconds}} and {{tt|Duration}}.

{{cpp/note synthesized eq}}

===Return value===
@1@ {{c|1=x.date() == y.date()}}
@2@ {{c|1=x.date() &lt;=&gt; y.date()}}
@3@ {{c|1=x.date() == y}}
@4@ {{c|1=x.date() &lt; y}}
@5@ {{c|1=x &lt; y.date()}}
@6@ {{c|1=x.date() &gt; y}}
@7@ {{c|1=x &gt; y.date()}}
@8@ {{c|1=x.date() &lt;= y}}
@9@ {{c|1=x &lt;= y.date()}}
@10@ {{c|1=x.date() &gt;= y}}
@11@ {{c|1=x &gt;= y.date()}}
@12@ {{c|1=x.date() &lt;=&gt; y}}

{{langlinks|es|ja|ru|zh}}