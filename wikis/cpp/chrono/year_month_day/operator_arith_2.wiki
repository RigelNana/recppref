{{cpp/chrono/title|operator+|operator- {{small|(std::chrono::year_month_day)}}}}
{{cpp/chrono/year_month_day/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day operator+( const std::chrono::year_month_day&amp; ymd,
                                                 const std::chrono::months&amp; dm
                                               ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day operator+( const std::chrono::months&amp; dm,
                                                 const std::chrono::year_month_day&amp; ymd
                                               ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day operator+( const std::chrono::year_month_day&amp; ymd,
                                                 const std::chrono::years&amp; dy
                                               ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day operator+( const std::chrono::years&amp; dy,
                                                 const std::chrono::year_month_day&amp; ymd
                                               ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day operator-( const std::chrono::year_month_day&amp; ymd,
                                                 const std::chrono::months&amp; dm
                                               ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_day operator-( const std::chrono::year_month_day&amp; ymd,
                                                 const std::chrono::years&amp; dy
                                               ) noexcept;
}}
{{dcl end}}

@1,2@ Adds {{c|dm.count()}} months to the date represented by {{c|ymd}}. The result has the same {{c|day()}} as {{c|ymd}} and the same {{c|year()}} and {{c|month()}} as {{c|std::chrono::year_month(ymd.year(), ymd.month()) + dm}}.
@3,4@ Adds {{c|dy.count()}} years to the date represented by {{c|ymd}}. The result is equivalent to {{c|std::chrono::year_month_day(ymd.year() + dy, ymd.month(), ymd.day()}}.
@5@ Subtracts {{c|dm.count()}} months from the date represented by {{c|ymd}}. Equivalent to {{c|ymd + -dm}}.
@6@ Subtracts {{c|dy.count()}} years from the date represented by {{c|ymd}}. Equivalent to {{c|ymd + -dy}}.

For durations that are convertible to both {{lc|std::chrono::years}} and {{lc|std::chrono::months}}, the {{tt|years}} overloads {{v|3,4,6}} are preferred if the call would otherwise be ambiguous.

===Notes===
Even if {{c|ymd.ok()}} is {{c|true}}, the resulting {{tt|year_month_day}} may not represent a valid date if {{c|ymd.day()}} is 29, 30, or 31.

===Example===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;
 
int main()
{
    std::cout &lt;&lt; std::boolalpha;

    auto ymd{std::chrono::day(1)/std::chrono::July/2021};
    
    ymd = ymd + std::chrono::months(4);
    std::cout &lt;&lt; (ymd.month() == std::chrono::November) &lt;&lt; ' '
              &lt;&lt; (ymd.year() == std::chrono::year(2021)) &lt;&lt; ' ';

    ymd = ymd - std::chrono::years(10);
    std::cout &lt;&lt; (ymd.month() == std::chrono::month(11)) &lt;&lt; ' '
              &lt;&lt; (ymd.year() == std::chrono::year(2011)) &lt;&lt; '\n';
}
|output=
true true true true
}}

{{langlinks|es|ja|ru|zh}}