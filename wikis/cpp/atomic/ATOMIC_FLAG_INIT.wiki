{{title|ATOMIC_FLAG_INIT}}
{{cpp/thread/navbar}}
{{ddcl|header=atomic|since=c++11|
#define ATOMIC_FLAG_INIT /* implementation-defined */
}}

Defines the initializer which can be used to initialize {{lc|std::atomic_flag}} to clear (false) state in the form {{c|1=std::atomic_flag v = ATOMIC_FLAG_INIT;}}. It is unspecified if it can be used with other initialization contexts.

If the flag has is a [[cpp/language/object#Subobjects|complete object]] with {{lsd|cpp/language/storage_duration#Static storage duration}}, this [[cpp/language/initialization#Static initialization|initialization is static]].

{{rev begin}}
{{rev|until=c++20|
This is the only way to initialize {{lc|std::atomic_flag}} to a definite value: the value held after any other initialization is unspecified.
}}
{{rev|since=c++20|
This macro is no longer needed since default constructor of {{lc|std::atomic_flag}} initializes it to clear state. It is kept for the compatibility with C.
}}
{{rev end}}

===Example===
{{example
|
|code=
#include &lt;atomic&gt;

std::atomic_flag static_flag = ATOMIC_FLAG_INIT; // static initialization,
// guaranteed to be available during dynamic initialization of static objects.

int main()
{
    std::atomic_flag automatic_flag = ATOMIC_FLAG_INIT; // guaranteed to work
//    std::atomic_flag another_flag(ATOMIC_FLAG_INIT); // unspecified
}
|output=
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2159|std=C++11|before=it was unclear whether {{tt|ATOMIC_FLAG_INIT}}&lt;br&gt;can be used with other initialization contexts|after=other usages are&lt;br&gt;not guaranteed}}
{{dr list item|wg=lwg|dr=3659|std=C++20|before={{tt|ATOMIC_FLAG_INIT}} was deprecated, but needed in C on some platforms|after=it is undeprecated}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/dsc atomic_flag}}
{{dsc see c|c/atomic/ATOMIC_FLAG_INIT}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}