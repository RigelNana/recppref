{{cpp/atomic/atomic/title|atomic}}
{{cpp/atomic/atomic/navbar}}
{{dcl begin}}
{{dcl rev multi|num=1
|since1=c++11|dcl1=
atomic() noexcept = default;
|since2=c++20|dcl2=
constexpr atomic() noexcept(std::is_nothrow_default_constructible_v&lt;T&gt;);
}}
{{dcl|num=2|since=c++11|
constexpr atomic( T desired ) noexcept;
}}
{{dcl|num=3|since=c++11|1=
atomic( const atomic&amp; ) = delete;
}}
{{dcl end}}

Constructs a new atomic variable.

{{rrev multi
|until1=c++20|rev1=
@1@ The default constructor is trivial: no initialization takes place other than [[cpp/language/zero initialization|zero initialization]] of static and thread-local objects.
@@ {{lc|std::atomic_init}} may be used to complete initialization.
|rev2=
@1@ Value-initializes the underlying object (i.e. with {{c|T()}}). The initialization is not atomic.
@@ {{cpp/enable_if|{{c|std::is_default_constructible_v&lt;T&gt;}} is {{c|true}}}}.
}}

@2@ Initializes the underlying object with {{c|desired}}. The initialization is not atomic.

@3@ Atomic variables are not {{named req|CopyConstructible}}.

===Parameters===
{{par begin}}
{{par|desired|value to initialize with}}
{{par end}}

===Notes===
{{rrev|until=c++20|
The default-initialized {{c/core|std::atomic&lt;T&gt;}} does not contain a {{tt|T}} object, and its only valid uses are destruction and initialization by {{lc|std::atomic_init}}, see {{lwg|2334}}.
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=4169|std=C++20|before={{lc|std::is_default_constructible_v}} could report false positive|after=the default constructor is constrained}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}