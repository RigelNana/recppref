{{cpp/atomic/atomic/title|load}}
{{cpp/atomic/atomic/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|1=
T load( std::memory_order order
            = std::memory_order_seq_cst ) const noexcept;
}}
{{dcl|num=2|since=c++11|1=
T load( std::memory_order order
            = std::memory_order_seq_cst ) const volatile noexcept;
}}
{{dcl end}}

Atomically loads and returns the current value of the atomic variable. Memory is affected according to the value of {{c|order}}.

If {{c|order}} is one of {{c|std::memory_order_release}} and {{c|std::memory_order_acq_rel}}, the behavior is undefined.

{{rrev|since=c++20|
It is deprecated if {{c|std::atomic&lt;T&gt;::is_always_lock_free}} is {{c|false}} and overload {{v|2}} participates in overload resolution.
}}

===Parameters===
{{par begin}}
{{par|order|memory order constraints to enforce}}
{{par end}}

===Return value===
The current value of the atomic variable.

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic/dsc operator T}}
{{dsc inc|cpp/atomic/dsc atomic_load}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}