{{cpp/title|atomic_flag_test|atomic_flag_test_explicit}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++20|
bool atomic_flag_test( const volatile std::atomic_flag* object ) noexcept;
}}
{{dcl|num=2|since=c++20|
bool atomic_flag_test( const std::atomic_flag* object ) noexcept;
}}
{{dcl|num=3|since=c++20|
bool atomic_flag_test_explicit( const volatile std::atomic_flag* object,
                                std::memory_order order ) noexcept;
}}
{{dcl|num=4|since=c++20|
bool atomic_flag_test_explicit( const std::atomic_flag* object,
                                std::memory_order order ) noexcept;
}}
{{dcl end}}

Atomically reads the value of the {{c|*object}} and returns the value.
@1,2@ The memory synchronization order is {{c|std::memory_order_seq_cst}}.
@3,4@ The memory synchronization order is {{c|order}}.
@@ If {{c|order}} is one of {{c|std::memory_order::release}} and {{c|std::memory_order::acq_rel}}, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|object|pointer to the {{tt|atomic_flag}} object to read}}
{{par|order|the memory synchronization ordering}}
{{par end}}

===Return value===
The value atomically read.

===Notes===
{{feature test macro|__cpp_lib_atomic_flag_test|{{tt|std::atomic_flag::test}}|value=201907L|std=C++20}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic_flag/dsc test}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}