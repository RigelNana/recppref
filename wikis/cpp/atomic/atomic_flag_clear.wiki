{{cpp/title|atomic_flag_clear|atomic_flag_clear_explicit}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++11|
void atomic_flag_clear( volatile std::atomic_flag* obj ) noexcept;
}}
{{dcl|num=2|since=c++11|
void atomic_flag_clear( std::atomic_flag* obj ) noexcept;
}}
{{dcl|num=3|since=c++11|
void atomic_flag_clear_explicit( volatile std::atomic_flag* obj, 
                                 std::memory_order order ) noexcept;
}}
{{dcl|num=4|since=c++11|
void atomic_flag_clear_explicit( std::atomic_flag* obj, 
                                 std::memory_order order ) noexcept;
}}
{{dcl end}}

Atomically changes the state of the {{lc|std::atomic_flag}} pointed to by {{c|obj}} to clear ({{c|false}}).
@1,2@ The memory synchronization ordering is {{c|std::memory_order_seq_cst}}.
@3,4@ The memory synchronization ordering is {{c|order}}.
@@ If {{c|order}} is one of {{c|std::memory_order_consume}}, {{c|std::memory_order_acquire}} and {{c|std::memory_order_acq_rel}}, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|obj|pointer to {{lc|std::atomic_flag}} to access}}
{{par|order|the memory synchronization ordering}}
{{par end}}

===Notes===
{{tt|std::atomic_flag_clear}} and {{tt|std::atomic_flag_clear_explicit}} can be implemented as {{c|obj-&gt;clear()}} and {{c|obj-&gt;clear(order)}} respectively.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2138|std=C++11|before={{c|order}} could be {{c|std::memory_order_consume}}|after=the behavior is undefined in this case}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/dsc atomic_flag}}
{{dsc inc|cpp/atomic/dsc atomic_flag_test_and_set}}
{{dsc inc|cpp/atomic/dsc memory_order}}
{{dsc see c|c/atomic/atomic_flag_clear|atomic_flag_clear|atomic_flag_clear_explicit}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}