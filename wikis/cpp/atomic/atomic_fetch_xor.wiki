{{cpp/title|atomic_fetch_xor|atomic_fetch_xor_explicit}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++11|
template&lt; class T &gt;
T atomic_fetch_xor( std::atomic&lt;T&gt;* obj,
                    typename std::atomic&lt;T&gt;::value_type arg ) noexcept;
}}
{{dcl|num=2|since=c++11|
template&lt; class T &gt;
T atomic_fetch_xor( volatile std::atomic&lt;T&gt;* obj,
                    typename std::atomic&lt;T&gt;::value_type arg ) noexcept;
}}
{{dcl|num=3|since=c++11|
template&lt; class T &gt;
T atomic_fetch_xor_explicit( std::atomic&lt;T&gt;* obj,
                             typename std::atomic&lt;T&gt;::value_type arg, 
                             std::memory_order order) noexcept;
}}
{{dcl|num=4|since=c++11|
template&lt; class T &gt;
T atomic_fetch_xor_explicit( volatile std::atomic&lt;T&gt;* obj,
                             typename std::atomic&lt;T&gt;::value_type arg,
                             std::memory_order order) noexcept;
}}
{{dcl end}}

Atomically replaces the value pointed by {{c|obj}} with the result of bitwise XOR between the old value of {{c|obj}} and {{c|arg}}. Returns the value {{c|obj}} held previously. 

The operation is performed as if the following is executed:
@1,2@ {{c|obj-&gt;fetch_xor(arg)}}
@3,4@ {{c|obj-&gt;fetch_xor(arg, order)}}

If {{tt|std::atomic&lt;T&gt;}} has no {{tt|fetch_xor}} member (this member is only provided for {{rlp|atomic#Specializations for integral types|integral types}} except {{c/core|bool}}), the program is ill-formed.

===Parameters===
{{par begin}}
{{par|obj|pointer to the atomic object to modify}}
{{par|arg|the value to bitwise XOR to the value stored in the atomic object}}
{{par|order|the memory synchronization ordering}}
{{par end}} 

===Return value===
The value immediately preceding the effects of this function in the {{lsd|cpp/atomic/memory order#Modification order}} of {{c|*obj}}.

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|std=C++11|paper=P0558R1|before=exact type match was required because&lt;br&gt;{{tt|T}} was deduced from multiple arguments|after={{tt|T}} is only deduced&lt;br&gt;from {{c|obj}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic/dsc fetch_xor|mem=std::atomic&lt;T&gt;}}
{{dsc inc|cpp/atomic/dsc atomic_fetch_or}}
{{dsc inc|cpp/atomic/dsc atomic_fetch_and}}
{{dsc see c|c/atomic/atomic_fetch_xor|atomic_fetch_xor|atomic_fetch_xor_explicit}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}