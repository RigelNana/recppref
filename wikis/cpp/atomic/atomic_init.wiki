{{cpp/title|atomic_init}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++11|deprecated=c++20|
template&lt; class T &gt;
void atomic_init
    ( std::atomic&lt;T&gt;* obj,
      typename std::atomic&lt;T&gt;::value_type desired ) noexcept;
}}
{{dcl|num=2|since=c++11|deprecated=c++20|
template&lt; class T &gt;
void atomic_init
    ( volatile std::atomic&lt;T&gt;* obj,
      typename std::atomic&lt;T&gt;::value_type desired ) noexcept;
}}
{{dcl end}}

Initializes the default-constructed atomic object {{c|obj}} with the value {{c|desired}}. The function is not atomic: concurrent access from another thread, even through an atomic operation, is a data race. 

If {{c|obj}} was not default-constructed, or this function is called twice on the same {{c|obj}}, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|obj|pointer to an atomic object to initialize}}
{{par|desired|the value to initialize atomic object with}}
{{par end}}

===Return value===
(none)

===Notes===
This function is provided for compatibility with C. If the compatibility is not required, {{lc|std::atomic}} may be initialized through their non-default constructors.

===Example===
{{example}}

===Defect reports===
{{dr list begin}}
{{dr list item|std=C++11|paper=P0558R1|before=exact type match was required because&lt;br&gt;{{tt|T}} was deduced from multiple arguments|after={{tt|T}} is only deduced&lt;br&gt;from {{c|obj}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/dsc ATOMIC_VAR_INIT}}
{{dsc inc|cpp/atomic/atomic/dsc constructor}}
{{dsc see c|c/atomic/atomic_init}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}