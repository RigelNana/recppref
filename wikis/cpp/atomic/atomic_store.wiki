{{cpp/title|atomic_store|atomic_store_explicit}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++11|
template&lt; class T &gt;
void atomic_store( std::atomic&lt;T&gt;* obj,
                   typename std::atomic&lt;T&gt;::value_type desired ) noexcept;
}}
{{dcl|num=2|since=c++11|
template&lt; class T &gt;
void atomic_store( volatile std::atomic&lt;T&gt;* obj,
                   typename std::atomic&lt;T&gt;::value_type desired ) noexcept;
}}
{{dcl|num=3|since=c++11|
template&lt; class T &gt;
void atomic_store_explicit( std::atomic&lt;T&gt;* obj,
                            typename std::atomic&lt;T&gt;::value_type desired, 
                            std::memory_order order) noexcept;
}}
{{dcl|num=4|since=c++11|
template&lt; class T &gt;
void atomic_store_explicit( volatile std::atomic&lt;T&gt;* obj,
                            typename std::atomic&lt;T&gt;::value_type desired, 
                            std::memory_order order) noexcept;
}}
{{dcl end}}

@1,2@ Atomically replaces the value pointed to by {{c|obj}} with the value of {{c|desired}} as if by {{c|obj-&gt;store(desired)}}.

@3,4@ Atomically replaces the value pointed to by {{c|obj}} with the value of {{c|desired}} as if by {{c|obj-&gt;store(desired, order)}}.
@@ If {{c|order}} is one of {{c|std::memory_order_consume}}, {{c|std::memory_order_acquire}} and {{c|std::memory_order_acq_rel}}, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|obj|pointer to the atomic object to modify}}
{{par|desired|the value to store in the atomic object}}
{{par|order|the memory synchronization ordering}}
{{par end}} 

===Return value===
(none)

===Defect reports===
{{dr list begin}}
{{dr list item|std=C++11|paper=P0558R1|before=exact type match was required because&lt;br&gt;{{tt|T}} was deduced from multiple arguments|after={{tt|T}} is only deduced&lt;br&gt;from {{c|obj}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic/dsc store|mem=std::atomic&lt;T&gt;}}
{{dsc inc|cpp/atomic/dsc atomic_load}}
{{dsc inc|cpp/atomic/dsc memory_order}}
{{dsc break}}
{{dsc tfun|cpp/memory/shared_ptr/atomic|notes={{mark life|deprecated=c++20|removed=c++26|br=yes}}|title=std::atomic_store{{dsc small|(std::shared_ptr)}}
&lt;br&gt;std::atomic_store_explicit{{dsc small|(std::shared_ptr)}}|specializes atomic operations for {{lc|std::shared_ptr}}}}
{{dsc see c|c/atomic/atomic_store|atomic_store|atomic_store_explicit}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}