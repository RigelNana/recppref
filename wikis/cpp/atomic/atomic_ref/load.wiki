{{cpp/atomic/atomic_ref/title|load}}
{{cpp/atomic/atomic_ref/navbar}}
{{ddcla|constexpr=c++26|1=&lt;!-- value_type is the same as T until C++26 --&gt;
value_type load( std::memory_order order =
                     std::memory_order_seq_cst ) const noexcept;
}}

Atomically loads and returns the current value of the referenced object. Memory is affected according to the value of {{c|order}}.

If {{c|order}} is not {{c|std::memory_order_relaxed}}, {{c|std::memory_order_consume}}, {{c|std::memory_order_acquire}} or {{c|std::memory_order_seq_cst}}, the behavior is undefined.

===Parameters===
{{par begin}}
{{par|order|memory order constraints to enforce}}
{{par end}}

===Return value===
The current value of the referenced object.

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator T}}
{{dsc end}}

{{langlinks|es|ja|zh}}