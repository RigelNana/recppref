{{cpp/atomic/atomic_ref/title|operator{{=}}}}
{{cpp/atomic/atomic_ref/navbar}}
{{dcl begin}}
{{dcla|num=1|constexpr=c++26|1=
value_type operator=( value_type desired ) const noexcept;
}}
{{dcl|num=2|1=
atomic_ref&amp; operator=( const atomic_ref&amp; ) = delete;
}}
{{dcl end}}

@1@ Equivalent to {{c|store(desired); return desired;}}. {{cpp/enable if|{{c|std::is_const_v&lt;T&gt;}} is {{c|false}}}}.

@2@ {{tt|atomic_ref}} is not {{named req|CopyAssignable}}.

===Parameters===
{{par begin}}
{{par|desired|value to assign}}
{{par end}}

===Return value===
As described above.

===Notes===
Unlike most assignment operators, the assignment operator for {{tt|atomic_ref}} does not return a reference to its left-hand argument. It returns a copy of the stored value instead.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3508|paper=P3323R1|std=C++20|before=assignment operator was meaningless for {{c/core|const T}}|after=constrained to accept only non-const {{tt|T}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic_ref/dsc constructor}}
{{dsc inc|cpp/atomic/atomic_ref/dsc store}}
{{dsc end}}

{{langlinks|es|ja|zh}}