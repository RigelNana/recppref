{{cpp/atomic/atomic_ref/title|fetch_xor}}
{{cpp/atomic/atomic_ref/navbar}}
{{dcl begin}}
{{dcl h|Provided only when {{tt|T}} is an integral type other than ''cv'' {{c/core|bool}}}}
{{dcl|since=c++20|1=
value_type fetch_xor( value_type arg,
                      std::memory_order order =
                          std::memory_order_seq_cst ) const noexcept;
}}
{{dcl end}}

Atomically replaces the current value of the referenced object with the result of bitwise XOR of the value and {{c|arg}}. This operation is a read-modify-write operation. Memory is affected according to the value of {{c|order}}.

{{cpp/enable if|{{c/core|std::is_const_v&lt;T&gt;}} is {{c|false}}}}.

===Parameters===
{{par begin}}
{{par|arg|the other argument of bitwise XOR}}
{{par|order|memory order constraints to enforce}}
{{par end}}

===Return value===
The value of the referenced object, immediately preceding the effects of this function.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3508|paper=P3323R1|std=C++20|before={{tt|fetch_xor}} was meaningless for {{c/core|const T}}|after=constrained to accept only non-const {{tt|T}}}}
{{dr list end}}

{{langlinks|es|ja|zh}}