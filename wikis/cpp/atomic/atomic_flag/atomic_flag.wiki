{{cpp/atomic/atomic_flag/title|atomic_flag}}
{{cpp/atomic/atomic_flag/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl rev multi|num=1
|since1=c++11|dcl1=
atomic_flag() noexcept = default;
|since2=c++20|dcl2=
constexpr atomic_flag() noexcept;
}}
{{dcl|num=2|since=c++11|1=
atomic_flag( const atomic_flag&amp; ) = delete;
}}
{{dcl end}}

Constructs a new {{lc|std::atomic_flag}}. 
{{rrev multi
|until1=c++20|rev1=
@1@ Trivial default constructor, initializes {{lc|std::atomic_flag}} to unspecified state.
|rev2=
@1@ Initializes {{lc|std::atomic_flag}} to clear state.
}}
@2@ The copy constructor is deleted; {{lc|std::atomic_flag}} is not copyable.

In addition, {{lc|std::atomic_flag}} can be value-initialized to clear state with the expression {{lc|ATOMIC_FLAG_INIT}}. For an {{tt|atomic_flag}} with static [[cpp/language/storage_duration#Storage_duration|storage duration]], this guarantees [[cpp/language/initialization#Static_initialization|static initialization]]: the flag can be used in constructors of static objects.

===See also===
{{dsc begin}}
{{dsc inc|cpp/atomic/dsc ATOMIC_FLAG_INIT}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}