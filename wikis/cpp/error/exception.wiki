{{cpp/title|exception}}
{{cpp/error/exception/navbar}}
{{ddcl|header=exception|
class exception;
}}

Provides consistent interface to handle errors through the [[cpp/language/throw|throw expression]]. 

All exceptions generated by the standard library inherit from {{tt|std::exception}}.

{{rrev|since=c++26|
All member functions of {{tt|std::exception}} are {{c/core|constexpr}}.
}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|cpp/error/exception/exception|constructs the exception object}}
{{dsc inc|cpp/error/exception/dsc destructor}}
{{dsc inc|cpp/error/exception/dsc operator{{=}}}}
{{dsc inc|cpp/error/exception/dsc what}}
{{dsc end}}

===Standard exception requirements===
Each standard library class {{tt|T}} that derives from {{tt|std::exception}} has the following publicly accessible member functions, each of them {{rev inl|until=c++11|do not exit with an exception}}{{rev inl|since=c++11|having a [[cpp/language/noexcept spec|non-throwing exception specification]]}}:
* {{lt|cpp/language/default constructor}} (unless other constructors are provided)
* {{lt|cpp/language/copy constructor}}
* [[cpp/language/copy assignment|copy assignment operator]]

The copy constructor and the copy assignment operator meet the following postcondition:
* If two objects {{c|lhs}} and {{c|rhs}} both have dynamic type {{tt|T}} and {{c|lhs}} is a copy of {{c|rhs}}, then {{c|std::strcmp(lhs.what(), rhs.what())}} is equal to {{c|0}}.

The {{tt|what()}} member function of each such {{tt|T}} satisfies the constraints specified for {{lc|std::exception::what()}}.

===Standard exceptions===
*{{ltt|cpp/error/logic_error}}
:*{{ltt|cpp/error/invalid_argument}}
:*{{ltt|cpp/error/domain_error}}
:*{{ltt|cpp/error/length_error}}
:*{{ltt|cpp/error/out_of_range}}
:*{{ltt|cpp/thread/future_error}} {{mark since c++11}}
*{{ltt|cpp/error/runtime_error}}
:*{{ltt|cpp/error/range_error}}
:*{{ltt|cpp/error/overflow_error}}
:*{{ltt|cpp/error/underflow_error}}
:*{{ltt|cpp/regex/regex_error}} {{mark since c++11}}
:*{{ltt|cpp/error/system_error}} {{mark since c++11}}
::*{{l2tt|cpp/io/ios_base/failure}} {{mark since c++11}}
::*{{l2tt|cpp/filesystem/filesystem_error}} {{mark since c++17}}
:*{{ltt|cpp/error/tx_exception}} {{mark since tm ts}}
:*{{ltt|cpp/chrono/nonexistent_local_time}} {{mark since c++20}}
:*{{ltt|cpp/chrono/ambiguous_local_time}} {{mark since c++20}}
:*{{ltt|cpp/utility/format/format_error}} {{mark since c++20}}
*{{ltt|cpp/types/bad_typeid}}
*{{ltt|cpp/types/bad_cast}}
:*{{ltt|cpp/utility/any/bad_any_cast}} {{mark since c++17}}
*{{ltt|cpp/utility/optional/bad_optional_access}} {{mark since c++17}}
*{{ltt|cpp/utility/expected/bad_expected_access}} {{mark since c++23}}
*{{ltt|cpp/memory/bad_weak_ptr}} {{mark since c++11}}
*{{ltt|cpp/utility/functional/bad_function_call}} {{mark since c++11}}
*{{ltt|cpp/memory/new/bad_alloc}}
:*{{ltt|cpp/memory/new/bad_array_new_length}} {{mark since c++11}}
*{{ltt|cpp/error/bad_exception}}
*{{l2tt|cpp/io/ios_base/failure}} {{mark until c++11}}
*{{ltt|cpp/utility/variant/bad_variant_access}} {{mark since c++17}}

===Notes===
{{ftm begin}}
{{ftm|__cpp_lib_constexpr_exceptions|value=202411L|std=C++26|{{c/core|constexpr}} for exception types}}
{{ftm end}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=471|std=C++98|before=there was no requirement on standard library classes derived from {{tt|std::exception}}|after=added}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}