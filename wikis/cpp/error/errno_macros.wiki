{{title|Error numbers}}
{{cpp/error/navbar}}

Each of the macros defined in {{header|cerrno}} expands to integer constant expressions with type {{c|int}}, each with a positive value, matching most of the [https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html POSIX error codes]. The following constants are defined (the implementation may define more, as long as they begin with {{c/core|'E'}} followed by digits or uppercase letters).

{{dsc begin}}
{{dsc header | cerrno}}
{{dsc macro const | E2BIG            | nolink=true| notes={{mark c++11}}| Argument list too long }}
{{dsc macro const | EACCES           | nolink=true| notes={{mark c++11}}| Permission denied}}
{{dsc macro const | EADDRINUSE       | nolink=true| notes={{mark c++11}}| Address in use}}
{{dsc macro const | EADDRNOTAVAIL    | nolink=true| notes={{mark c++11}}| Address not available}}
{{dsc macro const | EAFNOSUPPORT     | nolink=true| notes={{mark c++11}}| Address family not supported}}
{{dsc macro const | EAGAIN           | nolink=true| notes={{mark c++11}}| Resource unavailable, try again}}
{{dsc macro const | EALREADY         | nolink=true| notes={{mark c++11}}| Connection already in progress}}
{{dsc macro const | EBADF            | nolink=true| notes={{mark c++11}}| Bad file descriptor}}
{{dsc macro const | EBADMSG          | nolink=true| notes={{mark c++11}}| Bad message}}
{{dsc macro const | EBUSY            | nolink=true| notes={{mark c++11}}| Device or resource busy}}
{{dsc macro const | ECANCELED        | nolink=true| notes={{mark c++11}}| Operation canceled}}
{{dsc macro const | ECHILD           | nolink=true| notes={{mark c++11}}| No child processes}}
{{dsc macro const | ECONNABORTED     | nolink=true| notes={{mark c++11}}| Connection aborted}}
{{dsc macro const | ECONNREFUSED     | nolink=true| notes={{mark c++11}}| Connection refused}}
{{dsc macro const | ECONNRESET       | nolink=true| notes={{mark c++11}}| Connection reset}}
{{dsc macro const | EDEADLK          | nolink=true| notes={{mark c++11}}| Resource deadlock would occur}}
{{dsc macro const | EDESTADDRREQ     | nolink=true| notes={{mark c++11}}| Destination address required}}
{{dsc macro const | EDOM             | nolink=true                      | Mathematics argument out of domain of function}}
{{dsc macro const | EEXIST           | nolink=true| notes={{mark c++11}}| File exists}}
{{dsc macro const | EFAULT           | nolink=true| notes={{mark c++11}}| Bad address}}
{{dsc macro const | EFBIG            | nolink=true| notes={{mark c++11}}| File too large}}
{{dsc macro const | EHOSTUNREACH     | nolink=true| notes={{mark c++11}}| Host is unreachable}}
{{dsc macro const | EIDRM            | nolink=true| notes={{mark c++11}}| Identifier removed}}
{{dsc macro const | EILSEQ           | nolink=true| notes={{mark c++11}}| Illegal byte sequence}}
{{dsc macro const | EINPROGRESS      | nolink=true| notes={{mark c++11}}| Operation in progress}}
{{dsc macro const | EINTR            | nolink=true| notes={{mark c++11}}| Interrupted function}}
{{dsc macro const | EINVAL           | nolink=true| notes={{mark c++11}}| Invalid argument}}
{{dsc macro const | EIO              | nolink=true| notes={{mark c++11}}| I/O error}}
{{dsc macro const | EISCONN          | nolink=true| notes={{mark c++11}}| Socket is connected}}
{{dsc macro const | EISDIR           | nolink=true| notes={{mark c++11}}| Is a directory}}
{{dsc macro const | ELOOP            | nolink=true| notes={{mark c++11}}| Too many levels of symbolic links}}
{{dsc macro const | EMFILE           | nolink=true| notes={{mark c++11}}| File descriptor value too large}}
{{dsc macro const | EMLINK           | nolink=true| notes={{mark c++11}}| Too many links}}
{{dsc macro const | EMSGSIZE         | nolink=true| notes={{mark c++11}}| Message too large}}
{{dsc macro const | ENAMETOOLONG     | nolink=true| notes={{mark c++11}}| Filename too long}}
{{dsc macro const | ENETDOWN         | nolink=true| notes={{mark c++11}}| Network is down}}
{{dsc macro const | ENETRESET        | nolink=true| notes={{mark c++11}}| Connection aborted by network}}
{{dsc macro const | ENETUNREACH      | nolink=true| notes={{mark c++11}}| Network unreachable}}
{{dsc macro const | ENFILE           | nolink=true| notes={{mark c++11}}| Too many files open in system}}
{{dsc macro const | ENOBUFS          | nolink=true| notes={{mark c++11}}| No buffer space available}}
{{dsc macro const | ENODATA          | nolink=true| notes={{mark c++11}}| No message is available on the STREAM head read queue}}
{{dsc macro const | ENODEV           | nolink=true| notes={{mark c++11}}| No such device}}
{{dsc macro const | ENOENT           | nolink=true| notes={{mark c++11}}| No such file or directory}}
{{dsc macro const | ENOEXEC          | nolink=true| notes={{mark c++11}}| Executable file format error}}
{{dsc macro const | ENOLCK           | nolink=true| notes={{mark c++11}}| No locks available}}
{{dsc macro const | ENOLINK          | nolink=true| notes={{mark c++11}}| Link has been severed}}
{{dsc macro const | ENOMEM           | nolink=true| notes={{mark c++11}}| Not enough space}}
{{dsc macro const | ENOMSG           | nolink=true| notes={{mark c++11}}| No message of the desired type}}
{{dsc macro const | ENOPROTOOPT      | nolink=true| notes={{mark c++11}}| Protocol not available}}
{{dsc macro const | ENOSPC           | nolink=true| notes={{mark c++11}}| No space left on device}}
{{dsc macro const | ENOSR            | nolink=true| notes={{mark c++11}}| No STREAM resources}}
{{dsc macro const | ENOSTR           | nolink=true| notes={{mark c++11}}| Not a STREAM}}
{{dsc macro const | ENOSYS           | nolink=true| notes={{mark c++11}}| Function not supported}}
{{dsc macro const | ENOTCONN         | nolink=true| notes={{mark c++11}}| The socket is not connected}}
{{dsc macro const | ENOTDIR          | nolink=true| notes={{mark c++11}}| Not a directory}}
{{dsc macro const | ENOTEMPTY        | nolink=true| notes={{mark c++11}}| Directory not empty}}
{{dsc macro const | ENOTRECOVERABLE  | nolink=true| notes={{mark c++11}}| State not recoverable}}
{{dsc macro const | ENOTSOCK         | nolink=true| notes={{mark c++11}}| Not a socket}}
{{dsc macro const | ENOTSUP          | nolink=true| notes={{mark c++11}}| Not supported}}
{{dsc macro const | ENOTTY           | nolink=true| notes={{mark c++11}}| Inappropriate I/O control operation}}
{{dsc macro const | ENXIO            | nolink=true| notes={{mark c++11}}| No such device or address}}
{{dsc macro const | EOPNOTSUPP       | nolink=true| notes={{mark c++11}}| Operation not supported on socket}}
{{dsc macro const | EOVERFLOW        | nolink=true| notes={{mark c++11}}| Value too large to be stored in data type}}
{{dsc macro const | EOWNERDEAD       | nolink=true| notes={{mark c++11}}| Previous owner died}}
{{dsc macro const | EPERM            | nolink=true| notes={{mark c++11}}| Operation not permitted}}
{{dsc macro const | EPIPE            | nolink=true| notes={{mark c++11}}| Broken pipe}}
{{dsc macro const | EPROTO           | nolink=true| notes={{mark c++11}}| Protocol error}}
{{dsc macro const | EPROTONOSUPPORT  | nolink=true| notes={{mark c++11}}| Protocol not supported}}
{{dsc macro const | EPROTOTYPE       | nolink=true| notes={{mark c++11}}| Protocol wrong type for socket}}
{{dsc macro const | ERANGE           | nolink=true|                       Result too large}}
{{dsc macro const | EROFS            | nolink=true| notes={{mark c++11}}| Read-only file system}}
{{dsc macro const | ESPIPE           | nolink=true| notes={{mark c++11}}| Invalid seek}}
{{dsc macro const | ESRCH            | nolink=true| notes={{mark c++11}}| No such process}}
{{dsc macro const | ETIME            | nolink=true| notes={{mark c++11}}| Stream ioctl() timeout}}
{{dsc macro const | ETIMEDOUT        | nolink=true| notes={{mark c++11}}| Connection timed out}}
{{dsc macro const | ETXTBSY          | nolink=true| notes={{mark c++11}}| Text file busy}}
{{dsc macro const | EWOULDBLOCK      | nolink=true| notes={{mark c++11}}| Operation would block}}
{{dsc macro const | EXDEV            | nolink=true| notes={{mark c++11}}| Cross-device link}}
{{dsc end}}

All values are required to be unique except that the values of {{tt|EOPNOTSUPP}} and {{tt|ENOTSUP}} may be identical and the values of {{tt|EAGAIN}} and {{tt|EWOULDBLOCK}} may be identical.

===Example===
{{example|code=
#include &lt;cerrno&gt;
#include &lt;cstring&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;

#define SHOW(x) std::cout &lt;&lt; std::setw(15) &lt;&lt; #x &lt;&lt; ": " &lt;&lt; std::strerror(x) &lt;&lt; '\n'

int main()
{
    std::cout &lt;&lt; "Known error codes/messages:\n\n";

    SHOW( E2BIG );
    SHOW( EACCES );
    SHOW( EADDRINUSE );
    SHOW( EADDRNOTAVAIL );
    SHOW( EAFNOSUPPORT );
    SHOW( EAGAIN );
    SHOW( EALREADY );
    SHOW( EBADF );
    SHOW( EBADMSG );
    SHOW( EBUSY );
    SHOW( ECANCELED );
    SHOW( ECHILD );
    SHOW( ECONNABORTED );
    SHOW( ECONNREFUSED );
    SHOW( ECONNRESET );
    SHOW( EDEADLK );
    SHOW( EDESTADDRREQ );
    SHOW( EDOM );
    SHOW( EEXIST );
    SHOW( EFAULT );
    SHOW( EFBIG );
    SHOW( EHOSTUNREACH );
    SHOW( EIDRM );
    SHOW( EILSEQ );
    SHOW( EINPROGRESS );
    SHOW( EINTR );
    SHOW( EINVAL );
    SHOW( EIO );
    SHOW( EISCONN );
    SHOW( EISDIR );
    SHOW( ELOOP );
    SHOW( EMFILE );
    SHOW( EMLINK );
    SHOW( EMSGSIZE );
    SHOW( ENAMETOOLONG );
    SHOW( ENETDOWN );
    SHOW( ENETRESET );
    SHOW( ENETUNREACH );
    SHOW( ENFILE );
    SHOW( ENOBUFS );
    SHOW( ENODATA );
    SHOW( ENODEV );
    SHOW( ENOENT );
    SHOW( ENOEXEC );
    SHOW( ENOLCK );
    SHOW( ENOLINK );
    SHOW( ENOMEM );
    SHOW( ENOMSG );
    SHOW( ENOPROTOOPT );
    SHOW( ENOSPC );
    SHOW( ENOSR );
    SHOW( ENOSTR );
    SHOW( ENOSYS );
    SHOW( ENOTCONN );
    SHOW( ENOTDIR );
    SHOW( ENOTEMPTY );
    SHOW( ENOTRECOVERABLE );
    SHOW( ENOTSOCK );
    SHOW( ENOTSUP );
    SHOW( ENOTTY );
    SHOW( ENXIO );
    SHOW( EOPNOTSUPP );
    SHOW( EOVERFLOW );
    SHOW( EOWNERDEAD );
    SHOW( EPERM );
    SHOW( EPIPE );
    SHOW( EPROTO );
    SHOW( EPROTONOSUPPORT );
    SHOW( EPROTOTYPE );
    SHOW( ERANGE );
    SHOW( EROFS );
    SHOW( ESPIPE );
    SHOW( ESRCH );
    SHOW( ETIME );
    SHOW( ETIMEDOUT );
    SHOW( ETXTBSY );
    SHOW( EWOULDBLOCK );
    SHOW( EXDEV );
}
|p=true
|output=
Known error codes/messages:

          E2BIG: Argument list too long
         EACCES: Permission denied
     EADDRINUSE: Address already in use
  EADDRNOTAVAIL: Cannot assign requested address
   EAFNOSUPPORT: Address family not supported by protocol
         EAGAIN: Resource temporarily unavailable
       EALREADY: Operation already in progress
          EBADF: Bad file descriptor
        EBADMSG: Bad message
          EBUSY: Device or resource busy
      ECANCELED: Operation canceled
         ECHILD: No child processes
   ECONNABORTED: Software caused connection abort
   ECONNREFUSED: Connection refused
     ECONNRESET: Connection reset by peer
        EDEADLK: Resource deadlock avoided
   EDESTADDRREQ: Destination address required
           EDOM: Numerical argument out of domain
         EEXIST: File exists
         EFAULT: Bad address
          EFBIG: File too large
   EHOSTUNREACH: No route to host
          EIDRM: Identifier removed
         EILSEQ: Invalid or incomplete multibyte or wide character
    EINPROGRESS: Operation now in progress
          EINTR: Interrupted system call
         EINVAL: Invalid argument
            EIO: Input/output error
        EISCONN: Transport endpoint is already connected
         EISDIR: Is a directory
          ELOOP: Too many levels of symbolic links
         EMFILE: Too many open files
         EMLINK: Too many links
       EMSGSIZE: Message too long
   ENAMETOOLONG: File name too long
       ENETDOWN: Network is down
      ENETRESET: Network dropped connection on reset
    ENETUNREACH: Network is unreachable
         ENFILE: Too many open files in system
        ENOBUFS: No buffer space available
        ENODATA: No data available
         ENODEV: No such device
         ENOENT: No such file or directory
        ENOEXEC: Exec format error
         ENOLCK: No locks available
        ENOLINK: Link has been severed
         ENOMEM: Cannot allocate memory
         ENOMSG: No message of desired type
    ENOPROTOOPT: Protocol not available
         ENOSPC: No space left on device
          ENOSR: Out of streams resources
         ENOSTR: Device not a stream
         ENOSYS: Function not implemented
       ENOTCONN: Transport endpoint is not connected
        ENOTDIR: Not a directory
      ENOTEMPTY: Directory not empty
ENOTRECOVERABLE: State not recoverable
       ENOTSOCK: Socket operation on non-socket
        ENOTSUP: Operation not supported
         ENOTTY: Inappropriate ioctl for device
          ENXIO: No such device or address
     EOPNOTSUPP: Operation not supported
      EOVERFLOW: Value too large for defined data type
     EOWNERDEAD: Owner died
          EPERM: Operation not permitted
          EPIPE: Broken pipe
         EPROTO: Protocol error
EPROTONOSUPPORT: Protocol not supported
     EPROTOTYPE: Protocol wrong type for socket
         ERANGE: Numerical result out of range
          EROFS: Read-only file system
         ESPIPE: Illegal seek
          ESRCH: No such process
          ETIME: Timer expired
      ETIMEDOUT: Connection timed out
        ETXTBSY: Text file busy
    EWOULDBLOCK: Resource temporarily unavailable
          EXDEV: Invalid cross-device link
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/error/dsc errc}}
{{dsc inc|cpp/error/dsc errno}}
{{dsc inc|cpp/io/c/dsc perror}}
{{dsc inc|cpp/string/byte/dsc strerror}}
{{dsc see c|c/error/errno_macros|Error numbers|nomono=true}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}