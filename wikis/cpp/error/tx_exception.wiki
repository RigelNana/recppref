{{cpp/title|tx_exception}}
{{cpp/error/navbar}}
{{ddcl|header=stdexcept|since=tm_ts|
template&lt; class T &gt;
class tx_exception : public std::runtime_error;
}}

Defines an exception type that can be used to cancel and roll back an atomic transaction initiated by the keyword {{ltt|cpp/language/transactional_memory|atomic_cancel}}.

If {{tt|T}} is not {{named req|TriviallyCopyable}}, the program that specializes {{tt|std::tx_exception&lt;T&gt;}} is ill-formed.

===Member functions===
{{member|{{small|std::tx_exception::}}tx_exception|2=
{{dcl begin}}
{{dcl|num=1|since=tm_ts|
explicit tx_exception( T value ) transaction_safe;
}}
{{dcl|num=2|since=tm_ts|
tx_exception( T value, const std::string&amp; what_arg ) transaction_safe;
}}
{{dcl|num=3|since=tm_ts|
tx_exception( T value, const char* what_arg ) transaction_safe;
}}
{{dcl|num=4|since=tm_ts|
tx_exception( const tx_exception&amp; other ) transaction_safe noexcept;
}}
{{dcl end}}

@1-3@ Constructs the exception object with {{c|what_arg}} as explanatory string that can be accessed through {{lc|what()}} and {{c|value}} as the object that can be accessed through {{lc|get()}}.

@4@ Copy constructor. If {{c|*this}} and {{c|other}} both have dynamic type {{tt|std::tx_exception&lt;T&gt;}} then {{c|1=std::strcmp(what(), other.what()) == 0}}.

===Parameters===
{{par begin}}
{{par|value|payload object}}
{{par|what_arg|explanatory string}}
{{par|other|another exception object to copy}}
{{par end}}

===Exceptions===
@1-3@ May throw implementation-defined exceptions.
}}

{{member|{{small|std::tx_exception::}}operator{{=}}|
{{dcl begin}}
{{dcl|since=tm_ts|1=
tx_exception&amp; operator=( const tx_exception&amp; other ) transaction_safe noexcept;
}}
{{dcl end}}

Assigns the contents with those of {{c|other}}. If {{c|*this}} and {{c|other}} both have dynamic type {{tt|std::tx_exception&lt;T&gt;}} then {{c|1=std::strcmp(what(), other.what()) == 0}} after assignment.

===Parameters===
{{par begin}}
{{par|other|another exception object to assign with}}
{{par end}}

===Return value===
{{c|*this}}
}}

{{member|{{small|std::tx_exception::}}get|2=
{{dcl begin}}
{{dcl|since=tm_ts|
T get() const transaction_safe;
}}
{{dcl end}}

Returns the payload object held by the exception object.

===Exceptions===
May throw implementation-defined exceptions.
}}

{{member|{{small|std::tx_exception::}}what|
{{dcl begin}}
{{dcl|since=tm_ts|
virtual const char* what() const transaction_safe_dynamic noexcept;
}}
{{dcl end}}

Returns the explanatory string.

===Parameters===
(none)

===Return value===
Pointer to a null-terminated string with explanatory information.
}}

{{cpp/error/runtime_error/inherit}}
{{cpp/error/exception/inherit}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}