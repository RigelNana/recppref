{{cpp/title|make_exception_ptr}}
{{cpp/error/navbar}}
{{ddcla|header=exception|since=c++11|constexpr=c++26|
template&lt; class E &gt;
std::exception_ptr make_exception_ptr( E e ) noexcept;
}}

Creates an {{lc|std::exception_ptr}} that holds a reference to a copy of {{c|e}}. This is done as if executing the following code:
{{source|
try
{
    throw e;
}
catch(...)
{
    return std::current_exception();
}
}}

===Parameters===
{{par begin}}
{{par|e|exception object to create a reference to the copy of}}
{{par end}}

===Return value===
An instance of {{lc|std::exception_ptr}} holding a reference to the copy of {{c|e}}, or to an instance of {{lc|std::bad_alloc}} or to an instance of {{lc|std::bad_exception}} (see {{lc|std::current_exception}}).

===Notes===
The parameter is passed by value and is subject to slicing.

{{ftm begin}}
{{ftm|__cpp_lib_constexpr_exceptions|value=202411L|std=C++26|{{c/core|constexpr}} for exception types}}
{{ftm end}}

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/error/dsc current_exception}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}