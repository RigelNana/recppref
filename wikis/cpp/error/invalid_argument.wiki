{{cpp/title|invalid_argument}}
{{cpp/error/navbar}}
{{ddcl|header=stdexcept|
class invalid_argument;
}}

Defines a type of object to be thrown as exception. It reports errors that arise because an argument value has not been accepted.

This exception is thrown by {{lc|std::bitset::bitset}}, and the {{lc|std::stoi}} and {{lc|std::stof}} families of functions.

{{inheritance diagram/std-invalid_argument}}

===Member functions===
{{cpp/error/exception/member of derived with message|invalid_argument}}

{{inherited|[[cpp/error/logic_error|{{small|std::}}logic_error]]|}}

{{cpp/error/exception/inherit}}

===Notes===
The purpose of this exception type is similar to the error condition {{lc|std::errc::invalid_argument}} (thrown in {{lc|std::system_error}} from member functions of {{lc|std::thread}}) and the related errno constant {{lc|EINVAL}}.

===Example===
{{example|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;
#include &lt;stdexcept&gt;
#include &lt;string&gt;

int main()
{
    try
    {
        std::bitset&lt;4&gt;{"012"}; // Throws: only '0' or '1' expected
    }
    catch (std::invalid_argument const&amp; ex)
    {
        std::cout &lt;&lt; "#1: " &lt;&lt; ex.what() &lt;&lt; '\n';
    }
    
    try
    {
        [[maybe_unused]] int f = std::stoi("ABBA"); // Throws: no conversion
    }
    catch (std::invalid_argument const&amp; ex)
    {
        std::cout &lt;&lt; "#2: " &lt;&lt; ex.what() &lt;&lt; '\n';
    }

    try
    {
        [[maybe_unused]] float f = std::stof("(3.14)"); // Throws: no conversion
    }
    catch (std::invalid_argument const&amp; ex)
    {
        std::cout &lt;&lt; "#3: " &lt;&lt; ex.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
#1: bitset string ctor has invalid argument
#2: stoi: no conversion
#3: stof: no conversion
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=254|std=C++98|before=the constructor accepting {{c|const char*}} was missing|after=added}}
{{dr list item|wg=lwg|dr=471|std=C++98|before=the explanatory strings of {{tt|std::invalid_argument}}'s&lt;br&gt;copies were implementation-defined|after=they are the same as that of the&lt;br&gt;original {{tt|std::invalid_argument}} object}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}