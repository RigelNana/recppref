{{cpp/title|system_category}}
{{cpp/error/navbar}}
{{ddcl|header=system_error|since=c++11|
const std::error_category&amp; system_category() noexcept;
}}

Obtains a reference to the static error category object for errors reported by the operating system. The object is required to override the virtual function {{lc|std::error_category::name()}} to return a pointer to the string {{c|"system"}}. It is also required to override the virtual function {{lc|std::error_category::default_error_condition()}} to map the error codes that match POSIX {{lc|errno}} values to {{lc|std::generic_category}}.

===Parameters===
(none)

===Return value===
A reference to the static object of unspecified runtime type, derived from {{lc|std::error_category}}.

===Notes===
On Windows, {{tt|system_category()}} typically maps some [https://learn.microsoft.com/en-us/windows/win32/debug/system-error-codes#system-error-codes Windows error codes] to POSIX ones. On POSIX, {{tt|system_category()}} tends to be equivalent to {{lc|std::generic_category()}} except for the name.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;system_error&gt;

int main()
{
    for (int const code : {EDOM, 10001})
    {
        const std::error_condition econd =
            std::system_category().default_error_condition(code);

        std::cout &lt;&lt; "Category: " &lt;&lt; econd.category().name() &lt;&lt; '\n'
                  &lt;&lt; "Value:    " &lt;&lt; econd.value() &lt;&lt; '\n'
                  &lt;&lt; "Message:  " &lt;&lt; econd.message() &lt;&lt; "\n\n";
    }
}
|p=true
|output=
Category: generic
Value:    33
Message:  Numerical argument out of domain

Category: system
Value:    10001
Message:  Unknown error 10001
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/error/dsc generic_category}}
{{dsc inc|cpp/error/dsc errc}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}