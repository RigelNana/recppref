{{cpp/title|set_unexpected}}
{{cpp/error/navbar}}
{{dcl begin}}
{{dcl header|exception}}
{{dcl rev begin}}
{{dcl|until=c++11|
std::unexpected_handler set_unexpected( std::unexpected_handler f ) throw();
}}
{{dcl|deprecated=c++11|until=c++17|
std::unexpected_handler set_unexpected( std::unexpected_handler f ) noexcept;
}}
{{dcl rev end}}
{{dcl end}}

Makes {{c|f}} the new global {{lc|std::unexpected_handler}} and returns the previously installed {{lc|std::unexpected_handler}}.

{{rrev|since=c++11|
This function is thread-safe. Every call to {{tt|std::set_unexpected}} ''synchronizes-with'' (see {{lc|std::memory_order}}) the subsequent calls to {{tt|std::set_unexpected}} and {{lc|std::get_unexpected}}
}}

===Parameters===
{{par begin}}
{{par|f|pointer to function of type {{lc|std::unexpected_handler}}, or null pointer}}
{{par end}}

===Return value===
The previously-installed unexpected handler, or a null pointer value if none was installed.

===See also===
{{dsc begin}}
{{dsc inc|cpp/error/dsc unexpected}}
{{dsc inc|cpp/error/dsc get_unexpected}}
{{dsc inc|cpp/error/dsc unexpected_handler}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}