{{title|{{tt|while}} loop}}
{{cpp/language/statements/navbar}}
Conditionally executes a statement repeatedly.

===Syntax===
{{sdsc begin}}
{{sdsc|{{spar optional|attr}} {{ttb|while (}} {{spar|condition}} {{ttb|)}} {{spar|statement}}}}
{{sdsc end}}

{{par begin}}
{{par|{{spar|attr}}|{{mark since c++11}} any number of {{rlp|attributes}}}}
{{par|{{spar|condition}}|a [[#Condition|condition]]}}
{{par|{{spar|statement}}|a {{rlp|statements|statement}} (typically a compound statement)}}
{{par end}}

{{cpp/language/condition|usage=determine whether {{spar|statement}} will be executed|bool=yes}}

===Explanation===
A {{c/core|while}} statement is equivalent to

{{sdsc begin}}
{{sdsc|
{{c/core|/* label */}} {{ttb|:}}&lt;br&gt;
{{ttb|{}}&lt;br&gt;
:{{ttb|if (}} {{spar|condition}} {{ttb|)}}&lt;br&gt;
:{{ttb|{}}&lt;br&gt;
::{{spar|statement}}&lt;br&gt;
::{{ttb|goto}} {{c/core|/* label */}} {{ttb|;}}&lt;br&gt;
:{{ttb|}&lt;!----&gt;}}&lt;br&gt;
{{ttb|}&lt;!----&gt;}}
}}
{{sdsc end}}

If {{spar|condition}} is a declaration, the variable it declares is destroyed and created with each iteration of the loop.

If the loop needs to be terminated within {{spar|statement}}, a {{rlp|break|{{c/core|break}} statement}} can be used as terminating statement.

If the current iteration needs to be terminated within {{spar|statement}}, a {{rlp|continue|{{c/core|continue}} statement}} can be used as shortcut.

===Notes===
Regardless of whether {{spar|statement}} is a compound statement, it always introduces a {{rlp|scope|block scope}}. Variables declared in it are only visible in the loop body, in other words,
{{source|1=
while (--x &gt;= 0)
    int i;
// i goes out of scope
}}
is the same as
{{source|1=
while (--x &gt;= 0)
{
    int i;
} // i goes out of scope
}}

{{cpp/language/process guarantee note}}

===Keywords===
{{ltt|cpp/keyword/while}}

===Example===
{{example
|code=
#include &lt;iostream&gt;

int main()
{
    // while loop with a single statement
    int i = 0;
    while (i &lt; 10)
         i++;
    std::cout &lt;&lt; i &lt;&lt; '\n';
    
    // while loop with a compound statement
    int j = 2;
    while (j &lt; 9)
    {
        std::cout &lt;&lt; j &lt;&lt; ' ';
        j += 2;
    }
    std::cout &lt;&lt; '\n';
    
    // while loop with a declaration condition
    char cstr[] = "Hello";
    int k = 0;
    while (char c = cstr[k++])
        std::cout &lt;&lt; c;
    std::cout &lt;&lt; '\n';
}
|output=
10
2 4 6 8
Hello
}}

===See also===
{{dsc begin}}
{{dsc see c|c/language/while}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}