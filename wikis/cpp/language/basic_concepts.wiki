{{title|Basic concepts}}
{{cpp/language/basics/navbar}}

This section provides definitions for the specific terminology and the concepts used when describing the C++ programming language.

A C++ program is a sequence of text files (typically header and source files) that contain {{rlp|declarations}}. They undergo {{rlp|translation phases|translation}} to become an executable program, which is executed when the C++ implementation calls its {{rlp|main function}}.

Certain words in a C++ program have special meaning, and these are known as [[cpp/keyword|keywords]]. Others can be used as {{rlp|identifiers}}. [[cpp/comment|Comments]] are ignored during translation. C++ programs also contain {{rlpsd|expressions#Literals}}, the values of characters inside them are determined by {{rlp|charset|character sets and encodings}}. Certain characters in the program have to be represented with {{rlp|escape|escape sequences}}.

The ''entities'' of a C++ program are values, {{rlp|objects}}, {{rlp|reference}}s{{rev inl|since=c++17|, {{rlp|structured binding}}s}}, {{rlp|functions}}, {{rlp|enum|enumerators}}, {{rlp|type}}s, class members, {{rlp|templates}}, {{rlp|template specialization}}s{{rev inl|since=c++11|, {{rlp|pack}}s}}, and {{rlp|namespace}}s. Preprocessor [[cpp/preprocessor/replace|macros]] are not C++ entities.

''{{rlp|declarations|Declarations}}'' may introduce entities, associate them with {{rlp|name}}s and define their properties. The declarations that define all properties required to use an entity are {{rlp|definition}}s. A program must contain only one definition of any non-inline function or variable that is {{rlp|definition#ODR-use|odr-used}}.

Definitions of functions usually include sequences of {{rlp|statements}}, some of which include {{rlp|expressions}}, which specify the computations to be performed by the program.

Names encountered in a program are associated with the declarations that introduced them using {{rlp|lookup|name lookup}}. Each name is only valid within a part of the program called its {{rlp|scope}}. Some names have {{rlp|storage duration|linkage}} which makes them refer to the same entities when they appear in different scopes or translation units.

Each object, reference, function, expression in C++ is associated with a {{rlp|type}}, which may be {{rlp|types|fundamental}}, compound, or {{rlp|classes|user-defined}}, complete or {{rlp|incomplete type|incomplete}}, etc.

Declared objects and declared references that are not {{rlp|data members|non-static data members}} are ''variables''.

===See also===
{{dsc begin}}
{{dsc see c|c/language/basic_concepts|Basic concepts|nomono=true}}
{{dsc end}}

{{langlinks|es|ja|ko|ru|zh}}