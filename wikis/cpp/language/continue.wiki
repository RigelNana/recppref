{{title|{{tt|continue}} statement}}
{{cpp/language/statements/navbar}}
Causes the remaining portion of the enclosing {{rlp|for}}, {{rlp|range-for}}, {{rlp|while}} or {{rlp|do|do-while}} loop body to be skipped.

Used when it is otherwise awkward to ignore the remaining portion of the loop using conditional statements.

===Syntax===
{{sdsc begin}}
{{sdsc|{{spar optional|attr}} {{ttb|continue}} {{ttb|;}}}}
{{sdsc end}}

===Explanation===
The {{tt|continue}} statement causes a jump, as if by {{rlp|goto}} to the end of the loop body (it may only appear within the loop body of {{rlp|for}}, {{rlp|range-for}}, {{rlp|while}}, and {{rlp|do|do-while}} loops).

More precisely,

For {{rlp|while}} loop, it acts as
{{source|1=
while (/* ... */)
{
   // ...
   continue; // acts as goto contin;
   // ...
   contin:;
}
}}

For {{rlp|do|do-while}} loop, it acts as:
{{source|1=
do
{
    // ...
    continue; // acts as goto contin;
    // ...
    contin:;
} while (/* ... */);
}}

For {{rlp|for}} and {{rlp|range-for}} loop, it acts as:
{{source|1=
for (/* ... */)
{
    // ...
    continue; // acts as goto contin;
    // ...
    contin:;
}
}}

===Keywords===
{{ltt|cpp/keyword/continue}}

===Example===
{{example
|code=
#include &lt;iostream&gt;

int main()
{
    for (int i = 0; i &lt; 10; ++i)
    {
        if (i != 5)
            continue;
        std::cout &lt;&lt; i &lt;&lt; ' ';      // this statement is skipped each time i != 5
    }
    std::cout &lt;&lt; '\n';

    for (int j = 0; 2 != j; ++j)
        for (int k = 0; k &lt; 5; ++k) // only this loop is affected by continue
        {
            if (k == 3)
                continue;
            // this statement is skipped each time k == 3:
            std::cout &lt;&lt; '(' &lt;&lt; j &lt;&lt; ',' &lt;&lt; k &lt;&lt; ") ";
        }
    std::cout &lt;&lt; '\n';
}
|output=
5
(0,0) (0,1) (0,2) (0,4) (1,0) (1,1) (1,2) (1,4)
}}

===See also===
{{dsc begin}}
{{dsc see c|c/language/continue}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}