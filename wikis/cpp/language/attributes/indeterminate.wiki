{{cpp/language/attributes/title|indeterminate|notes={{mark since c++26}}}}
{{cpp/language/attributes/navbar}}

Indicates that the variable or function parameter has an indeterminate value if it is not initialized.

===Syntax===
{{sdsc begin}}
{{sdsc|
{{ttb|{{c/core|[[indeterminate]]}}}}
}}
{{sdsc end}}

===Explanation===
{{attr|indeterminate}} can be applied to the definition of a block variable with automatic {{lt|cpp/language/storage duration}} or to a declaration of a parameter of a [[cpp/language/function|function declaration]]. The attribute specifies that the bytes comprising the storage of an object with automatic storage duration is initially [[cpp/language/default initialization#Indeterminate and erroneous values|indeterminate]] rather than erroneous.

If a function parameter is declared with {{attr|indeterminate}}, it must be declared in the first declaration of its function. If a function parameter is declared with {{attr|indeterminate}} in the first declaration of its function in one translation unit and the same function is declared without {{attr|indeterminate}} on the same parameter in its first declaration in another translation unit, the program is [[cpp/language/ub#Explanation|ill-formed, no diagnostic required]].

===Notes===
The {{attr/core|indeterminate}} attribute restores the undefined behavior that was implicitly introduced until C++26. It may make compilers consider a code path reading an indeterminate value unreachable.

===Example===
{{example
|code=
void f(int);

void g()
{
    int x [[indeterminate]]; // indeterminate value
    int y;                   // erroneous value
    
    f(x); // undefined behavior
    f(y); // erroneous behavior
}

struct T
{
    T() {}
    int x;
};

void h(T a [[indeterminate]], T b)
{
    f(a.x); // undefined behavior when called below
    f(b.x); // erroneous behavior when called below
}

h(T(), T());
}}

===References===
{{ref std c++26}}
{{ref std|section=9.12.7|title=Indeterminate storage|id=dcl.attr.indet}}
{{ref std end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}