{{cpp/language/attributes/title|deprecated|notes={{mark since c++14}}}}
{{cpp/language/attributes/navbar}}

Indicates that the name or entity declared with this attribute is [[enwiki:Deprecation|deprecated]], that is, the use is allowed, but discouraged for some reason.

===Syntax===
{{sdsc begin}}
{{sdsc|num=1|1=
{{ttb|{{c/core|[[deprecated]]}}}}
}}
{{sdsc|num=2|1=
{{ttb|&lt;nowiki&gt;[[&lt;/nowiki&gt;deprecated(}} {{spar|string-literal}} {{ttb|)&lt;nowiki&gt;]]&lt;/nowiki&gt;}}
}}
{{sdsc end}}

{{par begin}}
{{par|{{spar|string-literal}}|an [[cpp/language/string literal#Unevaluated strings|unevaluated string literal]] that could be used to explain the rationale for deprecation and/or to suggest a replacing entity}}
{{par end}}

===Explanation===
Indicates that the use of the name or entity declared with this attribute is allowed, but discouraged for some reason. Compilers typically issue warnings on such uses. The {{spar|string-literal}}, if specified, is usually included in the warnings.

This attribute is allowed in declarations of the following names or entities:

* [[cpp/language/classes|class/struct/union]], e.g., {{c|struct [[deprecated]] S;}},
* [[cpp/language/typedef|typedef-name]], including those declared by [[cpp/language/type_alias|alias declaration]], e.g.,
:* {{c|[[deprecated]] typedef S* PS;}},
:* {{c|1=using PS [[deprecated]] = S*;}},
* (non-member) variable, e.g., {{c|[[deprecated]] int x;}},
* [[cpp/language/static|static data member]], e.g., {{c|struct S { [[deprecated]] static constexpr char CR{13}; };}},
* [[cpp/language/data members|non-static data member]], e.g., {{c|union U { [[deprecated]] int n; };}},
* {{lt|cpp/language/function}}, e.g., {{c|[[deprecated]] void f();}},
* {{lt|cpp/language/namespace}}, e.g., {{c|namespace [[deprecated]] NS { int x; }&lt;!----&gt;}},
* [[cpp/language/enum|enumeration]], e.g., {{c|enum [[deprecated]] E {};}},
{{rrev|since=c++17|1=
* enumerator, e.g., {{c|1=enum { A [[deprecated]], B [[deprecated]] = 42 };}},
}}
* {{lt|cpp/language/template specialization}}, e.g., {{c|template&lt;&gt; struct [[deprecated]] X&lt;int&gt; {};}}.

A name declared non-deprecated may be redeclared deprecated. A name declared deprecated cannot be un-deprecated by redeclaring it without this attribute.

===Example===
{{example
|code=
#include &lt;iostream&gt;

[[deprecated]]
void TriassicPeriod()
{
    std::clog &lt;&lt; "Triassic Period: [251.9 - 208.5] million years ago.\n";
}

[[deprecated("Use NeogenePeriod() instead.")]]
void JurassicPeriod()
{
    std::clog &lt;&lt; "Jurassic Period: [201.3 - 152.1] million years ago.\n";
}

[[deprecated("Use calcSomethingDifferently(int).")]]
int calcSomething(int x)
{
    return x * 2;
}

int main()
{
    TriassicPeriod();
    JurassicPeriod();
}
|p=true
|output=
Triassic Period: [251.9 - 208.5] million years ago.
Jurassic Period: [201.3 - 152.1] million years ago.

main.cpp:20:5: warning: 'TriassicPeriod' is deprecated [-Wdeprecated-declarations]
    TriassicPeriod();
    ^
main.cpp:3:3: note: 'TriassicPeriod' has been explicitly marked deprecated here
[[deprecated]]
  ^
main.cpp:21:5: warning: 'JurassicPeriod' is deprecated: Use NeogenePeriod() instead â® 
 [-Wdeprecated-declarations]
    JurassicPeriod();
    ^
main.cpp:8:3: note: 'JurassicPeriod' has been explicitly marked deprecated here
[[deprecated("Use NeogenePeriod() instead")]]
  ^
2 warnings generated.
}}

===References===
{{ref std c++23}}
{{ref std|section=9.12.5|title=Deprecated attribute|id=dcl.attr.deprecated}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=9.12.4|title=Deprecated attribute|id=dcl.attr.deprecated}}
{{ref std end}}
{{ref std c++17}}
{{ref std|section=10.6.4|title=Deprecated attribute|id=dcl.attr.deprecated}}
{{ref std end}}
{{ref std c++14}}
{{ref std|section=7.6.5|title=Deprecated attribute|id=dcl.attr.deprecated}}
{{ref std end}}

===See also===
{{dsc begin}}
{{dsc see c|c/language/attributes/deprecated}}
{{dsc end}}

{{langlinks|es|ja|ru|zh}}