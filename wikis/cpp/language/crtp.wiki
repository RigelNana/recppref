{{title|Curiously Recurring Template Pattern}}
{{cpp/language/navbar}}

The {{enwiki|Curiously Recurring Template Pattern}} is an idiom in which a class {{tt|X}} derives from a class template {{tt|Y}}, taking a template parameter {{tt|Z}}, where {{tt|Y}} is instantiated with {{c|1=Z = X}}.  For example,

{{source|1=
template&lt;class Z&gt;
class Y {};

class X : public Y&lt;X&gt; {};
}}

===Example===
{{example
|CRTP may be used to implement "compile-time polymorphism", when a base class exposes an interface, and derived classes implement such interface.
|code=
#include &lt;cstdio&gt;

#ifndef __cpp_explicit_this_parameter // Traditional syntax

template &lt;class Derived&gt;
struct Base
{
    void name() { static_cast&lt;Derived*&gt;(this)-&gt;impl(); }
protected:
    Base() = default; // prohibits the creation of Base objects, which is UB
};
struct D1 : public Base&lt;D1&gt; { void impl() { std::puts("D1::impl()"); } };
struct D2 : public Base&lt;D2&gt; { void impl() { std::puts("D2::impl()"); } };

#else // C++23 deducing-this syntax

struct Base { void name(this auto&amp;&amp; self) { self.impl(); } };
struct D1 : public Base { void impl() { std::puts("D1::impl()"); } };
struct D2 : public Base { void impl() { std::puts("D2::impl()"); } };

#endif

int main()
{
    D1 d1; d1.name();
    D2 d2; d2.name();
}
|output=
D1::impl()
D2::impl()
}}

===See also===
{{dsc begin}}
{{dsc|[[cpp/language/member functions#Explicit object member functions|Explicit object member functions (deducing {{tt|this}})]] {{mark c++23}}}}
{{dsc inc|cpp/memory/dsc enable_shared_from_this}}
{{dsc inc|cpp/ranges/dsc view_interface}}
{{dsc end}}

===External links===
{{elink begin}}
{{elink|[https://www.sandordargo.com/blog/2024/12/04/crtp-vs-concepts Replace CRTP with concepts?] &amp;mdash; Sandor Drago's blog}}
{{elink|[https://www.sandordargo.com/blog/2019/03/13/the-curiously-recurring-templatep-pattern-CRTP The Curiously Recurring Template Pattern (CRTP)] &amp;mdash; Sandor Drago's blog}}
{{elink|[https://www.fluentcpp.com/2017/05/12/curiously-recurring-template-pattern/ The Curiously Recurring Template Pattern (CRTP) - 1] &amp;mdash; Fluent{{c/core|{C++}&lt;!----&gt;}}}}
{{elink|[https://www.fluentcpp.com/2017/05/16/what-the-crtp-brings-to-code/ What the CRTP can bring to your code - 2] &amp;mdash; Fluent{{c/core|{C++}&lt;!----&gt;}}}}
{{elink|[https://www.fluentcpp.com/2017/05/19/crtp-helper/ An implementation helper for the CRTP - 3] &amp;mdash; Fluent{{c/core|{C++}&lt;!----&gt;}}}}
{{elink|[https://stackoverflow.com/questions/4173254/what-is-the-curiously-recurring-template-pattern-crtp What is the Curiously Recurring Template Pattern (CRTP)] &amp;mdash; SO}}
{{elink end}}


{{langlinks|de|es|fr|it|ja|pt|ru|zh}}