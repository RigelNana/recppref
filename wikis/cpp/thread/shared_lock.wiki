{{cpp/title|shared_lock}}
{{cpp/thread/shared_lock/navbar}}
{{ddcl|header=shared_mutex|since=c++14|
template&lt; class Mutex &gt;
class shared_lock;
}}

The class {{tt|shared_lock}} is a general-purpose shared mutex ownership wrapper allowing deferred locking, timed locking and transfer of lock ownership. Locking a {{tt|shared_lock}} locks the associated shared mutex in shared mode (to lock it in exclusive mode, {{lc|std::unique_lock}} can be used).

The {{tt|shared_lock}} class is movable, but not copyable &amp;ndash; it meets the requirements of {{named req|MoveConstructible}} and {{named req|MoveAssignable}} but not of {{named req|CopyConstructible}} or {{named req|CopyAssignable}}.

{{tt|shared_lock}} meets the {{named req|Lockable}} requirements. If {{tt|Mutex}} meets the {{named req|SharedTimedLockable}} requirements, {{tt|shared_lock}} also meets {{named req|TimedLockable}} requirements.

In order to wait in a shared mutex in shared ownership mode, {{lc|std::condition_variable_any}} can be used ({{lc|std::condition_variable}} requires {{lc|std::unique_lock}} and so can only wait in unique ownership mode).

===Template parameters===
{{par begin}}
{{par|Mutex|the type of the shared mutex to lock. The type must meet the {{named req|SharedLockable}} requirements&lt;!-- P2160R1 --&gt;}}
{{par end}}

===Member types===
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|mutex_type}}|{{tt|Mutex}}}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/thread/shared_lock/dsc constructor}}
{{dsc inc|cpp/thread/shared_lock/dsc destructor}}
{{dsc inc|cpp/thread/shared_lock/dsc operator{{=}}}}

{{dsc h2|Shared locking}}
{{dsc inc|cpp/thread/shared_lock/dsc lock}}
{{dsc inc|cpp/thread/shared_lock/dsc try_lock}}
{{dsc inc|cpp/thread/shared_lock/dsc try_lock_for}}
{{dsc inc|cpp/thread/shared_lock/dsc try_lock_until}}
{{dsc inc|cpp/thread/shared_lock/dsc unlock}}

{{dsc h2|Modifiers}}
{{dsc inc|cpp/thread/shared_lock/dsc swap}}
{{dsc inc|cpp/thread/shared_lock/dsc release}}

{{dsc h2|Observers}}
{{dsc inc|cpp/thread/shared_lock/dsc mutex}}
{{dsc inc|cpp/thread/shared_lock/dsc owns_lock}}
{{dsc inc|cpp/thread/shared_lock/dsc operator bool}}
{{dsc end}}

===Non-member functions===
{{dsc begin}}
{{dsc inc|cpp/thread/shared_lock/dsc swap2}}
{{dsc end}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2981|std=C++17|before=redundant deduction guide from {{tt|shared_lock&lt;Mutex&gt;}} was provided|after=removed}}
{{dr list end}}

{{langlinks|de|es|ja|ru|zh}}