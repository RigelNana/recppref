{{cpp/thread/packaged_task/title|reset}}
{{cpp/thread/packaged_task/navbar}}
{{ddcl|since=c++11|
void reset();
}}

Resets the state abandoning the results of previous executions. New shared state is constructed.

Equivalent to {{c|1=*this = packaged_task(std::move(f))}}, where {{tt|f}} is the stored task.

===Parameters===
(none)

===Return value===
(none)

===Exceptions===
* {{lc|std::future_error}} if {{c|*this}} has no shared state. The error condition is set to {{ltt|cpp/thread/future_errc|no_state}}.
* {{lc|std::bad_alloc}} if there was not enough memory for a new shared state.
* Any exception thrown by the [[cpp/thread/packaged_task/packaged_task|move constructor]] of the new {{tt|packaged_task}}.

===Example===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;future&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;

int main()
{
    std::packaged_task&lt;int(int,int)&gt; task([](int a, int b)
    {
        return std::pow(a, b);
    });
    std::future&lt;int&gt; result = task.get_future();
    task(2, 9);
    std::cout &lt;&lt; "2^9 = " &lt;&lt; result.get() &lt;&lt; '\n';

    task.reset();
    result = task.get_future();
    std::thread task_td(std::move(task), 2, 10);
    task_td.join();
    std::cout &lt;&lt; "2^10 = " &lt;&lt; result.get() &lt;&lt; '\n';
}
|output=
2^9 = 512
2^10 = 1024
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}