{{cpp/thread/counting_semaphore/title|release}}
{{cpp/thread/counting_semaphore/navbar}}
{{dcl begin}}
{{dcl|since=c++20|1=
void release( std::ptrdiff_t update = 1 );
}}
{{dcl end}}

Atomically increments the internal counter by the value of {{c|update}}. Any thread(s) waiting for the counter to be greater than {{c|0}}, such as due to being blocked in {{c|acquire}}, will subsequently be unblocked.

This operation strongly happens before invocations of {{c|try_acquire}} that observe the result of the effects.

===Preconditions===
Both {{c|1=update &gt;= 0}} and {{c|1=update &lt;= max() - counter}} are {{c|true}}, where {{tt|counter}} is the value of the internal counter.

===Parameters===
{{par begin}}
{{par|update|the amount to increment the internal counter by}}
{{par end}}

===Exceptions===
May throw {{lc|std::system_error}}.

===See also===
{{dsc begin}}
{{dsc inc|cpp/thread/counting_semaphore/dsc acquire}}
{{dsc inc|cpp/thread/counting_semaphore/dsc try_acquire}}
{{dsc inc|cpp/thread/counting_semaphore/dsc try_acquire_for}}
{{dsc inc|cpp/thread/counting_semaphore/dsc try_acquire_until}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}