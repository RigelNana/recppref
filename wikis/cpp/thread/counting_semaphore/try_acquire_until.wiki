{{cpp/thread/counting_semaphore/title|try_acquire_until}}
{{cpp/thread/counting_semaphore/navbar}}
{{dcl begin}}
{{dcl|since=c++20|
template&lt; class Clock, class Duration &gt;
bool try_acquire_until( const std::chrono::time_point&lt;Clock, Duration&gt;&amp; abs_time );
}}
{{dcl end}}

Tries to atomically decrement the internal counter by {{c|1}} if it is greater than {{c|0}}; otherwise blocks until it is greater than {{c|0}} and can successfully decrement the internal counter, or the {{c|abs_time}} time point has been passed.

The programs is ill-formed if {{c|std::chrono::is_clock_v&lt;Clock&gt;}} is {{c|false}}.

===Preconditions===
{{tt|Clock}} meets the {{named req|Clock}} requirements.

===Parameters===
{{par begin}}
{{par|abs_time|the ''earliest'' time the function must wait until in order to fail}}
{{par end}}

===Return value===
{{c|true}} if it decremented the internal counter, otherwise {{c|false}}.

===Exceptions===
May throw {{lc|std::system_error}} or a timeout-related exception.

===Notes===
In practice the function may take longer than {{c|abs_time}} to fail.

===See also===
{{dsc begin}}
{{dsc inc|cpp/thread/counting_semaphore/dsc release}}
{{dsc inc|cpp/thread/counting_semaphore/dsc acquire}}
{{dsc inc|cpp/thread/counting_semaphore/dsc try_acquire}}
{{dsc inc|cpp/thread/counting_semaphore/dsc try_acquire_for}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}