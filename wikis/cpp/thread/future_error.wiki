{{cpp/title|future_error}}
{{cpp/thread/future_error/navbar}}
{{dcl begin}}
{{dcl header|future}}
{{dcl|since=c++11|
class future_error;
}}
{{dcl end}}

The class {{lc|std::future_error}} defines an exception object that is thrown on failure by the functions in the thread library that deal with asynchronous execution and shared states ({{lc|std::future}}, {{lc|std::promise}}, etc). Similar to {{lc|std::system_error}}, this exception carries an error code compatible with {{lc|std::error_code}}.

{{inheritance diagram/std-future_error}}

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/thread/future_error/dsc constructor}}
{{dsc inc|cpp/thread/future_error/dsc operator{{=}}}}
{{dsc inc|cpp/thread/future_error/dsc code}}
{{dsc inc|cpp/thread/future_error/dsc what}}
{{dsc end}}

{{inherited|[[cpp/error/logic_error|{{small|std::}}logic_error]]}}
{{cpp/error/exception/inherit}}

===Example===
{{example
|code=
#include &lt;future&gt;
#include &lt;iostream&gt;

int main()
{
    std::future&lt;int&gt; empty;
    try
    {
        int n = empty.get(); // The behavior is undefined, but
                             // some implementations throw std::future_error
    }
    catch (const std::future_error&amp; e)
    {
        std::cout &lt;&lt; "Caught a future_error with code \"" &lt;&lt; e.code()
                  &lt;&lt; "\"\nMessage: \"" &lt;&lt; e.what() &lt;&lt; "\"\n";
    }
}
|p=true
|output=
Caught a future_error with code "future:3"
Message: "No associated state"
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/thread/dsc future_errc}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}