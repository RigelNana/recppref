{{cpp/title|never_stop_token}}
{{cpp/thread/navbar}}
{{ddcl|header=stop_token|since=c++26|
class never_stop_token;
}}

The {{tt|never_stop_token}} class models {{lconcept|unstoppable_token}} that provides static information that a stop is never possible nor requested. It is the default stop token type returned by {{tt|std::get_stop_token}} if no other associated stop token is being provided in the queryable object.

===Member alias templates===
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{c/core|callback_type&lt;Callback&gt;}}|{{c/core|/*callback-type*/}}&lt;br&gt;where the type is defined as:
{{ddcla|expos=yes|
struct /*callback-type*/
{
    explicit /*callback-type*/( never_stop_token,
                                auto&amp;&amp; ) noexcept {}
};
}}
}}
{{dsc end}}

===Member functions===
{{dsc begin}}
{{dsc mem sfun|stop_requested|nolink=true|indicates that a stop can never be requested}}
{{dsc mem sfun|stop_possible|nolink=true|indicates that a stop is not possible}}
{{dsc mem fun|operator{{==}}|nolink=true|compares two {{tt|never_stop_token}} objects}}
{{dsc end}}

{{member|{{small|std::never_stop_token::}}stop_requested|2=
{{ddcl|
static constexpr bool stop_requested() noexcept { return false; }
}}

Always returns {{c|false}}, indicating that a stop can never be requested.
}}

{{member|{{small|std::never_stop_token::}}stop_possible|2=
{{ddcl|
static constexpr bool stop_possible() noexcept { return false; }
}}

Always returns {{c|false}}, indicating that a stop is not possible.
}}

{{member|{{small|std::never_stop_token::}}operator{{==}}|2=
{{ddcl|1=
bool operator==(const never_stop_token&amp;) const = default;
}}

Two {{tt|never_stop_token}} objects always compare equal.
}}

===Example===
{{example}}

{{langlinks|es|ja|zh}}