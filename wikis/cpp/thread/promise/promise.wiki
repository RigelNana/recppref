{{cpp/thread/promise/title|promise}}
{{cpp/thread/promise/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
promise();
}}
{{dcl|num=2|since=c++11|
template&lt; class Alloc &gt;
promise( std::allocator_arg_t, const Alloc&amp; alloc );
}}
{{dcl|num=3|since=c++11|
promise( promise&amp;&amp; other ) noexcept;
}}
{{dcl|num=4|since=c++11|1=
promise( const promise&amp; other ) = delete;
}}
{{dcl end}}

Constructs a {{tt|promise}} object.

@1@ Default constructor. Constructs the promise with an empty shared state.

@2@ Constructs the promise with an empty shared state. The shared state is allocated using {{c|alloc}}. {{tt|Alloc}} must meet the requirements of {{named req|Allocator}}.

@3@ Move constructor. Constructs the promise with the shared state of {{c|other}} using move semantics. After construction, {{c|other}} has no shared state.

@4@ {{tt|promise}} is not copyable.

===Parameters===
{{par begin}}
{{par|alloc|allocator to use to allocate the shared state}}
{{par|other|another {{tt|promise}} to acquire the state from}}
{{par end}}

===Exceptions===
@1,2@ {{cpp/impldef exception item}}

===Example===
{{example}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}