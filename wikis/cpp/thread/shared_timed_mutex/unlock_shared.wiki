{{cpp/thread/shared_timed_mutex/title|unlock_shared}}
{{cpp/thread/shared_timed_mutex/navbar}}
{{dcl begin}}
{{dcl|since=c++14|
void unlock_shared();
}}
{{dcl end}}

Releases the mutex from shared ownership by the calling thread.

The mutex must be locked by the current thread of execution in shared mode, otherwise, the behavior is undefined.

This operation ''synchronizes-with'' (as defined in {{lc|std::memory_order}}) any subsequent {{lc|lock()}} operation that obtains ownership of the same mutex.

===Parameters===
(none)

===Return value===
(none)

===Exceptions===
Throws nothing.

===Notes===
{{tt|unlock_shared()}} is usually not called directly: {{lc|std::shared_lock}} is used to manage shared locking.

===Example===
{{example}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/thread/mutex/dsc lock_shared|shared_timed_mutex}}
{{dsc inc|cpp/thread/mutex/dsc unlock|shared_timed_mutex}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}