{{cpp/title|condition_variable_any}}
{{cpp/thread/condition_variable_any/navbar}}
{{ddcl|header=condition_variable|since=c++11|1=
class condition_variable_any;
}}

The {{tt|condition_variable_any}} class is a generalization of {{lc|std::condition_variable}}.  Whereas {{lc|std::condition_variable}} works only on {{c/core|std::unique_lock&lt;std::mutex&gt;}}, {{tt|condition_variable_any}} can operate on any lock that meets the {{named req|BasicLockable}} requirements.

See {{lc|std::condition_variable}} for the description of the semantics of condition variables.

The class {{tt|std::condition_variable_any}} is a {{named req|StandardLayoutType}}. It is not {{named req|CopyConstructible}}, {{named req|MoveConstructible}}, {{named req|CopyAssignable}}, or {{named req|MoveAssignable}}.

If the lock is {{c/core|std::unique_lock&lt;std::mutex&gt;}}, {{lc|std::condition_variable}} may provide better performance.

===Member functions===
{{dsc begin}}
{{dsc inc|cpp/thread/condition_variable/dsc constructor|condition_variable_any}}
{{dsc inc|cpp/thread/condition_variable/dsc destructor|condition_variable_any}}
{{dsc inc|cpp/thread/condition_variable/dsc operator{{=}}|condition_variable_any}}

{{dsc h2|Notification}}
{{dsc inc|cpp/thread/condition_variable/dsc notify_one|condition_variable_any}}
{{dsc inc|cpp/thread/condition_variable/dsc notify_all|condition_variable_any}}

{{dsc h2|Waiting}}
{{dsc inc|cpp/thread/condition_variable/dsc wait|condition_variable_any}}
{{dsc inc|cpp/thread/condition_variable/dsc wait_for|condition_variable_any}}
{{dsc inc|cpp/thread/condition_variable/dsc wait_until|condition_variable_any}}
{{dsc end}}

===Notes===
{{tt|std::condition_variable_any}} can be used with {{lc|std::shared_lock}} in order to wait on a {{lc|std::shared_mutex}} in shared ownership mode.

A possible use for {{tt|std::condition_variable_any}} with custom {{named req|Lockable}} types is to provide convenient interruptible waits: the custom lock operation would both lock the associated mutex as expected, and also perform the necessary setup to notify this condition variable when the interrupting signal is received.&lt;ref&gt;Anthony Williams (2012, 1st ed./ 2019, 2nd ed.), “C++ Concurrency in Action”, 9.2.4 “Interrupting a wait on &lt;code&gt;std::condition_variable_any&lt;/code&gt;”.&lt;/ref&gt; &lt;!-- would be nice to come up with an example that's not as big as in the book, or maybe come up with some other plausible use case --&gt;

===See also===
{{dsc begin}}
{{dsc inc|cpp/thread/dsc condition_variable}}
{{dsc end}}

===External links===
{{eli|&lt;references/&gt;}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}