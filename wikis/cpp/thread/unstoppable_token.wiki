{{cpp/title|unstoppable_token}}
{{cpp/thread/navbar}}
{{ddcl|header=stop_token|since=c++26|1=
template&lt; class Token &gt;
concept unstoppable_token =
    std::stoppable_token&lt;Token&gt; &amp;&amp;
    requires (const Token tok) {
        requires std::bool_constant&lt;(!tok.stop_possible())&gt;::value;
    };
}}

The concept {{tt|unstoppable_token&lt;Token&gt;}} specifies an additional requirement for a {{lconcept|stoppable_token}} where the type does not allow stopping. That is, the expression {{c|tok.stop_possible()}} must be usable in constant expression and returns {{c|false}}.

{{langlinks|es|ja|zh|ru}}