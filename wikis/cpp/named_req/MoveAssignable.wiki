{{cpp/named req/title|MoveAssignable|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

Specifies that an instance of the type can be assigned from an [[cpp/language/value_category|rvalue]] argument. 

===Requirements===
The type {{tt|T}} satisfies {{named req/core|MoveAssignable}} if

Given
* {{tt|t}}, a modifiable [[cpp/language/value_category|lvalue expression]] of type {{tt|T}},
* {{tt|rv}}, an [[cpp/language/value_category|rvalue]] expression of type {{tt|T}}.

The following expressions must be valid and have their specified effects.

{|table class=wikitable
|-
!Expression||Return type||Return value||Post-conditions
|-
|{{c|1=t = rv}}
|{{tt|T&amp;}}
|{{tt|t}}
|If {{tt|t}} and {{tt|rv}} do not refer to the same object{{mark unreviewed dr|LWG|2468}}, the value of {{tt|t}} is equivalent to the value of {{tt|rv}} before the assignment.
The new value of {{tt|rv}} is unspecified.
|}

===Notes===
The type does not have to implement [[cpp/language/move_operator|move assignment operator]] in order to satisfy this type requirement: a [[cpp/language/as_operator|copy assignment operator]] that takes its parameter by value or as a {{tt|const Type&amp;}}, will bind to rvalue argument.

If a {{named req/core|MoveAssignable}} class implements a move assignment operator, it may also implement [[cpp/utility/move|move semantics]] to take advantage of the fact that the value of {{tt|rv}} after assignment is unspecified.

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_move_assignable}}
{{dsc inc|cpp/concepts/dsc assignable_from}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}