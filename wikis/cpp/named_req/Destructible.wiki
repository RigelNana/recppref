{{cpp/named req/title|Destructible}}
{{cpp/named req/navbar}}

Specifies that an instance of the type can be destructed.

===Requirements===
The type {{tt|T}} satisfies {{named req/core|Destructible}} if

Given
* {{tt|u}}, an expression of type {{tt|T}}.

The following expressions must be valid and have their specified effects.

{|table class=wikitable
|-
!Expression||Post-conditions
|-
|{{c|u.~T()}}
|All resources owned by {{tt|u}} are reclaimed, no exceptions are thrown.
|}

===Notes===
Destructors are called implicitly at the end of [[cpp/language/lifetime|object lifetime]] such as when leaving [[cpp/language/scope|scope]] or by the [[cpp/language/delete|delete-expression]]. Explicit destructor call as shown in the type requirement table is rare.

Thanks to [[cpp/language/operator_member_access#Built-in_member_access_operators|pseudo destructor call]], all scalar types meet the requirement of {{named req/core|Destructible}}, while array types and reference types do not. Note that {{lc|std::is_destructible}} allows arrays and reference types.

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_destructible}}
{{dsc inc|cpp/concepts/dsc destructible}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}