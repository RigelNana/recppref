{{cpp/named req/title|EqualityComparable}}
{{cpp/named req/navbar}}

The type must work with {{tt|1===}} operator and the result should have standard semantics.

===Requirements===
The type {{tt|T}} satisfies {{named req/core|EqualityComparable}} if given expressions {{c|a}}, {{c|b}} and {{c|c}} of type {{rev inl|since=c++11|{{tt|T}} or }} {{c/core|const T}}, the following expression is valid and has its specified effects:
{|table class=wikitable
|-
!{{nbsp}}Expression{{nbsp}}
!Type
!Effects
|-
|rowspan=2|{{c|1=a == b}}
|meets {{named req|BooleanTestable}}&lt;br&gt;{{mark until c++20}}
|rowspan=2|Establishes an {{enwiki|Equivalence relation|equivalence relation}}, that is, it satisfies the following properties:
* For all values of {{c|a}}, {{c|1=a == a}} yields {{c|true}}. 
* If {{c|1=a == b}}, then {{c|1=b == a}}.
* If {{c|1=a == b}} and {{c|1=b == c}}, then {{c|1=a == c}}.
|-
|models {{lconcept|boolean-testable}}&lt;br&gt;{{mark since c++20}}
|}

===Notes===
To satisfy this requirement, types that do not have built-in [[cpp/language/operator comparison|comparison operators]] have to provide a [[cpp/language/operators|user-defined {{c/core|1=operator==}}]].

For the types that are both {{named req/core|EqualityComparable}} and {{named req|LessThanComparable}}, the C++ standard library makes a distinction between
* ''Equality'', which is the value of the expression {{c|1=a == b}} and
* ''Equivalence'', which is the value of the expression {{c|!(a &lt; b) &amp;&amp; !(b &lt; a)}}.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=283|std=C++98|before=even if {{tt|T}} is {{named req/core|EqualityComparable}}, the&lt;br&gt;requirements did not apply to {{c/core|const T}} objects|after=they apply to&lt;br&gt;{{c/core|const T}} instead of {{tt|T}}}}
{{dr list item|wg=lwg|dr=2114|paper=P2167R3|std=C++98|before=convertibility to {{c/core|bool}} was too weak to reflect the expectation of implementations|after=requirements strengthened}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/concepts/dsc equality_comparable}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}