{{cpp/named req/title|UnformattedInputFunction}}
{{cpp/named req/navbar}}

===Requirements===
An {{named req/core|UnformattedInputFunction}} is a stream input function that performs the following:

@1@ Constructs an object of type {{l2tt|cpp/io/basic_istream/sentry}} with automatic storage duration and with the {{tt|noskipws}} argument set to {{c|true}}, which performs the following:
* If {{ltt|cpp/io/ios_base/iostate|eofbit}} or {{ltt|cpp/io/ios_base/iostate|badbit}} are set on the input stream, sets the {{ltt|cpp/io/ios_base/iostate|failbit}} as well, and if exceptions on {{tt|failbit}} are enabled in this input stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; failbit) != 0}}), throws {{l2tt|cpp/io/ios_base/failure}}.
* Flushes the tie()'d output stream, if applicable.
@2@ Checks the status of the sentry by calling {{tt|sentry::operator bool()}}, which is equivalent to {{l2tt|cpp/io/basic_ios/good}}.
* If the operator returns {{c|false}} or sentry's constructor throws an exception:
:* Sets the number of extracted characters (gcount) in the input stream to zero.
:* If the function was called to write to an array of {{tt|CharT}}, writes {{tt|CharT()}} (the null character) to the first location of the array.
* If the operator returns {{c|true}}, performs the input as if by calling {{c|rdbuf()-&gt;sbumpc()}} or {{c|rdbuf()-&gt;sgetc()}}.
:* If the end of the stream is reached (the call to {{c|rdbuf()-&gt;sbumpc()}} or {{c|rdbuf()-&gt;sgetc()}} returns {{c|Traits::eof()}}), sets {{tt|eofbit}}. If exceptions on {{tt|eofbit}} are enabled in this stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; eofbit) != 0}}), throws {{l2tt|cpp/io/ios_base/failure}}.
:* If an exception is thrown during input, sets {{tt|badbit}} in the input stream. If exceptions on {{tt|badbit}} are enabled in this stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; badbit) != 0}}), the exception is also rethrown.
::* Exceptions thrown from {{l2tt|cpp/io/basic_ios/clear}} are not caught or rethrown.
:* If no exception was thrown during input, sets the number of extracted characters (gcount) in the input stream.
@3@ In any event, whether terminating by exception or returning, the sentry's destructor is called before leaving this function.

===Standard library===
The following standard library functions are {{named req|UnformattedInputFunction}}s.

* {{lc|std::getline}}, except that it does not modify gcount.
* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;{{dsc small|(basic_streambuf*)}}}}
* {{l2tt|cpp/io/basic_istream/get}}
* {{l2tt|cpp/io/basic_istream/getline}}
* {{l2tt|cpp/io/basic_istream/ignore}}
* {{l2tt|cpp/io/basic_istream/peek}}
* {{l2tt|cpp/io/basic_istream/read}}
* {{l2tt|cpp/io/basic_istream/readsome}}
* {{l2tt|cpp/io/basic_istream/putback}}, except that it first clears {{tt|eofbit}}
* {{l2tt|cpp/io/basic_istream/unget}}, except that it first clears {{tt|eofbit}}
* {{l2tt|cpp/io/basic_istream/sync}}, except that it does not modify gcount
* {{l2tt|cpp/io/basic_istream/tellg}}, except that it does not modify gcount
* {{l2tt|cpp/io/basic_istream/seekg}}, except that it first clears {{tt|eofbit}} and does not modify gcount
* {{lc|std::ws}}, except that it does not modify gcount

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=61|std=C++98|before=it was unclear whether throwing an exception because of&lt;br&gt;setting {{tt|eofbit}} and/or {{tt|failbit}} will result in setting {{tt|badbit}}|after=exceptions thrown from {{l2tt|cpp/io/basic_ios/clear}}&lt;br&gt;are not caught or rethrown}}
{{dr list item|wg=lwg|dr=160|std=C++98|before=the process of determining whether the exception caught&lt;br&gt;is rethrown mentioned a non-existing function {{tt|exception()}}|after=corrected to {{ltt|cpp/io/basic_ios/exceptions|exceptions()}}}}
{{dr list item|wg=lwg|dr=243|std=C++98|before=the behavior when {{tt|sentry::operator bool()}} returns {{c|false}}&lt;br&gt;or the sentry object fails to be constructed was not specified|after=specified}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}