{{cpp/named req/title|RegexTraits|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

{{named req|RegexTraits}} is a traits class that abstracts operations needed for a given character type when as template type parameters for {{c|std::basic_regex}}.

===Requirements===
Given
* {{c|CharT}}, a character type
* {{c|X}}, a {{named req/core|RegexTraits}} type for type {{c|CharT}}
* {{c|u}}, an object of type {{c|X}}
* {{c|v}}, an object of type {{c|const X}}
* {{c|p}}, a value of type {{c|const CharT*}}
* {{c|I1, I2}}, input iterators
* {{c|F1, F2}}, forward iterators
* {{c|c}}, a value of type {{c|const CharT}}
* {{c|s}}, an object of type {{c|X::string_type}}
* {{c|cs}}, an object of type {{c|const X::string_type}}
* {{c|b}}, a value of type {{c|bool}}
* {{c|I}}, a value of type {{c|int}}
* {{c|cl}}, an object of type {{c|X::char_class_type}}
* {{c|loc}}, an object of type {{c|X::locale_type}}


{|class=wikitable
!expression||return type||semantics
|-
|{{c|X::char_type}} || {{c|CharT}} || Used to refer to the character type.
|-
|{{c|X::string_type}} || {{c|std::basic_string&lt;CharT&gt;}} ||
|-
|{{c|X::locale_type}} ||  || A {{named req|CopyConstructible}} type that represents the locale used by the traits class.
|-
|{{c|X::char_class_type}} ||  || A {{named req|BitmaskType}} type that represents a particular character classification.
|-
|{{c|X::length(p)}} || {{c|std::size_t}} || Returns: the smallest {{c|i}} such that {{c|p[i] {{==}} 0}}. Complexity is linear in {{c|i}}.
|-
|{{c|v.translate(c)}} || {{c|X::char_type}} || Returns: a character such that for any character {{c|d}} considered to be equivalent to {{c|c}}, then {{c|v.translate(c) {{==}} v.translate(d)}}.
|-
|{{c|v.translate_nocase(c)}} || {{c|X::char_type}} || Returns: a character such that for any character {{c|C}} considered to be equivalent to {{c|c}} without regard to case, then {{c|v.translate_nocase(c) {{==}} v.translate_nocase(C)}}.
|-
|{{c|v.transform(F1, F2)}} || {{c|X::string_type}} || Returns: a sort key for the character sequence designated by the iterator range {{c|[F1, F2)}} such that if the character sequence {{c|[G1, G2)}} sorts before the character sequence {{c|[H1, H2)}}, then {{c|v.transform(G1, G2) &lt; v.transform(H1, H2)}}.
|-
|{{c|v.transform_primary(F1, F2)}} || {{c|X::string_type}} || Returns: a sort key for the character sequence designated by the iterator range {{c|[F1, F2)}} such that if the character sequence {{c|[G1, G2)}} sorts before the character sequence {{c|[H1, H2)}} without regard to case, then {{c|v.transform_primary(G1, G2) &lt; v.transform_primary(H1, H2)}}.
|-
|{{c|v.lookup_collatename(F1, F2)}} || {{c|X::string_type}} || Returns:
* An empty string if the character sequence is not a valid collating element
* A sequence of characters that represents the collating element consisting of the character sequence designated by the iterator range {{c|[F1, F2)}} otherwise
|-
|{{c|v.lookup_classname(F1, F2, b)}} || {{c|X::char_class_type}} ||
* Converts the character sequence designated by the iterator range {{c|[F1, F2)}} into a value of a {{named req|BitmaskType}} that can subsequently be passed to {{c|isctype}}
* Values returned from {{c|lookup_classname}} can be bitwise or'ed together; the resulting value represents membership in either of the corresponding character classes
* If {{c|b}} is true, the returned bitmask is suitable for matching characters without regard to their case.
* Returns {{c|0}} if the character sequence is not the name of a character class recognized by {{c|X}}.
* The value returned shall be independent of the case of the characters in the sequence.
|-
|{{c|v.isctype(c, cl)}} || {{c|bool}} || Returns: whether {{c|c}} is a member of one of the character classes designated by {{c|cl}} or not.
|-
|{{c|v.value(c, I)}} || {{c|int}} || Returns:
* The value represented by the digit {{c|c}} in base {{c|I}} if the character {{c|c}} is a valid digit in base {{c|I}}
* {{c|-1}} otherwise
|-
|{{c|u.imbue(loc)}} || {{c|X::locale_type}} ||
* Imbues {{c|u}} with the locale {{c|loc}}
* Returns: The previous locale used by {{c|u}} if any
|-
|{{c|v.getloc()}} || {{c|X::locale_type}} || Returns: The previous locale used by {{c|v}} if any.
|}


===Standard library===
{{named req/core|RegexTraits}} is satisfied by the following standard library classes:
{{dcl begin}}
{{dcl | notes={{mark since c++11}}&lt;br&gt;{{mark since c++11}} |
template&lt;&gt; class regex_traits&lt;char&gt;;
template&lt;&gt; class regex_traits&lt;wchar_t&gt;;
}}
{{dcl end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}