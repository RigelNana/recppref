{{cpp/named req/title|Clock|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

The {{named req|Clock}} requirements describe a bundle consisting of a {{lc|std::chrono::duration}}, a {{lc|std::chrono::time_point}}, and a function {{c|now()}} to get the current {{tt|time_point}}. The origin of the clock's {{tt|time_point}} is referred to as the clock's epoch.

===Requirements===

{{c|C1}} and {{c|C2}} denote clock types. {{c|t1}} and {{c|t2}} are values returned by {{c|C1::now()}} where the call returning {{c|t1}} happens before the call returning {{c|t2}} and both of these calls occur before {{c|C1::time_point::max()}}.

{|table class=wikitable
|-
!Expression||Return type||Operational semantics
|-
|{{c|C1::rep}}
|An arithmetic type or a class emulating an arithmetic type
|The representation type of {{c|C1::duration}}.
|-
|{{c|C1::period}}
|A specialization of {{lc|std::ratio}}
|The tick period of the clock in seconds.
|-
|{{c|C1::duration}}
|{{c|std::chrono::duration&lt;C1::rep, C1::period&gt;}}
|The duration type of the clock.
|-
|{{c|C1::time_point}}
|{{c|std::chrono::time_point&lt;C1&gt;}} or {{c|std::chrono::time_point&lt;C2, C1::duration&gt;}}
|The {{lc|std::chrono::time_point}} type of the clock. C1 and C2 shall refer to the same epoch.
|-
|{{c|C1::is_steady}}
|{{c|const bool}}
|{{c|true}} if {{c|1=t1 &lt;= t2}} is always {{c|true}} and the clock advances at a steady rate relative to real time (so the difference between two distinct reported times is approximately the elapsed real time between the clock updates), otherwise {{c|false}}
|-
|{{c|C1::now()}}
|{{c|C1::time_point}}
|Returns a {{c|time_point}} object representing the current point in time.
|}

===See also===
{{dsc begin}}
{{dsc inc | cpp/chrono/dsc is_clock}}
{{dsc end}}

{{langlinks|es|ja|zh}}