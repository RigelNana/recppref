{{cpp/named req/title|UnaryTypeTrait|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

A {{named req|UnaryTypeTrait}} is a class template that describes a property of its template type parameter with an {{lc|std::integral_constant}} (typically {{lc|std::bool_constant}}) specialization.

===Requirements===
* {{named req|DefaultConstructible}} and {{named req|CopyConstructible}}.
* Takes one template type parameter (additional template parameters are optional and allowed).
* Publicly and unambiguously derived from a specialization of {{lc|std::integral_constant}}, known as its ''base characteristic''.
* The member names of the ''base characteristic'' are not hidden and are unambiguously available.

===Standard library===
The following [[cpp/meta|type traits]] all satisfy {{named req/core|UnaryTypeTrait}}:
* {{ls|cpp/meta#Primary type categories}}
* {{ls|cpp/meta#Composite type categories}}
* {{ls|cpp/meta#Type properties}}
* {{ls|cpp/meta#Supported operations}}
* {{ls|cpp/meta#Property queries}}

The following standard library class templates also satisfy {{named req/core|UnaryTypeTrait}}.
{{dsc begin}}
{{dsc tclass|cpp/types/integral_constant|notes={{mark c++11}}|compile-time constant of specified type with specified value}}&lt;!-- but not bool_constant --&gt;
{{dsc inc|cpp/types/dsc negation}}
{{dsc inc|cpp/utility/tuple/dsc tuple_size}}
{{dsc inc|cpp/container/array/dsc tuple_size}}
{{dsc inc|cpp/utility/pair/dsc tuple_size}}
{{dsc inc|cpp/utility/variant/dsc variant_size}}
{{dsc inc|cpp/utility/functional/dsc is_bind_expression}}
{{dsc inc|cpp/utility/functional/dsc is_placeholder}}
{{dsc inc|cpp/algorithm/dsc is_execution_policy}}
{{dsc end}}

{{langlinks|es|ja|zh}}