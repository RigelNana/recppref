{{cpp/named req/title|Predicate}}
{{cpp/named req/navbar}}

The {{named req|Predicate}} requirements describe a callable that returns a {{named req|BooleanTestable}} value.

{{named req/core|Predicate}} is typically used with algorithms that take input data (individual objects/containers) and a predicate, which is then called on input data to decide on further course of action. Some examples of predicate usage in C++ standard library are:

*{{lc|std::all_of}}, {{lc|std::any_of}}, {{lc|std::none_of}}  Take an array of elements and a predicate as an input. Call predicate on individual input elements, and return true if for all/any/none elements, predicate returns true.

*{{lc|std::find_if}}  Take sequence of elements, and a predicate. Return first element in the sequence, for which predicate returns value equal to {{c|true}}.

{{small|Description of algorithm facilities, given above, is crude and intended to explain {{named req/core|Predicate}} in simple terms. For detailed info, refer to individual pages.}}

In other words, if an algorithm takes a {{named req/core|Predicate}} {{tt|pred}} and an iterator {{tt|first}}, it should be able to test the object of the type pointed to by the iterator {{tt|first}} using the given predicate via a construct like {{c|if (pred(*first)) { /*...*/ }&lt;!----&gt;}}.

The function object {{tt|pred}} shall not apply any non-constant function through the dereferenced iterator  and must accept a {{tt|const}} argument, with the same behavior regardless of whether the argument is {{tt|const}} or non-{{tt|const}}. This function object may be a pointer to function or an object of a type with an appropriate function call operator.

===Requirements===
* {{named req|FunctionObject}}

{{todo|better describe actual requirements}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3031|std=C++98|before=requirements on {{tt|const}} values were insufficent|after=requirements strengthened}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/concepts/dsc predicate}}
{{dsc end}}

{{langlinks|es|ja|zh}}