{{cpp/named req/title|Callable}}
{{cpp/named req/navbar}}

A {{named req|Callable}} type is a type for which the {{lti|cpp/utility/functional|INVOKE}} and {{lti|cpp/utility/functional|INVOKE&lt;R&gt;}} operations (used by, e.g., {{lc|std::function}}, {{lc|std::bind}}, and {{lc|std::thread::thread}}) are applicable.

{{rev begin}}
{{rev|since=c++17|
{{tti|INVOKE}} can be performed explicitly using the library function {{lc|std::invoke}}.
}}
{{rev|since=c++23|
{{tti|INVOKE&lt;R&gt;}} can be performed explicitly using the library function {{ltt|cpp/utility/functional/invoke|std::invoke_r}}.
}}
{{rev end}}

===Requirements===
The type {{tt|T}} satisfies {{named req/core|Callable}} if

Given
* {{tt|f}}, an object of type {{tt|T}},
* {{tt|ArgTypes}}, suitable list of argument types,
* {{tt|R}}, suitable return type.

The following expressions must be valid:

{|table class=wikitable
|-
!Expression||Requirements
|-
|{{box|{{lti|cpp/utility/functional|INVOKE&lt;R&gt;}}{{c/core|(f, std::declval&lt;ArgTypes&gt;()...)}}}}
|The expression is well-formed in unevaluated context.
|}

===Notes===
[[cpp/language/pointer#Pointers to data members|Pointers to data members]] are {{named req/core|Callable}}, even though no function calls take place.

===Standard library===
In addition, the following standard library facilities accept any {{named req/core|Callable}} type (not just {{named req|FunctionObject}}):

{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc function}}
{{dsc inc|cpp/utility/functional/dsc move_only_function}}
{{dsc inc|cpp/utility/functional/dsc copyable_function}}
{{dsc inc|cpp/utility/functional/dsc function_ref}}
{{dsc inc|cpp/utility/functional/dsc bind}}
{{dsc inc|cpp/utility/functional/dsc bind_front}}
{{dsc inc|cpp/utility/functional/dsc reference_wrapper}}
{{dsc inc|cpp/types/dsc result_of}}
{{dsc inc|cpp/thread/dsc thread}}
{{dsc inc|cpp/thread/dsc jthread}}
{{dsc inc|cpp/thread/dsc call_once}}
{{dsc inc|cpp/thread/dsc async}}
{{dsc inc|cpp/thread/dsc packaged_task}}
{{dsc end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_invocable}}
{{dsc inc|cpp/concepts/dsc invocable}}
{{dsc inc|cpp/utility/functional/dsc invoke}}
{{dsc end}}

{{langlinks|de|en|es|ja|zh}}