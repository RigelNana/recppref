{{cpp/named req/title|CopyInsertable|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

Specifies that an object of the type can be copy-constructed in-place by a given allocator.

===Requirements===
Given the following types, values and expressions:
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|T}}|an object type}}
{{dsc|{{tt|A}}|an allocator type}}
{{dsc|{{tt|X}}|a container type satisfying all following conditions:
* {{tt|X::value_type}} is the same as {{tt|T}}.
* {{tt|X::allocator_type}} is the same as {{c/core|std::allocator_traits&lt;A&gt;::rebind_alloc&lt;T&gt;}}.
}}
{{dsc hitem|Value|Definition}}
{{dsc|{{c|m}}|an lvalue of type {{tt|A}}}}
{{dsc|{{c|p}}|a pointer of type {{tt|T*}}}}
{{dsc hitem|Expression|Definition}}
{{dsc|{{c|v}}|an expression denoting an lvalue of type {{tt|T}} / {{c/core|const T}}, or an rvalue of type {{c/core|const T}}}}
{{dsc|{{c|expr}}|{{c|std::allocator_traits&lt;A&gt;::construct(m, p, v)}}}}
{{dsc end}}

{{tt|T}} is {{named req/core|CopyInsertable}} into {{tt|X}} if all following conditions are satisfied:
* {{tt|T}} is {{named req|MoveInsertable}} into {{tt|X}}.
* {{c|expr}} is well-formed.
* Evaluating {{c|expr}} does not change the value of {{c|v}}.
* Right after the evaluation of {{c|expr}}, the value of {{c|v}} is equivalent to {{c|*p}}.

===Notes===
If {{tt|A}} is {{c/core|std::allocator&lt;T&gt;}}, then this will call placement {{c/core|new}}, as by {{rev inl|until=c++20|{{c|::new((void*)p) T(v)}}}}{{rev inl|since=c++20|{{c|std::construct_at(p, v)}}}}.

Although it is required that customized {{tt|construct}} is used when constructing elements of {{lc|std::basic_string}} until C++23, all implementations only used the default mechanism. The requirement is corrected by {{wg21|P1072R10}} to match existing practice.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2177|std=C++11|before=evaluting {{c|expr}} did not have any postcondition|after=added}}
{{dr list item|wg=lwg|dr=3957|std=C++11|before={{c|v}} could denote an rvalue of type {{tt|T}}|after=excluded}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}