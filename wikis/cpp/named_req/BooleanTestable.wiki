{{cpp/named req/title|BooleanTestable}}
{{cpp/named req/navbar}}

Specifies that an expression of such a type and value category is convertible to {{c/core|bool}}, and for which the logical operators for the type or two different {{named req/core|BooleanTestable}} types have the usual behavior (including {{enwiki|Short-circuit evaluation|short-circuiting}}).

===Requirements===
Let {{c|e}} be an expression of a certain type and value category. The type and value category meet the {{named req/core|BooleanTestable}} requirements if:
* {{c|!e}} is well-formed and does not modify the object denoted by {{c|e}}, if any{{rev inl|since=c++11|, except that if {{c|e}} is an xvalue, the denoted object can be left in a valid but unspecified state}}.
* Both {{c|e}} and {{c|!e}} are convertible to {{c/core|bool}} by both [[cpp/language/implicit_conversion|implicit conversion]] and {{ltt|cpp/language/static_cast}}.
* Conversions in both manners produce equal results and do not modify the source object, if any{{rev inl|since=c++11|, except that if {{c|e}} or {{c|!e}} is an xvalue, the source object can be left in a valid but unspecified state}}.
* {{c|1=bool(!e) == !bool(e)}} holds.
* No viable non-member {{c/core|operator&amp;&amp;}} and {{c/core|operator{{!!}}}} is visible by [[cpp/language/adl|argument-dependent lookup]] for the type of {{c|e}} or {{c|!e}}.
* If {{c|e}} or {{c|!e}} is of a class type, the class does not define any member {{c/core|operator&amp;&amp;}} or {{c/core|operator{{!!}}}}.

===Notes===
The standard does not define a named requirement with this name. It was originally proposed in an early resolution of {{wg21|LWG2114}}, but was superseded by the exposition-only concept {{tti|{{lt|cpp/concepts/boolean-testable}}}} in the final resolution {{wg21|P2167R3}}. Because implementations generally expect the provided types to model {{tti|boolean-testable}} even in pre-C++20 modes, we intentedly treat P2167R3 as a defect report and transform the {{tti|boolean-testable}} to legacy named requirements.

When the {{tt|&amp;&amp;}} and {{tt|{{!!}}}} operators are used with operands whose type and value category are {{named req/core|BooleanTestable}}, built-in versions are selected and short-circuit evaluation is performed.

{{rrev|since=c++20|
The type and value category of an expression {{c|e}} meet the {{named req/core|BooleanTestable}} requirements if and only if {{c|decltype((e))}} models {{tti|{{lt|cpp/concepts/boolean-testable}}}}.}}

Examples of {{named req/core|BooleanTestable}} types (with any value category) include {{c/core|bool}}{{rev inl|since=c++11|, {{lc|std::true_type}}}}, {{c/core|std::bitset&lt;N&gt;::}}{{ltt|cpp/utility/bitset/reference}}, and {{c/core|int*}}.

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2114|paper=P2167R3|std=C++98|before=convertibility to {{c/core|bool}} was too weak to reflect the expectation of implementations|after=requirements strengthened}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/concepts/dsc boolean-testable}}
{{dsc end}}

{{langlinks|es|ja|zh}}