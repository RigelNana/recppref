{{cpp/named req/title|UnformattedOutputFunction}}
{{cpp/named req/navbar}}

===Requirements===
A {{named req/core|UnformattedOutputFunction}} is a stream output function that performs the following:

@1@ Constructs an object of type {{l2tt|cpp/io/basic_ostream/sentry}} with automatic storage duration, which performs the following:
* If {{ltt|cpp/io/ios_base/iostate|eofbit}} or {{ltt|cpp/io/ios_base/iostate|badbit}} are set on the output stream, sets the {{ltt|cpp/io/ios_base/iostate|failbit}} as well, and if exceptions on {{tt|failbit}} are enabled in this output stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; failbit) != 0}}), throws {{l2tt|cpp/io/ios_base/failure}}.
* Flushes the tie()'d output stream, if applicable.
@2@ Checks the status of the sentry by calling {{tt|sentry::operator bool()}}, which is equivalent to {{l2tt|cpp/io/basic_ios/good}}.
* If the operator returns {{c|false}} or sentry's constructor throws an exception, no output takes place.
* If the operator returns {{c|true}}, attempts to perform the desired output by inserting the characters into the output stream as if by calling {{c|rdbuf()-&gt;sputc()}}. Other public members of {{lc|std::basic_ostream}} may also be used, but virtual members of {{c|rdbuf()}} except {{ltt|cpp/io/basic_streambuf/overflow|overflow()}}, {{ltt|cpp/io/basic_streambuf/sputn|xsputn()}} and {{ltt|cpp/io/basic_streambuf/pubsync|sync()}} will never be called.
:* If an exception is thrown during output, sets {{tt|badbit}} in the output stream. If exceptions on {{tt|badbit}} are enabled in this stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; badbit) != 0}}), the exception is also rethrown.
:* If no exception was thrown, returns the value specified by the function.
@3@ In any event, whether terminating by exception or returning, the sentry's destructor is called before leaving this function.

===Standard library===
The following standard library functions are {{named req|UnformattedOutputFunction}}s.

* {{l2tt|cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;{{dsc small|(basic_streambuf*)}}}}
* {{l2tt|cpp/io/basic_ostream/put}}
* {{l2tt|cpp/io/basic_ostream/write}}
* {{l2tt|cpp/io/basic_ostream/flush}}
{{rev begin}}
{{rev |since=c++11|
* {{l2tt|cpp/io/basic_ostream/tellp}} (except calls pubseekoff instead of output)
* {{l2tt|cpp/io/basic_ostream/seekp}} (except calls pubseekoff or pubseekpos instead of output)
}}
{{rev end}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=63|std=C++98|before=the exception-handling policy was missing|after=added}}
{{dr list item|wg=lwg|dr=160|std=C++98|before=the process of determining whether the exception caught&lt;br&gt;is rethrown mentioned a non-existing function {{tt|exception()}}|after=corrected to {{ltt|cpp/io/basic_ios/exceptions|exceptions()}}}}
{{dr list item|wg=lwg|dr=165|std=C++98|before=the only virtual member allowed to be&lt;br&gt;called on {{c|rdbuf()}} was {{tt|overflow()}}|after=also allowed&lt;br&gt;{{tt|xsputn()}} and {{tt|sync()}}}}
{{dr list end}}

{{langlinks|es|ja|zh}}