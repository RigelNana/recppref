{{cpp/named req/title|FormattedInputFunction}}
{{cpp/named req/navbar}}

===Requirements===
A {{named req/core|FormattedInputFunction}} is a stream input function that performs the following:

* Constructs an object of type {{l2tt|cpp/io/basic_istream/sentry}} with automatic storage duration and with the {{tt|noskipws}} argument set to {{c|false}}, which performs the following:
:* if {{ltt|cpp/io/ios_base/iostate|eofbit}} or {{ltt|cpp/io/ios_base/iostate|badbit}} are set on the input stream, sets the {{tt|failbit}} as well, and if exceptions on {{tt|failbit}} are enabled in this input stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; failbit) != 0}}), throws {{l2tt|cpp/io/ios_base/failure}}.
:* flushes the tie()'d output stream, if applicable.
:* if {{tt|ios_base::skipws}} flag is set on this input stream, extracts and discards characters from the input stream until one of the following becomes true:
::* the next available character on the input stream is not a whitespace character, as tested by the {{lc|std::ctype}} facet of the locale currently imbued in this input stream. The non-whitespace character is not extracted.
::* the end of the stream is reached, in which case {{tt|failbit}} and {{tt|eofbit}} are set and if the stream is on for exceptions on one of these bits, {{l2tt|cpp/io/ios_base/failure}} is thrown.
* Checks the status of the sentry by calling {{tt|sentry::operator bool()}}, which is equivalent to {{l2tt|cpp/io/basic_ios/good}}.
* If the sentry returned {{c|false}} or sentry's constructor threw an exception, no input takes place.
* If the sentry returned {{c|true}}, performs the input as if by calling {{c|rdbuf()-&gt;sbumpc()}} or {{c|rdbuf()-&gt;sgetc()}}.
:* if the end of the stream is reached (the call to {{c|rdbuf()-&gt;sbumpc()}} or {{c|rdbuf()-&gt;sgetc()}} returns {{c|Traits::eof()}}), sets {{tt|eofbit}}. If exceptions on {{tt|eofbit}} are enabled in this stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; eofbit) != 0}}), throws {{l2tt|cpp/io/ios_base/failure}}.
:* if an exception is thrown during input, sets {{tt|badbit}} in the input stream. If exceptions on {{tt|badbit}} are enabled in this stream's [[cpp/io/basic_ios/exceptions|exception mask]] ({{c|1=(exceptions() &amp; badbit) != 0}}), the exception is also rethrown.
:* If no exception was thrown, returns {{c|*this}}.
* In any event, whether terminating by exception or returning, the sentry's destructor is called before leaving this function.

===Standard library===
The following standard library functions are {{named req|FormattedInputFunction}}s.

* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;{{dsc small|(int, long, double, void*, bool)}}}}
* {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;{{dsc small|(std::basic_istream, char&amp;)}}}}
* {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;{{dsc small|(std::basic_istream, char*)}}}}
* {{ltt|cpp/utility/bitset/operator_ltltgtgt2|operator&gt;&gt;{{dsc small|(std::basic_istream, std::bitset)}}}}
* {{ltt|cpp/string/basic_string/operator_ltltgtgt|operator&gt;&gt;{{dsc small|(std::basic_istream, std::string)}}}}
* {{tt|operator&gt;&gt;}}, when called on the return value of {{lc|std::get_money}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=160|std=C++98|before=the process of determining whether the exception caught&lt;br&gt;is rethrown mentioned a non-existing function {{tt|exception()}}|after=corrected to {{ltt|cpp/io/basic_ios/exceptions|exceptions()}}}}
{{dr list end}}

{{langlinks|es|ja|zh}}