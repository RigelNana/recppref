{{cpp/locale/codecvt/title|encoding, do_encoding}}
{{cpp/locale/codecvt/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
public:
int encoding() const throw();
|dcl2=
public:
int encoding() const noexcept;
}}
{{dcl rev multi|num=2|until1=c++11|dcl1=
protected:
virtual int do_encoding() const throw();
|dcl2=
protected:
virtual int do_encoding() const noexcept;
}}
{{dcl end}}

@1@ Public member function, calls the member function {{tt|do_encoding}} of the most derived class.

@2@ If the encoding represented by this codecvt facet maps each internal character to the same, constant number of external characters, returns that number. If the encoding is variable-length (e.g. UTF-8 or UTF-16), returns {{c|0}}. If the encoding is state-dependent, returns {{c|-1}}.

===Return value===
The exact number of {{tt|externT}} characters that correspond to one {{tt|internT}} character, if constant. {{c|0}} if the number varies, {{c|-1}} if the encoding is state-dependent.

The non-converting specialization {{c|std::codecvt&lt;char, char, std::mbstate_t&gt;}} returns {{c|1}}.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    std::cout &lt;&lt; "en_US.utf8 is a variable-length encoding, encoding() returns "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                     std::locale("en_US.utf8")
                 ).encoding() &lt;&lt; '\n';

    std::cout &lt;&lt; "zh_CN.gb18030 is also variable-length, encoding() == "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                     std::locale("zh_CN.gb18030")
                 ).encoding() &lt;&lt; '\n';

    std::cout &lt;&lt; "ru_RU.koi8r is a single-byte encoding, encoding() == "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                     std::locale("ru_RU.koi8r")
                 ).encoding() &lt;&lt; '\n';
}
|output=
en_US.utf8 is a variable-length encoding, encoding() returns 0
zh_CN.gb18030 is also variable-length, encoding() == 0
ru_RU.koi8r is a single-byte encoding, encoding() == 1
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/multibyte/dsc MB_CUR_MAX}}
{{dsc inc|cpp/locale/codecvt/dsc do_max_length}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}