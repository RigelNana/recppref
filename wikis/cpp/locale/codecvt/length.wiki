{{cpp/locale/codecvt/title|length, do_length}}
{{cpp/locale/codecvt/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
int length( StateT&amp; state, const ExternT* from, const ExternT* from_end,
            std::size_t max ) const;
}}
{{dcl|num=2|1=
protected:
virtual int do_length( StateT&amp; state, const ExternT* from, const ExternT* from_end,
                       std::size_t max ) const;
}}
{{dcl end}}

@1@ Public member function, calls the member function {{tt|do_length}} of the most derived class.

@2@ Attempts to convert the {{tt|ExternT}} characters from the character array defined by {{range|from|from_end}}, given initial conversion state {{c|state}}, to at most {{c|max}} {{tt|InternT}} characters, and returns the number of {{tt|ExternT}} characters that such conversion would consume. Modifies {{c|state}} as if by executing {{c|do_in(state, from, from_end, from, to, to + max, to)}} for some imaginary {{range|to|to + max}} output buffer.

===Return value===
The number of {{tt|ExternT}} characters that would be consumed if converted by {{lc|do_in()}} until either all {{c|from_end - from}} characters were consumed or {{c|max}} {{tt|InternT}} characters were produced, or a conversion error occurred.

The non-converting specialization {{c|std::codecvt&lt;char, char, std::mbstate_t&gt;}} returns {{c|std::min(max, from_end - from)}}.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;string&gt;

int main()
{
    using facet_type = std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;;
 
    // narrow multibyte encoding
    std::string s = "z\u00df\u6c34\U0001d10b"; // or u8"z√üÊ∞¥ùÑã"
              // or "\x7a\xc3\x9f\xe6\xb0\xb4\xf0\x9d\x84\x8b"
 
    std::locale loc("en_US.UTF-8");
    facet_type const&amp; codecvt_facet = std::use_facet&lt;facet_type&gt;(loc);
    std::mbstate_t mb = std::mbstate_t();
    std::cout &lt;&lt; "Only the first "
              &lt;&lt; codecvt_facet.length(mb, s.data(), s.data() + s.size(), 2)
              &lt;&lt; " bytes out of " &lt;&lt; s.size() &lt;&lt; " would be consumed"
                 " to produce the first 2 characters\n";
}
|output=
Only the first 3 bytes out of 10 would be consumed to produce the first 2 characters
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=75|std=C++98|before=the effect on {{c|state}} was not specified|after=specified}}
{{dr list item|wg=lwg|dr=305|std=C++98|before={{tt|std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;::do_length}}&lt;br&gt;was required to return {{c|std::min(max, from_end - from)}}|after=not required}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/codecvt/dsc do_in}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}