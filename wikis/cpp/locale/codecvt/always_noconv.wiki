{{cpp/locale/codecvt/title|always_noconv, do_always_noconv}}
{{cpp/locale/codecvt/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
public:
bool always_noconv() const throw();
|dcl2=
public:
bool always_noconv() const noexcept;
}}
{{dcl rev multi|num=2|until1=c++11|dcl1=
protected:
virtual bool do_always_noconv() const throw();
|dcl2=
protected:
virtual bool do_always_noconv() const noexcept;
}}
{{dcl end}}

@1@ Public member function, calls the member function {{tt|do_always_noconv}} of the most derived class.

@2@ Returns {{c|true}} if both {{lc|do_in()}} and {{lc|do_out()}} return {{tt|std::codecvt_base::noconv}} for all valid inputs.

===Return value===
{{c|true}} if this conversion facet performs no conversions, {{c|false}} otherwise.

The non-converting specialization {{c|std::codecvt&lt;char, char, std::mbstate_t&gt;}} returns {{c|true}}.

===Notes===
This function may be used e.g. in the implementation of {{lc|std::basic_filebuf::underflow}} and {{lc|std::basic_filebuf::overflow}} to use bulk character copy instead of calling {{lc|std::codecvt::in}} or {{lc|std::codecvt::out}} if it is known that the locale imbued in the {{lc|std::basic_filebuf}} does not perform any conversions.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    std::cout &lt;&lt; "The non-converting char&lt;-&gt;char codecvt::always_noconv() returns " 
              &lt;&lt; std::boolalpha
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;char, char, std::mbstate_t&gt;&gt;(
                    std::locale()
                 ).always_noconv() &lt;&lt; '\n'
              &lt;&lt; "while wchar_t&lt;-&gt;char codecvt::always_noconv() returns "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                    std::locale()
                 ).always_noconv() &lt;&lt; '\n';
}
|output=
The non-converting char&lt;-&gt;char codecvt::always_noconv() returns true
while wchar_t&lt;-&gt;char codecvt::always_noconv() returns false
}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}