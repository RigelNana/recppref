{{cpp/locale/wstring_convert/title|converted}}
{{cpp/locale/wstring_convert/navbar}}
{{ddcl|header=locale|
std::size_t converted() const noexcept;
}}

Returns the number of source characters that were successfully processed by the most recent {{lc|from_bytes()}} or {{lc|to_bytes()}}.

===Return value===
{{box|{{rlpsi|/#cvtcount}}}}

===Example===
{{example
|code=
#include &lt;codecvt&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;string&gt;

int main()
{
    std::string utf8 = "z\u00df\u6c34\U0001d10b"; // or u8"z√üÊ∞¥ùÑã"
                   // or "\x7a\xc3\x9f\xe6\xb0\xb4\xf0\x9d\x84\x8b";
    std::cout &lt;&lt; "original UTF-8 string size: " &lt;&lt; utf8.size() &lt;&lt; '\n';
    
    // the UTF-8 - UTF-32 standard conversion facet
    std::wstring_convert&lt;std::codecvt_utf8&lt;char32_t&gt;, char32_t&gt; cvt;
    
    // UTF-8 to UTF-32
    std::u32string utf32 = cvt.from_bytes(utf8);
    std::cout &lt;&lt; "UTF-32 string size: " &lt;&lt; utf32.size() &lt;&lt; '\n';
    std::cout &lt;&lt; "converted() == " &lt;&lt; cvt.converted() &lt;&lt; '\n';
    
    // UTF-32 to UTF-8
    utf8 = cvt.to_bytes(utf32);
    std::cout &lt;&lt; "new UTF-8 string size: " &lt;&lt; utf8.size() &lt;&lt; '\n';
    std::cout &lt;&lt; "converted() == " &lt;&lt; cvt.converted() &lt;&lt; '\n';
}
|output=
original UTF-8 string size: 10
UTF-32 string size: 4
converted() == 10
new UTF-8 string size: 10
converted() == 4
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2174|std=C++11|before={{tt|wstring_convert::converted}} was not required to be noexcept|after=required}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/wstring_convert/dsc to_bytes}}
{{dsc inc|cpp/locale/wstring_convert/dsc from_bytes}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}