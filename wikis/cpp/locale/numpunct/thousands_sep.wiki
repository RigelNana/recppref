{{cpp/locale/numpunct/title|thousands_sep, do_thousands_sep}}
{{cpp/locale/numpunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
char_type thousands_sep() const;
}}
{{dcl|num=2|1=
protected:
virtual char_type do_thousands_sep() const;
}}
{{dcl end}}

@1@ Public member function, calls the member function {{tt|do_thousands_sep}} of the most derived class.

@2@ Returns the character to be used as the separator between digit groups when parsing or formatting integers and integral parts of floating-point values. 

===Return value===
The object of type {{tt|char_type}} to use as the thousands separator. The standard specializations of {{tt|std::numpunct}} return {{c|','}} and {{c|L','}}.

===Example===

{{example
|
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

struct space_out : std::numpunct&lt;char&gt;
{
    char do_thousands_sep()   const { return ' '; }  // separate with spaces
    std::string do_grouping() const { return "\1"; } // groups of 1 digit
};

int main()
{
    std::cout &lt;&lt; "default locale: " &lt;&lt; 12345678 &lt;&lt; '\n';
    std::cout.imbue(std::locale(std::cout.getloc(), new space_out));
    std::cout &lt;&lt; "locale with modified numpunct: " &lt;&lt; 12345678 &lt;&lt; '\n';
}
|output=
default locale: 12345678
locale with modified numpunct: 1 2 3 4 5 6 7 8
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=20|std=C++98|before=the return type was {{tt|string_type}}|after=changed to {{tt|char_type}}}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/numpunct/dsc do_grouping}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}