{{cpp/locale/numpunct/title|truename, do_truename, falsename, do_falsename}}
{{cpp/locale/numpunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
string_type truename() const;
}}
{{dcl|num=2|1=
public:
string_type falsename() const;
}}
{{dcl|num=3|1=
protected:
virtual string_type do_truename() const;
}}
{{dcl|num=4|1=
protected:
virtual string_type do_falsename() const;
}}
{{dcl end}}

@1,2@ Public member function, calls the member function {{tt|do_truename}} and {{tt|do_falsename}} of the most derived class respectively.
@3@ Returns the string to be used as the representation of the boolean value {{c|true}}.
@4@ Returns the string to be used as the representation of the boolean value {{c|false}}.

===Return value===
@1,3@ The object of type {{tt|string_type}} to use as the representation of {{c|true}}. The standard specializations of {{tt|std::numpunct}} return {{c|"true"}} and {{c|L"true"}}.

@2,4@ The object of type {{tt|string_type}} to use as the representation of {{c|false}}. The standard specializations of {{tt|std::numpunct}} return {{c|"false"}} and {{c|L"false"}}.

===Example===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

struct custom_tf : std::numpunct&lt;char&gt;
{
    std::string do_truename()  const { return {'t'}; }
    std::string do_falsename() const { return {'f'}; }
};

int main()
{
    std::cout &lt;&lt; std::boolalpha;

    // default boolalpha output
    std::cout &lt;&lt; "Default locale,\n"
                 "  boolalpha  true: " &lt;&lt; true &lt;&lt; "\n"
                 "  boolalpha false: " &lt;&lt; false &lt;&lt; "\n\n";

    // with custom_tf applied to locale
    std::cout.imbue(std::locale(std::cout.getloc(), new custom_tf));
    std::cout &lt;&lt; "Locale with modified numpunct,\n"
                 "  boolalpha  true: " &lt;&lt; true &lt;&lt; "\n"
                 "  boolalpha false: " &lt;&lt; false &lt;&lt; '\n';
}
|output=
Default locale,
  boolalpha  true: true
  boolalpha false: false

Locale with modified numpunct,
  boolalpha  true: t
  boolalpha false: f
}}

{{langlinks|es|ja|zh}}