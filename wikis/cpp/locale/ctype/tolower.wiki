{{cpp/locale/ctype/title|tolower|do_tolower}}
{{cpp/locale/ctype/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
CharT tolower( CharT c ) const;
}}
{{dcl|num=2|1=
public:
const CharT* tolower( CharT* beg, const CharT* end ) const;
}}
{{dcl|num=3|1=
protected:
virtual CharT do_tolower( CharT c ) const;
}}
{{dcl|num=4|1=
protected:
virtual const CharT* do_tolower( CharT* beg, const CharT* end ) const;
}}
{{dcl end}}

@1,2@ Public member function, calls the protected virtual member function {{tt|do_tolower}} of the most derived class.
@3@ Converts the character {{c|c}} to lower case if a lower case form is defined by this locale.
@4@ For every character in the character array {{range|beg|end}}, for which a lower case form exists, replaces the character with that lower case form.

===Parameters===
{{par begin}}
{{par|c|character to convert}}
{{par|beg|pointer to the first character in an array of characters to convert}}
{{par|end|one past the end pointer for the array of characters to convert}}
{{par end}}

===Return value===
@1,3@ Lower case character or {{c|c}} if no lower case form is listed by this locale.
@2,4@ {{c|end}}

===Notes===
Only 1:1 character mapping can be performed by this function, e.g. the Greek uppercase letter 'Σ' has two lowercase forms, depending on the position in a word: 'σ' and 'ς'. A call to {{tt|do_tolower}} cannot be used to obtain the correct lowercase form in this case. 

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

void try_lower(const std::ctype&lt;wchar_t&gt;&amp; f, wchar_t c)
{
    wchar_t up = f.tolower(c);
    if (up != c)
        std::wcout &lt;&lt; "Lower case form of \'" &lt;&lt; c &lt;&lt; "' is " &lt;&lt; up &lt;&lt; '\n';
    else
        std::wcout &lt;&lt; '\'' &lt;&lt; c &lt;&lt; "' has no lower case form\n";
}

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    std::wcout.imbue(std::locale());
    std::wcout &lt;&lt; "In US English UTF-8 locale:\n";
    auto&amp; f = std::use_facet&lt;std::ctype&lt;wchar_t&gt;&gt;(std::locale());
    try_lower(f, L'Σ');
    try_lower(f, L'Ɛ');
    try_lower(f, L'Ａ');

    std::wstring str = L"HELLo, wORLD!";
    std::wcout &lt;&lt; "Lowercase form of the string '" &lt;&lt; str &lt;&lt; "' is ";
    f.tolower(&amp;str[0], &amp;str[0] + str.size());
    std::wcout &lt;&lt; '\'' &lt;&lt; str &lt;&lt; "'\n";
}
|output=
In US English UTF-8 locale:
Lower case form of 'Σ' is σ
Lower case form of 'Ɛ' is ɛ
Lower case form of 'Ａ' is ａ
Lowercase form of the string 'HELLo, wORLD!' is 'hello, world!'
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/ctype/dsc toupper}}
{{dsc inc|cpp/string/byte/dsc tolower}}
{{dsc inc|cpp/string/wide/dsc towlower}}
{{dsc end}}

{{langlinks|ja|zh}}