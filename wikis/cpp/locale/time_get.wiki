{{cpp/title|time_get}}
{{cpp/locale/time_get/navbar}}
{{ddcl|header=locale|1=
template&lt; 
    class CharT, 
    class InputIt = std::istreambuf_iterator&lt;CharT&gt; 
&gt; class time_get;
}}

Class template {{tt|std::time_get}} encapsulates date and time parsing rules. The I/O manipulator {{lc|std::get_time}} uses the {{tt|std::time_get}} facet of the I/O stream's locale to convert text input to a {{lc|std::tm}} object.

{{inheritance diagram/std-time_get}}

If a {{tt|std::time_get}} specialization is not guaranteed to be provided by the standard library (see below), the behaviors of its member functions (except the constructor and destructor) are not guaranteed as specified.

===Specializations===
The standard library is guaranteed to provide the following specializations (they are {{rlp|locale|required to be implemented by any locale object}}):
{{dsc begin}}
{{dsc header|locale}}
{{dsc|{{c/core|std::time_get&lt;char&gt;}}|parses narrow string representations of date and time}}
{{dsc|{{c/core|std::time_get&lt;wchar_t&gt;}}|parses wide string representations of date and time}}
{{dsc end}}

In addition, the standard library is also guaranteed to provide every specialization that satisfies the following type requirements:
* {{tt|CharT}} is one of {{c/core|char}} and {{c/core|wchar_t}}, and
* {{tt|InputIt}} must meet the requirements of {{named req|InputIterator}}.

===Nested types===
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|iter_type}}|{{tt|InputIt}}}}
{{dsc end}}

{{cpp/locale/facet data members}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|cpp/locale/time_get/time_get|constructs a new {{tt|time_get}} facet}}
{{dsc prot mem dtor|cpp/locale/time_get/~time_get|destructs a {{tt|time_get}} facet}}
{{dsc inc|cpp/locale/time_get/dsc date_order}}
{{dsc inc|cpp/locale/time_get/dsc get_time}}
{{dsc inc|cpp/locale/time_get/dsc get_date}}
{{dsc inc|cpp/locale/time_get/dsc get_weekday}}
{{dsc inc|cpp/locale/time_get/dsc get_monthname}}
{{dsc inc|cpp/locale/time_get/dsc get_year}}
{{dsc inc|cpp/locale/time_get/dsc get}}
{{dsc end}}

===Protected member functions===
{{dsc begin}}
{{dsc inc|cpp/locale/time_get/dsc do_date_order}}
{{dsc inc|cpp/locale/time_get/dsc do_get_time}}
{{dsc inc|cpp/locale/time_get/dsc do_get_date}}
{{dsc inc|cpp/locale/time_get/dsc do_get_weekday}}
{{dsc inc|cpp/locale/time_get/dsc do_get_monthname}}
{{dsc inc|cpp/locale/time_get/dsc do_get_year}}
{{dsc inc|cpp/locale/time_get/dsc do_get}}
{{dsc end}}

{{cpp/locale/time_base/inherit}}

===Example===
{{example
|1=Note: choose clang to observe the output. libstdc++ does not correctly implement the %b specifier: [https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78714 bug 78714].
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;sstream&gt;

int main()
{
    std::tm t = {};
    std::istringstream ss("2011-Februar-18 23:12:34");
    ss.imbue(std::locale("de_DE.utf-8"));
    
    ss &gt;&gt; std::get_time(&amp;t, "%Y-%b-%d %H:%M:%S");
    if (ss.fail())
        std::cout &lt;&lt; "Parse failed\n";
    else
        std::cout &lt;&lt; std::put_time(&amp;t, "%c") &lt;&lt; '\n';
}
|p=true
|output=
Sun Feb 18 23:12:34 2011
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc time_put}}
{{dsc inc|cpp/io/manip/dsc get_time}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}