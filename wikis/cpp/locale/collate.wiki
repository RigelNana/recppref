{{cpp/title|collate}}
{{cpp/locale/collate/navbar}}
{{ddcl|header=locale|
template&lt; class CharT &gt;
class collate;
}}

Class {{tt|std::collate}} encapsulates locale-specific collation (comparison) and hashing of strings. This facet is used by {{lc|std::basic_regex}} and can be applied, by means of {{l2tt std|cpp/locale/locale/operator()}}, directly to all standard algorithms that expect a string comparison predicate.

{{inheritance diagram/std-collate}}

===Specializations===
The standard library is guaranteed to provide the following specializations (they are {{rlp|locale|required to be implemented by any locale object}}):
{{dsc begin}}
{{dsc header|locale}}
{{dsc|{{c/core|std::collate&lt;char&gt;}}|implements lexicographical ordering of byte strings}}
{{dsc|{{c/core|std::collate&lt;wchar_t&gt;}}|implements lexicographical ordering of wide strings}}
{{dsc end}}

===Nested types===
{{dsc begin}}
{{dsc hitem|Type|Definition}}
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|string_type}}|{{c/core|std::basic_string&lt;CharT&gt;}}}}
{{dsc end}}

{{cpp/locale/facet data members}}

===Member functions===
{{dsc begin}}
{{dsc mem ctor|cpp/locale/collate/collate|constructs a new {{tt|collate}} facet}}
{{dsc prot mem dtor|cpp/locale/collate/~collate|destructs a {{tt|collate}} facet}}
{{dsc inc|cpp/locale/collate/dsc compare}}
{{dsc inc|cpp/locale/collate/dsc transform}}
{{dsc inc|cpp/locale/collate/dsc hash}}
{{dsc end}}

===Protected member functions===
{{dsc begin}}
{{dsc inc|cpp/locale/collate/dsc do_compare}}
{{dsc inc|cpp/locale/collate/dsc do_transform}}
{{dsc inc|cpp/locale/collate/dsc do_hash}}
{{dsc end}}

===Example===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    std::wcout.imbue(std::locale(""));
    std::vector&lt;std::wstring&gt; v
    {
        L"ar", L"zebra", L"\u00f6grupp", L"Zebra",
        L"\u00e4ngel",L"\u00e5r", L"f\u00f6rnamn"
    };
    
    std::wcout &lt;&lt; "Default locale collation order: ";
    std::sort(v.begin(), v.end());
    for (auto s : v)
        std::wcout &lt;&lt; s &lt;&lt; ' ';
    std::wcout &lt;&lt; '\n';
    
    std::wcout &lt;&lt; "English locale collation order: ";
    std::sort(v.begin(), v.end(), std::locale("en_US.UTF-8"));
    for (auto s : v)
        std::wcout &lt;&lt; s &lt;&lt; ' ';
    std::wcout &lt;&lt; '\n';
    
    std::wcout &lt;&lt; "Swedish locale collation order: ";
    std::sort(v.begin(), v.end(), std::locale("sv_SE.UTF-8"));
    for (auto s : v)
        std::wcout &lt;&lt; s &lt;&lt; ' ';
    std::wcout &lt;&lt; '\n';
}
|output=
Default locale collation order: Zebra ar förnamn zebra ängel år ögrupp
English locale collation order: ängel ar år förnamn ögrupp zebra Zebra
Swedish locale collation order: ar förnamn zebra Zebra år ängel ögrupp
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/locale/dsc operator()}}
{{dsc inc|cpp/locale/dsc collate_byname}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}