{{cpp/title|isblank{{small|(std::locale)}}}}
{{cpp/locale/navbar}}
{{ddcl|header=locale|since=c++11|
template&lt; class CharT &gt;
bool isblank( CharT ch, const locale&amp; loc );
}}

Checks if the given character is classified as a blank character by the given locale's {{lc|std::ctype}} facet.

===Parameters===
{{par begin}}
{{par|ch|character}}
{{par|loc|locale}}
{{par end}}

===Return value===
Returns {{c|true}} if the character is classified as a blank character, {{c|false}} otherwise.

===Possible implementation===
{{eq fun
|1=
template&lt;class CharT&gt;
bool isblank(CharT ch, const std::locale&amp; loc)
{
    return std::use_facet&lt;std::ctype&lt;CharT&gt;&gt;(loc).is(std::ctype_base::blank, ch);
}
}}

===Example===
{{example
|Demonstrates the use of {{tt|isblank()}} with different locales (OS-specific).
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

void try_with(wchar_t c, const char* loc)
{
    std::wcout &lt;&lt; "isblank('" &lt;&lt; c &lt;&lt; "', locale(\"" &lt;&lt; loc &lt;&lt; "\")) returned "
               &lt;&lt; std::boolalpha
               &lt;&lt; std::isblank(c, std::locale(loc)) &lt;&lt; '\n';
}

int main()
{
    const wchar_t IDEO_SPACE = L'\u3000'; // Unicode character 'IDEOGRAPHIC SPACE'
    try_with(IDEO_SPACE, "C");
    try_with(IDEO_SPACE, "en_US.UTF-8");
}
|p=true
|output=
isblank(' ', locale("C")) returned false
isblank(' ', locale("en_US.UTF-8")) returned true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc isblank}}
{{dsc inc|cpp/string/wide/dsc iswblank}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}