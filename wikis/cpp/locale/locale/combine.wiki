{{cpp/locale/locale/title|combine}}
{{cpp/locale/locale/navbar}}

{{ddcl|
template&lt; class Facet &gt;
locale combine( const locale&amp; other ) const;
}}

Constructs a locale object which is a copy of {{c|*this}} except for the facet of type {{tt|Facet}}, which is copied from {{c|other}}.

The program is ill-formed if Facet is not a {{rlp|facet#Facet class|facet}} or it is a volatile-qualified facet.

===Return value===
The new, nameless, locale.

===Exceptions===
{{lc|std::runtime_error}} if {{c|other}} does not implement {{tt|Facet}}.

===Example===
{{example
| 
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    const double number = 1000.25;
    std::cout &lt;&lt; "\"C\" locale: " &lt;&lt; number &lt;&lt; '\n';
    std::locale loc = std::locale()
        .combine&lt;std::numpunct&lt;char&gt;&gt;(std::locale("en_US.UTF8"));
    std::cout.imbue(loc);
    std::cout &lt;&lt; "\"C\" locale with en_US numpunct: " &lt;&lt; number &lt;&lt; '\n';
}
|output=
"C" locale: 1000.25
"C" locale with en_US numpunct: 1,000.25
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=14|std=C++98|before={{tt|locale::combine}} was non-const|after=made const}}
{{dr list item|wg=lwg|dr=436|std=C++98|before=it was unclear whether {{tt|Facet}} can be cv-qualified|after=it can be const-qualified, but not volatile-qualified}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/locale/dsc locale}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}