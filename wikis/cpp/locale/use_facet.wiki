{{cpp/title|use_facet}}
{{cpp/locale/navbar}}

{{ddcl|header=locale|
template&lt; class Facet &gt;
const Facet&amp; use_facet( const std::locale&amp; loc );
}}

Obtains a reference to a facet implemented by {{c|loc}}.

The program is ill-formed if Facet is not a {{rlp|locale/facet#Facet class|facet}} whose definition contains the public static member {{ttb|id}} or it is a volatile-qualified facet.

===Parameters===
{{par begin}}
{{par|loc|the locale object to query}}
{{par end}}

===Return value===
Returns a reference to the facet. The reference returned by this function is valid as long as any {{lc|std::locale}} object refers to that facet.

===Exceptions===
{{lc|std::bad_cast}} if {{c|1=std::has_facet&lt;Facet&gt;(loc) == false}}.

===Notes===
A {{lc|std::locale}} object should not be a temporary if a reference to the {{tt|Facet}} object obtained from {{tt|use_facet}} is used after the end of statement:
{{source|1=
// BAD:
auto&amp; f = std::use_facet&lt;std::moneypunct&lt;char, true&gt;&gt;(std::locale{"no_NO.UTF-8"});
foo(f.curr_symbol()); // Error: f internally uses a dangling reference
                      // to a std::locale object that no longer exists.
// GOOD:
auto loc = std::locale{"is_IS.UTF-8"}; // OK: a non-temporary object
auto&amp; f = std::use_facet&lt;std::moneypunct&lt;char, true&gt;&gt;(loc);
foo(f.curr_symbol()); // OK: f internally uses a reference to existing locale object.
}}

===Example===
{{example
|Display the 3-letter currency name used by the user's preferred locale.
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    for (const char* name: {"en_US.UTF-8", "de_DE.UTF-8", "en_GB.UTF-8"})
        std::cout &lt;&lt; "Your currency string is "
                  &lt;&lt; std::use_facet&lt;std::moneypunct&lt;char, true&gt;&gt;(std::locale{name}).
                     curr_symbol() &lt;&lt; '\n';
}
|output=
Your currency string is USD
Your currency string is EUR
Your currency string is GBP
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=31|std=C++98|before=the returned reference remained usable&lt;br&gt;as long as the locale value itself exists|after=the returned reference remains usable as&lt;br&gt;long as some locale object refers to that facet}}
{{dr list item|wg=lwg|dr=38|std=C++98|before={{tt|Facet}} was not required to have a direct member {{ttb|id}}|after=required}}
{{dr list item|wg=lwg|dr=436|std=C++98|before=it was unclear whether {{tt|Facet}} can be cv-qualified|after=it can be const-qualified, but not volatile-qualified}}
{{dr list end}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc locale}}
{{dsc inc|cpp/locale/dsc has_facet}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}