{{cpp/locale/wbuffer_convert/title|wbuffer_convert}}
{{cpp/locale/wbuffer_convert/navbar}}
{{dcl begin}}
{{dcl|num=1|
wbuffer_convert() : wbuffer_convert(nullptr) {}
}}
{{dcl|num=2|1=
explicit wbuffer_convert( std::streambuf* bytebuf,
                          Codecvt* pcvt = new Codecvt,
                          state_type state = state_type() );
}}
{{dcl|num=3|since=c++14|1=
wbuffer_convert( const std::wbuffer_convert&amp; ) = delete;
}}
{{dcl end}}

{|class="wikitable" style="text-align: center;"
!rowspan=2|{{nbsp}}Overload{{nbsp}}
!colspan=3|{{rlps|/#Data members}}
|-
!style="font-weight: normal;"|{{tti|bufptr}}
!style="font-weight: normal;"|{{tti|cvtptr}}
!style="font-weight: normal;"|{{tti|cvtstate}}
|-
|{{v|1}}
|{{nbsp}}{{c|nullptr}}{{nbsp}}
|{{nbsp}}{{c|new Codecvt}}{{nbsp}}
|{{nbsp}}{{c|state_type()}}{{nbsp}}
|-
|{{v|2}}
|{{c|bytebuf}}
|{{c|pcvt}}
|{{c|state}}
|}

@2@ If {{c|pcvt}} is a null pointer, the behavior is undefined.

@3@ The copy constructor is deleted, {{tt|wbuffer_convert}} is not {{named req|CopyConstructible}}.

===Parameters===
{{par begin}}
{{par|bytebuf|pointer to the underlying buffer}}
{{par|pcvt|pointer to a standalone (not managed by a locale) facet}}
{{par|state|the initial value of the character conversion state}}
{{par end}}

===Example===
{{example
|code=
#include &lt;codecvt&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;sstream&gt;

int main()
{
    // Wrap a UTF-8 string stream in a UCS4 wbuffer_convert
    std::stringbuf utf8buf("z\u00df\u6c34\U0001f34c");
                       // or "\x7a\xc3\x9f\xe6\xb0\xb4\xf0\x9f\x8d\x8c"
                       // or u8"z√üÊ∞¥üçå"
    std::wbuffer_convert&lt;std::codecvt_utf8&lt;wchar_t&gt;&gt; conv_in(&amp;utf8buf);
    std::wistream ucsbuf(&amp;conv_in);
    std::cout &lt;&lt; "Reading from a UTF-8 stringbuf via wbuffer_convert: "
              &lt;&lt; std::hex &lt;&lt; std::showbase;
    for (wchar_t c; ucsbuf.get(c);)
        std::cout &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ' ';
    
    // Wrap a UTF-8 aware std::cout in a UCS4 wbuffer_convert to output UCS4
    std::wbuffer_convert&lt;std::codecvt_utf8&lt;wchar_t&gt;&gt; conv_out(std::cout.rdbuf());
    std::wostream out(&amp;conv_out);
    std::cout &lt;&lt; "\nSending UCS4 data to std::cout via wbuffer_convert: ";
    out &lt;&lt; L"z\u00df\u6c34\U0001f34c\n";
}
|output=
Reading from a UTF-8 stringbuf via wbuffer_convert: 0x7a 0xdf 0x6c34 0x1f34c 
Sending UCS4 data to std::cout via wbuffer_convert: z√üÊ∞¥üçå
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2175|std=C++11|before={{c|pcvt}} could be a null pointer|after=the behavior is undefined in this case}}
{{dr list item|wg=lwg|dr=2176|std=C++11|before=constructors accepting single argument were implicit|after=made explicit}}
{{dr list item|paper=P0935R0|std=C++11|before=the default constructor was explicit|after=made implicit}}
{{dr list end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}