{{cpp/locale/ctype_char/title|scan_is}}
{{cpp/locale/ctype/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
const char* scan_is( mask m, const char* beg, const char* end ) const;
}}
{{dcl end}}

Locates the first character in the character array {{range|beg|end}} that satisfies the classification mask {{c|m}}, that is, the first character {{tt|c}} such that {{c|table()[(unsigned char) c] &amp; m}} would return {{c|true}}.

If {{c|(unsigned char)c &gt;{{=}} std::ctype&lt;char&gt;::table_size}}, then an implementation-defined value is substituted instead of {{c|table()[(unsigned char)c]}}, possibly different for different values of {{c|c}}.

===Parameters===
{{par begin}}
{{par|m|mask to search for}}
{{par|beg|pointer to the first character in an array of characters to search}}
{{par|end|one past the end pointer for the array of characters to search}}
{{par end}}

===Return value===
Pointer to the first character in {{range|beg|end}} that satisfies the mask, or {{c|end}} if no such character was found.

===Notes===
Unlike the primary template {{c|std::ctype}}, this specialization does not perform a virtual function call when classifying characters. To customize the behavior, a derived class may provide a non-default classification table to the base class constructor.

===Example===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;locale&gt;

int main()
{
    std::locale loc("");
    auto&amp; f = std::use_facet&lt;std::ctype&lt;char&gt;&gt;(loc);

    // skip until the first letter
    char s1[] = "      \t\t\n  Test";
    const char* p1 = f.scan_is(std::ctype_base::alpha, std::begin(s1), std::end(s1));
    std::cout &lt;&lt; '\'' &lt;&lt; p1 &lt;&lt; "'\n";

    // skip until the first letter
    char s2[] = "123456789abcd";
    const char* p2 = f.scan_is(std::ctype_base::alpha, std::begin(s2), std::end(s2));
    std::cout &lt;&lt; '\'' &lt;&lt; p2 &lt;&lt; "'\n";
}
|output=
'Test'
'abcd'
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/ctype/dsc do_scan_is}}
{{dsc inc|cpp/locale/ctype_char/dsc scan_not}}
{{dsc end}}

{{langlinks|ja|zh}}