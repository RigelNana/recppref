{{cpp/title|codecvt_mode}}
{{cpp/locale/navbar}}
{{ddcl|since=c++11|deprecated=c++17|removed=c++26|header=codecvt|1=
enum codecvt_mode {
    consume_header = 4,
    generate_header = 2,
    little_endian = 1
};
}}

The facets {{lc|std::codecvt_utf8}}, {{lc|std::codecvt_utf16}}, and {{lc|std::codecvt_utf8_utf16}} accept an optional value of type {{tt|std::codecvt_mode}} as a template argument, which specifies optional features of the unicode string conversion.

===Constants===
{{dsc begin}}
{{dsc header|locale}}
{{dsc hitem|Value|Meaning}}
{{dsc|{{tt|little_endian}}|assume the input is in little-endian byte order (applies to UTF-16 input only, the default is big-endian)}}
{{dsc|{{tt|consume_header}}|consume the byte order mark, if present at the start of input sequence, and (in case of UTF-16), rely on the byte order it specifies for decoding the rest of the input}}
{{dsc|{{tt|generate_header}}|output the byte order mark at the start of the output sequence}}
{{dsc end}}

The recognized byte order marks are:
{{dsc begin}}
{{dsc|{{tt|0xfe 0xff}}|UTF-16 big-endian}}
{{dsc|{{tt|0xff 0xfe}}|UTF-16 little-endian}}
{{dsc|{{tt|0xef 0xbb 0xbf}}|UTF-8 (no effect on endianness)}}
{{dsc end}}

If {{tt|std::consume_header}} is not selected when reading a file beginning with byte order mark, the Unicode character U+FEFF (Zero width non-breaking space) will be read as the first character of the string content.

===Example===
{{example
|The following example demonstrates consuming the UTF-8 BOM:
|code=
#include &lt;codecvt&gt;
#include &lt;cwchar&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;string&gt;

int main()
{
    // UTF-8 data with BOM
    std::ofstream{"text.txt"} &lt;&lt; "\ufeffz\u6c34\U0001d10b";
    
    // read the UTF-8 file, skipping the BOM
    std::wifstream fin{"text.txt"};
    fin.imbue(std::locale(fin.getloc(),
                          new std::codecvt_utf8&lt;wchar_t, 0x10ffff, std::consume_header&gt;));
    
    for (wchar_t c; fin.get(c);)
        std::cout &lt;&lt; std::hex &lt;&lt; std::showbase &lt;&lt; (std::wint_t)c &lt;&lt; '\n';
}
|output=
0x7a
0x6c34
0x1d10b
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc codecvt}}
{{dsc inc|cpp/locale/dsc codecvt_utf8}}
{{dsc inc|cpp/locale/dsc codecvt_utf16}}
{{dsc inc|cpp/locale/dsc codecvt_utf8_utf16}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}