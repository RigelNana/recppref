{{cpp/title|iscntrl{{small|(std::locale)}}}}
{{cpp/locale/navbar}}
{{ddcl|header=locale|
template&lt; class CharT &gt;
bool iscntrl( CharT ch, const locale&amp; loc );
}}

Checks if the given character is classified as a control character by the given locale's {{lc|std::ctype}} facet.

===Parameters===
{{par begin}}
{{par|ch|character}}
{{par|loc|locale}}
{{par end}}

===Return value===
Returns {{c|true}} if the character is classified as a control character, {{c|false}} otherwise.

===Possible implementation===
{{eq fun
|1=
template&lt;class CharT&gt;
bool iscntrl(CharT ch, const std::locale&amp; loc)
{
    return std::use_facet&lt;std::ctype&lt;CharT&gt;&gt;(loc).is(std::ctype_base::cntrl, ch);
}
}}

===Example===
{{example
|Demonstrates the use of {{tt|iscntrl()}} with different locales (OS-specific).
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    const wchar_t CCH = L'\u0094'; // Destructive Backspace in Unicode

    std::locale loc1("C");
    std::cout &lt;&lt; "iscntrl(CCH, C locale) returned "
              &lt;&lt; std::boolalpha &lt;&lt; std::iscntrl(CCH, loc1) &lt;&lt; '\n';

    std::locale loc2("en_US.UTF8");
    std::cout &lt;&lt; "iscntrl(CCH, Unicode locale) returned "
              &lt;&lt; std::boolalpha &lt;&lt; std::iscntrl(CCH, loc2) &lt;&lt; '\n';
}
|p=true
|output=
iscntrl(CCH, C locale) returned false
iscntrl(CCH, Unicode locale) returned true
}}

===See also===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc iscntrl}}
{{dsc inc|cpp/string/wide/dsc iswcntrl}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}