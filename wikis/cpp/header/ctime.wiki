{{cpp/header/title|ctime}}
{{cpp/header/navbar}}
{{cpp/header/c}}

This header is part of the [[cpp/chrono/c|C-style date and time]] library.

{{dsc begin}}
{{dsc h1 | Macro constants}}

{{dsc inc | cpp/chrono/c/dsc CLOCKS_PER_SEC}}
{{dsc inc | cpp/types/dsc NULL}}
{{dsc h1 | Types}}
{{dsc inc | cpp/chrono/c/dsc clock_t}}
{{dsc inc | cpp/types/dsc size_t}}
{{dsc inc | cpp/chrono/c/dsc time_t}}
{{dsc inc | cpp/chrono/c/dsc tm}}
{{dsc inc | cpp/chrono/c/dsc timespec}}

{{dsc h1 | Functions}}
{{dsc h2 | Time manipulation}}
{{dsc inc | cpp/chrono/c/dsc clock}}
{{dsc inc | cpp/chrono/c/dsc time}}
{{dsc inc | cpp/chrono/c/dsc difftime}}
{{dsc inc | cpp/chrono/c/dsc timespec_get}}

{{dsc h2 | Format conversions}}
{{dsc inc | cpp/chrono/c/dsc ctime}}
{{dsc inc | cpp/chrono/c/dsc asctime}}
{{dsc inc | cpp/chrono/c/dsc strftime}}
{{dsc inc | cpp/chrono/c/dsc gmtime}}
{{dsc inc | cpp/chrono/c/dsc localtime}}
{{dsc inc | cpp/chrono/c/dsc mktime}}
{{dsc end}}

===Synopsis===
{{source|1=
#define NULL /* see description */
#define CLOCKS_PER_SEC /* see description */
#define TIME_UTC /* see description */

namespace std {
  using size_t = /* see description */;
  using clock_t = /* see description */;
  using time_t = /* see description */;

  struct timespec;
  struct tm;

  clock_t clock();
  double difftime(time_t time1, time_t time0);
  time_t mktime(tm* timeptr);
  time_t time(time_t* timer);
  int timespec_get(timespec* ts, int base);
  char* asctime(const tm* timeptr);
  char* ctime(const time_t* timer);
  tm* gmtime(const time_t* timer);
  tm* localtime(const time_t* timer);
  size_t strftime(char* s, size_t maxsize, const char* format, const tm* timeptr);
}
}}

===Class {{lc|std::timespec}}===
{{source|1=
struct timespec {
  std::time_t tv_sec;
  long tv_nsec;
};
}}

===Class {{lc|std::tm}}===
{{source|1=
struct tm {
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};
}}

{{langlinks|de|es|ja|ru|zh}}