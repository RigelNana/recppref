{{cpp/header/title|cerrno}}
{{cpp/header/navbar}}
{{cpp/header/c}}

This header is part of the [[cpp/error|error handling]] library. 

===Macros===
{{dsc begin}}
{{dsc inc|cpp/error/dsc errno}}
{{dsc macro const|E2BIG           |nolink=true|notes={{mark c++11}}|Argument list too long}}
{{dsc macro const|EACCES          |nolink=true|notes={{mark c++11}}|Permission denied}}
{{dsc macro const|EADDRINUSE      |nolink=true|notes={{mark c++11}}|Address in use}}
{{dsc macro const|EADDRNOTAVAIL   |nolink=true|notes={{mark c++11}}|Address not available}}
{{dsc macro const|EAFNOSUPPORT    |nolink=true|notes={{mark c++11}}|Address family not supported}}
{{dsc macro const|EAGAIN          |nolink=true|notes={{mark c++11}}|Resource unavailable, try again}}
{{dsc macro const|EALREADY        |nolink=true|notes={{mark c++11}}|Connection already in progress}}
{{dsc macro const|EBADF           |nolink=true|notes={{mark c++11}}|Bad file descriptor}}
{{dsc macro const|EBADMSG         |nolink=true|notes={{mark c++11}}|Bad message}}
{{dsc macro const|EBUSY           |nolink=true|notes={{mark c++11}}|Device or resource busy}}
{{dsc macro const|ECANCELED       |nolink=true|notes={{mark c++11}}|Operation canceled}}
{{dsc macro const|ECHILD          |nolink=true|notes={{mark c++11}}|No child processes}}
{{dsc macro const|ECONNABORTED    |nolink=true|notes={{mark c++11}}|Connection aborted}}
{{dsc macro const|ECONNREFUSED    |nolink=true|notes={{mark c++11}}|Connection refused}}
{{dsc macro const|ECONNRESET      |nolink=true|notes={{mark c++11}}|Connection reset}}
{{dsc macro const|EDEADLK         |nolink=true|notes={{mark c++11}}|Resource deadlock would occur}}
{{dsc macro const|EDESTADDRREQ    |nolink=true|notes={{mark c++11}}|Destination address required}}
{{dsc macro const|EDOM            |nolink=true                     |Mathematics argument out of domain of function}}
{{dsc macro const|EEXIST          |nolink=true|notes={{mark c++11}}|File exists}}
{{dsc macro const|EFAULT          |nolink=true|notes={{mark c++11}}|Bad address}}
{{dsc macro const|EFBIG           |nolink=true|notes={{mark c++11}}|File too large}}
{{dsc macro const|EHOSTUNREACH    |nolink=true|notes={{mark c++11}}|Host is unreachable}}
{{dsc macro const|EIDRM           |nolink=true|notes={{mark c++11}}|Identifier removed}}
{{dsc macro const|EILSEQ          |nolink=true                     |Illegal byte sequence}}
{{dsc macro const|EINPROGRESS     |nolink=true|notes={{mark c++11}}|Operation in progress}}
{{dsc macro const|EINTR           |nolink=true|notes={{mark c++11}}|Interrupted function}}
{{dsc macro const|EINVAL          |nolink=true|notes={{mark c++11}}|Invalid argument}}
{{dsc macro const|EIO             |nolink=true|notes={{mark c++11}}|I/O error}}
{{dsc macro const|EISCONN         |nolink=true|notes={{mark c++11}}|Socket is connected}}
{{dsc macro const|EISDIR          |nolink=true|notes={{mark c++11}}|Is a directory}}
{{dsc macro const|ELOOP           |nolink=true|notes={{mark c++11}}|Too many levels of symbolic links}}
{{dsc macro const|EMFILE          |nolink=true|notes={{mark c++11}}|File descriptor value too large}}
{{dsc macro const|EMLINK          |nolink=true|notes={{mark c++11}}|Too many links}}
{{dsc macro const|EMSGSIZE        |nolink=true|notes={{mark c++11}}|Message too large}}
{{dsc macro const|ENAMETOOLONG    |nolink=true|notes={{mark c++11}}|Filename too long}}
{{dsc macro const|ENETDOWN        |nolink=true|notes={{mark c++11}}|Network is down}}
{{dsc macro const|ENETRESET       |nolink=true|notes={{mark c++11}}|Connection aborted by network}}
{{dsc macro const|ENETUNREACH     |nolink=true|notes={{mark c++11}}|Network unreachable}}
{{dsc macro const|ENFILE          |nolink=true|notes={{mark c++11}}|Too many files open in system}}
{{dsc macro const|ENOBUFS         |nolink=true|notes={{mark c++11}}|No buffer space available}}
{{dsc macro const|ENODATA         |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|No message is available on the STREAM head read queue}}
{{dsc macro const|ENODEV          |nolink=true|notes={{mark c++11}}|No such device}}
{{dsc macro const|ENOENT          |nolink=true|notes={{mark c++11}}|No such file or directory}}
{{dsc macro const|ENOEXEC         |nolink=true|notes={{mark c++11}}|Executable file format error}}
{{dsc macro const|ENOLCK          |nolink=true|notes={{mark c++11}}|No locks available}}
{{dsc macro const|ENOLINK         |nolink=true|notes={{mark c++11}}|Link has been severed}}
{{dsc macro const|ENOMEM          |nolink=true|notes={{mark c++11}}|Not enough space}}
{{dsc macro const|ENOMSG          |nolink=true|notes={{mark c++11}}|No message of the desired type}}
{{dsc macro const|ENOPROTOOPT     |nolink=true|notes={{mark c++11}}|Protocol not available}}
{{dsc macro const|ENOSPC          |nolink=true|notes={{mark c++11}}|No space left on device}}
{{dsc macro const|ENOSR           |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|No STREAM resources}}
{{dsc macro const|ENOSTR          |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|Not a STREAM}}
{{dsc macro const|ENOSYS          |nolink=true|notes={{mark c++11}}|Function not supported}}
{{dsc macro const|ENOTCONN        |nolink=true|notes={{mark c++11}}|The socket is not connected}}
{{dsc macro const|ENOTDIR         |nolink=true|notes={{mark c++11}}|Not a directory}}
{{dsc macro const|ENOTEMPTY       |nolink=true|notes={{mark c++11}}|Directory not empty}}
{{dsc macro const|ENOTRECOVERABLE |nolink=true|notes={{mark c++11}}|State not recoverable}}
{{dsc macro const|ENOTSOCK        |nolink=true|notes={{mark c++11}}|Not a socket}}
{{dsc macro const|ENOTSUP         |nolink=true|notes={{mark c++11}}|Not supported}}
{{dsc macro const|ENOTTY          |nolink=true|notes={{mark c++11}}|Inappropriate I/O control operation}}
{{dsc macro const|ENXIO           |nolink=true|notes={{mark c++11}}|No such device or address}}
{{dsc macro const|EOPNOTSUPP      |nolink=true|notes={{mark c++11}}|Operation not supported on socket}}
{{dsc macro const|EOVERFLOW       |nolink=true|notes={{mark c++11}}|Value too large to be stored in data type}}
{{dsc macro const|EOWNERDEAD      |nolink=true|notes={{mark c++11}}|Previous owner died}}
{{dsc macro const|EPERM           |nolink=true|notes={{mark c++11}}|Operation not permitted}}
{{dsc macro const|EPIPE           |nolink=true|notes={{mark c++11}}|Broken pipe}}
{{dsc macro const|EPROTO          |nolink=true|notes={{mark c++11}}|Protocol error}}
{{dsc macro const|EPROTONOSUPPORT |nolink=true|notes={{mark c++11}}|Protocol not supported}}
{{dsc macro const|EPROTOTYPE      |nolink=true|notes={{mark c++11}}|Protocol wrong type for socket}}
{{dsc macro const|ERANGE          |nolink=true|                     Result too large}}
{{dsc macro const|EROFS           |nolink=true|notes={{mark c++11}}|Read-only file system}}
{{dsc macro const|ESPIPE          |nolink=true|notes={{mark c++11}}|Invalid seek}}
{{dsc macro const|ESRCH           |nolink=true|notes={{mark c++11}}|No such process}}
{{dsc macro const|ETIME           |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|Stream {{tt|ioctl()}} timeout}}
{{dsc macro const|ETIMEDOUT       |nolink=true|notes={{mark c++11}}|Connection timed out}}
{{dsc macro const|ETXTBSY         |nolink=true|notes={{mark c++11}}|Text file busy}}
{{dsc macro const|EWOULDBLOCK     |nolink=true|notes={{mark c++11}}|Operation would block}}
{{dsc macro const|EXDEV           |nolink=true|notes={{mark c++11}}|Cross-device link}}
{{dsc end}}

===Notes===
Although the header {{tt|&lt;cerrno&gt;}} is based on the C standard library header {{header|errno.h|lang=c}}, the majority of the macros defined by {{tt|&lt;cerrno&gt;}} were adopted by C++ from the POSIX standard, rather than the C standard library.

===Synopsis===
{{source|
#define errno /* see description */
#define E2BIG /* see description */           // freestanding
#define EACCES /* see description */          // freestanding
#define EADDRINUSE /* see description */      // freestanding
#define EADDRNOTAVAIL /* see description */   // freestanding
#define EAFNOSUPPORT /* see description */    // freestanding
#define EAGAIN /* see description */          // freestanding
#define EALREADY /* see description */        // freestanding
#define EBADF /* see description */           // freestanding
#define EBADMSG /* see description */         // freestanding
#define EBUSY /* see description */           // freestanding
#define ECANCELED /* see description */       // freestanding
#define ECHILD /* see description */          // freestanding
#define ECONNABORTED /* see description */    // freestanding
#define ECONNREFUSED /* see description */    // freestanding
#define ECONNRESET /* see description */      // freestanding
#define EDEADLK /* see description */         // freestanding
#define EDESTADDRREQ /* see description */    // freestanding
#define EDOM /* see description */            // freestanding
#define EEXIST /* see description */          // freestanding
#define EFAULT /* see description */          // freestanding
#define EFBIG /* see description */           // freestanding
#define EHOSTUNREACH /* see description */    // freestanding
#define EIDRM /* see description */           // freestanding
#define EILSEQ /* see description */          // freestanding
#define EINPROGRESS /* see description */     // freestanding
#define EINTR /* see description */           // freestanding
#define EINVAL /* see description */          // freestanding
#define EIO /* see description */             // freestanding
#define EISCONN /* see description */         // freestanding
#define EISDIR /* see description */          // freestanding
#define ELOOP /* see description */           // freestanding
#define EMFILE /* see description */          // freestanding
#define EMLINK /* see description */          // freestanding
#define EMSGSIZE /* see description */        // freestanding
#define ENAMETOOLONG /* see description */    // freestanding
#define ENETDOWN /* see description */        // freestanding
#define ENETRESET /* see description */       // freestanding
#define ENETUNREACH /* see description */     // freestanding
#define ENFILE /* see description */          // freestanding
#define ENOBUFS /* see description */         // freestanding
#define ENODEV /* see description */          // freestanding
#define ENOENT /* see description */          // freestanding
#define ENOEXEC /* see description */         // freestanding
#define ENOLCK /* see description */          // freestanding
#define ENOLINK /* see description */         // freestanding
#define ENOMEM /* see description */          // freestanding
#define ENOMSG /* see description */          // freestanding
#define ENOPROTOOPT /* see description */     // freestanding
#define ENOSPC /* see description */          // freestanding
#define ENOSYS /* see description */          // freestanding
#define ENOTCONN /* see description */        // freestanding
#define ENOTDIR /* see description */         // freestanding
#define ENOTEMPTY /* see description */       // freestanding
#define ENOTRECOVERABLE /* see description */ // freestanding
#define ENOTSOCK /* see description */        // freestanding
#define ENOTSUP /* see description */         // freestanding
#define ENOTTY /* see description */          // freestanding
#define ENXIO /* see description */           // freestanding
#define EOPNOTSUPP /* see description */      // freestanding
#define EOVERFLOW /* see description */       // freestanding
#define EOWNERDEAD /* see description */      // freestanding
#define EPERM /* see description */           // freestanding
#define EPIPE /* see description */           // freestanding
#define EPROTO /* see description */          // freestanding
#define EPROTONOSUPPORT /* see description */ // freestanding
#define EPROTOTYPE /* see description */      // freestanding
#define ERANGE /* see description */          // freestanding
#define EROFS /* see description */           // freestanding
#define ESPIPE /* see description */          // freestanding
#define ESRCH /* see description */           // freestanding
#define ETIMEDOUT /* see description */       // freestanding
#define ETXTBSY /* see description */         // freestanding
#define EWOULDBLOCK /* see description */     // freestanding
#define EXDEV /* see description */           // freestanding
}}

===Defect reports===
{{dr list begin}}
{{dr list item|wg=lwg|dr=288|std=C++98|before=the macro {{tt|EILSEQ}} was not defined in {{tt|&lt;cerrno&gt;}}|after=defined}}
{{dr list end}}

===See also===
* [[cpp/error/errno macros|Description for the error number values]]

{{langlinks|es|ja|ru|zh}}