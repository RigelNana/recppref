{{cpp/header/title|cstddef}}
{{cpp/header/navbar}}
{{cpp/header/c}}

This header is part of the [[cpp/utility|utility]] library.

{{dsc begin}}
{{dsc h1|Macros}}
{{dsc inc|cpp/types/dsc NULL}}
{{dsc inc|cpp/types/dsc offsetof}}
{{dsc h1|Types}}
{{dsc inc|cpp/types/dsc size_t}}
{{dsc inc|cpp/types/dsc ptrdiff_t}}
{{dsc inc|cpp/types/dsc nullptr_t}}
{{dsc inc|cpp/types/dsc max_align_t}}
{{dsc inc|cpp/types/dsc byte}}
{{dsc h1|Functions}}
{{dsc inc|cpp/types/byte/dsc to_integer}}
{{dsc end}}

===Synopsis===
{{source|1=
namespace std {
  using ptrdiff_t = /* see description */;
  using size_t = /* see description */;
  using max_align_t = /* see description */;
  using nullptr_t = decltype(nullptr);

  enum class byte : unsigned char {};

  // byte type operations
  template&lt;class IntType&gt;
    constexpr byte&amp; operator&lt;&lt;=(byte&amp; b, IntType shift) noexcept;
  template&lt;class IntType&gt;
    constexpr byte operator&lt;&lt;(byte b, IntType shift) noexcept;
  template&lt;class IntType&gt;
    constexpr byte&amp; operator&gt;&gt;=(byte&amp; b, IntType shift) noexcept;
  template&lt;class IntType&gt;
    constexpr byte operator&gt;&gt;(byte b, IntType shift) noexcept;
  constexpr byte&amp; operator{{!=}}(byte&amp; l, byte r) noexcept;
  constexpr byte operator{{!}}(byte l, byte r) noexcept;
  constexpr byte&amp; operator&amp;=(byte&amp; l, byte r) noexcept;
  constexpr byte operator&amp;(byte l, byte r) noexcept;
  constexpr byte&amp; operator^=(byte&amp; l, byte r) noexcept;
  constexpr byte operator^(byte l, byte r) noexcept;
  constexpr byte operator~(byte b) noexcept;
  template&lt;class IntType&gt;
    constexpr IntType to_integer(byte b) noexcept;
}

#define NULL /* see description */
#define offsetof(P, D) /* see description */
}}

===Notes===
* {{lc|NULL}} is also defined in the following headers:
** {{header|clocale}}
** {{header|ctime}}
** {{header|cstring}}
** {{header|cstdio}}
** {{header|cstdlib}}
** {{header|cwchar}}
* {{lc|std::size_t}} is also defined in the following headers:
** {{header|ctime}}
** {{header|cstring}}
** {{header|cstdio}}
** {{header|cwchar}}
** {{header|cuchar}} {{mark since c++17}}

{{langlinks|ja|ru|zh}}