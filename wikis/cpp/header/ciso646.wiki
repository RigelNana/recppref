{{cpp/header/title|ciso646|notes={{mark until c++20}}|iso646.h}}
{{cpp/header/navbar}}
{{cpp/header/c}}

Compatibility header, in C defines [[cpp/language/operator_alternative|alternative operator representations]] which are keywords in C++.

This means that in a conforming implementation, including this header has no effect.

=== Notes ===
In old or nonconforming compilers, using the [[cpp/language/operator_alternative|alternative operator representations]] may still require including this header.

{{tt|&lt;ciso646&gt;}} is removed in C++20. Corresponding {{tt|&lt;iso646.h&gt;}} is still available in C++20.

Prior to C++20, including {{tt|&lt;ciso646&gt;}} was sometimes used as a technique for obtaining definitions of implementation-specific library version macros without causing other effects. 
As of C++20, the header {{header|version}} was added for this purpose.

{{example|code=
#include &lt;ciso646&gt;
#ifdef _LIBCPP_VERSION
#error Using LLVM libc++
#elif __GLIBCXX__ // Note: only version 6.1 or newer define this in ciso646
#error Using GNU libstdc++
#elif _CPPLIB_VER // Note: used by Visual Studio
#error Using Microsoft STL
#else
#error Using an unknown standard library
#endif
|p=true|output=
main.cpp:7:2: error: Using Microsoft STL
#error Using Microsoft STL
 ^
1 error generated.
}}

{{langlinks|de|es|ja|ru|zh}}