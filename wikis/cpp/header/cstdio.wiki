{{cpp/header/title|cstdio}}
{{cpp/header/navbar}}
{{cpp/header/c}}

This header is part of the [[cpp/io/c|C-style input/output]] library.

{{dsc begin}}
{{dsc h1|Types}}
{{dsc inc|cpp/io/c/dsc FILE}}
{{dsc inc|cpp/io/c/dsc fpos_t}}
{{dsc inc|cpp/types/dsc size_t}}

{{dsc h1|Macros}}
{{dsc inc|cpp/types/dsc NULL}}
{{dsc inc|cpp/io/c/dsc std streams}}
{{dsc macro const|EOF|nolink=true|integer constant expression of type {{c/core|int}} and negative value}}
{{dsc macro const|FOPEN_MAX|nolink=true|number of files that can be open simultaneously}}
{{dsc macro const|FILENAME_MAX|nolink=true|size needed for an array of {{c/core|char}} to hold the longest supported file name}}
{{dsc macro const|BUFSIZ|nolink=true|size of the buffer used by {{lc|std::setbuf}}}}
{{dsc macro const|_IOFBF|nolink=true|title=_IOFBF&lt;br&gt;_IOLBF&lt;br&gt;_IONBF|argument to {{lc|std::setbuf}} indicating fully buffered I/O&lt;br&gt;argument to {{lc|std::setbuf}} indicating line buffered I/O&lt;br&gt;argument to {{lc|std::setbuf}} indicating unbuffered I/O}}
{{dsc macro const|SEEK_SET|nolink=true|title=SEEK_SET&lt;br&gt;SEEK_CUR&lt;br&gt;SEEK_END|argument to {{lc|std::fseek}} indicating seeking from beginning of the file&lt;br&gt;argument to {{lc|std::fseek}} indicating seeking from the current file position&lt;br&gt;argument to {{lc|std::fseek}} indicating seeking from end of the file}}
{{dsc macro const|TMP_MAX|nolink=true|maximum number of unique filenames that can be generated by {{lc|std::tmpnam}}}}
{{dsc macro const|L_tmpnam|nolink=true|size needed for an array of {{c/core|char}} to hold the result of {{lc|std::tmpnam}}}}

{{dsc h1|Functions}}
{{dsc h2|File access}}
{{dsc inc|cpp/io/c/dsc fopen}}
{{dsc inc|cpp/io/c/dsc freopen}}
{{dsc inc|cpp/io/c/dsc fclose}}
{{dsc inc|cpp/io/c/dsc fflush}}
{{dsc inc|cpp/io/c/dsc setbuf}}
{{dsc inc|cpp/io/c/dsc setvbuf}}

{{dsc h2|Direct input/output}}
{{dsc inc|cpp/io/c/dsc fread}}
{{dsc inc|cpp/io/c/dsc fwrite}}

{{dsc h2|Unformatted input/output}}
{{dsc h2|{{small|Narrow character}}}}
{{dsc inc|cpp/io/c/dsc fgetc}}
{{dsc inc|cpp/io/c/dsc fgets}}
{{dsc inc|cpp/io/c/dsc fputc}}
{{dsc inc|cpp/io/c/dsc fputs}}
{{dsc inc|cpp/io/c/dsc getchar}}
{{dsc inc|cpp/io/c/dsc gets}}
{{dsc inc|cpp/io/c/dsc putchar}}
{{dsc inc|cpp/io/c/dsc puts}}
{{dsc inc|cpp/io/c/dsc ungetc}}

{{dsc h2|Formatted input/output}}
{{dsc h2|{{small|Narrow/multibyte character}}}}
{{dsc inc|cpp/io/c/dsc fscanf}}
{{dsc inc|cpp/io/c/dsc vfscanf}}
{{dsc inc|cpp/io/c/dsc fprintf}}
{{dsc inc|cpp/io/c/dsc vfprintf}}

{{dsc h2|File positioning}}
{{dsc inc|cpp/io/c/dsc ftell}}
{{dsc inc|cpp/io/c/dsc fgetpos}}
{{dsc inc|cpp/io/c/dsc fseek}}
{{dsc inc|cpp/io/c/dsc fsetpos}}
{{dsc inc|cpp/io/c/dsc rewind}}

{{dsc h2|Error handling}}
{{dsc inc|cpp/io/c/dsc clearerr}}
{{dsc inc|cpp/io/c/dsc feof}}
{{dsc inc|cpp/io/c/dsc ferror}}
{{dsc inc|cpp/io/c/dsc perror}}

{{dsc h2|Operations on files}}
{{dsc inc|cpp/io/c/dsc remove}}
{{dsc inc|cpp/io/c/dsc rename}}
{{dsc inc|cpp/io/c/dsc tmpfile}}
{{dsc inc|cpp/io/c/dsc tmpnam}}
{{dsc end}}

===Synopsis===
{{source|1=
namespace std {
  using size_t = /* see description */;
  using FILE = /* see description */;
  using fpos_t = /* see description */;
}

#define NULL /* see description */
#define _IOFBF /* see description */
#define _IOLBF /* see description */
#define _IONBF /* see description */
#define BUFSIZ /* see description */
#define EOF /* see description */
#define FOPEN_MAX /* see description */
#define FILENAME_MAX /* see description */
#define L_tmpnam /* see description */
#define SEEK_CUR /* see description */
#define SEEK_END /* see description */
#define SEEK_SET /* see description */
#define TMP_MAX /* see description */
#define stderr /* see description */
#define stdin /* see description */
#define stdout /* see description */

namespace std {
  int remove(const char* filename);
  int rename(const char* old_p, const char* new_p);
  FILE* tmpfile();
  char* tmpnam(char* s);
  int fclose(FILE* stream);
  int fflush(FILE* stream);
  FILE* fopen(const char* filename, const char* mode);
  FILE* freopen(const char* filename, const char* mode, FILE* stream);
  void setbuf(FILE* stream, char* buf);
  int setvbuf(FILE* stream, char* buf, int mode, size_t size);
  int fprintf(FILE* stream, const char* format, ...);
  int fscanf(FILE* stream, const char* format, ...);
  int printf(const char* format, ...);
  int scanf(const char* format, ...);
  int snprintf(char* s, size_t n, const char* format, ...);
  int sprintf(char* s, const char* format, ...);
  int sscanf(const char* s, const char* format, ...);
  int vfprintf(FILE* stream, const char* format, va_list arg);
  int vfscanf(FILE* stream, const char* format, va_list arg);
  int vprintf(const char* format, va_list arg);
  int vscanf(const char* format, va_list arg);
  int vsnprintf(char* s, size_t n, const char* format, va_list arg);
  int vsprintf(char* s, const char* format, va_list arg);
  int vsscanf(const char* s, const char* format, va_list arg);
  int fgetc(FILE* stream);
  char* fgets(char* s, int n, FILE* stream);
  int fputc(int c, FILE* stream);
  int fputs(const char* s, FILE* stream);
  int getc(FILE* stream);
  int getchar();
  int putc(int c, FILE* stream);
  int putchar(int c);
  int puts(const char* s);
  int ungetc(int c, FILE* stream);
  size_t fread(void* ptr, size_t size, size_t nmemb, FILE* stream);
  size_t fwrite(const void* ptr, size_t size, size_t nmemb, FILE* stream);
  int fgetpos(FILE* stream, fpos_t* pos);
  int fseek(FILE* stream, long int offset, int whence);
  int fsetpos(FILE* stream, const fpos_t* pos);
  long int ftell(FILE* stream);
  void rewind(FILE* stream);
  void clearerr(FILE* stream);
  int feof(FILE* stream);
  int ferror(FILE* stream);
  void perror(const char* s);
}
}}

===Notes===
* {{lc|NULL}} is also defined in the following headers:
** {{header|clocale}}
** {{header|ctime}}
** {{header|cstddef}}
** {{header|cstring}}
** {{header|cwchar}}
** {{header|cstdlib}}
* {{lc|std::size_t}} is also defined in the following headers:
** {{header|ctime}}
** {{header|cstddef}}
** {{header|cstring}}
** {{header|cwchar}}
** {{header|cuchar}} {{mark since c++17}}
** {{header|cstdlib}}

{{langlinks|es|ja|zh}}