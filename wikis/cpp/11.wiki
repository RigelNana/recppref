{{title|C++11}}
{{cpp/version/navbar}}

'''C++11''' is the second major version of C++ and the most important update since C++98. A large number of changes were introduced to both standardize existing practices and improve the abstractions available to the C++ programmers.

Before it was finally approved by ISO on 12 August 2011, the name 'C++0x' was used because it was expected to be published before 2010. It took 8 years between C++03 and C++11, so it has become the longest interval between versions so far. Since then, currently, C++ updates every 3 years regularly.

{{todo}}

Following features were merged into C++11:
* From [[cpp/experimental|TR1]]: all of TR1 except [[cpp/numeric/special_functions|Special Functions]].
* From Boost: [[cpp/thread|The thread library]], {{ltt|cpp/error/exception_ptr}}, {{ltt|cpp/error/error_code}} and {{ltt|cpp/error/error_condition}}, iterator improvements ({{ltt|cpp/iterator/begin}}, {{ltt|cpp/iterator/end}}, {{ltt|cpp/iterator/next}}, {{ltt|cpp/iterator/prev}})
* From C: C-style Unicode conversion functions

==Core language features==
* {{ltt|cpp/language/auto}} and {{ltt|cpp/language/decltype}}
* [[cpp/language/function#Function_definition|defaulted]] and [[cpp/language/function#Deleted_functions|deleted]] functions
* {{ltt|cpp/language/final}} and {{ltt|cpp/language/override}}
* [[cpp/language/function#Function_declaration|trailing return type]]
* [[cpp/language/reference|rvalue references]]
* [[cpp/language/move constructor|move constructors]] and [[cpp/language/move assignment|move assignment operators]]
* [[cpp/language/enum|scoped enums]]
* {{ltt|cpp/language/constexpr}} and [[cpp/named req/LiteralType|literal types]]
* [[cpp/language/list initialization|list initialization]]
* [[cpp/language/initializer list#Delegating constructor|delegating]] and [[cpp/language/using declaration|inherited]] constructors
* brace-or-equal [[cpp/language/initialization|initializers]]
* {{ltt|cpp/language/nullptr}}
* {{ltt|cpp/language/types#Integer_types|long long}}
* [[cpp/language/types#Character_types|{{c/core|char16_t}} and {{c/core|char32_t}}]]
* [[cpp/language/type_alias|type aliases]]
* [[cpp/language/parameter_pack|variadic templates]]
* [[cpp/language/union|generalized (non-trivial) unions]]
* [[cpp/named req/PODType|generalized PODs]] ([[cpp/named req/TrivialType|trivial types]] and [[cpp/named req/StandardLayoutType|standard-layout types]])
* [[cpp/language/string_literal|Unicode string literals]]
* [[cpp/language/user_literal|user-defined literals]]
* [[cpp/language/attributes|attributes]]
* [[cpp/language/lambda|lambda expressions]]
* {{ltt|cpp/language/noexcept_spec|noexcept}} specifier and {{ltt|cpp/language/noexcept|noexcept}} operator
* {{ltt|cpp/language/alignof}} and {{ltt|cpp/language/alignas}}
* multithreaded [[cpp/language/memory_model|memory model]]
* [[cpp/language/storage_duration#Storage_duration|thread-local storage]]
* [[cpp/memory#Garbage_collector_support_.28until_C.2B.2B23.29|GC interface]] {{mark life|removed=c++23}}
* [[cpp/language/range-for|range-{{c/core|for}}]] (based on Boost library)
* {{ltt|cpp/language/static_assert}} (based on Boost library)
{{todo}}

==Library features==
===Headers===
* {{header|array}}
* {{header|atomic}}
* {{header|cfenv}}
* {{header|chrono}}
* {{header|cinttypes}}
* {{header|condition_variable}}
* {{header|cstdint}}
* {{header|cuchar}}
* {{header|forward_list}}
* {{header|future}}
* {{header|initializer_list}}
* {{header|mutex}}
* {{header|random}}
* {{header|ratio}}
* {{header|regex}}
* {{header|scoped_allocator}}
* {{header|system_error}}
* {{header|thread}}
* {{header|tuple}}
* {{header|typeindex}}
* {{header|type_traits}}
* {{header|unordered_map}}
* {{header|unordered_set}}

===Library features===
* [[cpp/thread|concurrency support library]]
* {{tt|emplace()}} and other use of rvalue references throughout all parts of the existing library
* {{lc|std::unique_ptr}}
* {{lc|std::move_iterator}}
* {{lc|std::initializer_list}}
* [[cpp/named_req/Allocator#Stateful and stateless allocators|stateful]] and [[cpp/memory/scoped_allocator_adaptor|scoped]] allocators
* {{lc|std::forward_list}}
* [[cpp/chrono|chrono library]]
* [[cpp/numeric/ratio|ratio library]]
* new [[cpp/algorithm|algorithms]]:
:* {{lc|std::all_of}}, {{lc|std::any_of}}, {{lc|std::none_of}},
:* {{lc|std::find_if_not}}, 
:* {{lc|std::copy_if}}, {{lc|std::copy_n}},
:* {{ltt std|cpp/algorithm/move}}, {{lc|std::move_backward}},
:* {{lc|std::random_shuffle}}, {{lc|std::shuffle}}, 
:* {{lc|std::is_partitioned}}, {{lc|std::partition_copy}}, {{lc|std::partition_point}}, 
:* {{lc|std::is_sorted}}, {{lc|std::is_sorted_until}},
:* {{lc|std::is_heap}}, {{lc|std::is_heap_until}},
:* {{lc|std::minmax}}, {{lc|std::minmax_element}}, 
:* {{lc|std::is_permutation}},
:* {{lc|std::iota}},
:* {{lc|std::uninitialized_copy_n}}
* [[cpp/locale#Locale-independent_unicode_conversion_facets|Unicode conversion facets]]
* {{lc|std::function}}
* {{lc|std::exception_ptr}}
* {{lc|std::error_code}} and {{lc|std::error_condition}}
* [[cpp/iterator|iterator]] improvements:
:* {{lc|std::begin}}
:* {{lc|std::end}}
:* {{lc|std::next}}
:* {{lc|std::prev}}
* [[cpp/string/multibyte|Unicode conversion functions]]
{{todo}}

==Defect reports==
{{cpp/language/history/DR11}}

==Compiler support==
{{cpp/compiler support/11}}
{{cpp/compiler support/note}}

===External links===
{{elink begin}}
{{elink|{{enwiki|C++11}} - Wikipedia}}
{{elink|[https://github.com/makelinux/examples/blob/HEAD/cpp/11.cpp Working C++11 examples]}}
{{elink end}}

{{langlinks|es|ja|ru|zh}}