{{cpp/string/basic_string_view/title|data}}
{{cpp/string/basic_string_view/navbar}}
{{dcl begin}}
{{dcl|since=c++17|
constexpr const_pointer data() const noexcept;
}}
{{dcl end}}

返回指向底层字符数组的指针。该指针满足范围 {{range|data()|data() + size()}} 有效，且其中的值与视图的值对应。

===参数===
（无）

===返回值===
指向底层字符数组的指针。

===复杂度===
常数。

===注解===
不同于 {{lc|std::basic_string::data()}} 和字符串字面量，{{tt|std::basic_string_view::data()}} 可以返回指向不必为空终止的缓冲区的指针，例如子字符串视图（如从 {{rlpt|remove_suffix}} 获得的）。因此，将 {{tt|data()}} 传递给一个仅接收 {{tt|const CharT*}} 并期待空终止字符串的例程通常是错误的。

===示例===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;string_view&gt;

int main()
{
    std::wstring_view wcstr_v = L"xyzzy";
    std::cout &lt;&lt; std::wcslen(wcstr_v.data()) &lt;&lt; '\n';
    // OK：底层字符数组为空终止

    char array[3] = {'B', 'a', 'r'};
    std::string_view array_v(array, sizeof array);
    // std::cout &lt;&lt; std::strlen(array_v.data()) &lt;&lt; '\n';
    // 错误：底层字符数组非空终止

    std::string str(array_v.data(), array_v.size()); // OK
    std::cout &lt;&lt; std::strlen(str.data()) &lt;&lt; '\n';
    // OK：std::string 的底层字符数组始终为空终止
}
| output=
5
3
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string_view/dsc front}}
{{dsc inc|cpp/string/basic_string_view/dsc back}}
{{dsc inc|cpp/string/basic_string/dsc {{SUBPAGENAMEE}}}}
{{dsc end}}

{{langlinks|en|es|ja}}