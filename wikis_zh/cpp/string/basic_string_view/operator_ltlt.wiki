{{title|operator&lt;&lt;{{small|(std::basic_string_view)}}}}
{{cpp/string/basic_string_view/navbar}}
{{dcl begin}}
{{dcl header|string_view}}
{{dcl|since=c++17|
template&lt; class CharT, class Traits &gt;
std::basic_ostream&lt;CharT, Traits&gt;&amp;
    operator&lt;&lt;( std::basic_ostream&lt;CharT, Traits&gt;&amp; os, 
                std::basic_string_view&lt;CharT, Traits&gt; v );
}}
{{dcl end}}

表现为{{named req|FormattedOutputFunction}}。构造并检查哨兵对象后，[[cpp/named req/FormattedOutputFunction#填充|确定输出格式填充]]。

然后如同通过调用 {{c|os.rdbuf()-&gt;sputn(seq, n)}}，将来自结果序列 {{c|seq}}（{{c|v}} 的内容加上填充）的每个字符存储到输出流 {{c|os}}，其中 {{c|n}} 是 {{c|std::max(os.width(), str.size())}}。

最后，调用 {{c|os.width(0)}} 以取消 {{lc|std::setw}} 的效果，如果存在。

===异常===
如果输出时抛出异常，那么可能会抛出 {{lc|std::ios_base::failure}}。

===参数===
{{par begin}}
{{par|os|字符输出流}}
{{par|v|要插入的视图}}
{{par end}}

===返回值===
{{c|os}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string_view&gt;

int main()
{
    constexpr std::string_view s{"abc"};
    constexpr int width{5};

    // fill/left/right 属性保留不变直至被修改
    std::cout &lt;&lt; std::setfill('-');
    std::cout &lt;&lt; std::left;

    std::cout &lt;&lt; '[' &lt;&lt; std::setw(width) &lt;&lt; s &lt;&lt; "]\n";
    std::cout &lt;&lt; '[' &lt;&lt; std::setw(width) &lt;&lt; s &lt;&lt; "]\n";

    std::cout &lt;&lt; std::right;
    std::cout &lt;&lt; '[' &lt;&lt; std::setw(width) &lt;&lt; s &lt;&lt; "]\n";

    // 每次调用后重置宽度
    std::cout &lt;&lt; '[' &lt;&lt; s &lt;&lt; "]\n";
}
|output=
[abc--]
[abc--]
[--abc]
[abc]
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc operator ltltgtgt}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}