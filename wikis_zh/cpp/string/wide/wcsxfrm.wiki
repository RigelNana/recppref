{{cpp/title|wcsxfrm}}
{{cpp/string/wide/navbar}}
{{dcl begin}}
{{dcl header|cwchar}}
{{dcl|
std::size_t wcsxfrm( wchar_t* dest, const wchar_t* src, std::size_t count );
}}
{{dcl end}}

变换 {{c|src}} 所指向的空终止宽字符串为实现定义形式，满足在当前 C 本地环境中，用 {{lc|std::wcscmp}} 比较两个变换后的字符串给出的结果与用 {{lc|std::wcscoll}} 比较源字符串者相同。

将变换后字符串的前 {{c|count}} 个字符写入目标，包含空终止符，并返回完整的变换后字符串长度，排除空终止符。

若 {{c|count}} 为 {{c|0}}，则允许 {{c|dest}} 为空指针。

===注解===
能接收整个变换后字符串的正确缓冲区长度是 {{c|1 + std::wcsxfrm(nullptr, src, 0)}}。

在以同一宽字符串或宽字符串集进行本地环境依赖比较时使用此函数，因为只用 {{tt|std::wcsxfrm}} 变换所有字符串一次，再以 {{lc|std::wcscmp}} 进行后续比较更为高效。

===参数===
{{par begin}}
{{par|dest|指向要写入变换后字符串到的空终止宽字符数组首元素的指针}}
{{par|src|指向要变换的空终止宽字符串的指针}}
{{par|count|要输出的最大字符数}}
{{par end}}

===返回值===
变换后的空终止宽字符串的长度，不包含空终止字符。

===示例===
{{example
|code=
#include &lt;cwchar&gt;
#include &lt;iostream&gt;

int main()
{
    std::setlocale(LC_ALL, "sv_SE.utf8");

    std::wstring in1 = L"\u00e5r";
    std::wstring out1(1 + std::wcsxfrm(nullptr, in1.c_str(), 0), L' ');
    std::wstring in2 = L"\u00e4ngel";
    std::wstring out2(1 + std::wcsxfrm(nullptr, in2.c_str(), 0), L' ');

    std::wcsxfrm(&amp;out1[0], in1.c_str(), out1.size());
    std::wcsxfrm(&amp;out2[0], in2.c_str(), out2.size());

    std::wcout &lt;&lt; "在瑞典语本地环境中: ";
    if (out1 &lt; out2)
        std::wcout &lt;&lt; in1 &lt;&lt; " 先于 " &lt;&lt; in2 &lt;&lt; '\n';
    else
        std::wcout &lt;&lt; in2 &lt;&lt; " 先于 " &lt;&lt; in1 &lt;&lt; '\n';

    std::wcout &lt;&lt; "在字典序比较中: ";
    if (in1 &lt; in2)
        std::wcout &lt;&lt; in1 &lt;&lt; " 先于 " &lt;&lt; in2 &lt;&lt; '\n';
    else
        std::wcout &lt;&lt; in2 &lt;&lt; " 先于 " &lt;&lt; in1 &lt;&lt; '\n';

}
|output=
在瑞典语本地环境中: år 先于 ängel
在字典序比较中: ängel 先于 år
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strxfrm}}
{{dsc inc|cpp/locale/collate/dsc do_transform}}
{{dsc inc|cpp/string/wide/dsc wcscoll}}
{{dsc see c|c/string/wide/wcsxfrm}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}