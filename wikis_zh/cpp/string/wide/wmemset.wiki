{{cpp/title|wmemset}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
wchar_t* wmemset( wchar_t* dest, wchar_t ch, std::size_t count );
}}

复制宽字符 {{c|ch}} 到 {{c|dest}} 所指向的宽字符数组的前 {{c|count}} 个宽字符。

若出现溢出，则行为未定义。

若 {{c|count}} 为零，则函数不做任何事。

===参数===
{{par begin}}
{{par|dest|指向要填充的宽字符数组的指针}}
{{par|ch|填充的宽字符}}
{{par|count|要填充的宽字符数}}
{{par end}}

===返回值===
返回 {{c|dest}} 的副本

===注解===
此函数不受本地环境影响，且完全不关心其写入的 {{c|wchar_t}} 对象的值：空字符和非法宽字符亦被写入。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    wchar_t ar[4] = {L'1', L'2', L'3', L'4'};
    std::wmemset(ar, L'\U0001f34c', 2); // 以 🍌 替换 [12]
    std::wmemset(ar + 2, L'蕉', 2); // 以 蕉 替换 [34]

    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale("en_US.utf8"));
    std::wcout &lt;&lt; std::wstring(ar, 4) &lt;&lt; '\n';
}
|p=true
|output=
🍌🍌蕉蕉
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc memset}}
{{dsc inc|cpp/string/wide/dsc wmemcpy}}
{{dsc inc|cpp/algorithm/dsc fill_n}}
{{dsc see c|c/string/wide/wmemset}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}