{{cpp/title| wcscspn}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
std::size_t wcscspn( const wchar_t* dest, const wchar_t* src );
}}

返回 {{c|dest}} 所指向的宽字符串的，仅由 {{c|src}} 所指向的宽字符串中找''不''到的字符组成的最大起始段的长度。

===参数===
{{par begin}}
{{par|dest|指向要分析的空终止宽字符串的指针}}
{{par|src|指向含待搜索字符的空终止宽字符串的指针}}
{{par end}}

===返回值===
仅由 {{c|src}} 所指向的宽字符串中找不到的字符组成的最大起始段长度。

===示例===
{{example
|下面的输出是使用 clang (libc++) 获得的。
|code=
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    wchar_t dest[] = L"白猫 黑狗 甲虫";
    //                      └───┐
    const wchar_t* src = L"甲虫,黑狗";

    const std::size_t len = std::wcscspn(dest, src);
    dest[len] = L'\0'; // 终止片段以便打印输出

    std::wcout.imbue(std::locale("en_US.utf8"));
    std::wcout &lt;&lt; L"最大起始段的长度为 " &lt;&lt; len &lt;&lt; L"。\n";
    std::wcout &lt;&lt; L"此片段为 \"" &lt;&lt; dest &lt;&lt; L"\"。\n";
}
|p=true&lt;!--gcc may not print hieroglyphs, while clang does--&gt;
|output=
最大起始段的长度为 3。
此片段为 "白猫 "。
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcsspn}}
{{dsc inc|cpp/string/wide/dsc wcspbrk}}
{{dsc see c|c/string/wide/wcscspn}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}