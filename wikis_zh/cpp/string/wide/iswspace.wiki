{{cpp/title|iswspace}}
{{cpp/string/wide/navbar}}
{{ddcl | header=cwctype |
int iswspace( wint_t ch );
}}

检查给定宽字符是否被当前安装的 C 本地环境分类为宽空白字符。在默认本地环境中，下列字符是空白符：
* 空格（{{tt|0x20}}、{{c|' '}}）
* 换页符（{{tt|0x0c}}、{{c|'\f'}}）
* 换行符（{{tt|0x0a}}、{{c|'\n'}}）
* 回车（{{tt|0x0d}}、{{c|'\r'}}）
* 水平制表符（{{tt|0x09}}、{{c|'\t'}}）
* 垂直制表符（{{tt|0x0b}}、{{c|'\v'}}）

{{cpp/string/wide/wint_t args}}

===参数===
{{par begin}}
{{par|ch|宽字符}}
{{par end}}

===返回值===
若宽字符为空白符则为非零值，否则为零。

===注解===
ISO 30112 定义 POSIX 空白符为 Unicode 字符 U+0009..U+000D、U+0020、U+1680、U+180E、U+2000..U+2006、U+2008..U+200A、U+2028、U+2029、U+205F 及 U+3000。

===示例===
{{example
|演示以不同本地环境使用 {{tt|iswspace}}
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

void try_with(wchar_t c, const char* loc)
{
    std::setlocale(LC_ALL, loc);
    std::wcout &lt;&lt; "isspace('" &lt;&lt; c &lt;&lt; "') 在 " &lt;&lt; loc &lt;&lt; " 本地环境中返回 "
               &lt;&lt; std::boolalpha &lt;&lt; static_cast&lt;bool&gt;(std::iswspace(c)) &lt;&lt; '\n';
}

int main()
{
    wchar_t EM_SPACE = L'\u2003'; // Unicode 字符 'EM SPACE'
    try_with(EM_SPACE, "C");
    try_with(EM_SPACE, "en_US.UTF8");
}
|output=
isspace(' ') 在 C 本地环境中返回 false
isspace(' ') 在 en_US.UTF8 本地环境中返回 true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isspace}}
{{dsc inc|cpp/string/byte/dsc isspace}}
{{dsc see c|c/string/wide/iswspace}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}