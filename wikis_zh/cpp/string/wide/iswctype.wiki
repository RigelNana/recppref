{{cpp/title|iswctype}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswctype( std::wint_t wc, std::wctype_t desc );
}}

用 {{c|desc}} 所标识的当前 C 本地环境的 {{lc|LC_TYPE}} 类别分类宽字符 {{c|wc}}。

{{cpp/string/wide/wint_t args|wc}}

===参数===
{{par begin}}
{{par|wc|要分类的宽字符}}
{{par|desc|从调用 {{lc|std::wctype}} 获得的 {{lc|LC_CTYPE}} 类别}}
{{par end}}

===返回值===
若字符 {{c|wc}} 拥有当前 C 本地环境的 {{lc|LC_CTYPE}} 刻面 {{c|desc}} 所标识的属性则为非零值，否则为零。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

bool classify(wchar_t wc, const std::string&amp; cat)
{
    return std::iswctype(wc, std::wctype(cat.c_str()));
}

int main()
{
    std::setlocale(LC_ALL, "ja_JP.UTF-8");
    std::cout &lt;&lt; "字符 \u6c34 是...\n";
    for (std::string s : {"digit", "alpha", "space", "cntrl", "jkanji"})
        std::cout &lt;&lt; s &lt;&lt; "? " &lt;&lt; std::boolalpha &lt;&lt; classify(L'\u6c34', s) &lt;&lt; '\n';
}
|output=
字符 水 是...
digit? false
alpha? true
space? false
cntrl? false
jkanji? true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wctype}}
{{dsc see c|c/string/wide/iswctype}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}