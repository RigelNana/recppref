{{cpp/title| wcschr}}
{{cpp/string/wide/navbar}}
{{dcl begin}}
{{dcl header|cwchar}}
{{dcl|
const wchar_t* wcschr( const wchar_t* str, wchar_t ch );
}}
{{dcl|1=
      wchar_t* wcschr(       wchar_t* str, wchar_t ch );
}}
{{dcl end}}

寻找宽字符 {{c|ch}} 在 {{c|str}} 所指向的宽字符串中的首次出现。

===参数===
{{par begin}}
{{par|str|指向待分析的空终止宽字符的指针}}
{{par|ch|要搜索的宽字符}}
{{par end}}

===返回值===
指向 {{c|str}} 中找到的字符的指针，或若找不到这种字符则为空指针。

===示例===
{{example
|code=
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    const wchar_t arr[] = L"白猫 黒猫 кошки";
    const wchar_t* cat = std::wcschr(arr, L'猫');
    const wchar_t* dog = std::wcschr(arr, L'犬');

    std::cout.imbue(std::locale("en_US.utf8"));

    if (cat)
        std::cout &lt;&lt; "字符 猫 发现于位置 " &lt;&lt; cat - arr &lt;&lt; '\n';
    else
        std::cout &lt;&lt; "字符 猫 未找到\n";

    if (dog)
        std::cout &lt;&lt; "字符 犬 发现于位置 " &lt;&lt; dog - arr &lt;&lt; '\n';
    else
        std::cout &lt;&lt; "字符 犬 未找到\n";
}
|output=
字符 猫 发现于位置 1
字符 犬 未找到
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc find}}
{{dsc inc|cpp/string/byte/dsc strchr}}
{{dsc inc|cpp/string/wide/dsc wcsrchr}}
{{dsc inc|cpp/string/wide/dsc wcspbrk}}
{{dsc see c|c/string/wide/wcschr}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}