{{cpp/title|iswprint}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswprint( std::wint_t ch );
}}

检查是否能打印给定的宽字符，即宽字符是否为数字（{{tt|0123456789}}）、大写字母（{{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}）、小写字母（{{tt|abcdefghijklmnopqrstuvwxyz}}）、标点字符（{{tt|&lt;nowiki&gt;!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{!}~&lt;/nowiki&gt;}}）、空格或限定于当前 C 本地环境的任何可打印字符之一。

{{cpp/string/wide/wint_t args}}

===参数===
{{par begin}}
{{par|ch|宽字符}}
{{par end}}

===返回值===
若能打印宽字符则为非零值，否则为零。

===注解===
[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] 指定哪些 Unicode 字符包含于 POSIX 打印类别。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

void demo_iswprint(std::string_view rem, const std::wint_t c)
{
    std::cout &lt;&lt; std::boolalpha &lt;&lt; std::hex &lt;&lt; std::showbase
              &lt;&lt; rem &lt;&lt; "iswprint('" &lt;&lt; c &lt;&lt; "') = "
              &lt;&lt; !!std::iswprint(c) &lt;&lt; '\n';
}

int main()
{
    const wchar_t c1 = L'\u2002'; // en-space
    const wchar_t c2 = L'\u0082'; // break permitted

    demo_iswprint("默认本地环境中:\n", c1);

    std::setlocale(LC_ALL, "en_US.utf8");
    demo_iswprint("Unicode 本地环境中:\n", c1);
    demo_iswprint("", c2);
}
|p=true
|output=
默认本地环境中:
iswprint('0x2002') = false
Unicode 本地环境中:
iswprint('0x2002') = true
iswprint('0x82') = false
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isprint}}
{{dsc inc|cpp/string/byte/dsc isprint}}
{{dsc see c|c/string/wide/iswprint}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}