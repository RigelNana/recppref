{{cpp/title|wcsncpy}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
wchar_t* wcsncpy( wchar_t* dest, const wchar_t* src, std::size_t count );
}}

复制 {{c|src}} 所指向的宽字符串的至多 {{c|count}} 个字符（包含终止空宽字符）到 {{c|dest}} 所指向的宽字符数组。

若在完全复制整个 {{c|src}} 数组前抵达 {{c|count}}，则产生的宽字符数组不是空终止的。

若在复制来自 {{c|src}} 的终止空宽字符后未抵达 {{c|count}}，则写入额外的空宽字符到 {{c|dest}}，直至写入总共 {{c|count}} 个字符。

若字符串重叠，则行为未定义。

===参数===
{{par begin}}
{{par|dest|指向要复制到的宽字符数组的指针}}
{{par|src|指向复制来源的宽字符串的指针}}
{{par|count|要复制的最大宽字符数}}
{{par end}}

===返回值===
{{c|dest}}

===注解===
典型用法中，{{c|count}} 是目标数组的大小。

===示例===
{{example
|code=
#include &lt;cwchar&gt;
#include &lt;iostream&gt;

int main()
{
    const wchar_t src[] = L"hi";
    wchar_t dest[6] = {L'a', L'b', L'c', L'd', L'e', L'f'};

    std::wcsncpy(dest, src, 5); // 这将复制 ‘hi’ 并重复 \0 三次

    std::wcout &lt;&lt; "dest 的内容为: ";
    for (const wchar_t c : dest)
    {
        if (c)
            std::wcout &lt;&lt; c &lt;&lt; ' ';
        else
            std::wcout &lt;&lt; "\\0" &lt;&lt; ' ';
    }
    std::wcout &lt;&lt; '\n';
}
|output=
dest 的内容为: h i \0 \0 \0 f 
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcscpy}}
{{dsc inc|cpp/string/wide/dsc wmemcpy}}
{{dsc inc|cpp/string/byte/dsc strncpy}}
{{dsc see c|c/string/wide/wcsncpy}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}