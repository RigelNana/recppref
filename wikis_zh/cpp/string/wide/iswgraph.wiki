{{cpp/title|iswgraph}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswgraph( std::wint_t ch );
}}

检查给定的宽字符是否拥有图形表示，即是数字（{{tt|0123456789}}）、大写字母（{{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}）、小写字母（{{tt|abcdefghijklmnopqrstuvwxyz}}）、标点字符（{{tt|!"#$%&amp;'()*+,-./:;&lt;{{=}}&gt;?@[\]^_`{&lt;nowiki&gt;&lt;/nowiki&gt;{{!}}&lt;nowiki&gt;&lt;/nowiki&gt;}~}}）之一或任何限定于当前 C 本地环境的图形字符。

{{cpp/string/wide/wint_t args}}

===参数===
{{par begin}}
{{par|ch|宽字符}}
{{par end}}

===返回值===
若宽字符拥有图形表示字符则为非零值，否则为零。

===注解===
[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] 指定哪些 Unicode 字符包含于 POSIX 图形类别。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

int main()
{
    wchar_t c = L'\u2602'; // Unicode 字符 伞 ('☂')

    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase &lt;&lt; std::boolalpha
              &lt;&lt; "默认本地环境中, iswgraph("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; static_cast&lt;bool&gt;(std::iswgraph(c)) &lt;&lt; '\n';

    std::setlocale(LC_ALL, "en_US.utf8");
    std::cout &lt;&lt; "Unicode 本地环境中, iswgraph("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; static_cast&lt;bool&gt;(std::iswgraph(c)) &lt;&lt; '\n';
}
|output=
默认本地环境中, iswgraph(0x2602) = false
Unicode 本地环境中, iswgraph(0x2602) = true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isgraph}}
{{dsc inc|cpp/string/byte/dsc isgraph}}
{{dsc see c|c/string/wide/iswgraph}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}