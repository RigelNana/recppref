{{cpp/title|iswalpha}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswalpha( std::wint_t ch );
}}

检查给定字符是否字母字符，即大写字母（{{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}）、小写字母（ {{tt|abcdefghijklmnopqrstuvwxyz}}）或任何限定于当前本地环境的字母字符。

{{cpp/string/wide/wint_t args}}
===参数===
{{par begin}}
{{par|ch|宽字符}}
{{par end}}

===返回值===
若宽字符为字母字符则为非零值，否则为 {{c|0}}。

===注解===
[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] 指定哪些 Unicode 字符包含于 POSIX 字母类别。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

int main()
{
    wchar_t c = L'\u0b83'; // 泰米尔符号 Visarga ('ஃ')

    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase &lt;&lt; std::boolalpha;
    std::cout &lt;&lt; "默认本地环境中, iswalpha(" &lt;&lt; (std::wint_t)c &lt;&lt; ") = "
              &lt;&lt; (bool)std::iswalpha(c) &lt;&lt; '\n';

    std::setlocale(LC_ALL, "en_US.utf8");
    std::cout &lt;&lt; "Unicode 本地环境中, iswalpha(" &lt;&lt; (std::wint_t)c &lt;&lt; ") = "
              &lt;&lt; (bool)std::iswalpha(c) &lt;&lt; '\n';
}
|p=true
|output=
默认本地环境中, iswalpha(0xb83) = false
Unicode 本地环境中, iswalpha(0xb83) = true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isalpha}}
{{dsc inc|cpp/string/byte/dsc isalpha}}
{{dsc see c|c/string/wide/iswalpha}}
{{dsc end}}

{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}