{{cpp/title|iswdigit}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
int iswdigit( wint_t ch );
}}

检查给定的宽字符（若窄化）是否对应十个十进制数字字符 {{c/core|0123456789}} 之一。

{{cpp/string/wide/wint_t args}}
===参数===
{{par begin}}
{{par|ch|宽字符}}
{{par end}}

===返回值===
若宽字符为数字字符则为非零值，否则为零。

===注解===
{{tt|std::iswdigit}} 和 {{lc|std::iswxdigit}} 是仅有的不受当前安装的 C 本地环境影响的标准宽字符分类函数。

===示例===
{{example|一些本地环境提供检测非 ASCII 数字的额外字符类
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

void test(wchar_t a3, wchar_t u3, wchar_t j3)
{
    std::wcout &lt;&lt; std::boolalpha
               &lt;&lt; "\t   '" &lt;&lt; a3 &lt;&lt; "'   '" &lt;&lt; u3 &lt;&lt; "'  '" &lt;&lt; j3  &lt;&lt; "'\n"
               &lt;&lt; "iswdigit: "
               &lt;&lt; (bool)std::iswdigit(a3) &lt;&lt; "  "
               &lt;&lt; (bool)std::iswdigit(u3) &lt;&lt; " "
               &lt;&lt; (bool)std::iswdigit(j3) &lt;&lt; '\n'
               &lt;&lt; "jdigit:   "
               &lt;&lt; (bool)std::iswctype(a3, std::wctype("jdigit")) &lt;&lt; ' '
               &lt;&lt; (bool)std::iswctype(u3, std::wctype("jdigit")) &lt;&lt; ' '
               &lt;&lt; (bool)std::iswctype(j3, std::wctype("jdigit")) &lt;&lt; '\n';
}

int main()
{
    wchar_t a3 = L'3';  // ASCII 数字 3
    wchar_t u3 = L'三'; // CJK 数字 3
    wchar_t j3 = L'３'; // 全角数字 3

    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout &lt;&lt; "美国本地环境中:\n";
    test(a3, u3, j3);

    std::wcout &lt;&lt; "\n日语本地环境中:\n";
    std::setlocale(LC_ALL, "ja_JP.utf8");
    test(a3, u3, j3);
}
|p=true
|output=
美国本地环境中:
          '3'   '三'  '３'
iswdigit true  false false
jdigit:  false false false

日语本地环境中:
          '3'   '三'  '３'
iswdigit true  false false
jdigit:  false false true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isdigit}}
{{dsc inc|cpp/string/byte/dsc isdigit}}
{{dsc see c|c/string/wide/iswdigit}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}