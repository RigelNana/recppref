{{cpp/title| wcscmp}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwchar|
int wcscmp( const wchar_t* lhs, const wchar_t* rhs );
}}

以字典序比较两个空终止宽字符串。

结果的正负号是被比较的字符串中，首对相异宽字符间的差值的正负号。

若 {{c|lhs}} 或 {{c|rhs}} 不是指向空终止宽字符串的指针，则行为未定义。

===参数===
{{par begin}}
{{par|lhs, rhs|指向待比较的空终止宽字符串的指针}}
{{par end}}

===返回值===
若字典序中 {{c|lhs}} 先出现于 {{c|rhs}} 则为负值。

若 {{c|lhs}} 与 {{c|rhs}} 比较相等则为零。

若字典序中 {{c|lhs}} 后出现于 {{c|rhs}} 则为负值。

===注解===
不同于 {{lc|std::wcscoll}}，此函数不考虑本地环境。而且在一同使用来自不同的 Unicode 块的字符时，或编码单元不匹配任何对照顺序时，顺序可能无意义。

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;const wchar_t*&gt; leaders
    {
        L"Ленин", L"Сталин", L"Маленков",
        L"Хрущёв", L"Брежнев", L"Андропов", L"Черненко", L"Горбачёв"
    };

    std::ranges::sort(leaders, [](auto leaderLHS, auto leaderRHS)
    {
        return std::wcscmp(leaderLHS, leaderRHS) &lt; 0;
    });

    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale("en_US.utf8"));
    for (auto leader : leaders)
        std::wcout &lt;&lt; leader[0] &lt;&lt; ' ';
    std::wcout &lt;&lt; '\n';
}
|p=true
|output=
А Б Г Л М С Х Ч
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc wcsncmp}}
{{dsc inc|cpp/string/wide/dsc wmemcmp}}
{{dsc inc|cpp/string/byte/dsc strcmp}}
{{dsc inc|cpp/string/wide/dsc wcscoll}}
{{dsc see c|c/string/wide/wcscmp}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}