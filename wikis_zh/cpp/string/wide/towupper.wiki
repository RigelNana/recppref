{{cpp/title|towupper}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
std::wint_t towupper( std::wint_t ch );
}}
若可能则转换给定的宽字符为大写。

{{cpp/string/wide/wint_t args}}

===参数===
{{par begin}}
{{par|ch|要转换的宽字符}}
{{par end}}

===返回值===
{{c|ch}} 的大写版本，或若无大写版本列于当前 C 本地环境，则为不修改的 {{c|ch}}。

===注解===
此函数只能进行 1:1 映射，例如 {{c/core|'ß'}} 的大写形式（有一些例外）是双字符字符串 {{c/core|"SS"}}，它无法通过 {{tt|std::towupper}} 获得。

[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] 指定此映射包含哪些 Unicode 字符对。

===示例===
{{example
|拉丁[[enwiki:Long s|字母 'ſ' (U+017F)]] 是 {{c/core|'S'}} (U+0053) 的替用小写形式。
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

int main()
{
    wchar_t c = L'\u017f'; // 拉丁文小写字母长 S ('ſ')

    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase;
    std::cout &lt;&lt; "默认本地环境中, towupper("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; std::towupper(c) &lt;&lt; '\n';

    std::setlocale(LC_ALL, "en_US.utf8");
    std::cout &lt;&lt; "Unicode 本地环境, towupper("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; std::towupper(c) &lt;&lt; '\n';
}
|output=
默认本地环境中, towupper(0x17f) = 0x17f
Unicode 本地环境中, towupper(0x17f) = 0x53
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc towlower}}
{{dsc inc|cpp/locale/dsc toupper}}
{{dsc inc|cpp/string/byte/dsc toupper}}
{{dsc see c|c/string/wide/towupper}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}