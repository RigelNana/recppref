{{cpp/title|wcstoimax|wcstoumax}}
{{cpp/string/wide/navbar}}
{{dcl begin}}
{{dcl header|cinttypes}}
{{dcl|since=c++11| 
std::intmax_t wcstoimax( const wchar_t* nptr, wchar_t** endptr, int base );
}}
{{dcl|since=c++11|
std::uintmax_t wcstoumax( const wchar_t* nptr, wchar_t** endptr, int base );
}}
{{dcl end}}

转译 {{c|nptr}} 所指向的宽字符串中的无符号整数值。

{{cpp/string/cvt str2int base|base=base|u=true|w=true}}

函数设置 {{c|endptr}} 所指向的指针指向最后被转译宽字符的后一宽字符。若 {{c|endptr}} 为空指针，则忽略它。

===参数===
{{par begin}}
{{par|nptr|指向要转译的空终止宽字符串的指针}}
{{par|endptr|指向指向宽字符指针的指针}}
{{par|base|被转译整数值的''底''}}
{{par end}}

===返回值===
成功时为对应 {{c|str}} 内容的整数值。若转换出的值落在对应返回类型范围外，则发生值域错误并返回 {{lc|INTMAX_MAX}}、{{lc|INTMAX_MIN}}、{{lc|UINTMAX_MAX}} 或 {{c|0}} 中的适当值。若不能进行转换，则返回 {{c|0}}。

===示例===
{{example
|code=
#include &lt;cinttypes&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::wstring str = L"helloworld";
    std::intmax_t val = std::wcstoimax(str.c_str(), nullptr, 36);
    std::wcout &lt;&lt; str &lt;&lt; " 以 36 为底时是以 10 为底的 " &lt;&lt; val &lt;&lt; "\n";

    wchar_t* nptr;
    val = std::wcstoimax(str.c_str(), &amp;nptr, 30);
    if (nptr != &amp;str[0] + str.size())
        std::wcout &lt;&lt; str &lt;&lt; " 以 30 为底时无效。"
                   &lt;&lt; "第一个无效数字是 " &lt;&lt; *nptr &lt;&lt; '\n';
}
|output=
helloworld 以 36 为底时是以 10 为底的 1767707668033969
以 30 为底时无效。第一个无效数字是 w
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strtoimax}}
{{dsc inc|cpp/string/wide/dsc wcstol}}
{{dsc inc|cpp/string/wide/dsc wcstoul}}
{{dsc see c|c/string/wide/wcstoimax|wcstoimax|wcstoumax}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}