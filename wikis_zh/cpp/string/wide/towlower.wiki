{{cpp/title|towlower}}
{{cpp/string/wide/navbar}}
{{ddcl|header=cwctype|
std::wint_t towlower( std::wint_t ch );
}}
若可能，则转换给定宽字符为小写。

{{cpp/string/wide/wint_t args}}

===参数===
{{par begin}}
{{par|ch|要转换的宽字符}}
{{par end}}

===返回值===
{{c|ch}} 的小写版本，或若无小写版本列于当前 C 本地环境则为不修改的 {{c|ch}}。

===注解===
此函数只能进行 1:1 字符映射，例如希腊大写字母 {{c/core|'Σ'}} 拥有两个小写形式，取决于在词中的位置：{{c/core|'σ'}} 与 {{c/core|'ς'}}。此情况下，不能用对 {{tt|std::towlower}} 的调用获得正确的小写形式。

[https://www.open-std.org/JTC1/SC35/WG5/docs/30112d10.pdf ISO 30112] 指定此映射包含哪些 Unicode 字符对。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwctype&gt;
#include &lt;iostream&gt;

int main()
{
    wchar_t c = L'\u0190'; // 拉丁文大写字母开 E ('Ɛ')

    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase;
    std::cout &lt;&lt; "默认本地环境中, towlower("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; std::towlower(c) &lt;&lt; '\n';
    std::setlocale(LC_ALL, "en_US.utf8");
    std::cout &lt;&lt; "Unicode 本地环境中, towlower("
              &lt;&lt; static_cast&lt;std::wint_t&gt;(c) &lt;&lt; ") = "
              &lt;&lt; std::towlower(c) &lt;&lt; '\n';
}
|output=
默认本地环境中, towlower(0x190) = 0x190
Unicode 本地环境中, towlower(0x190) = 0x25b
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/wide/dsc towupper}}
{{dsc inc|cpp/locale/dsc tolower}}
{{dsc inc|cpp/string/byte/dsc tolower}}
{{dsc see c|c/string/wide/towlower}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}