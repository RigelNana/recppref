{{cpp/string/basic_string/title|assign_range}}
{{cpp/string/basic_string/navbar}}
{{ddcl|since=c++23|1=
template&lt; container-compatible-range&lt;CharT&gt; R &gt;
constexpr std::basic_string&amp; assign_range( R&amp;&amp; rg );
}}

以范围 {{c|rg}} 中的值替换字符串的内容。

等价于
{{source|1=
return assign(
    std::basic_string(
        std::from_range,
        std​::​forward&lt;R&gt;(rg),
        get_allocator())
);
}}

===参数===
{{par begin}}
{{par|rg|{{ls|cpp/ranges/to#container compatible range}}}}
{{par end}}

===返回值===
{{c|*this}}

===复杂度===
与 {{c|rg}} 的大小成线性。

===异常===
{{cpp/string/basic_string/length error note}}

{{cpp/strong exception safety guarantee}}

===注解===
{{feature test macro|__cpp_lib_containers_ranges|value=202202L|std=C++23|接受{{ls|cpp/ranges/to#容器兼容范围}}的成员函数}}

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;string&gt;

int main()
{
    const auto source = {'s', 'o', 'u', 'r', 'c', 'e'};
    std::string destination{"destination"};

#ifdef __cpp_lib_containers_ranges
    destination.assign_range(source);
#else
    destination.assign(source.begin(), source.end());
#endif

    assert(destination == "source");
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc assign}}
{{dsc inc|cpp/string/basic_string/dsc operator{{=}}}}
{{dsc inc|cpp/string/basic_string/dsc constructor}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}