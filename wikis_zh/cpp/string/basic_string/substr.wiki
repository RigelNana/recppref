{{cpp/string/basic_string/title|substr}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcl rev multi|num=1|until1=c++23|notes1={{mark constexpr since c++20}}|dcl1=
basic_string substr( size_type pos = 0, size_type count = npos ) const;
|dcl2=
constexpr basic_string
    substr( size_type pos = 0, size_type count = npos ) const&amp;;
}}
{{dcl|num=2|since=c++23|1=
constexpr basic_string substr( size_type pos = 0, size_type count = npos ) &amp;&amp;;
}}
{{dcl end}}

返回子串 {{range|pos|pos + count}}。如果请求的子串越过字符串的结尾，即 {{c|count}} 大于 {{c|size() - pos}}（例如 {{c|1=count == npos}}），那么返回的子串是 {{range/core|{{c|pos}}|{{rlpf|size}}}}。

@1@ 等价于 {{c|return basic_string(*this, pos, count);}}。

@2@ 等价于 {{c|return basic_string(std::move(*this), pos, count);}}。

===参数===
{{par begin}}
{{par|pos|要包含的首个字符的位置}}
{{par|count|子串的长度}}
{{par end}} 

===返回值===
含子串 {{range|pos|pos + count}} 或 {{range/core|{{c|pos}}|{{rlpf|size}}}} 的字符串。

===异常===
在 {{c|pos &gt; size()}} 时抛出 {{lc|std::out_of_range}}。

{{cpp/strong exception safety guarantee|plural=yes}}

===复杂度===
与 {{c|count}} 成线性。

===注解===
返回的字符串的分配器会被默认构造：新分配器将''不一定''{{sep}}是 {{rlpf|get_allocator}} 的副本。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;
 
int main()
{
    std::string a = "0123456789abcdefghij";
    
    // count 是 npos，返回 [pos, size())
    std::string sub1 = a.substr(10);
    std::cout &lt;&lt; sub1 &lt;&lt; '\n';
    
    // pos 和 pos + count 都在边界内，返回 [pos, pos + count)
    std::string sub2 = a.substr(5, 3);
    std::cout &lt;&lt; sub2 &lt;&lt; '\n';
    
    // pos 在边界内，pos+count 不在，返回 [pos, size()) 
    std::string sub4 = a.substr(a.size() - 3, 50);
    // 这等效于
    // std::string sub4 = a.substr(17, 3);
    // 因为 a.size() == 20，pos == a.size() - 3 == 17 而 a.size() - pos == 3
    
    std::cout &lt;&lt; sub4 &lt;&lt; '\n';
    
    try
    {
        // pos 在边界外，抛出
        std::string sub5 = a.substr(a.size()+3, 50);
        std::cout &lt;&lt; sub5 &lt;&lt; '\n';
    }
    catch(const std::out_of_range&amp; e)
    {
        std::cout &lt;&lt; "pos 超出了字符串的大小\n";
    }
}
|p=true
|output=
abcdefghij
567
hij
pos 超出了字符串的大小
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=847|std=C++98|before=没有异常安全保证|after=添加强异常安全保证}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc copy}}
{{dsc inc|cpp/string/basic_string/dsc size}}
{{dsc inc|cpp/string/basic_string/dsc find}}
{{dsc inc|cpp/string/basic_string/dsc npos}}
{{dsc inc|cpp/string/basic_string_view/dsc {{SUBPAGENAMEE}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}