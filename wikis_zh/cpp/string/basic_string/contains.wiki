{{cpp/string/basic_string/title|contains}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
constexpr bool
    contains( std::basic_string_view&lt;CharT,Traits&gt; sv ) const noexcept;
}}
{{dcl|num=2|since=c++23|1=
constexpr bool
    contains( CharT ch ) const noexcept;
}}
{{dcl|num=3|since=c++23|1=
constexpr bool
    contains( const CharT* s ) const;
}}
{{dcl end}}

检查字符串是否含有给定子串。子串可以是下列三种之一：

@1@ 字符串视图 {{c|sv}}（可能为从另一 {{tt|std::basic_string}} 隐式转换的结果）。
@2@ 单个字符 {{c|c}}。
@3@ 空终止字符串 {{c|s}}。

所有三个重载都等价于 {{c|1=return find(x) != npos;}}，其中 {{c|x}} 为形参。

===参数===
{{par begin}}
{{par|sv|字符串视图，可能为从另一 {{tt|std::basic_string}} 隐式转换的结果}}
{{par|c|单个字符}}
{{par|s|空终止字符串}}
{{par end}}

===返回值===
若字符串含有给定子串则为 {{c|true}}，否则为 {{c|false}}。

===注解===
{{feature test macro|__cpp_lib_string_contains|{{tt|contains}} 函数|std=C++23|value=202011L}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;string_view&gt;
#include &lt;type_traits&gt;

template&lt;typename SubstrType&gt;
void test_substring(const std::string&amp; str, SubstrType subs)
{
    constexpr char delim = std::is_scalar_v&lt;SubstrType&gt; ? '\'' : '\"';
    std::cout &lt;&lt; std::quoted(str)
              &lt;&lt; (str.contains(subs) ? " 包含 "
                                     : " 不包含 ")
              &lt;&lt; std::quoted(std::string{subs}, delim) &lt;&lt; '\n';
}

int main()
{
    using namespace std::literals;

    auto helloWorld = "hello world"s;

    test_substring(helloWorld, "hello"sv);
    test_substring(helloWorld, "goodbye"sv);
    test_substring(helloWorld, 'w');
    test_substring(helloWorld, 'x');
}
|output=
'hello world' 包含 "hello"
'hello world' 不包含 "goodbye"
'hello world' 包含 'w'
'hello world' 不包含 'x'
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc starts_with}}
{{dsc inc|cpp/string/basic_string/dsc ends_with}}
{{dsc inc|cpp/string/basic_string/dsc find}}
{{dsc inc|cpp/string/basic_string/dsc substr}}
{{dsc inc|cpp/string/basic_string_view/dsc {{SUBPAGENAMEE}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}