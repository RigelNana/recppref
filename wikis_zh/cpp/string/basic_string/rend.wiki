{{cpp/string/basic_string/title|rend|crend}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcla|anchor=no|num=1|noexcept=c++11|constexpr=c++20|
reverse_iterator rend();
}}
{{dcla|anchor=no|num=2|noexcept=c++11|constexpr=c++20|
const_reverse_iterator rend() const;
}}
{{dcla|anchor=no|num=3|since=c++11|constexpr=c++20|
const_reverse_iterator crend() const noexcept;
}}
{{dcl end}}

返回指向后随逆向字符串末字符的字符的逆向迭代器。它对应非逆向字符串的首字符之前的字符。此字符表现为占位符，试图访问它会导致未定义行为。

{{image|range-rbegin-rend.svg}}

===参数===
（无）

===返回值===
指向后随末字符的字符的逆向迭代器。

===复杂度===
常数。

===注解===
libc++ 将 {{tt|crend()}} 向后移植到 C++98 模式。

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;string&gt;

int main()
{
    std::string p("[A man, a plan, a canal: Panama]");
    std::string q;

    std::copy(p.crbegin(), p.crend(), std::back_inserter(q));
    std::cout &lt;&lt; "q = " &lt;&lt; q &lt;&lt; '\n';

    std::copy(q.crbegin(), q.crend(), p.rbegin());
    std::cout &lt;&lt; "p = " &lt;&lt; p &lt;&lt; '\n';
}
|output=
q = ]amanaP :lanac a ,nalp a ,nam A[
p = ]amanaP :lanac a ,nalp a ,nam A[
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc rbegin}}
{{dsc inc|cpp/string/basic_string_view/dsc rend}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}