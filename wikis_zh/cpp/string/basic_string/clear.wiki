{{cpp/string/basic_string/title|clear}}
{{cpp/string/basic_string/navbar}}
{{ddcla|noexcept=c++11|constexpr=c++20|
void clear();
}}

如同通过执行 {{c|erase(begin(), end())}} 从字符串中移除所有字符。

使所有指针、引用及迭代器失效。

===参数===
（无）

===返回值===
（无）

===注解===
不同于 {{lc|std::vector::clear}}，C++ 标准未明确要求此函数不更改 {{lc|capacity}}，但既存实现都不更改容量。这意味着它们不释放分配的内存（参阅 {{lc|shrink_to_fit}}）。

===复杂度===
与字符串的大小成线性，尽管既存实现在常数时间内操作。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string s{ "Exemplar" };
    std::string::size_type const capacity = s.capacity();

    s.clear();
    assert(s.empty());
    assert(s.size() == 0);
    std::cout &lt;&lt; std::boolalpha &lt;&lt; (s.capacity() == capacity) &lt;&lt; '\n';
}
|p=true
|output=
true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc erase}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}