{{cpp/string/basic_string/title|begin|cbegin}}
{{cpp/string/basic_string/navbar}}
{{dcl begin}}
{{dcla|anchor=no|num=1|noexcept=c++11|constexpr=c++20|
iterator begin();
}}
{{dcla|anchor=no|num=2|noexcept=c++11|constexpr=c++20|
const_iterator begin() const;
}}
{{dcla|anchor=no|num=3|constexpr=c++20|since=c++11|
const_iterator cbegin() const noexcept;
}}
{{dcl end}}

返回指向字符串首字符的迭代器。

{{tt|begin()}} 返回[[cpp/iterator|可变]]或[[cpp/iterator|常量]]迭代器，取决于 {{c|*this}} 的常量性。

{{tt|cbegin()}} 始终返回[[cpp/iterator|常量]]迭代器。它等价于 {{c|const_cast&lt;const basic_string&amp;&gt;(*this).begin()}}。

{{image|range-begin-end.svg}}

===参数===
（无）

===返回值===
指向首字符的迭代器

===复杂度===
常数

===注解===
libc++ 将 {{tt|cbegin()}} 向后移植到 C++98 模式。

===示例===
{{example
|code=
#include &lt;string&gt;
#include &lt;iostream&gt;

int main()
{
    std::string s("Exemplar");
    *s.begin() = 'e';
    std::cout &lt;&lt; s &lt;&lt;'\n';

    auto i = s.cbegin();
    std::cout &lt;&lt; *i &lt;&lt; '\n';
//  *i = 'E'; // 错误：i 是常量迭代器
}
|output=
exemplar
e
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc end}}
{{dsc inc|cpp/string/basic_string_view/dsc begin}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}