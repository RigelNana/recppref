{{cpp/title|strncat}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cstring|
char* strncat( char* dest, const char* src, std::size_t count );
}}

后附 {{c|src}} 所指向的字节字符串到 {{c|dest}} 所指向的字节字符串。至多复制 {{c|count}} 个字符。产生的字节字符串是空终止的。

目标字节字符串必须拥有足够的空间用于连接 {{c|dest}} 和 {{c|src}} 的内容加上终止空字符，但 {{c|src}} 的大小被限制到 {{c|count}}。

若字符串重叠则行为未定义。

===参数===
{{par begin}}
{{par|dest|指向要后附到的空终止字节字符串的指针}}
{{par|src|指向作为复制来源的字符数组的指针}}
{{par|count|要复制的最大字符数}}
{{par end}}

===返回值===
{{c|dest}}

===注解===
因为 {{tt|std::strncat}} 需要在每次调用时找到 {{c|dest}} 的结尾，故用 {{tt|std::strncat}} 将多个字符串连接成一体是低效的。

===示例===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;cstring&gt;
 
int main() 
{
    char str[50] = "Hello ";
    const char str2[50] = "World!";
    std::strcat(str, str2);
    std::strncat(str, " Goodbye World!", 3); // 可能引发 "输出被截断" 警告
    std::puts(str);
}
|output=
Hello World! Go
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strcat}}
{{dsc inc|cpp/string/byte/dsc strcpy}}
{{dsc see c|c/string/byte/strncat}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}