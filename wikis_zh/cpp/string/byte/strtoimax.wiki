{{cpp/title|strtoimax|strtoumax}}
{{cpp/string/byte/navbar}}
{{dcl begin}}
{{dcl header|cinttypes}}
{{dcl|since=c++11|num=1|
std::intmax_t strtoimax( const char* nptr, char** endptr, int base );
}}
{{dcl|since=c++11|num=2|
std::uintmax_t strtoumax( const char* nptr, char** endptr, int base );
}}
{{dcl end}}

转译 {{c|nptr}} 所指向的字节字符串中的整数值。

{{cpp/string/cvt str2int base|base=base}}

这些函数设置 {{c|endptr}} 所指向的指针指向最后被转译字符的后一字符。若 {{c|endptr}} 为空指针，则忽略之。

若 {{c|nptr}} 为空或不具有所期待的形式，则不进行转换，并（若 {{c|enptr}} 不是空指针）将 {{c|nptr}} 的值存储于 {{c|endptr}} 所指向的对象。

===参数===
{{par begin}}
{{par|nptr|指向要转译的空终止字节字符串的指针}}
{{par|endptr|指向指向字符指针的指针。}}
{{par|base|被转译整数值的''底''}}
{{par end}}

===返回值===
* 若成功，则返回对应 {{c|str}} 内容的整数值。
* 若转换出的值落在对应返回类型的范围外，则发生值域错误（设置 {{lc|errno}} 为 {{lc|ERANGE}}）并返回 {{lc|INTMAX_MAX}}、{{lc|INTMAX_MIN}}、{{lc|UINTMAX_MAX}} 及 {{c|0}} 中的适当值。
* 若不能进行转换，则返回 {{c|0}}。

===示例===
{{example
|code=
#include &lt;cinttypes&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string str = "helloworld";
    std::intmax_t val = std::strtoimax(str.c_str(), nullptr, 36);
    std::cout &lt;&lt; str &lt;&lt; " 以 36 为底的值为以 10 为底的 " &lt;&lt; val &lt;&lt; "\n";

    char* nptr;
    val = std::strtoimax(str.c_str(), &amp;nptr, 30);
    if (nptr != &amp;str[0] + str.size())
        std::cout &lt;&lt; str &lt;&lt; " 以 30 为底无效。"
                  &lt;&lt; "第一个无效数字是 '" &lt;&lt; *nptr &lt;&lt; "'\n";
}
|output=
helloworld 以 36 为底的值为以 10 为底的 1767707668033969
helloworld 以 30 为底无效。第一个无效数字是 'w'
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc stol}}
{{dsc inc|cpp/string/basic_string/dsc stoul}}
{{dsc inc|cpp/string/byte/dsc strtol}}
{{dsc inc|cpp/string/byte/dsc strtoul}}
{{dsc inc|cpp/string/wide/dsc wcstoimax}}
{{dsc inc|cpp/string/byte/dsc strtof}}
{{dsc inc|cpp/utility/dsc from_chars}}
{{dsc inc|cpp/string/byte/dsc atoi}}
{{dsc see c|c/string/byte/strtoimax|strtoimax|strtoumax}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}