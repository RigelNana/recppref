{{cpp/title|isprint}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cctype|
int isprint( int ch );
}}

检查 {{c|ch}} 是否被当前安装的 C 本地环境分类为可打印字符。默认的 "C" 本地环境中，下列字符可打印：

* 数字（{{tt|0123456789}}）
* 大写字母（{{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}）
* 小写字母（{{tt|abcdefghijklmnopqrstuvwxyz}}）
* 标点字符（{{tt|1=!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{&lt;!----&gt;{{!}}&lt;!----&gt;}~}}）
* 空格（{{tt| }}）

若 {{c|ch}} 的值不可表示为 {{c/core|unsigned char}} 且不等于 {{lc|EOF}} 则行为未定义。

===参数===
{{par begin}}
{{par|ch|要分类的字符}}
{{par end}}

===返回值===
若能打印字符则为非零值，否则为零。

===注解===
{{cpp/string/byte/note unsigned char}}

===示例===
{{example|
|code=
#include &lt;cctype&gt;
#include &lt;clocale&gt;
#include &lt;iostream&gt;
 
int main()
{
    unsigned char c = '\xa0'; // ISO-8859-1 中的无中断空格
 
    std::cout &lt;&lt; "isprint(\'\\xa0\', 默认 C 本地环境) 返回 "
               &lt;&lt; std::boolalpha &lt;&lt; (bool)std::isprint(c) &lt;&lt; '\n';
 
    std::setlocale(LC_ALL, "en_GB.iso88591");
    std::cout &lt;&lt; "isprint(\'\\xa0\', ISO-8859-1 本地环境) 返回 "
              &lt;&lt; std::boolalpha &lt;&lt; (bool)std::isprint(c) &lt;&lt; '\n';
}
|p=true
|output=
isprint('\xa0', 默认 C 本地环境) 返回 false
isprint('\xa0', ISO-8859-1 本地环境) 返回 true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isprint}}
{{dsc inc|cpp/string/wide/dsc iswprint}}
{{dsc see c|c/string/byte/isprint}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}