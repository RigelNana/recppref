{{cpp/title|strncmp}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cstring|
int strncmp( const char* lhs, const char* rhs, std::size_t count );
}}

比较两个可能空终止的数组的至多 {{c|count}} 个字符。按字典序进行比较。不比较后随空字符的字符。

结果的正负号是被比较的数组中首对字符（都转译成 {{c|unsigned char}}）的值间的差的正负号。

若出现越过 {{c|lhs}} 或 {{c|rhs}} 结尾的访问，则行为未定义。若 {{c|lhs}} 或 {{c|rhs}} 为空指针，则行为未定义。

===参数===
{{par begin}}
{{par|lhs, rhs|指向要比较的可能空终止的数组的指针}}
{{par|count|要比较的最大字符数}}
{{par end}}

===返回值===
若字典序中 {{c|lhs}} 先出现于 {{c|rhs}} 则为负值。

若 {{c|lhs}} 与 {{c|rhs}} 比较相等，或若 {{c|count}} 为零，则为零。

若字典序中 {{c|lhs}} 后出现于 {{c|rhs}} 则为正值。

===注解===
不同于 {{lc|std::strcoll}} 和 {{lc|std::strxfrm}}，此函数不考虑本地环境。

===示例===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;iostream&gt;

void demo(const char* lhs, const char* rhs, int sz)
{
    const int rc = std::strncmp(lhs, rhs, sz);
    if (rc &lt; 0)
        std::cout &lt;&lt; "[" &lt;&lt; lhs &lt;&lt; "] 的前 " &lt;&lt; sz
                  &lt;&lt; " 个字符前驱于 [" &lt;&lt; rhs &lt;&lt; "]\n";
    else if (rc &gt; 0)
        std::cout &lt;&lt; "[" &lt;&lt; lhs &lt;&lt; "] 的前 " &lt;&lt; sz
                  &lt;&lt; " 个字符后继于 [" &lt;&lt; rhs &lt;&lt; "]\n";
    else
        std::cout &lt;&lt; "[" &lt;&lt; lhs &lt;&lt; "] 的前 " &lt;&lt; sz
                  &lt;&lt; " 个字符等于 [" &lt;&lt; rhs &lt;&lt; "]\n";
}

int main()
{
    demo("Hello, world!", "Hello, everybody!", 13);
    demo("Hello, everybody!", "Hello, world!", 13);
    demo("Hello, everybody!", "Hello, world!", 7);
    demo("Hello, everybody!" + 12, "Hello, somebody!" + 11, 5);
}
|output=
[Hello, world!] 的前 13 个字符后继于 [Hello, everybody!]
[Hello, everybody!] 的前 13 个字符前驱于 [Hello, world!]
[Hello, everybody!] 的前 7 个字符等于 [Hello, world!]
[body!] 的前 5 个字符等于 [body!]
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc strcmp}}
{{dsc inc|cpp/string/wide/dsc wcsncmp}}
{{dsc inc|cpp/string/byte/dsc memcmp}}
{{dsc inc|cpp/string/byte/dsc strcoll}}
{{dsc see c|c/string/byte/strncmp}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}