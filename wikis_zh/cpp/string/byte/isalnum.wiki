{{cpp/title|isalnum}}
{{cpp/string/byte/navbar}}
{{ddcl|header=cctype|
int isalnum( int ch );
}}

检查给定字符是否被当前 C 本地环境分类为字母数字字符。默认本地环境中，下列字符为字母数字：

* 数字（{{tt|0123456789}}）
* 大写字母（{{tt|ABCDEFGHIJKLMNOPQRSTUVWXYZ}}）
* 小写字母（{{tt|abcdefghijklmnopqrstuvwxyz}}）

若 {{c|ch}} 的值不能表示为 {{c/core|unsigned char}} 且不等于 {{c|EOF}} 则行为未定义。

===参数===
{{par begin}}
{{par|ch|要分类的字符}}
{{par end}}

===返回值===
若字符为字母数字字符，则为非零值，否则为 {{tt|0}}。

===注解===
{{cpp/string/byte/note unsigned char}}

===示例===
{{example
|演示以不同本地环境（OS 限定）使用 {{tt|std::isalnum}}。
|code=
#include &lt;cctype&gt;
#include &lt;clocale&gt;
#include &lt;iostream&gt;

int main()
{
    unsigned char c = '\xdf'; // ISO-8859-1 中的德文字母 ß 

    std::cout &lt;&lt; "isalnum(\'\\xdf\', 默认 C 本地环境) 返回 "
               &lt;&lt; std::boolalpha &lt;&lt; (bool)std::isalnum(c) &lt;&lt; '\n';

    if(std::setlocale(LC_ALL, "de_DE.iso88591"))
        std::cout &lt;&lt; "isalnum(\'\\xdf\', ISO-8859-1 本地环境) 返回 "
                  &lt;&lt; std::boolalpha &lt;&lt; (bool)std::isalnum(c) &lt;&lt; '\n';

}
|p=true
|output=
isalnum('\xdf', 默认 C 本地环境) 返回 false
isalnum('\xdf', ISO-8859-1 本地环境) 返回 true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc isalnum}}
{{dsc inc|cpp/string/wide/dsc iswalnum}}
{{dsc see c|c/string/byte/isalnum}}
{{dsc end}}
{{cpp/string/character classes}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}