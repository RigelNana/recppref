{{cpp/title|strstr}}
{{cpp/string/byte/navbar}}
{{dcl begin}}
{{dcl header|cstring}}
{{dcl|
const char* strstr( const char* haystack, const char* needle );
}}
{{dcl|1=
      char* strstr(       char* haystack, const char* needle );
}}
{{dcl end}}

在 {{c|haystack}} 所指的字节字符串中寻找字节字符串 {{c|needle}} 的首次出现。不比较空终止字符。

===参数===
{{par begin}}
{{par|haystack|指向要检验的空终止字节字符串的指针}}
{{par|needle|指向要搜索的空终止字节字符串的指针}}
{{par end}}

===返回值===
指向 {{c|haystack}} 中寻获子串的首个字符的指针，或若找不到该字符则为空指针。若 {{c|needle}} 指向空字符串，则返回 {{c|haystack}}。

===示例===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;

int main()
{
    const char *str = "Try not. Do, or do not. There is no try.";
    const char *target = "not";

    for (const char* result = str; (result = std::strstr(result, target)); ++result)
        std::cout &lt;&lt; "找到 " &lt;&lt; std::quoted(target)
                  &lt;&lt; " 位于 (" &lt;&lt; result - str &lt;&lt; '): ';
                  &lt;&lt; std::quoted(result) &lt;&lt; '\n';
}
|output=
找到 "not" 位于 (4): "not. Do, or do not. There is no try."
找到 "not" 位于 (19): "not. There is no try."
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc find}}
{{dsc inc|cpp/string/wide/dsc wcsstr}}
{{dsc inc|cpp/string/byte/dsc strchr}}
{{dsc inc|cpp/string/byte/dsc strrchr}}
{{dsc see c|c/string/byte/strstr}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru|tr}}