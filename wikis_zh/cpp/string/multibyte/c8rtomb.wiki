{{cpp/title|c8rtomb}}
{{cpp/string/multibyte/navbar}}
{{ddcl|header=cuchar|since=c++20|
std::size_t c8rtomb( char* s, char8_t c8, std::mbstate_t* ps );
}}

从 UTF-8 的单个码位转换到窄多字节字符表示。

若 {{c|s}} 不是空指针且 {{c|c8}} 是码位的合法 UTF-8 编码中的最后编码单元，则函数确定存储该码位的多字节字符表示所需的字符数（包含任何迁移序列，并且考虑到当前多字节转换状态 {{c|*ps}}），并存储多字节字符表示于首元素为 {{c|s}} 所指向的字符数组，按需更新 {{c|*ps}}。此函数至多能写入 {{lc|MB_CUR_MAX}} 个字节。

若 {{c|c8}} 不是码位表示中的最终 UTF-8 码位，则函数不写入 {{c|s}} 所指向的数组，只更新 {{c|*ps}}。

若 {{c|s}} 为空指针，则调用等价于对某内部缓冲区 {{tt|buf}} 的 {{c|std::c8rtomb(buf, u8'\0', ps)}}。

若 {{c|c8}} 为空字符 {{c|u8'\0'}}，则存储空字节，前附任何恢复初始迁移状态所需的迁移序列，并更新转换状态参数 {{c|*ps}}，使之代表初始迁移状态。

此函数所用的多字节编码由当前活跃的 C 本地环境指定。

===参数===
{{par begin}}
{{par|s|指向将要存储多字节字符的通常字符数组的指针}}
{{par|c8|要转换的 UTF-8 编码单元}}
{{par|ps|指向转译多字节字符串时使用的转换状态的指针}}
{{par end}}

===返回值===
存储于数组中的的字节数（包含任何迁移序列）。{{c|c8}} 不是码位的 UTF-8 表示中的最终编码单元时，可以为零。

若 {{c|c8}} 非法（不贡献到对应合法多字节字符的 {{c/core|char8_t}} 序列），则存储宏 {{lc|EILSEQ}} 的值于 {{lc|errno}}，返回 {{c|static_cast&lt;std::size_t&gt;(-1)}}，而转换状态未指定。

===注解===
以空指针参数 {{c|s}} 调用 {{tt|c8rtomb}}，可能会与其他以空指针参数 {{c|s}} 对 {{tt|c8rtomb}} 的调用造成数据竞争。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/multibyte/dsc mbrtoc8}}
{{dsc inc|cpp/string/multibyte/dsc c16rtomb}}
{{dsc see c|c/string/multibyte/c8rtomb}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}