{{cpp/title|wctob}}
{{cpp/string/multibyte/navbar}}
{{ddcl|header=cwchar|
int wctob( std::wint_t c );
}}

窄化宽字符 {{c|c}}，若其多字节字符等价版本在初始迁移状态为单字节。

这典型地对来自 ASCII 字符集的字符可行，因为大多数多字节编码（例如 UTF-8）用单字节编码那些字符。

===参数===
{{par begin}}
{{par|c|要窄化的宽字符}}
{{par end}}

===返回值===
若 {{c|c}} 在初始迁移状态不表示长度为 {{c|1}} 的多字节字符则为 {{lc|EOF}}。

否则，为作为 {{c|unsigned char}} 的 {{c|c}} 的单字节表示，转换为 {{c|int}}。

===示例===
{{example
|code=
#include &lt;clocale&gt;
#include &lt;cwchar&gt;
#include &lt;iostream&gt;

void try_narrowing(wchar_t c)
{
    int cn = std::wctob(c);
    if (cn != EOF)
        std::cout &lt;&lt; '\'' &lt;&lt; int(c) &lt;&lt; "' 窄化为 " &lt;&lt; +cn &lt;&lt; '\n';
    else
        std::cout &lt;&lt; '\'' &lt;&lt; int(c) &lt;&lt; "' 无法窄化\n";
}
 
int main()
{
    std::setlocale(LC_ALL, "th_TH.utf8");
    std::cout &lt;&lt; std::hex &lt;&lt; std::showbase &lt;&lt; "在泰语 UTF-8 本地环境中:\n";
    try_narrowing(L'a');
    try_narrowing(L'๛');

    std::setlocale(LC_ALL, "th_TH.tis620");
    std::cout &lt;&lt; "在泰语 TIS-620 本地环境中:\n";
    try_narrowing(L'a');
    try_narrowing(L'๛');
}
|output=
在泰语 UTF-8 本地环境中:
'0x61' 窄化为 0x61
'0xe5b' 无法窄化
在泰语 TIS-620 本地环境中:
'0x61' 窄化为 0x61
'0xe5b' 窄化为 0xfb
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/multibyte/dsc btowc}}
{{dsc inc|cpp/io/basic_ios/dsc narrow}}
{{dsc inc|cpp/locale/ctype/dsc narrow}}
{{dsc see c|c/string/multibyte/wctob}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}