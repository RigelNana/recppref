{{cpp/named req/title|TriviallyCopyable|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

{{cpp/named req/core cat note}}

===要求===
下列类型统称为''可平凡复制类型''：
* {{rlp|ScalarType|标量类型}}
* [[cpp/language/classes#可平凡复制类|可平凡复制类类型]]
* 上述类型的数组
* 这些类型的有 cv 限定版本

===注解===
一般来说，对于任何可平凡复制类型 {{tt|T}} 及 {{tt|T}} 对象 {{tt|obj1}}，能复制 {{tt|obj1}} 的底层字节到 {{c/core|char}} 或 {{c/core|unsigned char}}{{rev inl|since=c++17| 或 {{ltt|cpp/types/byte|std::byte}}}} 的数组中，或到 {{tt|T}} 的另一不同对象 {{tt|obj2}} 中。{{tt|obj1}} 与 {{tt|obj2}} 均不可为潜在重叠的子对象。

如果复制 {{tt|obj1}} 的底层字节到这种数组中，然后复制结果内容回 {{tt|obj1}} 中，那么 {{tt|obj1}} 将保有其原值。如果复制 {{tt|obj1}} 的底层字节到 {{tt|obj2}} 中，那么 {{tt|obj2}} 将保有 {{tt|obj1}} 的值。

底层字节能由 {{lc|std::memcpy}} 或 {{lc|std::memmove}} 复制，只要不访问存活的 volatile 对象即可。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=cwg|dr=1734|std=C++11|before=拥有弃置的非平凡赋值的 C++03 POD 不是平凡的|after=允许弃置的构造函数/运算符}}
{{dr list item|wg=cwg|dr=2094|std=C++11|before=volatile 标量类型非可平凡复制（ CWG 1746 ）|after=使之为可平凡复制}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_trivially_copyable}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}