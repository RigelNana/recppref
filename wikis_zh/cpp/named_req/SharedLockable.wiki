{{cpp/named req/title|SharedLockable|notes={{mark since c++14}}}}
{{cpp/named req/navbar}}

{{named req|SharedLockable}}要求描述向执行代理（即线程）提供共享阻塞语义的类型的最小特征。

===要求===
对于要为{{named req/core|SharedLockable}}的类型 {{ttb|L}}，{{ttb|L}} 类型的对象 {{ttb|m}} 必须满足下列条件：

{|table class=wikitable
|-
!表达式||前条件||效果||返回值
|-
|{{c|m.lock_shared()}}
|
|阻塞直至能为当前执行代理（线程、进程、任务）获得锁。若抛异常则不获得锁。
|
|-
|{{c|m.try_lock_shared()}}
|
|尝试为当前执行代理（线程、进程、任务）获得锁。若抛异常则不获得锁。
|若获得锁则为 {{c|true}}，否则为 {{c|false}}
|-
|{{c|m.unlock_shared()}}
|当前执行代理保有 {{tt|m}} 上的共享锁。
|释放执行代理曾保有的共享锁。

不抛异常。
|
|}

====共享锁====
若对象上的一个锁由调用 {{tt|lock_shared}}、{{tt|try_lock_shared}}、{{tt|try_lock_shared_for}} 或 {{tt|try_lock_shared_until}} 成员函数取得，则称之为''共享锁''。

===标准库===
下列标准库类型满足{{named req/core|SharedLockable}}：
{{dsc begin}}
{{dsc inc|cpp/thread/dsc shared_mutex}}
{{dsc inc|cpp/thread/dsc shared_timed_mutex}}
{{dsc end}}

===参阅===
* [[cpp/thread|线程支持库]]
* {{named req|SharedTimedLockable}}
* {{named req|SharedMutex}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}