{{cpp/named req/title|UnformattedOutputFunction}}
{{cpp/named req/navbar}}

===要求===
{{named req|UnformattedOutputFunction}}是进行下列操作的流输入函数：

@1@ 构造一个具有自动存储期的 {{l2tt|cpp/io/basic_ostream/sentry}} 类型的对象，它进行下列操作：
* 如果输出流上设置了 {{ltt|cpp/io/ios_base/iostate|eofbit}} 或 {{ltt|cpp/io/ios_base/iostate|badbit}}，那么会一并设置 {{ltt|cpp/io/ios_base/iostate|failbit}}，且如果此输出流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|failbit}} 上的异常（{{c|1=(exceptions() &amp; failbit) != 0}}），那么就会抛出 {{l2tt|cpp/io/ios_base/failure}}。
* 冲洗它所 tie() 的输出流的缓冲区，如果适用。
@2@ 通过调用 {{tt|sentry::operator bool()}} 检查哨兵的状态，这等价于 {{l2tt|cpp/io/basic_ios/good}}。
* 如果运算符返回 {{c|false}}，或哨兵的构造函数抛出了异常，那么就不会进行输出。
* 如果运算符返回 {{c|true}}，那么如同以调用 {{c|rdbuf()-&gt;sputc()}} 试图通过插入字符到输出流来进行想要的输出。{{lc|std::basic_ostream}} 的其他公开成员也有可能会使用，但不会调用 {{c|rdbuf()}} 的除了 {{ltt|cpp/io/basic_streambuf/overflow|overflow()}}，{{ltt|cpp/io/basic_streambuf/sputn|xsputn()}} 和 {{ltt|cpp/io/basic_streambuf/pubsync|sync()}} 以外的其他虚成员。
:* 如果输出中抛出了异常，那么设置输出流中的 {{tt|badbit}}。如果此流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|badbit}} 上的异常（{{c|1=(exceptions() &amp; badbit) != 0}}），那么还会重抛这个异常。
:* 如果没有抛出异常，那么返回该函数指定的值。
@3@ 在任何事件中，无论是因异常终止还是返回，离开此函数前都会调用哨兵的析构函数。

===标准库===
下列标准库函数是{{named req|UnformattedOutputFunction}}。

* {{l2tt|cpp/io/basic_ostream/operator ltlt|operator&lt;&lt;{{dsc small|(basic_streambuf*)}}}}
* {{l2tt|cpp/io/basic_ostream/put}}
* {{l2tt|cpp/io/basic_ostream/write}}
* {{l2tt|cpp/io/basic_ostream/flush}}
{{rev begin}}
{{rev|since=c++11|
* {{l2tt|cpp/io/basic_ostream/tellp}}（但它会调用 {{tt|pubseekoff}} 而非进行输出）
* {{l2tt|cpp/io/basic_ostream/seekp}}（但它会调用 {{tt|pubseekoff}} 或 {{tt|pubseekpos}} 而非进行输出）
}}
{{rev end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=63|std=C++98|before=异常处理方案缺失|after=已补充}}
{{dr list item|wg=lwg|dr=160|std=C++98|before=确定是否需要重抛异常的流程中提到了不存在的函数 {{tt|exception()}}|after=改成 {{ltt|cpp/io/basic_ios/exceptions|exceptions()}}}}
{{dr list item|wg=lwg|dr=165|std=C++98|before=能在 {{c|rdbuf()}} 上调用的虚成员只有 {{tt|overflow()}}|after=也可以调用 {{tt|xsputn()}} 和 {{tt|sync()}}}}
{{dr list end}}

{{langlinks|en|es|ja}}