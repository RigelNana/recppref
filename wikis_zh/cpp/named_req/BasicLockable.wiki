{{cpp/named req/title|BasicLockable|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

{{named req|BasicLockable}}要求描述提供为执行代理（即线程）提供排他性阻塞语义的类型的最小特征。

===要求===
对于要成为{{named req/core|BasicLockable}}的类型 {{ttb|L}}，{{ttb|L}} 类型的对象 {{ttb|m}} 必须满足下列条件：
{|table class=wikitable
|-
!表达式||前条件||效果
|-
|{{c|m.lock()}}
|
|阻塞到能为当前执行代理（线程、进程、任务）取得锁为止。若抛异常，则不取得锁。
|-
|{{c|m.unlock()}}
|当前执行代理在 {{tt|m}} 上保有非共享锁。
|释放执行代理曾保有的非共享锁。

不抛异常。
|}

====非共享锁====
若对象上的一个锁由调用 {{tt|lock}}、{{tt|try_lock}}、{{tt|try_lock_for}} 或 {{tt|try_lock_until}} 成员函数取得，则称之为''非共享锁''。

===标准库===
下列标准库类型满足{{named req/core|BasicLockable}}：
{{dsc begin}}
{{dsc inc|cpp/thread/dsc mutex}}
{{dsc inc|cpp/thread/dsc recursive_mutex}}
{{dsc inc|cpp/thread/dsc recursive_timed_mutex}}
{{dsc inc|cpp/thread/dsc shared_mutex}}
{{dsc inc|cpp/thread/dsc shared_timed_mutex}}
{{dsc inc|cpp/thread/dsc timed_mutex}}&lt;!--
{{dsc inc|cpp/thread/dsc rcu_domain}}--&gt;
{{dsc end}}

===参阅===
* [[cpp/thread|线程支持库]]
* {{named req|Mutex}}
* {{named req|Lockable}}
* {{named req|TimedLockable}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}