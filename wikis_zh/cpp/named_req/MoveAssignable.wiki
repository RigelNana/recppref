{{cpp/named req/title|MoveAssignable|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

指定该类型的实例可以从[[cpp/language/value_category|右值]]实参赋值。

===要求===
若满足下列条件，则类型 {{tt|T}} 满足{{named req/core|MoveAssignable}}：

给定
* {{tt|T}} 类型的可修改[[cpp/language/value_category|左值表达式]] {{tt|t}}
* {{tt|T}} 类型的[[cpp/language/value_category|右值]]表达式 {{tt|rv}}

下列表达式必须合法并拥有其指定的效果

{|table class=wikitable
|-
!表达式||返回类型||返回值||后条件
|-
| {{c|1=t = rv}}
| {{tt|T&amp;}}
| {{tt|t}}
| 若 {{tt|t}} 与 {{tt|rv}} 不指代同一对象{{mark unreviewed dr|LWG|2468}}，则 {{tt|t}} 的值等价于 {{tt|rv}} 在赋值前的值。
{{tt|rv}} 的新值未指定
|}

===注解===
类型不必为满足此类型要求而实现[[cpp/language/move assignment|移动赋值运算符]]：按值或按 {{tt|const Type&amp;}} 接收其参数的[[cpp/language/copy assignment|复制赋值运算符]]会绑定到右值实参。

若{{named req/core|MoveAssignable}}类实现了移动赋值运算符，则它亦可实现[[cpp/utility/move|移动语义]]，以获得“{{tt|rv}} 在赋值后的值未指定”这一事实的优势。

===参阅===
{{dsc begin}}
{{dsc inc | cpp/types/dsc is_move_assignable}}
{{dsc inc | cpp/concepts/dsc assignable_from}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}