{{cpp/named req/title|Compare}}
{{cpp/named req/navbar}}

{{named req|Compare}}是一些标准库设施针对用户提供的函数对象类型所期待的一组要求。

对满足{{named req/core|Compare}}的类型的对象运用函数调用操作的返回值，当[[cpp/language/implicit conversion|转换]]成 {{c/core|bool}} 时，若此类型所引入的{{enwiki|Strict weak ordering|严格弱序关系}}中，该调用的第一实参先于第二实参，则生成 {{c|true}}，否则生成 {{c|false}}。

与任何{{named req|BinaryPredicate}}相同，不允许该表达式的求值通过解引用的迭代器调用非 const 函数并且在语法上，此函数调用操作必须接受 {{c/core|const}} 对象实参，且无论实参是 {{c/core|const}} 还是非 {{c/core|const}} 都具有相同行为。

===要求===
类型 {{tt|T}} 满足{{named req/core|Compare}}，如果

* 类型 {{tt|T}} 满足{{named req|BinaryPredicate}}，且

给定
* {{tt|T}} 类型的对象 {{tt|comp}}
* {{tt|equiv(a, b)}}，为[[cpp/language/expressions#表达式等级|表达式等价]]于 {{tt|!comp(a, b) &amp;&amp; !comp(b, a)}} 的表达式

下列表达是必须合法且拥有指定的效果：

{|table class=wikitable
|-
!表达式||返回类型||要求
|-
| {{c|comp(a, b)}}
| {{rrev multi|noborder=true
|rev1=符合{{named req|BooleanTestable}}
|since2=c++20|rev2=实现 ''{{ltt|cpp/concepts/boolean-testable}}''
}}
| 建立具有下列性质的{{enwiki|strict weak ordering|严格弱序}}关系
* 对于所有 {{tt|a}}，{{c|1=comp(a, a) == false}}
* 若 {{c|1=comp(a, b) == true}} 则 {{c|1=comp(b, a) == false}}
* 若 {{c|1=comp(a, b) == true}} 且 {{c|1=comp(b, c) == true}} 则 {{c|1=comp(a, c) == true}}
|-
| {{c|equiv(a, b)}}
| {{c/core|bool}}
| 建立具有下列性质的{{enwiki|equivalence relation|等价关系}}：
* 对于所有 {{tt|a}}，{{c|1=equiv(a, a) == true}}
* 若 {{c|1=equiv(a, b) == true}} 则 {{c|1=equiv(b, a) == true}}
* 若 {{c|1=equiv(a, b) == true}} 且 {{c|1=equiv(b, c) == true}} 则 {{c|1=equiv(a, c) == true}}
|}

注：{{tt|comp}} 在 {{tt|equiv}} 所确定的等价类上引入了一种{{enwiki|Total order#Strict and non-strict total orders|严格全序}}。

===标准库===
下列标准库设施期待{{named req/core|Compare}}类型。
{{dsc begin}}
{{dsc inc|cpp/container/dsc set}}
{{dsc inc|cpp/container/dsc map}}
{{dsc inc|cpp/container/dsc multiset}}
{{dsc inc|cpp/container/dsc multimap}}
{{dsc inc|cpp/container/dsc priority_queue}}
{{dsc inc|cpp/algorithm/dsc sort}}
{{dsc inc|cpp/container/dsc sort|forward_list}}
{{dsc inc|cpp/container/dsc sort|list}}
{{dsc inc|cpp/algorithm/dsc stable_sort}}
{{dsc inc|cpp/algorithm/dsc partial_sort}}
{{dsc inc|cpp/algorithm/dsc partial_sort_copy}}
{{dsc inc|cpp/algorithm/dsc is_sorted}}
{{dsc inc|cpp/algorithm/dsc is_sorted_until}}
{{dsc inc|cpp/algorithm/dsc nth_element}}
{{dsc inc|cpp/algorithm/dsc lower_bound}}
{{dsc inc|cpp/algorithm/dsc upper_bound}}
{{dsc inc|cpp/algorithm/dsc binary_search}}
{{dsc inc|cpp/algorithm/dsc equal_range}}
{{dsc inc|cpp/algorithm/dsc merge}}
{{dsc inc|cpp/container/dsc merge|forward_list}}
{{dsc inc|cpp/container/dsc merge|list}}
{{dsc inc|cpp/algorithm/dsc inplace_merge}}
{{dsc inc|cpp/algorithm/dsc includes}}
{{dsc inc|cpp/algorithm/dsc set_difference}}
{{dsc inc|cpp/algorithm/dsc set_intersection}}
{{dsc inc|cpp/algorithm/dsc set_symmetric_difference}}
{{dsc inc|cpp/algorithm/dsc set_union}}
{{dsc inc|cpp/algorithm/dsc push_heap}}
{{dsc inc|cpp/algorithm/dsc pop_heap}}
{{dsc inc|cpp/algorithm/dsc make_heap}}
{{dsc inc|cpp/algorithm/dsc sort_heap}}
{{dsc inc|cpp/algorithm/dsc is_heap}}
{{dsc inc|cpp/algorithm/dsc is_heap_until}}
{{dsc inc|cpp/algorithm/dsc max}}
{{dsc inc|cpp/algorithm/dsc max_element}}
{{dsc inc|cpp/algorithm/dsc min}}
{{dsc inc|cpp/algorithm/dsc min_element}}
{{dsc inc|cpp/algorithm/dsc minmax}}
{{dsc inc|cpp/algorithm/dsc minmax_element}}
{{dsc inc|cpp/algorithm/dsc lexicographical_compare}}
{{dsc inc|cpp/algorithm/dsc next_permutation}}
{{dsc inc|cpp/algorithm/dsc prev_permutation}}
{{dsc end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2114|paper=P2167R3|std=C++98|before=返回类型到 {{c/core|bool}} 的按语境可转换性不反映实现的实践|after=更正要求}}
{{dr list item|wg=lwg|dr=3031|std=C++98|before={{c/core|const}} 值上的要求不充分|after=加强要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/concepts/dsc strict_weak_order}}
{{dsc|[[cpp/language/operator comparison|'''比较运算符''']]|{{tt|&lt;}}、{{tt|1=&lt;=}}、{{tt|1= &gt;}}、{{tt|1= &gt;=}}、{{tt|1= ==}}、{{tt|1= !=}} {{rev inl|since=c++20|和 {{tt|1= &lt;=&gt;}}}}，比较其实参}}
{{dsc end}}

{{langlinks|en|es|ja}}