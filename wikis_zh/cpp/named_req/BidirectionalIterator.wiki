{{cpp/named req/title|BidirectionalIterator}}
{{cpp/named req/navbar}}

{{named req|BidirectionalIterator}}是能双向移动（即自增与自减）的{{named req|ForwardIterator}}。

如果一个{{named req|BidirectionalIterator}} {{c|it}} 源自一个{{named req|Container}}，那么 {{c|it}} 的 {{tt|value_type}} 与那个容器的相同，所以解引用（{{c|*it}}）会得到那个容器的 {{tt|value_type}}。

===要求===
类型 {{tt|It}} 在满足以下所有条件的情况下满足{{named req/core|BidirectionalIterator}}：
* 类型 {{tt|It}} 满足{{named req|ForwardIterator}}

且，给定
* {{c|a}} 与 {{c|b}}，类型 {{tt|It}} 的左值
* {{tt|reference}}，{{c/core|std::iterator_traits&lt;It&gt;::reference}} 所指代的类型

下列表达式必须有效并拥有指定的效果：
{|table class="wikitable"
|-
!表达式||返回||等价表达式||注意
|-
|{{c|--a}}||{{tt|It&amp;}}|| ||前提条件：
* {{c|a}} 可自减（存在满足 {{c|1=a == ++b}} 的 {{c|b}}）
后条件：
* {{c|a}} [[cpp/iterator#可解引用性与有效性|可解引用]]
* {{c|1=--(++a) == a}}
* 如果 {{c|1=--a == --b}}，那么 {{c|1=a == b}}
* {{c|a}} 与 {{c|--a}} 指代同一迭代器对象
|-
|{{c|a--}}|| 可转换到 {{c/core|const It&amp;}}||{{c|1=
It temp = a;
--a;
return temp;
}} ||
|-
|{{c|*a--}}||{{tt|reference}}|| ||
|-
|}
''可变（mutable）''{{named req/core|BidirectionalIterator}}是还额外满足{{named req|OutputIterator}}要求的{{named req/core|BidirectionalIterator}}。

===注解===
起始迭代器不可自减，且求值 {{c|--container.begin()}} 的行为未定义。

双向迭代器不必可解引用、可自减（尤其是尾迭代器不可解引用但可自减）。

{{rrev|since=c++20|
===概念===
为了定义 {{lc|std::iterator_traits}}，定义了以下仅用于阐释的概念：

{{dcl begin}}
{{dcl|1=
template&lt;class I&gt;
concept __LegacyBidirectionalIterator&lt;!-- 标准中称为 cpp17-bidirectional-iterator --&gt; =
    __LegacyForwardIterator&lt;I&gt; &amp;&amp; requires(I i)
    {
        {  --i } -&gt; std::same_as&lt;I&amp;&gt;;
        {  i-- } -&gt; std::convertible_to&lt;const I&amp;&gt;;
        { *i-- } -&gt; std::same_as&lt;std::iter_reference_t&lt;I&gt;&gt;;
    };
}}
{{dcl end}}

其中仅用于阐释的概念 {{tt|__LegacyForwardIterator}} 在 {{rlp|ForwardIterator#概念|LegacyForwardIterator}} 描述。
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=299|paper=N3066|std=C++98|before={{c|*a--}} 的返回类型需要可转换到 {{tt|T}}|after=将返回类型改为 {{tt|reference}}&lt;ref&gt;此问题最初由 {{stddoc|N2758}}（迭代器概念）解决，但该提案后来没有进入 C++ 标准。&lt;/ref&gt;}}
{{dr list item|wg=lwg|dr=383|std=C++98|before=在 {{c|--a}} 后 {{c|b}} 需要可解引用|after=改成 {{c|a}} 需要可解引用}}
{{dr list item|wg=lwg|dr=1212|paper=N3066|std=C++98|before={{c|*a--}} 的返回类型与{{named req|ForwardIterator}}&lt;br&gt;要求的 {{c|*a++}} 的返回类型不匹配|after=将返回类型改为 {{tt|reference}}}}
{{dr list end}}
&lt;references/&gt;

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc bidirectional_iterator}}
{{see_also_iterator_library}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}