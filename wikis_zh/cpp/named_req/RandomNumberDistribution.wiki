{{cpp/named req/title|RandomNumberDistribution|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

{{named req|RandomNumberDistribution}}是返回服从[[enwiki:Probability density function|概率密度函数]] {{math|p(x)}} 或[[enwiki:Discrete probability distribution|离散概率分布]] {{math|P(x{{su|b=i}})}} 的随机数的函数对象。

===要求===
类型 {{tt|D}} 满足{{named req/core|RandomNumberDistribution}}，若

* {{tt|D}} 满足{{named req|CopyConstructible}}
* {{tt|D}} 满足{{named req|CopyAssignable}}

给定
* {{tt|T}}，{{c|D::result_type}} 所指名的类型
* {{tt|P}}，{{c|D::param_type}} 所指名的类型，它
:* 满足{{named req|CopyConstructible}}
:* 满足{{named req|CopyAssignable}}
:* 满足{{named req|EqualityComparable}}
:* 拥有实参与 {{tt|D}} 的所有接收分布参数的构造函数的实参相同的构造函数
:* 对于 {{tt|D}} 的每个返回分布参数的成员函数，拥有名称、类型、语义都与之相同的成员函数
:* 声明了成员 typedef {{c|using distribution_type {{=}} D;}}
* {{tt|d}}，{{tt|D}} 类型的值
* {{tt|x}} 与 {{tt|y}}，{{tt|D}} 类型的（可能 const 的）值
* {{tt|p}}，{{tt|P}} 类型的（可能 const 的）值
* {{tt|g}}、{{tt|g1}}、{{tt|g2}}，满足{{named req|UniformRandomBitGenerator}}类型的左值
* {{tt|os}}，{{lc|std::basic_ostream}} 特化的左值
* {{tt|is}}，{{lc|std::basic_istream}} 特化的左值

下列表达式必须合法且拥有其指定的效应

{|class=wikitable
!表达式||类型||注意||复&amp;#65279;杂&amp;#65279;度
|-
|{{tt|D::result_type}} || {{tt|T}} ||[[cpp/language/type|算术类型]]||编译时
|-
|{{tt|D::param_type}} || {{tt|P}} || ||编译时
|-
|{{tt|D()}} || ||创建与其他默认构造的 {{tt|D}} 不可区分的分布||常数
|-
|{{tt|D(p)}} || ||创建与直接使用构造 {{tt|p}} 时所用的值构造的 {{tt|D}} 不可区分的分布||同 {{tt|p}} 的构造
|-
|{{tt|d.reset()}} || {{tt|void}} ||重置分布为初始状态。{{tt|d}} 下次对 {{tt|operator()}} 的调用将不依赖任何引擎在 {{tt|reset()}} 调用之前产生的值||常数
|-
|{{tt|x.param()}} || {{tt|P}} ||返回 {{tt|p}}，满足 {{c|D(p).param() {{==}} p}} ||不劣于 {{tt|D(p)}}
|-
|{{tt|d.param(p)}} || {{tt|void}} ||后条件：{{c|d.param() {{==}} p}} ||不劣于 {{tt|D(p)}}
|-
|{{tt|d(g)}} || {{tt|T}} ||以同一 {{tt|g}} 进行相继调用所返回的数列，随机分布服从 {{tt|d.param()}} 所参数化的分布||均摊常数次 {{tt|g}} 的调用
|-
|{{tt|d(g,p)}} || {{tt|T}} ||以同一 {{tt|g}} 进行相继调用所返回的数列，随机分布服从 {{tt|p}} 所参数化的分布||均摊常数次 {{tt|g}} 的调用
|-
|{{tt|x.min()}} || {{tt|T}} ||{{tt|x}} 的 {{tt|operator()}} 潜在返回值的最大下界，由 {{tt|x}} 的参数的当前值确定||常数
|-
|{{tt|x.max()}} || {{tt|T}} ||{{tt|x}} 的 {{tt|operator()}} 潜在返回值的最小上界，由 {{tt|x}} 的参数的当前值确定||常数
|-
|{{tt|x {{==}} y}} || {{tt|bool}} ||建立等价关系。若 {{c|x.param() {{==}} y.param()}}，且只要 {{c|g1 {{==}} g2}}，将来重复调用 {{c|x(g1)}} 与 {{c|y(g2)}} 所生成的无限数列就相等，则返回 {{tt|true}}||常数
|-
|{{tt|x !{{=}} y}} || {{tt|bool}} || {{tt|!(x {{==}} y)}} ||常数
|-
|{{tt|os &lt;&lt; x}} || {{tt|os}} 类型的引用||将分布参数和内部状态的文本表示写入到 {{tt|os}}。不更改 {{tt|os}} 的格式化标志和填充字符||
|-
|{{tt|is &gt;&gt; d}} || {{tt|is}} 类型的引用||从读取自 {{tt|is}} 的数据还原分布参数和内部状态。不更改 {{tt|is}} 的格式化标志。数据必须是用带相同本地环境、{{tt|CharT}} 和 {{tt|Traits}} 流模板形参的流所写入的，否则行为未定义。若遇到坏的输入，则调用 {{c|is.setstate(std::ios::failbit)}}，它可能抛出 {{lc|std::ios_base::failure}}。该情况下不更改 {{tt|d}}。||
|-
|}

===注解===
分布对象的参数可用 {{c|d.param(p)}} 永久更改，或用 {{c|d(g,p)}} 只在单次 operator() 调用期间更改。

调用分布的 const 成员函数和 {{c|os &lt;&lt; d}} 不影响重复 {{c|d(g)}} 所产生的数列。

===标准库===
下列标准库组件满足{{named req|RandomNumberDistribution}}

{{dsc begin}}
{{dsc inc|cpp/numeric/random/dsc uniform_int_distribution}}
{{dsc inc|cpp/numeric/random/dsc uniform_real_distribution}}
{{dsc inc|cpp/numeric/random/dsc bernoulli_distribution}}
{{dsc tclass|cpp/numeric/random/binomial_distribution|产生{{enwiki|Binomial distribution|二项分布}}上的整数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/negative_binomial_distribution|产生[[enwiki:Negative_binomial_distribution|负二项分布]]上的整数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/geometric_distribution|产生{{enwiki|Geometric_distribution|几何分布}}上的整数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/poisson_distribution|产生{{enwiki|Poisson_distribution|泊松分布}}上的整数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/exponential_distribution|产生{{enwiki|Exponential_distribution|指数分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/gamma_distribution|产生{{enwiki|Gamma_distribution|Γ 分布}}上的实数| notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/weibull_distribution|产生{{enwiki|Weibull_distribution|威布尔分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/extreme_value_distribution|产生{{enwiki|Generalized_extreme_value_distribution|极值分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/normal_distribution|产生{{enwiki|Normal_distribution|标准正态（高斯）分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/lognormal_distribution|产生{{enwiki|Lognormal_distribution|对数正态分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/chi_squared_distribution|产生{{enwiki|Chi-squared_distribution|χ&lt;sup&gt;2&lt;/sup&gt; 分布}}上的实数| notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/cauchy_distribution|产生{{enwiki|Cauchy_distribution|柯西分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/fisher_f_distribution|产生{{enwiki|F-distribution|费舍尔 F 分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/student_t_distribution|产生{{enwiki|Student's t-distribution|学生 t 分布}}上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/discrete_distribution|产生离散分布上的整数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/piecewise_constant_distribution|产生分布在常子区间上的实数|notes={{mark c++11}}}}
{{dsc tclass|cpp/numeric/random/piecewise_linear_distribution|产生分布在定义的子区间上的实数|notes={{mark c++11}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}