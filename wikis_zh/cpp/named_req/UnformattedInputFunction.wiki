{{cpp/named req/title|UnformattedInputFunction}}
{{cpp/named req/navbar}}

===要求===
{{named req|UnformattedInputFunction}}是进行下列操作的流输入函数：

@1@ 构造具有自动存储期的 {{l2tt|cpp/io/basic_istream/sentry}} 类型的对象，并将 {{tt|noskipws}} 实参设为 {{c|true}}，这会进行下列操作：
* 如果输入流已经设置了 {{ltt|cpp/io/ios_base/iostate|eofbit}} 或 {{ltt|cpp/io/ios_base/iostate|badbit}}，那么会一并设置 {{ltt|cpp/io/ios_base/iostate|failbit}}，且如果此输入流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|failbit}} 上的异常（{{c|1=(exceptions() &amp; failbit) != 0}}），那么会抛出 {{l2tt|cpp/io/ios_base/failure}}。
* 冲洗它所 tie() 的输出流的缓冲区，如果适用。
@2@ 通过调用 {{tt|sentry::operator bool()}} 检查哨兵的状态，这等价于 {{l2tt|cpp/io/basic_ios/good}}。
* 如果运算符返回 {{c|false}} 或哨兵的构造函数抛出了异常，那么：
:* 设置输入流中的已提取字符数（{{tt|gcount}}）为零。
:* 如果该函数是为了写入某个 {{tt|CharT}} 的数组而调用，那么向该数组的首个位置写入 {{tt|CharT()}}（空字符）
* 如果运算符返回 {{c|true}}，那么如同以调用 {{c|rdbuf()-&gt;sbumpc()}} 或 {{c|rdbuf()-&gt;sgetc()}} 来实施输入。
:* 如果抵达了流尾（对 {{c|rdbuf()-&gt;sbumpc()}} 或 {{c|rdbuf()-&gt;sgetc()}} 的调用返回 {{c|Traits::eof()}}），那么设置 {{tt|eofbit}}。如果此流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|eofbit}} 上的异常（{{c|1=(exceptions() &amp; eofbit) != 0}}），那么就会抛出 {{l2tt|cpp/io/ios_base/failure}}。
:* 如果输入过程中抛出了异常，那么设置输入流中的 {{tt|badbit}}。如果此流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|badbit}} 上的异常（{{c|1=(exceptions() &amp; badbit) != 0}}），那么还要重抛这个异常。
::* 从 {{l2tt|cpp/io/basic_ios/clear}} 中抛出的异常不会被捕获或重抛。
:* 如果输入过程中没有抛出异常，那么就会设置输入流中的已提取字符数（{{tt|gcount}}）。
@3@ 在任何事件中，无论是异常终止还是返回，离开此函数前都会调用哨兵的析构函数。

===标准库===
下列标准库函数是{{named req|UnformattedInputFunction}}。

* {{lc|std::getline}}，但它不修改 {{tt|gcount}}
* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;{{dsc small|(basic_streambuf*)}}}}
* {{l2tt|cpp/io/basic_istream/get}}
* {{l2tt|cpp/io/basic_istream/getline}}
* {{l2tt|cpp/io/basic_istream/ignore}}
* {{l2tt|cpp/io/basic_istream/peek}}
* {{l2tt|cpp/io/basic_istream/read}}
* {{l2tt|cpp/io/basic_istream/readsome}}
* {{l2tt|cpp/io/basic_istream/putback}}，但它首先清除 {{tt|eofbit}}
* {{l2tt|cpp/io/basic_istream/unget}}，但它首先清除 {{tt|eofbit}}
* {{l2tt|cpp/io/basic_istream/sync}}，但它不修改 {{tt|gcount}}
* {{l2tt|cpp/io/basic_istream/tellg}}，但它不修改 {{tt|gcount}}
* {{l2tt|cpp/io/basic_istream/seekg}}，但它首先清除 {{tt|eofbit}} 且不修改 {{tt|gcount}}
* {{lc|std::ws}}，但它不修改 {{tt|gcount}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=61|std=C++98|before=不明确由于设置 {{tt|eofbit}} 和/或 {{tt|failbit}}&lt;br&gt;而抛出异常是否会导致 {{tt|badbit}} 被设置|after=从 {{l2tt|cpp/io/basic_ios/clear}} 中&lt;br&gt;抛出的异常不会被捕获或重抛}}
{{dr list item|wg=lwg|dr=160|std=C++98|before=确定是否需要重抛异常的流程中提到了不存在的函数 {{tt|exception()}}|after=改成 {{ltt|cpp/io/basic_ios/exceptions|exceptions()}}}}
{{dr list item|wg=lwg|dr=243|std=C++98|before=未指明在 {{tt|sentry::operator bool()}} 返回 {{c|false}} 或 sentry 对象构造失败时的行为|after=已指明}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}