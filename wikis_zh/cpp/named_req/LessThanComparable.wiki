{{cpp/named req/title|LessThanComparable}}
{{cpp/named req/navbar}}
类型必须能使用 {{ttb|&lt;}} 运算符且结果应当具有标准语义。

===要求===
对于类型 {{tt|T}}，给定 {{tt|T}}{{rev inl|since=c++11| 或 {{c/core|const T}}}} 类型的表达式 {{c|a}}、{{c|b}} 和 {{c|c}}，如果以下表达式合法且具有指定的效果，那么 {{tt|T}} 满足{{named req/core|LessThanComparable}}：
{|table class=wikitable
|-
!表达式
!类型
!要求
|-
|rowspan=2|{{c|a &lt; b}}
|符合{{named req|BooleanTestable}}&lt;br&gt;{{mark until c++20}}
|rowspan=2|建立{{enwiki|strict weak ordering|严格弱序}}关系，即具有下列属性：
* 对于所有 {{c|a}}，{{c|!(a &lt; a)}} 都会产生 {{c|true}}。
* 如果 {{c|a &lt; b}}，那么 {{c|!(b &lt; a)}}。
* 如果 {{c|a &lt; b}} 且 {{c|b &lt; c}}，那么 {{c|a &lt; c}}。
* 定义 {{c|equiv(a, b)}} 为 {{c|!(a &lt; b) &amp;&amp; !(b &lt; a)}}，如果 {{c|equiv(a, b)}} 且 {{c|equiv(b, c)}}，那么 {{c|equiv(a, c)}}。
|-
|实现 {{lconcept|boolean-testable}}&lt;br&gt;{{mark since c++20}}
|}

===注解===
为满足此要求，没有内建[[cpp/language/operator_comparison|比较运算符]]的类型必须提供[[cpp/language/operators#关系运算符|用户定义的 {{c/core|operator&lt;}}]]。

对于既{{named req|EqualityComparable}}又{{named req/core|LessThanComparable}}的类型，C++ 标准库区分：
* ''相等''（即表达式 {{c|1=a == b}} 的值）和
* ''等价''（即表达式 {{c|!(a &lt; b) &amp;&amp; !(b &lt; a)}} 的值）

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2114|paper=P2167R3|std=C++98|before=到 {{c/core|bool}} 的可转换性过于弱而无法反映实现的期待|after=加强要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc named req|cpp/named req/Compare|建立顺序关系的{{named req|BinaryPredicate}}}}
{{dsc inc|cpp/concepts/dsc strict_weak_order}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}