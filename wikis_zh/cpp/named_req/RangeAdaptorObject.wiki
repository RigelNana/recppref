{{cpp/named req/title|RangeAdaptorObject|notes={{mark since c++20}}}}
{{cpp/named req/navbar}}

''范围适配器对象''是定制点对象，它接收 {{lconcept|viewable_range}} 作为其首个实参并返回一个 {{lconcept|view}}。一些范围适配器对象是一元的，即它们接收一个 {{lconcept|viewable_range}} 作为其仅有的实参。其他范围适配器对象接收一个 {{lconcept|viewable_range}} 和其他尾随实参。

如果范围适配器对象仅仅接受一个实参，则它同时也是{{named req|RangeAdaptorClosureObject}}。

若范围适配器对象接收多于一个实参，则它亦支持部分应用：令
* {{c|a}} 为范围适配器对象，及
* {{c|args...}} 为实参（通常适合作为尾随实参），
则表达式 {{c|a(args...)}} 拥有下列性质：
* 它合法当且仅当对 {{c|args...}} 中的每个 {{c|e}}，设 {{tt|E}} 为 {{c|decltype((e))}}，{{c|std::is_constructible_v&lt;std::decay_t&lt;E&gt;, E&gt;}} 均为 {{c|true}}，
* 当调用合法时，其结果对象对 {{c|args...}} 中的每个 {{c|e}} 存储以 {{c|std::forward&lt;E&gt;(e)}} 直接非列表初始化的一个 {{c|std::decay_t&lt;E&gt;}} 类型的子对象（换言之，范围适配器对象按值绑定实参），
* 其结果对象是一个{{named req|RangeAdaptorClosureObject}}，
* 调用{{named req|RangeAdaptorClosureObject}}时会将绑定的各实参（如果有）转发到关联的范围适配器对象中。被绑定的实参（如果有）被视作和{{named req|RangeAdaptorClosureObject}}具有相同的值类别和 cv 限定。{{rev inl|since=c++23|换言之，{{c|a(args...)(r)}} 等价于 {{c|std::bind_back(a, args...)(r)}}（但前者还支持管道语法）。}}

类似其他定制点对象，令
* {{c|a}} 为任何范围适配器对象类型的 cv 无限定版本的对象，
* {{c|args...}} 为满足 {{c|a}} 的类型的 {{c|operator()}} 的约束的任意实参组，
对
* {{c|a(args...)}}、
* {{c|std::as_const(a)(args...)}}、
* {{c|std::move(a)(args...)}} 及
* {{c|std::move(std::as_const(a))(args...)}}
的调用全部等价。

这些表达式的结果对象都是一个 {{lconcept|view}} 对象或一个{{named req|RangeAdaptorClosureObject}}。

===注解===
范围适配器对象类型的 volatile 限定或 const-volatile 限定版本不支持 {{c|operator()}}。数组和函数在绑定时转换成指针。

{{langlinks|de|en|es|fr|it|ja|pt|ru}}