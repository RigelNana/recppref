{{cpp/named req/title|FormattedInputFunction}}
{{cpp/named req/navbar}}

===要求===
{{named req/core|FormattedInputFunction}}是进行下列操作的流输入函数：

* 构造一个具有自动存储期的 {{l2tt|cpp/io/basic_istream/sentry}} 类型的对象，并将 {{tt|noskipws}} 实参设为 {{c|false}}，这会进行下列操作：
:* 如果输入流已经设置了 {{ltt|cpp/io/ios_base/iostate|eofbit}} 或 {{ltt|cpp/io/ios_base/iostate|badbit}}，那么会一并设置 {{tt|failbit}}，且如果此输入流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|failbit}} 上的异常（{{c|1=(exceptions() &amp; failbit) != 0}}），那么会抛出 {{l2tt|cpp/io/ios_base/failure}}。
:* 冲洗它所 tie() 的输出流的缓冲区，如果适用。
:* 如果输入流已经设置了 {{tt|ios_base::skipws}} 标志，那么提取并舍弃来自输入流的字符，直到满足下列任一条件：
::* 输入流上的下个可用字符不是空白字符（以此输入流中当前浸染的本地环境的 {{lc|std::ctype}} 平面进行检测）。不提取非空白字符。
::* 抵达流尾，此时设置 {{tt|failbit}} 和 {{tt|eofbit}}，而且如果该流开启了这些位之一上的异常，那么就会抛出 {{l2tt|cpp/io/ios_base/failure}}。
* 通过调用 {{tt|sentry::operator bool()}} 检查哨兵的状态，这等价于 {{l2tt|cpp/io/basic_ios/good}}。
* 如果哨兵返回 {{c|false}} 或哨兵的构造函数抛异常，那么就不会发生输入。
* 如果哨兵返回 {{c|true}}，那么如同通过调用 {{c|rdbuf()-&gt;sbumpc()}} 或 {{c|rdbuf()-&gt;sgetc()}} 一样进行输入。
:* 如果抵达了流尾（对 {{c|rdbuf()-&gt;sbumpc()}} 或 {{c|rdbuf()-&gt;sgetc()}} 的调用返回 {{c|Traits::eof()}}），那么设置 {{tt|eofbit}}。如果此流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|eofbit}} 上的异常（{{c|1=(exceptions() &amp; eofbit) != 0}}），那么就会抛出 {{l2tt|cpp/io/ios_base/failure}}。
:* 如果输入过程中抛出了异常，那么设置输入流中的 {{tt|badbit}}。如果此流的[[cpp/io/basic_ios/exceptions|异常掩码]]中启用了 {{tt|badbit}} 上的异常（{{c|1=(exceptions() &amp; badbit) != 0}}），那么还要重抛这个异常。
:* 如果输入过程中没有抛出异常，那么返回 {{c|*this}}。
* 任何事件中，无论是因异常终止还是返回，离开此函数前都会调用哨兵的析构函数。

===标准库===
下列标准库函数是{{named req|FormattedInputFunction}}。

* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;{{dsc small|(int, long, double, void*, bool)}}}}
* {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;{{dsc small|(std::basic_istream, char&amp;)}}}}
* {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;{{dsc small|(std::basic_istream, char*)}}}}
* {{ltt|cpp/utility/bitset/operator_ltltgtgt2|operator&gt;&gt;{{dsc small|(std::basic_istream, std::bitset)}}}}
* {{ltt|cpp/string/basic_string/operator_ltltgtgt|operator&gt;&gt;{{dsc small|(std::basic_istream, std::string)}}}}
* {{tt|operator&gt;&gt;}}，在 {{lc|std::get_money}} 的返回值上调用时。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=160|std=C++98|before=确定是否需要重抛异常的流程中提到了不存在的函数 {{tt|exception()}}|after=改成 {{ltt|cpp/io/basic_ios/exceptions|exceptions()}}}}
{{dr list end}}

{{langlinks|en|es|ja}}