{{cpp/named req/title|RandomNumberEngineAdaptor|notes={{mark since c++11}}}}
{{cpp/named req/navbar}}

{{named req|RandomNumberEngineAdaptor}}是变换另一{{named req|RandomNumberEngine}}输出的{{named req|RandomNumberEngine}}，前者被称为''基引擎''。

===要求===
给定
* {{c|B}}，{{named req|RandomNumberEngine}}
* {{c|b}}，{{c|B}} 类型的对象
* {{c|A}}，适配 {{c|B}} 为基引擎的{{named req/core|RandomNumberEngineAdaptor}}
* {{c|a}}，{{c|A}} 类型的对象

{|class=wikitable
!函数||语义
|-
|{{c|A::A();}} ||如同以其默认构造函数初始化基引擎。
|-
|{{c|bool operator{{==}}(const A&amp; lhs, const A&amp; rhs);}} ||返回 {{c|lhs}} 的基引擎是否等于 {{c|rhs}} 的基引擎
|-
|{{c|A::A(result_type s);}} ||以 {{c|s}} 初始化基引擎。
|-
|{{c|template&lt;class Sseq&gt; A::A(Sseq&amp; q);}} ||以 {{c|q}} 初始化基引擎。
|-
|{{c|void seed();}} ||调用 {{c|b.seed()}}。
|-
|{{c|void seed(result_type s);}} ||调用 {{c|b.seed(s)}}。
|-
|{{c|template&lt;class Sseq&gt; void seed(Sseq&amp; q);}} ||调用 {{c|b.seed(q)}}。
|}

还有
* {{c|A}} 的每个函数的复杂度不超出 {{c|B}} 的对应函数的复杂度
* {{c|A}} 的状态包含 {{c|B}} 的状态
* {{c|A}} 的状态大小不小于 {{c|b}} 的大小
* 复制 {{c|A}} 的状态包含复制 {{c|B}} 的状态
* {{c|A}} 的文本表示包含 {{c|B}} 的文本表示

===标准库===
下列标准库设施满足{{named req/core|RandomNumberEngineAdaptor}}：
{{dsc begin}}
{{dsc inc | cpp/numeric/random/dsc discard_block_engine}}
{{dsc inc | cpp/numeric/random/dsc independent_bits_engine}}
{{dsc inc | cpp/numeric/random/dsc shuffle_order_engine}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}