{{cpp/title|&lt;small&gt;generator&lt;Ref,V,Allocator&gt;::&lt;/small&gt;''iterator''}}
{{cpp/coroutine/generator/navbar}}
{{ddcla|expos=yes|
class /*iterator*/;
}}

{{rlpt|/|generator::begin}} 的返回类型。实现 {{lconcept|indirectly_readable}} 和 {{lconcept|input_iterator}}。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|value_type}}|{{rlpt|/#成员类型|std::generator::value}}}}
{{dsc|{{tt|difference_type}}|{{lc|std::ptrdiff_t}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|说明}}
{{dsc expos mem obj|coroutine_|id=coroutine|spec={{c/core|std::coroutine_handle&lt;std::generator::promise_type&gt;}}|协程句柄}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|{{PAGENAME}}#构造函数|构造迭代器}}
{{dsc mem fun|{{PAGENAME}}#赋值|title=operator{{=}}|赋值给另一迭代器}}
{{dsc mem fun|{{PAGENAME}}#解引用|title=operator*|返回底层的值}}
{{dsc mem fun|{{PAGENAME}}#自增|title=operator++&lt;br&gt;operator++{{dsc small|(int)}}|推进迭代器}}
{{dsc end}}

{{anchor|构造函数}}
{{member|{{small|std::generator::''iterator''::}}''iterator''|2=
{{ddcl|since=c++23|
/*iterator*/( /*iterator*/&amp;&amp; other ) noexcept;
}}

以 {{c|std::exchange(other.coroutine_, {});}} 初始化 {{lsi|#coroutine_}}。
}}

{{anchor|赋值}}
{{member|1={{small|std::generator::''iterator''::}}operator=|2=
{{ddcl|since=c++23|1=
/*iterator*/&amp; operator=( /*iterator*/&amp;&amp; other ) noexcept;
}}
等价于 {{c|1=coroutine_ = std::exchange(other.coroutine_, {});}}。

返回：{{c|*this}}。
}}

{{anchor|解引用}}
{{member|{{small|std::generator::''iterator''::}}operator*|2=
{{ddcl|since=c++23|
reference operator*() const
    noexcept( std::is_nothrow_copy_constructible_v&lt;reference&gt; );
}}

# 令 {{rlpi|/#成员类型|reference}} 表示 {{rlpt|/|std::generator}} 的底层类型。
# 令 {{c|x}} 是某个生成器对象，其 {{lsi|#coroutine_}} 在栈 {{c|*x.active_}} 中。
# 令 {{c|x.active_-&gt;top()}} 指代具有承诺对象 {{c|p}} 的暂停的协程。

等价于 {{c|return static_cast&lt;reference&gt;(*p.value_);}}。
}}

{{anchor|自增}}
{{member|{{small|std::generator::''iterator''::}}operator++|2=
{{dcl begin}}
{{dcl|since=c++23|num=1|
constexpr /*iterator*/&amp; operator++();
}}
{{dcl|since=c++23|num=2|
constexpr void operator++( int );
}}
{{dcl end}}

@1@ 令 {{c|x}} 是某个生成器对象，其 {{lsi|#coroutine_}} 在栈 {{c|*x.active_}} 中。

@@ 等价于 {{c|x.active_-&gt;top().resume()}}。

@@ 返回：{{c|*this}}。

@2@ 等价于 {{c|++*this;}}。
}}

===非成员函数===
{{dsc begin}}
{{dsc fun|#比较|title=operator{{==}}|将底层迭代器和哨位进行比较|notes={{mark c++23}}}}
{{dsc end}}

{{anchor|比较}}
{{member|1=operator==&lt;small&gt;(std::generator::''iterator'')&lt;/small&gt;|2=
{{ddcl|since=c++23|1=
friend bool operator==( const /*iterator*/&amp; i, std::default_sentinel_t );
}}

等价于 {{c|return i.coroutine_.done();}}。

{{cpp/note synthesized eq}}

{{cpp/hidden friend|plural=no|{{tt|std::generator::''iterator''}}}}
}}

===Example===
{{example}}

{{langlinks|de|en|es|ja|ru}}