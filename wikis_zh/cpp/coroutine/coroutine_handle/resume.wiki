{{cpp/coroutine/coroutine_handle/title|operator()|resume}}
{{cpp/coroutine/coroutine_handle/navbar}}
{{dcl begin}}
{{dcl h|其他特化的成员}}
{{dcl|num=1|since=c++20|
void operator()() const;
void resume() const;
}}
{{dcl h|特化 {{tt|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}} 的成员}}
{{dcl|num=2|since=c++20|
constexpr void operator()() const noexcept;
constexpr void resume() const noexcept;
}}
{{dcl end}}

@1@ 恢复 {{c|*this}} 所指代的协程的执行，或若该协程为无操作协程则不做任何事。

@2@ 不做任何事。

若 {{c|*this}} 不指代暂停的协程，或该协程不是无操作协程且在最终暂停点暂停，则行为未定义。同时恢复协程可能导致数据竞争。

在不同于协程暂停所在的执行代理上恢复协程拥有实现定义行为，除非每个执行代理都是由 {{lc|std::thread}} 或 {{lc|std::jthread}} 表示的线程，或执行 {{tt|main}} 的线程。

===参数===
（无）

===返回值===
（无）

===异常===
如果协程的执行中抛出了异常，则该异常被捕获并在该协程的承诺对象上调用 {{tt|unhandled_exception}}。如果对 {{tt|unhandled_exception}} 的调用抛出或重新抛出了异常，则传播该异常。

===注解===
在不同执行代理上恢复的协程应该处处避免依赖一致的线程同一性，例如跨过暂停点保有互斥体对象。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc destroy}}
{{dsc end}}

{{langlinks|en|ja}}