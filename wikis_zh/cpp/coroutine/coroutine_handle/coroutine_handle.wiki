{{cpp/coroutine/coroutine_handle/title|coroutine_handle}}
{{cpp/coroutine/coroutine_handle/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr coroutine_handle() noexcept;
}}
{{dcl|num=2|since=c++20|
constexpr coroutine_handle( std::nullptr_t ) noexcept;
}}
{{dcl|num=3|since=c++20|1=
coroutine_handle( const coroutine_handle&amp; other ) = default;
}}
{{dcl|num=4|since=c++20|1=
coroutine_handle( coroutine_handle&amp;&amp; other ) = default;
}}
{{dcl end}}

创建不指代协程的 {{tt|coroutine_handle}}，或复制 {{tt|coroutine_handle}}。

@1,2@ 初始化底层地址 {{rlpi|/#数据成员|ptr}} 为 {{c|nullptr}}。构造后，{{rlpf|address}} 返回 {{c|nullptr}}，而该 {{tt|coroutine_handle}} 不指代协程。这些构造函数不对特化 {{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}} 声明。

@3,4@ 复制底层地址。复制构造函数与移动构造函数等价于被隐式声明。

===参数===
{{par begin}}
{{par | other | 要复制的另一 {{tt|coroutine_handle}} }}
{{par end}}

===注解===
{{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}} 不可默认构造，亦不可从 {{lc|std::nullptr_t}} 构造。{{lc|std::noop_coroutine}} 能用于创建新的 {{c|std::coroutine_handle&lt;std::noop_coroutine_promise&gt;}}。

静态成员函数 {{lc|from_promise}} 与 {{lc|from_address}} 亦能创建 {{tt|coroutine_handle}}。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc from_promise}}
{{dsc inc|cpp/coroutine/coroutine_handle/dsc from_address}}
{{dsc inc|cpp/coroutine/dsc noop_coroutine}}
{{dsc end}}

{{langlinks|en|ja}}