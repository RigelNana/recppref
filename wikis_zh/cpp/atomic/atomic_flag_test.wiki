{{cpp/title|atomic_flag_test|atomic_flag_test_explicit}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++20|
bool atomic_flag_test( const volatile std::atomic_flag* object ) noexcept;
}}
{{dcl|num=2|since=c++20|
bool atomic_flag_test( const std::atomic_flag* object ) noexcept;
}}
{{dcl|num=3|since=c++20|
bool atomic_flag_test_explicit( const volatile std::atomic_flag* object,
                                std::memory_order order ) noexcept;
}}
{{dcl|num=4|since=c++20|
bool atomic_flag_test_explicit( const std::atomic_flag* object,
                                std::memory_order order ) noexcept;
}}
{{dcl end}}

原子地读取 {{c|*object}} 的值并返回该值。
@1,2@ 内存同步定序是 {{c|std::memory_order_seq_cst}}。
@3,4@ 内存同步定序是 {{c|order}}。
@@ 如果 {{c|order}} 是 {{c|std::memory_order::release}} 和 {{c|std::memory_order::acq_rel}} 之一，那么行为未定义。

===参数===
{{par begin}}
{{par|object|指向要读取的 {{tt|atomic_flag}} 对象的指针}}
{{par|order|内存同步定序}}
{{par end}} 

===返回值===
原子地读取的值。

===注解===
{{feature test macro|__cpp_lib_atomic_flag_test|value=201907L|std=C++20|{{tt|std::atomic_flag::test}}}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic_flag/dsc test}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}