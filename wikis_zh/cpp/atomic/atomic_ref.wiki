{{cpp/title|atomic_ref}}
{{cpp/atomic/atomic_ref/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|since=c++20|
template&lt; class T &gt;
struct atomic_ref;
}}
{{dcl end}}

{{tt|std::atomic_ref}} 类模板对它引用的对象应用原子操作。

在 {{tt|std::atomic_ref}} 对象的生存期中，认为它引用的对象是原子对象。如果一个线程写入原子对象，同时另一线程从它读取，那么其行为有良好定义（数据竞争上的细节见[[cpp/language/memory model|内存模型]]）。另外，对原子对象的访问可以建立线程间同步，和按 {{lc|std::memory_order}} 所指定定序非原子内存访问。

对象的生存期必须超出所有引用该对象的 {{tt|std::atomic_ref}} 的生存期。任何 {{tt|std::atomic_ref}} 实例所引用的对象仍存在时，必须只通过这些 {{tt|std::atomic_ref}} 实例排他地访问该对象。{{tt|std::atomic_ref}} 对象所引用对象的任何子对象均不可同时被任何其他 {{tt|std::atomic_ref}} 对象引用。

通过 {{tt|std::atomic_ref}} 应用到对象的原子操作，相对于通过任何其他引用同一对象的 {{tt|std::atomic_ref}} 应用的操作来说都是原子的。

类似核心语言中的[[cpp/language/reference|引用]]，const 性对于 {{tt|std::atomic_ref}} 是表层的——可通过 {{c/core|const}} {{tt|std::atomic_ref}} 对象修改被引用的值。

如果满足以下任意以下条件，那么程序非良构：
* {{c|std::is_trivially_copyable_v&lt;T&gt;}} 是 {{c|false}}。
* {{rlt|is_always_lock_free}} 是 {{c|false}} 但 {{c|std::is_volatile_v&lt;T&gt;}} 是 {{c|true}}。

{{tt|std::atomic_ref}} {{named req|CopyConstructible}}。

===嵌套类型===
{{dsc begin}}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|value_type}}|{{c/core|std::remove_cv_t&lt;T&gt;}}}}
{{dsc|{{tt|difference_type}}|
* 在 {{tt|T}} 是 ''cv'' {{c/core|bool}} 以外的算术类型时是 {{tt|value_type}}。
* 否则在 {{tt|T}} 是指向对象的指针类型时是 {{lc|std::ptrdiff_t}}。
* 否则不定义。
}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|描述}}
{{dsc expos mem obj|spec={{c/core|T*}}|ptr|id=ptr|指向被引用对象的指针}}
{{dsc inc|cpp/atomic/atomic_ref/dsc is_always_lock_free}}
{{dsc inc|cpp/atomic/atomic_ref/dsc required_alignment}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic_ref/dsc constructor}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator{{=}}}}
{{dsc inc|cpp/atomic/atomic_ref/dsc is_lock_free}}
{{dsc inc|cpp/atomic/atomic_ref/dsc store}}
{{dsc inc|cpp/atomic/atomic_ref/dsc load}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator_T}}
{{dsc inc|cpp/atomic/atomic_ref/dsc exchange}}
{{dsc inc|cpp/atomic/atomic_ref/dsc compare_exchange}}
{{dsc inc|cpp/atomic/atomic/dsc wait|atomic_ref}}
{{dsc inc|cpp/atomic/atomic/dsc notify_one|atomic_ref}}
{{dsc inc|cpp/atomic/atomic/dsc notify_all|atomic_ref}}
{{dsc inc|cpp/atomic/atomic/dsc address|atomic_ref}}
{{dsc h2|仅当 {{tt|T}} 为 ''cv'' {{c/core|bool}} 以外的算术类型或指向对象的指针类型时提供}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_add}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_sub}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator arith2}}
{{dsc h2|仅当 {{tt|T}} 为 ''cv'' {{c/core|bool}} 以外的整数类型或指向对象的指针类型时提供}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_max}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_min}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator arith}}
{{dsc h2|仅当 {{tt|T}} 为 ''cv'' {{c/core|bool}} 以外的整数类型时提供}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_and}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_or}}
{{dsc inc|cpp/atomic/atomic_ref/dsc fetch_xor}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator arith3}}
{{dsc end}}

===特化===
标准指定 {{tt|std::atomic_ref}} 拥有以下特化：

{{dcl begin}}
{{dcl|num=1|since=c++20|
template&lt;&gt;
struct atomic_ref&lt;/*整数类型*/&gt;;
}}
{{dcl|num=2|since=c++20|
template&lt;&gt;
struct atomic_ref&lt;/*浮点数类型*/&gt;;
}}
{{dcl|num=3|since=c++20|
template&lt; class /*指针类型*/ &gt;
    requires /* 见下文 */
struct atomic_ref&lt;/*指针类型*/&gt;;
}}
{{dcl end}}

@1@ {{c/core|/*整数类型*/}} 指代 ''cv'' {{c/core|bool}} 以外的可能有 cv 限定的整数类型。
@2@ {{c/core|/*浮点数类型*/}} 指代可能有 cv 限定的浮点数类型。
@3@ 对可能有 cv 限定的指向对象的指针类型 {{c/core|/*指针类型*/}} 提供部分特化。

===注解===
实现可能合并指定的特化。例如 MSVC STL 将它们全部合并到主模板中。

当 {{tt|T}} 是 ''cv'' {{c/core|void}} 或函数类型时， {{c/core|std::atomic_ref&lt;T*&gt;}} （即 {{c/core|std::atomic_ref&lt;void*&gt;}}、{{c/core|std::atomic_ref&lt;int(*)()&gt;}} 等）没有 {{tt|difference_type}} 或任何要求指针算术{{rev inl|since=c++26|或关系比较}}的操作。

{{ftm begin|sort=1}}
{{ftm|__cpp_lib_atomic_ref|{{tt|std::atomic_ref}}|value=201806L|std=C++20}}
{{ftm|__cpp_lib_constexpr_atomic|{{c/core|constexpr}} 的 {{lc|std::atomic}} 与 {{tt|std::atomic_ref}}|value=202411L|std=C++26}}
{{ftm end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3508|paper=P3323R1|std=C++20|before=在 {{tt|T}} 是 {{c/core|const}} 类型或指向非对象的指针类型时&lt;br&gt;{{c/core|atomic_ref&lt;T&gt;}} 有不可实现的操作|after=这些操作受到约束，&lt;br&gt;或不对不适合的 {{tt|T}} 提供}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/atomic/dsc atomic}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}