{{cpp/title|atomic_init}}
{{cpp/thread/navbar}}
{{dcl begin}}
{{dcl header|atomic}}
{{dcl|num=1|since=c++11|deprecated=c++20|
template&lt; class T &gt;
void atomic_init
    ( std::atomic&lt;T&gt;* obj,
      typename std::atomic&lt;T&gt;::value_type desired ) noexcept;
}}
{{dcl|num=2|since=c++11|deprecated=c++20|
template&lt; class T &gt;
void atomic_init
    ( volatile std::atomic&lt;T&gt;* obj,
      typename std::atomic&lt;T&gt;::value_type desired ) noexcept;
}}
{{dcl end}}

以值 {{c|desired}} 初始化默认构造的原子对象 {{c|obj}}。此函数不是原子的：来自其他线程的并发访问，即使通过原子操作，也是数据竞争。

如果 {{c|obj}} 不是默认构造的，或者在同一 {{c|obj}} 上调用此函数两次，那么行为未定义。

===参数===
{{par begin}}
{{par|obj|指向要初始化的原子对象的指针}}
{{par|desired|用来初始化原子对象的值}}
{{par end}}

===返回值===
（无）

===注解===
为与 C 兼容而提供此函数。如果不要求兼容性，可通过默认构造函数来初始化 {{lc|std::atomic}}。

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|std=C++11|paper=P0558R1|before=要求准确类型匹配，因为会从多个参数推导 {{tt|T}}|after=只会从 {{c|obj}} 推导 {{tt|T}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/atomic/dsc ATOMIC_VAR_INIT}}
{{dsc inc|cpp/atomic/atomic/dsc constructor}}
{{dsc see c|c/atomic/atomic_init}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}