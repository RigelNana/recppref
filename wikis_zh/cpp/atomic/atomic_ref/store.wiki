{{cpp/atomic/atomic_ref/title|store}}
{{cpp/atomic/atomic_ref/navbar}}
{{ddcla|constexpr=c++26|1=
void store( value_type desired,
            std::memory_order order =
                std::memory_order_seq_cst ) const noexcept;
}}

原子地以 {{c|desired}} 替换当前被引用对象的值。按照 {{c|order}} 的值影响内存。

{{cpp/enable if| {{c/core|std::is_const_v&lt;T&gt;}} 是 {{c|false}} }}。

如果 {{c|order}} 不是 {{c|std::memory_order_relaxed}}，{{c|std::memory_order_release}} 或 {{c|std::memory_order_seq_cst}}，那么行为未定义。

===参数===
{{par begin}}
{{par|desired|要存入被引用对象的值}}
{{par|order|要施加的内存定序制约}}
{{par end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3508|paper=P3323R1|std=C++20|before={{tt|store}} 对 {{c/core|const T}} 无意义|after=受约束以仅接受非 const 的 {{tt|T}}}}
{{dr list end}}

===示例===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic_ref/dsc operator{{=}}}}
{{dsc end}}

{{langlinks|en|es|ja}}