{{cpp/atomic/atomic_ref/title|fetch_xor}}
{{cpp/atomic/atomic_ref/navbar}}
{{dcl begin}}
{{dcl h|仅当 {{tt|T}} 为 ''cv'' {{c/core|bool}} 以外的整数类型时提供}}
{{dcl|since=c++20|1=
value_type fetch_xor( value_type arg,
                      std::memory_order order =
                          std::memory_order_seq_cst ) const noexcept;
}}
{{dcl end}}

原子地以被引用对象的当前值和 {{tt|arg}} 的逐位异或结果替换该值。此操作是读修改写操作。按照 {{tt|order}} 的值影响内存。

{{cpp/enable if| {{c/core|std::is_const_v&lt;T&gt;}} 是 {{c|false}} }}。

===参数===
{{par begin}}
{{par | arg |逐位异或的另一实参}}
{{par | order |要施加的内存定序制约}}
{{par end}}

===返回值===
紧接此函数生效前的被引用对象值。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3508|paper=P3323R1|std=C++20|before={{tt|fetch_xor}} 对 {{c/core|const T}} 无意义|after=受约束以仅接受非 const 的 {{tt|T}}}}
{{dr list end}}

{{langlinks|en|es|ja}}