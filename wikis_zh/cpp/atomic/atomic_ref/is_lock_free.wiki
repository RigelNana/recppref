{{cpp/atomic/atomic_ref/title|is_lock_free}}
{{cpp/atomic/atomic_ref/navbar}}
{{dcl begin}}
{{dcl|since=c++20| 
bool is_lock_free() const noexcept;
}}
{{dcl end}}

检查此对象上的原子操作是否免锁。

===参数===
（无）

===返回值===
若此对象上的原子操作为免锁则为 {{c|true}}，否则为 {{c|false}}。

===注解===
{{lc|std::atomic_flag}} 以外的所有原子类型可能会被用互斥体或其他锁定操作实现，而不一定用免锁的原子 CPU 指令。亦允许原子类型''有时''免锁，例如若给定架构上仅对齐的内存访问是原生原子的，则同类型的错误对齐对象必须用锁。

C++ 标准推荐（但不要求）免锁操作亦为免地址，即适用于使用共享内存的进程间交流。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/atomic/atomic_ref/dsc is_always_lock_free}}
{{dsc end}}

{{langlinks|en|es|ja}}