{{cpp/atomic/atomic/title|operator{{=}}}}
{{cpp/atomic/atomic/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|1=
T operator=( T desired ) noexcept;
}}
{{dcl|num=2|since=c++11|1=
T operator=( T desired ) volatile noexcept;
}}
{{dcl|num=3|since=c++11|1=
atomic&amp; operator=( const atomic&amp; ) = delete;
}}
{{dcl|num=4|since=c++11|1=
atomic&amp; operator=( const atomic&amp; ) volatile = delete;
}}
{{dcl end}}

@1,2@ 将 {{c|desired}} 原子地赋给原子变量。等价于 {{c|store(desired)}}。
{{rrev|since=c++20|
重载 {{v|2}} 在参与重载决议且 {{c|std::atomic&lt;T&gt;::is_always_lock_free}} 是 {{c|false}} 时被弃用。
}}

@3,4@ 原子变量不满足{{named req|CopyAssignable}}。

===参数===
{{par begin}}
{{par|desired|要赋值的值}}
{{par end}}

===返回值===
@1,2@ {{c|desired}}

===注解===
与大多数赋值运算符不同，原子类型的赋值运算不返回到它的左侧参数的引用。它们会返回存储值的副本。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/atomic/atomic/dsc constructor}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}