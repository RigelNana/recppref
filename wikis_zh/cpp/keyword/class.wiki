{{cpp/keyword/title|{{tt|class}}}}
{{cpp/keyword/navbar}}

===用法===
* [[cpp/language/class |声明类]]
{{rrev|since=c++11|
* [[cpp/language/enum |声明有作用域枚举类型]]
}}
* 在[[cpp/language/templates|模板声明]]中，{{c/core|class}} 可用于引入[[cpp/language/template_parameters#类型模板形参|类型模板形参]]与[[cpp/language/template_parameters#模板模板形参|模板模板形参]]
* 若作用域中存在具有与某个类类型的名字相同的名字的函数或变量，则 {{c/core|class}} 可附于类名之前以消歧义，这产生一个{{lt|cpp/language/elaborated type specifier|详述类型说明符}}

===示例===
{{example|code=
class Foo;  // 类的前置声明

class Bar   // 类的定义
{
public:
    Bar(int i) : m_i(i) {}
private:
    int m_i;
};

template &lt;class T&gt; // 模板实参
void qux()
{
    T t;
}

enum class Pub // 有作用域枚举，C++11 起
{
    b, d, p, q
};

int main()
{
    Bar Bar(1); // 变量 Bar 隐藏了类型 Bar
    Bar Bar2(2); // 编译器报错
    class Bar Bar2(2); // 详述的类型
}
}}

===参阅===
* {{rlpt|struct}}, {{rlpt|union}}
{{rrev|since=c++11|
* {{ltt|cpp/identifier with special meaning/final}}
}}
* {{rlpt|enum}}
* {{rlpt|typename}}
* {{rlpt|template}}
{{rrev|since=c++20|
* {{rlpt|concept}}, {{rlpt|requires}}
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}