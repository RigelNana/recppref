{{cpp/thread/stop_source/title|stop_source}}
{{cpp/thread/stop_source/navbar}}

{{dcl begin}}
{{dcl|since=c++20|num=1|
stop_source();
}}
{{dcl|since=c++20|num=2|
explicit stop_source( std::nostopstate_t nss ) noexcept;
}}
{{dcl|since=c++20|num=3|
stop_source( const stop_source&amp; other ) noexcept;
}}
{{dcl|since=c++20|num=4|
stop_source( stop_source&amp;&amp; other ) noexcept;
}}
{{dcl end}}

构造新的 {{tt|stop_source}} 对象。

@1@ 构造拥有新停止状态的 {{tt|stop_source}}。
@2@ 构造无关联停止状态的空 {{tt|stop_source}}。
@3@ 复制构造函数。构造拥有与 {{c|other}} 相同的关联停止状态的 {{tt|stop_source}}。
@4@ 移动构造函数。构造拥有与 {{c|other}} 相同的关联停止状态的 {{tt|stop_source}}；将 {{c|other}} 设为空。

===参数===
{{par begin}}
{{par|nss|用于构造空 {{tt|stop_source}} 的 {{tt|std::nostopstate_t}} 占位对象}}
{{par|other|用于构造此 {{tt|stop_source}} 对象的另一 {{tt|stop_source}} 对象}}
{{par end}}

===后条件===
@1@ {{lc|stop_possible()}} 为 {{c|true}} 而 {{lc|stop_requested()}} 为 {{c|false}}。
@2@ {{lc|stop_possible()}} 与 {{lc|stop_requested()}} 均为 {{c|false}}。
@3@ {{c|*this}} 与 {{c|other}} 共享同一关联停止状态且比较相等。
@4@ {{c|*this}} 拥有 {{c|other}} 先前的关联停止状态，而 {{c|other.stop_possible()}} 为 {{c|false}}。

===异常===
@1@ 若不能为停止状态分配内存则为 {{lc|std::bad_alloc}}。

{{langlinks|en|es|ja|ru}}