{{cpp/thread/lock_guard/title|lock_guard}}
{{cpp/thread/lock_guard/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
explicit lock_guard( mutex_type&amp; m );
}}
{{dcl|num=2|since=c++11|
lock_guard( mutex_type&amp; m, std::adopt_lock_t t );
}}
{{dcl|num=3|since=c++11|1=
lock_guard( const lock_guard&amp; ) = delete;
}}
{{dcl end}}

获得给定互斥体 {{c|m}} 的所有权。

@1@ 相当于调用 {{c|m.lock()}}。
@2@ 获得互斥体 {{c|m}} 的所有权而不试图锁定它。若当前线程不在 {{c|m}} 上保有非共享锁（即由 {{tt|lock}}、{{tt|try_lock}}、{{tt|try_lock_for}} 或 {{tt|try_lock_until}} 取得的锁）则行为未定义。&lt;!-- P2160R1 --&gt;
@3@ 复制构造函数被弃置。

若 {{c|m}} 先于 {{tt|lock_guard}} 对象被销毁，则行为未定义。

===参数===
{{par begin}}
{{par|m|要获得所有权的共享互斥体}}
{{par|t|用于选择构造函数非锁定版本的标签线程}}
{{par end}}

===异常===
@1@ 抛任何 {{c|m.lock()}} 所抛的异常

@2@ 不抛出

{{langlinks|de|en|es|fr|it|ja|pt|ru}}