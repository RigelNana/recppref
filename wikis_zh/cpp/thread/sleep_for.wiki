{{cpp/title|n=this_thread::|sleep_for}}
{{cpp/thread/navbar}}
{{ddcl|header=thread|since=c++11|1=
template&lt; class Rep, class Period &gt;
void sleep_for( const std::chrono::duration&lt;Rep, Period&gt;&amp; sleep_duration );
}}

阻塞当前线程执行，''至少''{{sep}}经过指定的 {{c|sleep_duration}}。

因为调度或资源争议延迟，此函数可能阻塞长于 {{c|sleep_duration}}。

标准库建议用稳定时钟度量时长。若实现用系统时间代替，则等待时间亦可能对时钟调节敏感。

===参数===
{{par begin}}
{{par|sleep_duration|要睡眠的时长}}
{{par end}}

===返回值===
（无）

===异常===
{{tt|clock}}、{{tt|time_point}} 或 {{tt|duration}} 在执行间抛出的任何异常（标准库提供的时钟、时间点和时长决不抛出）。

===示例===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;
 
int main()
{
    using namespace std::chrono_literals;

    std::cout &lt;&lt; "你好，等待者\n" &lt;&lt; std::flush;

    const auto start = std::chrono::high_resolution_clock::now();
    std::this_thread::sleep_for(2000ms);
    const auto end = std::chrono::high_resolution_clock::now();
    const std::chrono::duration&lt;double, std::milli&gt; elapsed = end - start;

    std::cout &lt;&lt; "等待了 " &lt;&lt; elapsed &lt;&lt; '\n';
}
|p=true
|output=
你好，等待者
等待了 2000.13 ms
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/thread/dsc sleep_until}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}