{{cpp/thread/shared_timed_mutex/title|try_lock_shared_until}}
{{cpp/thread/shared_timed_mutex/navbar}}
{{dcl begin}}
{{dcl|since=c++14|
template&lt; class Clock, class Duration &gt;
bool try_lock_shared_until( const std::chrono::time_point&lt;Clock,Duration&gt;&amp; timeout_time );
}}
{{dcl end}}

尝试以共享模式锁定互斥体。阻塞直至抵达 {{c|timeout_time}} 或获得锁这两个事件的先达成者为止。成功获得锁时返回 {{c|true}}，否则返回 {{c|false}}。

若已经过 {{c|timeout_time}}，则此函数表现同 {{lc|try_lock_shared()}}。

{{cpp/thread/block until|timeout_time}}

同 {{lc|try_lock_shared()}}，允许此函数虚假地失败而返回 {{c|false}}，即使在 {{c|timeout_time}} 前某点互斥体不为任何其他线程所锁定。

若此操作返回 {{c|true}}，则同一互斥体上先前的 {{lc|unlock()}} 操作''同步于''（定义于 {{lc|std::memory_order}}）它。

如果 {{tt|try_lock_shared_until}} 被已经以任何模式（共享或独占）占有此 {{tt|mutex}} 的线程调用，则行为未定义。

===参数===
{{par begin}}
{{par|timeout_time|要阻塞到的最大时间点}}
{{par end}}

===返回值===
若成功获得锁则为 {{c|true}}，否则为 {{c|false}}。

===异常===
时钟、时间点或时长在执行中抛出的任何异常（标准库提供的时钟、时间点及时长决不抛出）。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/thread/mutex/dsc try_lock_until|shared_timed_mutex}}
{{dsc inc|cpp/thread/mutex/dsc try_lock_shared|shared_timed_mutex}}
{{dsc inc|cpp/thread/mutex/dsc try_lock_shared_for|shared_timed_mutex}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}