{{cpp/thread/shared_lock/title|try_lock_for}}
{{cpp/thread/shared_lock/navbar}}
{{dcl begin}}
{{dcl|since=c++14|1=
template&lt; class Rep, class Period &gt;
bool try_lock_for( const std::chrono::duration&lt;Rep,Period&gt;&amp; timeout_duration );
}}
{{dcl end}}

尝试以共享模式锁定关联互斥体。阻塞直至经过 {{tt|timeout_duration}} 或获得锁这两个事件的先达成者为止。成功获得锁时返回 {{c|true}}，否则返回 {{c|false}}。相当于调用 {{c|mutex()-&gt;try_lock_shared_for(timeout_duration)}}。

由于调度或资源争夺延迟，此函数可能阻塞长于 {{c|timeout_duration}}。

标准建议使用稳定时钟。若实现用系统时钟代替，则等待时间亦可能对时钟调节敏感。

若无关联互斥体或互斥体已被锁定则抛出 {{lc|std::system_error}}。

若 {{tt|Mutex}} 不符合{{named req|SharedTimedLockable}}要求则行为未定义。

===参数===
{{par begin}}
{{par|timeout_duration|要阻塞的最大时长}}
{{par end}}

===返回值===
若已成功获得互斥体的所有权则为 {{c|true}}，否则为 {{c|false}}。

===异常===
* {{c|mutex()-&gt;try_lock_shared_for(timeout_duration)}} 所抛的任何异常。

* 若无关联互斥体，则抛出以 {{lc|std::errc::operation_not_permitted}} 为错误码的 {{lc|std::system_error}}。

* 若互斥体已被锁定，则抛出以 {{lc|std::errc::resource_deadlock_would_occur}} 为错误码的 {{lc|std::system_error}}。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/thread/unique_lock/dsc try_lock_for}}
{{dsc inc|cpp/thread/shared_lock/dsc lock}}
{{dsc inc|cpp/thread/shared_lock/dsc try_lock}}
{{dsc inc|cpp/thread/shared_lock/dsc try_lock_until}}
{{dsc inc|cpp/thread/shared_lock/dsc unlock}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}