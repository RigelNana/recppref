{{cpp/title|thread}}
{{cpp/thread/thread/navbar}}
{{ddcl | header=thread | since=c++11 |
class thread;
}}

类 {{tt|thread}} 表示[[enwiki:Thread_(computing)|单个执行线程]]。线程允许多个函数同时执行。

线程在构造关联的线程对象时立即开始执行（等待任何OS调度延迟），从提供给作为[[cpp/thread/thread/thread|构造函数参数]]的顶层函数开始。顶层函数的返回值将被忽略，而且若它以抛异常终止，则调用 {{lc|std::terminate}}。顶层函数可以通过 {{lc|std::promise}} 或通过修改共享变量（可能需要同步，见 {{lc|std::mutex}} 与 {{lc|std::atomic}} ）将其返回值或异常传递给调用方。

{{tt|std::thread}} 对象也可能处于不表示任何线程的状态（默认构造、被移动、{{lc|detach}} 或 {{lc|join}} 后），并且执行线程可能与任何 {{tt|thread}} 对象无关（{{lc|detach}} 后）。

没有两个 {{tt|std::thread}} 对象会表示同一执行线程；{{tt|std::thread}} 不是{{named req|CopyConstructible}}或{{named req|CopyAssignable}}的，尽管它{{named req|MoveConstructible}}且{{named req|MoveAssignable}}。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc inc|cpp/thread/dsc native_handle_type|thread}}
{{dsc end}}

===成员类===
{{dsc begin}}
{{dsc inc|cpp/thread/thread/dsc id}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/thread/thread/dsc constructor}}
{{dsc inc|cpp/thread/thread/dsc destructor}}
{{dsc inc|cpp/thread/thread/dsc operator{{=}}}}

{{dsc h2|观察器}}
{{dsc inc|cpp/thread/thread/dsc joinable|thread}}
{{dsc inc|cpp/thread/thread/dsc get_id|thread}}
{{dsc inc|cpp/thread/thread/dsc native_handle|thread}}
{{dsc inc|cpp/thread/thread/dsc hardware_concurrency|thread}}

{{dsc h2|操作}}
{{dsc inc|cpp/thread/thread/dsc join|thread}}
{{dsc inc|cpp/thread/thread/dsc detach|thread}}
{{dsc inc|cpp/thread/thread/dsc swap|thread}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/thread/thread/dsc swap2|thread}}
{{dsc end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/thread/dsc jthread}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}