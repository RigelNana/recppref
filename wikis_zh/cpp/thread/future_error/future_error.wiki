{{cpp/thread/future_error/title|future_error}}
{{cpp/thread/future_error/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
future_error( const future_error&amp; other ) noexcept;
}}
{{dcl|num=2|since=c++17|
explicit future_error( std::future_errc ec );
}}
{{dcl end}}

@1@ 复制构造函数，以 {{c|other}} 的内容初始化新 {{tt|future_error}} 对象的内容。若 {{c|*this}} 与 {{c|other}} 均拥有动态类型 {{tt|std::future_error}} 则 {{c|1=std::strcmp(what(), other.what()) == 0}}。
@2@ 构造含错误码 {{c|std::make_error_code(ec)}} 的新 {{tt|future_error}} 对象。

===参数===
{{par begin}}
{{par|other|要复制的另一 {{tt|future_error}} 对象}}
{{par|ec|错误码}}
{{par end}}

===注解===
C++17 前用户没有符合标准的构造 {{tt|future_error}} 的方法，除了从另一 {{tt|future_error}} 复制。C++11 与 C++14 描述了仅用于阐释的接收 {{lc|std::error_code}} 的公开构造函数，而一些实现提供这种构造函数。

{{langlinks|de|en|es|fr|it|ja|pt|ru}}