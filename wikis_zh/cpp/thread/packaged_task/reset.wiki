{{cpp/thread/packaged_task/title|reset}}
{{cpp/thread/packaged_task/navbar}}
{{ddcl|since=c++11|
void reset();
}}

重置状态，抛弃先前执行的结果。构造新的共享状态。

等价于 {{c|1=*this = packaged_task(std::move(f))}}，其中 {{tt|f}} 是存储的任务。

===参数===
（无）

===返回值===
（无）

===异常===
* 若 {{c|*this}} 无共享状态则为 {{lc|std::future_error}}。设置错误条件为 {{ltt|cpp/thread/future_errc|no_state}}。
* 若无足够内存以分配新的共享状态则为 {{lc|std::bad_alloc}}。
* 新 {{tt|packaged_task}} 的[[cpp/thread/packaged_task/packaged_task|移动构造函数]]所抛的任何异常。

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;future&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;

int main()
{
    std::packaged_task&lt;int(int,int)&gt; task([](int a, int b)
    {
        return std::pow(a, b);
    });
    std::future&lt;int&gt; result = task.get_future();
    task(2, 9);
    std::cout &lt;&lt; "2^9 = " &lt;&lt; result.get() &lt;&lt; '\n';

    task.reset();
    result = task.get_future();
    std::thread task_td(std::move(task), 2, 10);
    task_td.join();
    std::cout &lt;&lt; "2^10 = " &lt;&lt; result.get() &lt;&lt; '\n';
}
|output=
2^9 = 512
2^10 = 1024
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}