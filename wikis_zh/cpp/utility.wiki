{{title|工具库}}
{{cpp/utility/navbar}}

C++ 包含了各种工具库，提供了诸如{{rl|bitset|位计数}}和{{rl|functional/bind|部分函数应用}}的功能。这些库大致可以分为两类：
* 语言支持库
* 通用库

==语言支持==
语言支持库中所提供的类和函数与语言特性紧密相关，用以支持语言中的一些常见的惯用法。

{{anchor|实现属性}}
==={{rl|feature test|实现属性}} {{mark since c++20}}===
标头 {{header|version}} 提供关于 C++ 标准库的实现依赖信息（例如版本号和发行日期）。它也定义了{{rl|feature test|特性测试宏}}。

===[[cpp/types|类型支持]]===
基本类型（如 {{lc|std::size_t}}、{{lc|std::nullptr_t}}）、RTTI（如 {{lc|std::type_info}}）。

==={{rl|program|程序工具}}===
终止（如 {{lc|std::abort}}、{{lc|std::atexit}}），环境（如 {{lc|std::system}}），信号（如 {{lc|std::raise}}）。

===[[cpp/memory|动态内存管理]]===
智能指针（如 {{lc|std::shared_ptr}}），分配器（如 {{lc|std::allocator}} 或 {{lc|std::pmr::memory_resource}}），C 风格内存管理（如 {{lc|std::malloc}}）。

===[[cpp/error|错误处理]]===
异常（如 {{lc|std::exception}}、{{lc|std::terminate}}），断言（如 {{lc|assert}}）。

==={{rl|variadic|变参数函数}}===
支持接受任意数量参数的函数（例如通过 {{lc|va_start}}、{{lc|va_arg}}、{{lc|va_end}}）。

{{anchor|initializer_list}}
==={{rl|initializer_list|初始化器列表}} {{mark since c++11}}===
{{dsc begin}}
{{dsc header|initializer_list}}
{{dsc inc|cpp/utility/dsc initializer_list}}
{{dsc end}}

{{anchor|源码信息捕获}}
==={{rl|source_location|源码信息捕获}} {{mark since c++20}}===
{{dsc begin}}
{{dsc header|source_location}}
{{dsc inc|cpp/utility/dsc source_location}}
{{dsc end}}

{{anchor|三路比较}}
===三路比较 {{mark since c++20}}===
{{dsc begin}}
{{dsc header|compare}}
{{dsc inc|cpp/utility/compare/dsc three_way_comparable}}
{{dsc inc|cpp/utility/compare/dsc partial_ordering}}
{{dsc inc|cpp/utility/compare/dsc weak_ordering}}
{{dsc inc|cpp/utility/compare/dsc strong_ordering}}
{{dsc inc|cpp/utility/compare/dsc named comparison functions}}
{{dsc inc|cpp/utility/compare/dsc compare_three_way}}
{{dsc inc|cpp/utility/compare/dsc compare_three_way_result}}
{{dsc inc|cpp/utility/compare/dsc common_comparison_category}}
{{dsc inc|cpp/utility/compare/dsc strong_order}}
{{dsc inc|cpp/utility/compare/dsc weak_order}}
{{dsc inc|cpp/utility/compare/dsc partial_order}}
{{dsc inc|cpp/utility/compare/dsc compare_strong_order_fallback}}
{{dsc inc|cpp/utility/compare/dsc compare_weak_order_fallback}}
{{dsc inc|cpp/utility/compare/dsc compare_partial_order_fallback}}
{{dsc end}}

{{anchor|协程支持}}
===[[cpp/coroutine|协程支持]] {{mark since c++20}}===
用于[[cpp/language/coroutines|协程]]支持的类型，例如 {{lc|std::coroutine_traits}}、{{lc|std::coroutine_handle}}。

{{anchor|契约支持}}
===[[cpp/contract|契约支持]] {{mark since c++26}}===
用于[[cpp/language/contracts|契约]]支持的类型，例如 {{ltt|cpp/contract/contract_violation|std::contracts::contract_violation}}。

==通用工具==
===交换===
{{dsc begin}}
{{dsc header|utility}}
{{dsc inc|cpp/algorithm/dsc swap}}
{{dsc inc|cpp/utility/dsc exchange}}
{{dsc header|concepts}}
{{dsc inc|cpp/utility/ranges/dsc swap}}
{{dsc end}}

{{anchor|类型操作}}
===类型操作 {{mark since c++11}}===
{{dsc begin}}
{{dsc header|utility}}
{{dsc inc|cpp/utility/dsc forward}}
{{dsc inc|cpp/utility/dsc forward_like}}
{{dsc inc|cpp/utility/dsc move}}
{{dsc inc|cpp/utility/dsc move_if_noexcept}}
{{dsc inc|cpp/utility/dsc as_const}}
{{dsc inc|cpp/utility/dsc declval}}
{{dsc inc|cpp/utility/dsc to_underlying}}
{{dsc end}}

{{anchor|整数比较函数}}
===整数比较函数 {{mark since c++20}}===
{{dsc begin}}
{{dsc header|utility}}
{{dsc inc|cpp/utility/dsc intcmp}}
{{dsc inc|cpp/utility/dsc in_range}}
{{dsc end}}

{{anchor|关系运算符}}
===关系运算符 {{mark until c++20}}===
{{dsc begin}}
{{dsc header|utility}}
{{dsc namespace|std::rel_ops}}
{{dsc inc|cpp/utility/rel_ops/dsc operator_cmp}}
{{dsc end}}

{{anchor|构造标签}}
===构造标签 {{mark since c++11}}===
{{dsc begin}}
{{dsc header|utility}}
{{dsc inc|cpp/utility/dsc piecewise_construct}}
{{dsc inc|cpp/utility/dsc in_place}}
{{dsc inc|cpp/utility/dsc nontype}}
{{dsc end}}

===[[cpp/utility/pair|pair]] 与 [[cpp/utility/tuple|tuple]]===
{{dsc begin}}
{{dsc header|utility}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/utility/dsc piecewise_construct}}
{{dsc inc|cpp/utility/dsc integer_sequence}}
{{dsc header|tuple}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc inc|cpp/utility/dsc apply}}
{{dsc inc|cpp/utility/dsc make_from_tuple}}
{{anchor|元组协议}}
{{dsc h2|[[cpp/utility/tuple/tuple-like|元组协议]] {{mark since c++11}}}}
{{dsc header|tuple}}
{{dsc header|utility}}
{{dsc header|array}}
{{dsc header|ranges}}
{{dsc inc|cpp/utility/dsc tuple_size}}
{{dsc inc|cpp/utility/dsc tuple_element}}
{{dsc end}}

{{anchor|和类型与类型擦除包装器}}
===和类型与类型擦除包装器 {{mark since c++17}}===
{{dsc begin}}
{{dsc header|optional}}
{{dsc inc|cpp/utility/dsc optional}}
{{dsc sep}}
{{dsc header|expected}}
{{dsc inc|cpp/utility/dsc expected}}
{{dsc sep}}
{{dsc header|variant}}
{{dsc inc|cpp/utility/dsc variant}}
{{dsc sep}}
{{dsc header|any}}
{{dsc inc|cpp/utility/dsc any}}
{{dsc sep}}
{{dsc header|utility}}
{{dsc inc|cpp/utility/dsc in_place}}
{{dsc end}}

{{anchor|位集合}}
===[[cpp/utility/bitset|位集合]] {{mark since c++20}}===
{{dsc begin}}
{{dsc header|bitset}}
{{dsc inc|cpp/utility/dsc bitset}}
{{dsc end}}

{{anchor|位操纵}}
===[[cpp/utility/bit|位操纵]] {{mark since c++20}}===
标头 {{header|bit}} 提供几个用于访问、操纵和处理单独的位和位序列的函数模板。可以通过 {{c/core|std::endian}} 设施来探知标量类型的字节序（[[cpp/types/endian|端序]]）。

{{anchor|函数对象}}
===[[cpp/utility/functional|函数对象]] {{mark since c++11}}===
部分函数应用（如 {{lc|std::bind}}）及相关工具：用于绑定的工具，如 {{lc|std::ref}} 与 {{lc|std::placeholders}}、多态函数包装器：{{lc|std::function}}、预定义函数对象（如 {{lc|std::plus}}、{{lc|std::equal_to}}）、成员指针到函数转换器 {{lc|std::mem_fn}}。

{{anchor|散列支持}}
===[[cpp/utility/hash|散列支持]] {{mark since c++11}}===
{{dsc begin}}
{{dsc header|functional}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc end}}

===参阅===
{{dsc begin}}
{{dsc see c|c/utility|工具库|nomono=true}}
{{dsc end}}

{{langlinks|ar|cs|de|en|es|fr|it|ja|pl|pt|ru|tr}}