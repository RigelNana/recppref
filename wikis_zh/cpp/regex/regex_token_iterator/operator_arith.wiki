{{cpp/regex/regex_token_iterator/title|operator++, operator++{{small|(int)}}}}
{{cpp/regex/regex_token_iterator/navbar}}
{{dcl begin}}
{{dcl|since=c++11|1=
regex_token_iterator&amp; operator++();
}}
{{dcl|since=c++11|1=
regex_token_iterator operator++( int );
}}
{{dcl end}}

令迭代器前进到下个子匹配。

{{todo|更好的解释。例如，{{tt|subs}} 为仅用于阐释的匹配子表达式的向量。}}

若 {{c|*this}} 为后缀迭代器，则设置 {{c|*this}} 为序列尾迭代器。

否则，若 {{c|N + 1 &lt; subs.size()}}，则自增 N 并设置结果为当前匹配的地址。

否则，设置 {{tt|N}} 为 {{c|0}} 并自增 {{tt|position}}。若 {{tt|position}} 不是序列尾迭代器，则运算符将结果设置为当前匹配的地址。

否则，若存储于 {{tt|subs}} 中的任何值等于 {{c|-1}} 且 {{cc|prev-&gt;suffix().length()}} 非 {{c|0}}，则运算符设置 {{tt|*this}} 为指向范围 [{{c|prev-&gt;suffix().first}}, {{c|prev-&gt;suffix().second}}) 的后缀迭代器。

否则，设置 {{c|*this}} 为序列尾迭代器。

若迭代器是序列尾迭代器则行为未定义。

===参数===
（无）

===返回值===
@1@ {{c|*this}}

@2@ 迭代器的先前值。

{{langlinks|de|en|es|ja|ru}}