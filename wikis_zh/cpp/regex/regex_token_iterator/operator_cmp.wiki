{{cpp/regex/regex_token_iterator/title|operator{{==}}, operator!{{=}}}}
{{cpp/regex/regex_token_iterator/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|1=
bool operator==( const regex_token_iterator&amp; other ) const;
}}
{{dcl|num=2|since=c++11|until=c++20|1=
bool operator!=( const regex_token_iterator&amp; other ) const;
}}
{{dcl end}}

检查 {{c|*this}} 与 {{c|other}} 是否等价。

以下情况下，两个正则表达式记号迭代器相等：

@a@ 它们都是序列尾迭代器。

@b@ 它们都是后缀迭代器且后缀相等。

@c@ 它们都不是序列尾或后缀迭代器且：

::* {{c|1=position == other.position}}
::* {{c|1=N == other.N}}
::* {{c|1=subs == other.subs}}

@1@ 检查 {{c|*this}} 是否''等于'' {{c|other}}。

@2@ 检查 {{c|*this}} 是否''不等于'' {{c|other}}。

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

{{todo|更好的解释。比如，{{tt|subs}} 是仅用于阐释的匹配子表达式的向量。}}

===参数===
{{par begin}}
{{par|other|要比较的另一正则表达式记号迭代器}}
{{par end}}

===返回值===
@1@ 若 {{c|*this}} ''等于'' {{c|other}} 则为 {{c|true}}，否则为 {{c|false}}。

@2@ 若 {{c|*this}} ''不等于'' {{c|other}} 则为 {{c|true}}，否则为 {{c|false}}。

{{langlinks|de|en|es|ja|ru}}