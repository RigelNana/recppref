{{cpp/regex/regex_traits/title|lookup_collatename}}
{{cpp/regex/regex_traits/navbar}}
{{ddcl|1=
template&lt; class ForwardIt &gt;
string_type lookup_collatename( ForwardIt first, ForwardIt last ) const;
}}

若字符序列 {{range|first|last}} 表示当前感染的本地环境中的某个合法校排元素的名称，则返回该校排元素之名。否则，返回空字符串。

校排元素是在 POSIX 正则表达式的 {{tt|[.}} 与 {{tt|.]}} 之间找到的符号。例如，{{tt|[.a.]}} 在 C 本地环境中匹配字符 {{tt|a}}。而 {{tt|[.tilde.]}} 在 C 本地环境中匹配 {{tt|~}}。{{tt|[.ch.]}} 在捷克语本地环境中匹配双标符 {{tt|ch}}，但在大多数其他本地环境中生成错误码为 {{lc|std::regex_constants::error_collate}} 的 {{lc|std::regex_error}}。

===参数===
{{par begin}}
{{par|first, last|一对迭代器，确定表示校排元素名的字符序列}}
{{par hreq}}
{{par req named|ForwardIt|ForwardIterator}}
{{par end}}

===返回值===
被指名校排元素作为字符串的表示。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;

struct noisy_traits : std::regex_traits&lt;char&gt;
{
    template&lt;class Iter&gt;
    string_type lookup_collatename(Iter first, Iter last) const
    {
        string_type result = regex_traits::lookup_collatename(first, last);
        std::cout &lt;&lt; "regex_traits&lt;&gt;::lookup_collatename(\""
                  &lt;&lt; string_type(first, last)
                  &lt;&lt; "\") 返回 \"" &lt;&lt; result &lt;&lt; "\"\n";
        return result;
    }
};

int main()
{
    std::string str = "z{{!}}}a"; // C 本地环境对照顺序： x,y,z,{,{{!}},},~
    std::basic_regex&lt;char, noisy_traits&gt; re("[x-[.tilde.]]*a", std::regex::basic);
    std::cout &lt;&lt; std::boolalpha &lt;&lt; std::regex_match(str, re) &lt;&lt; '\n';
}
|p=true
|output=
regex_traits&lt;&gt;::lookup_collatename("tilde") 返回 "~"
true
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}