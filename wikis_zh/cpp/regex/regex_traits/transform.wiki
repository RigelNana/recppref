{{cpp/regex/regex_traits/title|transform}}
{{cpp/regex/regex_traits/navbar}}
{{dcl begin}}
{{dcl|1=
template&lt; class ForwardIt &gt;
string_type transform( ForwardIt first, ForwardIt last) const;
}}
{{dcl end}}

获得字符序列 {{range|first|last}} 的排序键，满足若排序键以 {{c|operator&lt;}} 小于另一排序键，则在当前浸染的本地环境的校排顺序中，产生第一排序键的字符序列优先于产生第二排序键的字符序列。

例如，在设置正则表达式标志 {{lc|std::regex_constants::collate}} 时，若 {{c|1=traits.transform("a") &lt;= traits.transform(c1) &lt;= traits.transform("b")}} 则序列 {{tt|[a-b]}} 会匹配字符 {{tt|c1}}。注意此函数接收字符序列为实参，以适应定义为如 {{c|[}}{{c|[.ae.]-d]}} 的范围。

对于某个构造为 {{c|string_type str(first, last)}} 的临时字符串 {{tt|str}}，{{lc|std::regex_traits}} 的标准库特化返回 {{c|std::use_facet&lt;std::collate&lt;CharT&gt;&gt;(getloc()).transform(str.data(), str.data() + str.length())}}。

===参数===
{{par begin}}
{{par|first, last|一对{{named req|ForwardIterator|向前迭代器}}，确定要比较的字符序列}}
{{par hreq}}
{{par req named|ForwardIt|ForwardIterator}}
{{par end}}

===返回值===
字符序列 {{range|first|last}} 在当前浸染的本地环境中的校排键。

===示例===
{{example}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}