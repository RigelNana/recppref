{{cpp/regex/regex_traits/title|lookup_classname}}
{{cpp/regex/regex_traits/navbar}}
{{ddcl|1=
template&lt; class ForwardIt &gt;
char_class_type lookup_classname( ForwardIt first,
                                  ForwardIt last,
                                  bool icase = false ) const;
}}

如果字符序列 {{range|first|last}} 表示当前浸染的本地环境中合法的字符类名称（即正则表达式中 {{tt|[:}} 与 {{tt|:]}} 之间的字符串），那么返回表示此字符类的实现定义值。否则，返回零。

如果形参 {{c|icase}} 是 {{c|true}}，那么字符类忽略字符大小写，例如带 {{lc|std::regex_constants::icase}} 的正则表达式 {{tt|[:lower:]}} 生成以 {{range|first|last}} 指示字符串 {{c|"lower"}}，且 {{c|1=icase == true}} 的 {{c/core|std::regex_traits&lt;&gt;::lookup_classname()}} 调用。此调用返回与带 {{c|1=icase == false}} 的正则表达式 {{tt|[:alpha:]}} 所生成者相同位掩码。

{{c/core|std::regex_traits&lt;char&gt;}} 和 {{c/core|std::regex_traits&lt;wchar_t&gt;}} 始终能够分别辨认下列窄字符类名和宽字符类名，并返回通过浸染的本地环境的 {{lc|std::ctype}} 平面所获得的匹配分类所对应的如下分类（有 {{c|1=icase == false}}）：

{|class="wikitable" style="text-align: center;"
|-
!colspan=2|{{nbsp|2}}字符类名{{nbsp|2}}
!rowspan=2|{{nbsp|2}}{{lc|std::ctype}} 分类{{nbsp|2}}
|-
!窄
!宽
|-
|{{c|"alnum"}}
|{{c|L"alnum"}}
|{{lc|std::ctype_base::alnum}}
|-
|{{c|"alpha"}}
|{{c|L"alpha"}}
|{{lc|std::ctype_base::alpha}}
|-
|{{c|"blank"}}
|{{c|L"blank"}}
|{{lc|std::ctype_base::blank}}
|-
|{{c|"cntrl"}}
|{{c|L"cntrl"}}
|{{lc|std::ctype_base::cntrl}}
|-
|{{c|"digit"}}
|{{c|L"digit"}}
|{{lc|std::ctype_base::digit}}
|-
|{{c|"graph"}}
|{{c|L"graph"}}
|{{lc|std::ctype_base::graph}}
|-
|{{c|"lower"}}
|{{c|L"lower"}}
|{{lc|std::ctype_base::lower}}
|-
|{{c|"print"}}
|{{c|L"print"}}
|{{lc|std::ctype_base::print}}
|-
|{{c|"punct"}}
|{{c|L"punct"}}
|{{lc|std::ctype_base::punct}}
|-
|{{c|"space"}}
|{{c|L"space"}}
|{{lc|std::ctype_base::space}}
|-
|{{c|"upper"}}
|{{c|L"upper"}}
|{{lc|std::ctype_base::upper}}
|-
|{{c|"xdigit"}}
|{{c|L"xdigit"}}
|{{lc|std::ctype_base::xdigit}}
|-
|{{c|"d"}}
|{{c|L"d"}}
|{{lc|std::ctype_base::digit}}
|-
|{{c|"s"}}
|{{c|L"s"}}
|{{lc|std::ctype_base::space}}
|-
|{{c|"w"}}
|{{c|L"w"}}
|{{lc|std::ctype_base::alnum}}&lt;br&gt;可附带 {{c|'_'}}
|}

对字符串 {{c|"w"}} 返回的分类可以准确地与 {{c|"alnum"}} 相同，此时 {{lc|isctype()}} 会显式加上 {{c|'_'}}。

系统提供的本地环境可提供额外分类，如 {{lc|"jdigit"}} 或 {{lc|"jkanji"}}（此时也可以通过 {{lc|std::wctype}} 访问它们）。

===参数===
{{par begin}}
{{par|first, last|一对迭代器，确定表示字符类名的字符序列}}
{{par|icase|如果是 {{c|true}}，那么忽略字符分类中的大小写区别}}
{{par hreq}}
{{par req named|ForwardIt|ForwardIterator}}
{{par end}}

===返回值===
以给定的字符类确定的表示字符分类的位掩码，或在类名未知时返回 {{c|char_class_type()}}。

===示例===
{{cpp/regex/isctype example}}

===参阅===
{{dsc begin}}
{{dsc mem fun|cpp/regex/regex_traits/isctype|指示字符类中的成员关系指示}}
{{dsc inc|cpp/string/wide/dsc wctype}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}