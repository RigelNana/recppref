{{cpp/regex/sub_match/title|compare}}
{{cpp/regex/sub_match/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
int compare( const sub_match&amp; m ) const;
}}
{{dcl|num=2|since=c++11|
int compare( const string_type&amp; s ) const;
}}
{{dcl|num=3|since=c++11|
int compare( const value_type* c ) const;
}}
{{dcl end}}

@1@ 通过直接比较其底层字符序列比较两个 {{tt|sub_match}}。等价于 {{c|str().compare(m.str())}}。

@2@ 比较 {{tt|sub_match}} 与 {{lc|std::basic_string}}。等价于 {{c|str().compare(s)}}。

@3@ 比较 {{tt|sub_match}} 与 {{c|s}} 所指向的底层字符类型的空终止序列。等价于 {{c|str().compare(c)}}。

===参数===
{{par begin}}
{{par|m|到另一 {{tt|sub_match}} 的引用}}
{{par|s|到要比较的字符串的引用}}
{{par|c|指向要比较的底层 {{tt|value_type}} 的空终止序列的指针}}
{{par end}}

===返回值===
若此 {{tt|sub_match}} ''小于''{{sep}}另一字符序列则为小于零的值，若两个底层字符序列相等则为零，若此 {{tt|sub_match}} ''大于''{{sep}}另一字符序列则为大于零的值。

===注解===
应用代码很少直接使用此函数。它们替而使用非成员比较运算符之一。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc compare}}
{{dsc inc|cpp/regex/sub_match/dsc str}}
{{dsc inc|cpp/regex/sub_match/dsc operator_cmp}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}