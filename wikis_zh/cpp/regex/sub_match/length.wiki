{{cpp/regex/sub_match/title|length}}
{{cpp/regex/sub_match/navbar}}
{{ddcl|
difference_type length() const;
}}

返回匹配中的字符数。

===返回值===
若匹配合法则为 {{c|std::distance(first, second)}}，否则为 {{c|0}}。

===复杂度===
常数。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;
 
int main()
{
    std::string sentence{"Quick red fox jumped over a lazy cow."};
    const std::regex re{"([A-z]+) ([a-z]+) ([a-z]+) ([a-z]+)"};
    std::smatch words;
    std::regex_search(sentence, words, re);
    for (const auto&amp; m : words)
        std::cout &lt;&lt; '[' &lt;&lt; m &lt;&lt; "], length = " &lt;&lt; m.length() &lt;&lt; '\n';
}

|output=
[Quick red fox jumped], length = 20
[Quick], length = 5
[red], length = 3
[fox], length = 3
[jumped], length = 6
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}