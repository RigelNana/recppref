{{cpp/regex/sub_match/title|operator string_type|str}}
{{cpp/regex/sub_match/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
operator string_type() const;
}}
{{dcl|num=2|1=
string_type str() const;
}}
{{dcl end}}

转换为底层 {{lc|std::basic_string}} 类型对象。

第一版本为隐式转换，第二版本为显式。

===参数===
（无）

===返回值===
返回作为底层 {{lc|std::basic_string}} 类型对象的匹配字符序列。若 {{tt|matched}} 成员为 {{c|false}} 则返回空字符串。

===复杂度===
与底层字符序列的长度成线性。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;

int main()
{
    const std::string html{R"("&lt;a href="https://cppreference.com/"&gt;)"};
    const std::regex re{"(http{{!}}https{{!}}ftp)://([a-z]+)\\.([a-z]{3})"};
    std::smatch parts;
    std::regex_search(html, parts, re);
    for (std::ssub_match const&amp; sub : parts)
    {
        const std::string s = sub; // (1) 隐式转换
        assert(s == sub.str());    // (2)
        std::cout &lt;&lt; s &lt;&lt; '\n';
    }
}
|output=
https://cppreference.com
https
cppreference
com
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}