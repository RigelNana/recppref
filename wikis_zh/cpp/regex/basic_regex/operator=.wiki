{{cpp/regex/basic_regex/title|operator{{=}}}}
{{cpp/regex/basic_regex/navbar}}
{{dcl begin}}
{{dcl header|regex}}
{{dcl|num=1|since=c++11|1=
basic_regex&amp; operator=( const basic_regex&amp; other );
}}
{{dcl|num=2|since=c++11|1=
basic_regex&amp; operator=( basic_regex&amp;&amp; other ) noexcept;
}}
{{dcl|num=3|since=c++11|1=
basic_regex&amp; operator=( const CharT* ptr );
}}
{{dcl|num=4|since=c++11|1=
basic_regex&amp; operator=( std::initializer_list&lt;CharT&gt; il );
}}
{{dcl|num=5|since=c++11|1=
template&lt; class ST, class SA &gt;
basic_regex&amp; operator=( const std::basic_string&lt;CharT,ST,SA&gt;&amp; p );
}}
{{dcl end}}

赋值内容。

@1@ 复制赋值运算符。赋值 {{c|other}} 的内容。等价于 {{c|assign(other);}}。

@2@ 移动赋值运算符。用移动语义赋值 {{c|other}} 的内容。操作后 {{c|other}} 处于合法但未指定的状态。等价于 {{c|assign(other);}}。

@3@ 赋值 {{c|ptr}} 所指向的空终止字符串。等价于 {{c|assign(ptr);}}。

@4@ 赋值初始化式列表 {{c|il}} 中含有的字符。等价于 {{c|assign(il);}}。

@5@ 赋值字符串 {{c|p}} 的内容。等价于 {{c|assign(p);}}。

===参数===
{{par begin}}
{{par|other|另一正则表达式对象}}
{{par|ptr|指向空终止字符串的指针}}
{{par|il|含要赋值的字符的初始化式列表}}
{{par|p|含要赋值的字符的字符串}}
{{par end}}

===返回值===
{{c|*this}}

===异常===
@1@ {{cpp/impldef exception item}}

@3-5@ 若提供的正则表达式非法则抛出 {{lc|std::regex_error}}。该情况下不修改对象。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/regex/basic_regex/dsc assign}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}