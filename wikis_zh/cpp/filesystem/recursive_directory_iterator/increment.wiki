{{cpp/filesystem/recursive_directory_iterator/title|operator++|increment}}
{{cpp/filesystem/recursive_directory_iterator/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
recursive_directory_iterator&amp; operator++();
}}
{{dcl|num=2|since=c++17|1=
recursive_directory_iterator&amp; increment( std::error_code&amp; ec );
}}
{{dcl end}}

前进迭代器到下个条目。使所有 {{c|*this}} 的先前值的副本失效。

若当前被迭代目录没有剩下更多条目，则回撤迭代到父目录。若父目录亦无能迭代的兄弟条目，则重复此过程。若抵达已被递归迭代的目录层级的父目录（在 {{c|1=depth() == 0)}} 无可选择条目），则设置 {{c|*this}} 为尾迭代器。

否则，若 {{c|*this}} 代表目录，则若满足下列条件则迭代进入它：

* {{lc|disable_recursion_pending()}} 在此次自增前未被调用，即 {{c|1=recursion_pending() == true}}。
* 目录不是符号链接或启用跟随符号链接，即至少下列之一为 true：
**{{c|1=!is_symlink((*this)-&gt;symlink_status())}}。
**{{c|1=(options() &amp; directory_options::follow_directory_symlink) != directory_options::none)}}。

===参数===
{{par begin}}
{{par | ec | 要存储错误状态的错误码}}
{{par end}}

===返回值===
{{c|*this}}

===异常===
{{cpp/filesystem/error handling|throw=1/2}}

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|dr=3013|wg=lwg|std=C++17|before={{tt|error_code}} 重载被标记为 noexcept 但能分配内存|after=移除 noexcept}}
{{dr list end}}

{{langlinks|de|en|es|ja|ru}}