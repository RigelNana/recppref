{{cpp/filesystem/directory_entry/title|exists}}
{{cpp/filesystem/directory_entry/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
bool exists() const;
}}
{{dcl|num=2|since=c++17|1=
bool exists( std::error_code&amp; ec ) const noexcept;
}}
{{dcl end}}

检查所指的对象是否存在。各自等效于返回：
@1@ {{c|std::filesystem::exists(status())}}。
@2@ {{c|std::filesystem::exists(status(ec))}}。

注意，{{rlpf|status}} 将跟随符号链接到其目标。

===参数===
{{par begin}}
{{par | ec | 不抛出重载中报告错误的输出形参 }}
{{par end}}

===返回值===
若被指代文件系统对象存在则为 {{c|true}}。

===异常===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===示例===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;

int main()
{
    for (auto const str:
    {
        "/usr/bin/cat",
        "/usr/bin/mouse",
        "/usr/bin/python",
        "/usr/bin/bison",
        "/usr/bin/yacc",
        "/usr/bin/c++",
    })
    {
        std::filesystem::directory_entry entry{str};

        std::cout &lt;&lt; "directory entry " &lt;&lt; entry
                  &lt;&lt; (entry.exists() ? " exists\n" : " does not exist\n");
    }
}
|p=true
|output=
// Output on a POSIX system:
directory entry "/usr/bin/cat" exist
directory entry "/usr/bin/mouse" does not exist
directory entry "/usr/bin/python" exists
directory entry "/usr/bin/bison" exists
directory entry "/usr/bin/yacc" does not exist
directory entry "/usr/bin/c++" exists
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc exists}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}