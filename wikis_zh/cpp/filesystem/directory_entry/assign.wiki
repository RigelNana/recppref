{{cpp/filesystem/directory_entry/title|assign}}
{{cpp/filesystem/directory_entry/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
void assign( const std::filesystem::path&amp; p );
}}
{{dcl|num=2|since=c++17|1=
void assign( const std::filesystem::path&amp; p, std::error_code&amp; ec );
}}
{{dcl end}}

复制新的内容到 {{tt|directory_entry}} 对象。设置到 {{c|p}} 的路径并调用 {{rlpt|refresh}} 更新缓存的属性。若发生错误，则缓存属性的值是未指定的。

此函数不会向文件系统提交任何更改。

===参数===
{{par begin}}
{{par | p | {{tt|directory_entry}} 将指代的文件系统对象的路径 }}
{{par | ec | 不抛出重载中报告错误的输出形参 }}
{{par end}}

===返回值===
（无）

===异常===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===示例===
{{example|code=
#include &lt;filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;

void print_entry_info(const std::filesystem::directory_entry&amp; entry)
{
    if (std::cout &lt;&lt; "条目 " &lt;&lt; entry; not entry.exists())
    {
        std::cout &lt;&lt; " 不存在于文件系统\n";
        return;
    }
    std::cout &lt;&lt; " 是";
    if (entry.is_directory())
        std::cout &lt;&lt; "目录\n";
    if (entry.is_regular_file())
        std::cout &lt;&lt; "常规文件\n";
    /*...*/
}

int main()
{
    std::filesystem::current_path(std::filesystem::temp_directory_path());

    std::filesystem::directory_entry entry{std::filesystem::current_path()};
    print_entry_info(entry);

    std::filesystem::path name{"cppreference.html"};
    std::ofstream{name} &lt;&lt; "C++";

    std::cout &lt;&lt; "entry.assign();\n";
    entry.assign(entry/name);
    print_entry_info(entry);

    std::cout &lt;&lt; "remove(entry);\n";
    std::filesystem::remove(entry);
    print_entry_info(entry); // 条目仍含有旧“状态”

    std::cout &lt;&lt; "entry.assign();\n";
    entry.assign(entry); // 也可仅调用 entry.refresh()
    print_entry_info(entry);
}
|p=true
|output=
条目 "/tmp" 是目录
entry.assign();
条目 "/tmp/cppreference.html" 是常规文件
remove(entry);
条目 "/tmp/cppreference.html" 是常规文件
entry.assign();
条目 "/tmp/cppreference.html" 不存在于文件系统
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/directory_entry/dsc operator{{=}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}