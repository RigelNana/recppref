{{cpp/filesystem/title|hard_link_count}}
{{cpp/filesystem/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|1=
std::uintmax_t hard_link_count( const std::filesystem::path&amp; p );
}}
{{dcl|num=2|since=c++17|1=
std::uintmax_t hard_link_count( const std::filesystem::path&amp; p,
                                std::error_code&amp; ec ) noexcept;
}}
{{dcl end}}

返回路径 {{c|p}} 所标识的文件系统对象的硬链接数。

无抛出重载在错误时返回 {{c|static_cast&lt;uintmax_t&gt;(-1)}}。

===参数===
{{par begin}}
{{par | p | 要检测的路径}}
{{par | ec | 无抛出重载中报告错误的输出形参}}
{{par end}}

===返回值===
{{c|p}} 的硬链接数

===异常===
{{cpp/filesystem/error_handling|p|throw=1/2}}

===示例===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;
namespace fs = std::filesystem;

int main()
{
    // 在 POSIX 风格文件系统上，每个目录至少有 2 个硬链接：
    // 其自身与特殊成员名 "."
    fs::path p = fs::current_path();
    std::cout &lt;&lt; "当前路径的硬链接数为 "
              &lt;&lt; fs::hard_link_count(p) &lt;&lt; '\n';

    // 每个 ".." 是到父目录的硬链接，故对任何目录的硬链接总数是 2 加上直接子目录数
    p = fs::current_path() / ".."; // 每个点点都是到父目录的硬链接
    std::cout &lt;&lt; ".. 的硬链接数为 "
              &lt;&lt; fs::hard_link_count(p) &lt;&lt; '\n';
}
|p=true
|output=
当前路径的硬链接数为 2
.. 的硬链接数为 3
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc create_hard_link}}
{{dsc inc|cpp/filesystem/directory_entry/dsc hard_link_count}}
{{dsc end}}

{{langlinks|en|es|ja}}