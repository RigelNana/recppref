{{cpp/filesystem/path/title|operator{{=}}}}
{{cpp/filesystem/path/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
path&amp; operator=( const path&amp; p );
}}
{{dcl|num=2|since=c++17|1=
path&amp; operator=( path&amp;&amp; p ) noexcept;
}}
{{dcl|num=3|since=c++17|1=
path&amp; operator=( string_type&amp;&amp; source );
}}
{{dcl|num=4|since=c++17|1=
template&lt; class Source &gt;
path&amp; operator=( const Source&amp; source );
}}
{{dcl end}}

@1@ 以原生和通用格式均与 {{c|p}} 相同的路径名替换 {{c|*this}} 的内容。
@2@ 以原生和通用格式均与 {{c|p}} 相同的路径名替换 {{c|*this}} 的内容，可能使用移动语义：{{c|p}} 留在合法但未指定的状态。
@3@ 以从受检测格式的 {{c|source}} 构造的新 path 值替换 {{c|*this}} 的内容。{{c|source}} 留合法但未指定的状态。等价于 {{c|assign(std::move(source))}}。
@4@ 从受检测格式的 {{tt|source}}，如同以 [[cpp/filesystem/path/path|path 构造函数]]的重载 {{v|4}} 构造的新 path 值替换 {{c|*this}} 的内容。等价于 {{c|assign(source)}}。

{{cpp/filesystem/path/param source constraints|4}}

===参数===
{{par begin}}
{{par | p | 要赋值的路径}}
{{par | source | {{lc|std::basic_string}}，{{lc|std::basic_string_view}}，指向空终止字符/宽字符串的指针，或指向空终止字符/宽字符序列的输入迭代器。字符类型必须是 {{c|char}}{{rev inl|since=c++20|、{{c|char8_t}}}}、{{c|char16_t}}、{{c|char32_t}}、{{c|wchar_t}} 之一}}
{{par end}}

===返回值===
{{c|*this}}

===参阅===
{{example
|code=
#include &lt;filesystem&gt;
namespace fs = std::filesystem;

int main()
{
    fs::path p = "C:/users/abcdef/AppData/Local";
    p = p / "Temp"; // 移动赋值
    const wchar_t* wstr = L"D:/猫.txt";
    p = wstr; // 从源赋值
}
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item | wg=lwg | dr=3244 | std=C++17 | before=缺失 {{tt|Source}} 不能为 {{tt|path}} 的制约 | after=已添加 }}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/path/dsc assign}}
{{dsc inc|cpp/filesystem/path/dsc constructor}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}