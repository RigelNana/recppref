{{cpp/filesystem/title|hash_value}}
{{cpp/filesystem/path/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|since=c++17|1=
std::size_t hash_value( const std::filesystem::path&amp; p ) noexcept;
}}
{{dcl end}}

===参数===
{{par begin}}
{{par | p| {{lc|std::filesystem::path}} 对象}}
{{par end}}

===返回值===
散列值，满足若对于两个路径有 {{c|1=p1 == p2}} 则 {{c|1=hash_value(p1) == hash_value(p2)}}。

返回值与 {{ltt|cpp/filesystem/path/hash|std::hash}} 一致。

===注解===
二个路径的相等是分离比较每个组分来确定的，故例如 {{c|"a//b"}} 等于 {{c|"a/b"}} 且拥有相同的 {{tt|hash_value}}。

{{tt|hash_value}} 源于 [https://www.boost.org/doc/libs/release/libs/filesystem/doc/index.htm Boost.filesystem] 库，其中它因与 boost.hash（在可用处调用[[cpp/language/adl|实参依赖查找]]所找到的 {{tt|hash_value}} 或 [https://www.boost.org/doc/libs/1_76_0/doc/html/hash/reference.html {{tt|boost::hash_value}}]）的互动能力得到使用。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;cstddef&gt;
#include &lt;filesystem&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;unordered_set&gt;
namespace fs = std::filesystem;

void show_hash(fs::path const&amp; p)
{
    std::cout &lt;&lt; std::hex &lt;&lt; std::uppercase &lt;&lt; std::setw(16)
              &lt;&lt; fs::hash_value(p) &lt;&lt; " : " &lt;&lt; p &lt;&lt; '\n';
}

int main()
{
    auto tmp1 = fs::path{"/tmp"};
    auto tmp2 = fs::path{"/tmp/../tmp"};
    assert(!(tmp1 == tmp2));
    assert(fs::equivalent(tmp1, tmp2));
    show_hash(tmp1);
    show_hash(tmp2);

    for (auto s : {"/a///b", "/a//b", "/a/c", "...", "..", ".", ""})
        show_hash(s);

    // 可与 unordered_* 容器一起工作的散列函数对象
    struct PathHash
    {
        std::size_t operator()(fs::path const&amp; p) const noexcept
        {
            return fs::hash_value(p);
        }
    };
    std::unordered_set&lt;fs::path, PathHash&gt; dirs{
        "/bin", "/bin", "/lib", "/lib", "/opt", "/opt", "/tmp", "/tmp/../tmp"};
    for (fs::path const&amp; p : dirs)
        std::cout &lt;&lt; p &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|p=true
|output=
6050C47ADB62DFE5 : "/tmp"
62795A58B69AD90A : "/tmp/../tmp"
FF302110C9991974 : "/a///b"
FF302110C9991974 : "/a//b"
FD6167277915D464 : "/a/c"
C42040F82CD8B542 : "..."
D2D30154E0B78BBC : ".."
D18C722215ED0530 : "."
               0 : ""
"/tmp/../tmp" "/opt" "/lib" "/tmp" "/bin"
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/path/dsc compare}}
{{dsc inc|cpp/filesystem/path/dsc operator_cmp}}
{{dsc inc|cpp/filesystem/dsc equivalent}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc inc|cpp/filesystem/path/dsc hash}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}