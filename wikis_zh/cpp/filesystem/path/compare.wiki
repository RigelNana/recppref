{{cpp/filesystem/path/title|compare}}
{{cpp/filesystem/path/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
int compare( const path&amp; p ) const noexcept;
}}
{{dcl|num=2|since=c++17|1=
int compare( const string_type&amp; str ) const;
int compare( std::basic_string_view&lt;value_type&gt; str ) const;
}}
{{dcl|num=3|since=c++17|1=
int compare( const value_type* s ) const;
}}
{{dcl end}}

比较 {{tt|path}} 与另一 {{tt|path}} 的词法表示。

@1@ 若 {{c|root_name().native().compare(p.root_name().native())}} 非零，则返回该值。
@@ 否则若 {{c|has_root_directory() !{{=}} p.has_root_directory()}}，则若 {{rlpf|has_path|has_root_directory}} 为 {{c|false}} 则返回小于零的值，否则返回大于零的值。
@@ 否则，若 {{tt|path}} 的相对部分 ({{rlpf|relative_path}}) 分别按字典序小于、等于或大于 {{tt|p}} 的相对部分 ({{c|p.relative_path()}})，则分别返回小于、等于或大于 {{math|0}} 的值。逐元素进行比较，如同从{{rlpf|begin}} 到 {{rlpf|begin|end}} 迭代 {{tt|path}}，并比较各元素的 {{rlpf|native}}。
@2@ 等价于 {{c|compare(path(str))}}。
@3@ 等价于 {{c|compare(path(s))}}。

===参数===
{{par begin}}
{{par | p | 要比较的 {{tt|path}}}}
{{par | str | 表示要比较的表示路径的字符串或字符串视图}}
{{par | s | 表示要比较的路径的空终止字符串}}
{{par end}}

===返回值===
若 {{tt|path}} 按字典序小于给定 {{tt|path}} 则为小于 {{math|0}} 的值。

若 {{tt|path}} 按字典序等于给定 {{tt|path}} 则为等于 {{math|0}} 的值。

若 {{tt|path}} 按字典序大于给定 {{tt|path}} 则为大于 {{math|0}} 的值。

===异常===
@2,3@ {{cpp/impldef exception item}}

===注解===
对于双路比较，[[cpp/filesystem/path/operator_cmp|二元运算符]]可能更适合。

===示例===
{{example
|code=
#include &lt;filesystem&gt;
#include &lt;iostream&gt;
#include &lt;string_view&gt;
namespace fs = std::filesystem;

void demo(fs::path p1, fs::path p2, std::string_view msg)
{
    std::cout &lt;&lt; p1;
    const int rc = p1.compare(p2); 
    if (rc &lt; 0)
        std::cout &lt;&lt; " &lt; ";
    else if (rc &gt; 0)
        std::cout &lt;&lt; " &gt; ";
    else
        std::cout &lt;&lt; " == ";
    std::cout &lt;&lt; p2 &lt;&lt; " \t: " &lt;&lt; msg &lt;&lt; '\n';
}

int main()
{
    demo("/a/b/", "/a/b/", "简单");
    demo("/a/b/", "/a/b/c", "简单");
    demo("/a/b/../b", "/a/b", "无规范转换");
    demo("/a/b", "/a/b/.", "无规范转换");
    demo("/a/b/", "a/c", "绝对路径按序在相对路径之后");
}
|output=
"/a/b/" == "/a/b/"      : 简单
"/a/b/" &lt; "/a/b/c"	: 简单
"/a/b/../b" &gt; "/a/b"	: 无规范转换
"/a/b" &lt; "/a/b/."	: 无规范转换
"/a/b/" &gt; "a/c"	        : 绝对路径按序在相对路径之后
}}


===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2936|std=C++17|before=直接比较所有路径元素|after=分开处理根名与根目录}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/path/dsc operator_cmp}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}