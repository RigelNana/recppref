{{cpp/filesystem/title|exists}}
{{cpp/filesystem/navbar}}
{{dcl begin}}
{{dcl header|filesystem}}
{{dcl|num=1|since=c++17|1=
bool exists( std::filesystem::file_status s ) noexcept;
}}
{{dcl|num=2|since=c++17|1=
bool exists( const std::filesystem::path&amp; p );
}}
{{dcl|num=3|since=c++17|1=
bool exists( const std::filesystem::path&amp; p, std::error_code&amp; ec ) noexcept;
}}
{{dcl end}}

检查给定的文件状态或路径是否对应已存在的文件或目录。

@1@ 等价于 {{c|1=status_known(s) &amp;&amp; s.type() != file_type::not_found}}。
@2@ 令 {{c|s}} 分别为如同以 {{c|status(p)}} 或 {{c|status(p, ec)}}（跟随符号链接）确定的 {{c|std::filesystem::file_status}}。返回 {{c|exists(s)}}。若 {{c|status_known(s)}} 则不抛出重载调用 {{c|ec.clear()}}。

===参数===
{{par begin}}
{{par | s |要检验的文件状态}}
{{par | p |要检验的路径}}
{{par | ec |不抛出重载中报告错误的输出形参}}
{{par end}}

===返回值===
若给定路径或文件状态对应存在的文件或目录，则返回 {{c|true}}，否则返回 {{c|false}}。

===异常===
{{cpp/filesystem/error_handling|p|throw=2/3}}

当对象不存在时并不抛出文件系统异常（使用返回值）。

===注解===
此函数提供的信息通常亦可作为目录迭代的副产物提供。在迭代中，调用 {{c|exists(*iterator)}} 的效率低于 {{c|exists(iterator-&gt;status())}}。

===示例===
{{example
|code=
#include &lt;cstdint&gt;
#include &lt;filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
namespace fs = std::filesystem;

void demo_exists(const fs::path&amp; p, fs::file_status s = fs::file_status{})
{
    std::cout &lt;&lt; p;
    if (fs::status_known(s) ? fs::exists(s) : fs::exists(p))
        std::cout &lt;&lt; " exists\n";
    else
        std::cout &lt;&lt; " does not exist\n";
}

int main()
{
    const fs::path sandbox{"sandbox"};
    fs::create_directory(sandbox);
    std::ofstream{sandbox/"file"}; // 创建常规文件
    fs::create_symlink("non-existing", sandbox/"symlink");

    demo_exists(sandbox);

    for (const auto&amp; entry : fs::directory_iterator(sandbox))
        demo_exists(entry, entry.status()); // 使用来自 directory_entry 的缓存状态

    fs::remove_all(sandbox);
}
|output=
"sandbox" exists
"sandbox/symlink" does not exist
"sandbox/file" exists
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/filesystem/dsc status}}
{{dsc inc|cpp/filesystem/dsc file_status}}
{{dsc inc|cpp/filesystem/directory_entry/dsc exists}}
{{dsc end}}

{{langlinks|en|es|ja}}