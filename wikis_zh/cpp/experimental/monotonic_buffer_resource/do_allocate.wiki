{{cpp/experimental/pmr/monotonic_buffer_resource/title|do_allocate}}
{{cpp/experimental/lib extensions/pmr/monotonic_buffer_resource/navbar}}
{{ddcl|since=libfund_ts|1=
virtual void* do_allocate( std::size_t bytes, std::size_t alignment );
}}

分配存储。

如果 ''当前缓冲区'' 有足够的未使用空间适配指定的大小和对齐，则从当前缓冲区分配要返回的块。

否则，此函数通过调用 {{tt|upstream_resource()-&gt;allocate(n, m)}} 分配新的缓冲区，其中 {{tt|n}} 不小于 {{c|bytes}} 和 ''下一个缓冲区大小'' 中的较大值，且 and {{tt|m}} 不小于 {{c|alignment}}。它将新缓冲区设置为其''当前缓冲区''，以实现定义的增长率（不必是整数）增加 ''下一个缓冲区大小''，然后从新分配的缓冲区重分配要返回的块。

===返回值===
指向至少 {{c|bytes}} 字节大小的已分配存储的指针，若支持对齐 {{c|alignment}} 则按其对齐，否则对齐到 {{c|alignof(std::max_align_t)}}。

===异常===
除了调用上游内存资源的 {{tt|allocate()}} 所抛出之外不抛出异常。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/memory_resource/dsc allocate}}
{{dsc inc|cpp/experimental/memory_resource/dsc do_allocate}}
{{dsc end}}