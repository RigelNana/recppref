{{cpp/experimental/title|any}}
{{cpp/experimental/any/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''已并入 ISO C++''' 本页面描述的功能，已于 2016 年三月并入 ISO C++ 标准主线，参见 {{ltt|cpp/utility/any|std::any}} {{mark since c++17}}}}
{{ddcl|header=experimental/any|since=libfund_ts|
class any;
}}

类 {{tt|any}} 描述用于任何类型的单个值的类型安全容器。

@1@ 类 {{tt|any}} 的对象存储任何满足构造函数要求的类型的一个实例或为空，而这被称为 {{tt|any}} 类对象的''状态''。存储的实例被称作所含对象。若两个状态均为空，或均为非空且其所含对象等价，则两个状态等价。

@2@ 非成员 {{tt|any_cast}} 函数提供对所含对象的类型安全访问。

鼓励实现避免小对象的动态分配，但这种优化仅可以应用于 {{lc|std::is_nothrow_move_constructible}} 对其返回 {{c|true}} 的类型。 

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/experimental/any/dsc constructor}}
{{dsc inc|cpp/experimental/any/dsc operator{{=}}}}
{{dsc inc|cpp/experimental/any/dsc destructor}}

{{dsc h2|修改器}}
{{dsc inc|cpp/experimental/any/dsc clear}}
{{dsc inc|cpp/experimental/any/dsc swap}}

{{dsc h2|观察器}}
{{dsc inc|cpp/experimental/any/dsc empty}}
{{dsc inc|cpp/experimental/any/dsc type}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/experimental/any/dsc swap2}}
{{dsc inc|cpp/experimental/any/dsc any_cast}}
{{dsc end}}

===辅助类===
{{dsc begin}}
{{dsc inc|cpp/experimental/any/dsc bad_any_cast}}
{{dsc end}}