{{cpp/experimental/propagate_const/title|swap}}
{{cpp/experimental/lib extensions 2/propagate_const/navbar}}

{{ddcl|since=libfund_ts_2|1= 
constexpr void swap( propagate_const &amp; pt ) noexcept(/* 见下文 */);
}}

交换被包装指针和 {{tt|pt}} 的被包装指针。令 {{tt|t_}} 指代私有数据成员，即被包装的指针式对象，则此函数等价于 {{c|swap(t_, pt.t_)}}，其中对 {{tt|swap}} 的重载决议在 {{lc|std::swap}} 与通常查找规则所找到的任何声明之间进行，如在{{named req|Swappable}}中描述。

若 {{tt|T}} 的左值不满足{{named req|Swappable}}则行为未定义。

===参数===
{{par begin}}
{{par | pt  |要与之交换的另一 {{tt|propagate_const}} 对象}}
{{par end}}

===异常===
{{rev begin}}
{{rev|since=libfund_ts_2|
{{noexcept|noexcept(swap(t_, pt.t_))}}&lt;!-- LWG 2561/3413 --&gt;异常说明中标识符 {{tt|swap}} 的查找找到上述的重载，并且不找到成员函数自身，使得异常说明等价于 C++17 {{lc|std::is_nothrow_swappable}}。
}}
{{rev|since=libfund_ts_3|
{{noexcept|std::is_nothrow_swappable_v&lt;T&gt;}}
}}
{{rev end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3413|std=LFTSv2|before=异常说明为谬构|after=使之为良构}}
{{dr list end}}

{{langlinks|en|es|ja}}