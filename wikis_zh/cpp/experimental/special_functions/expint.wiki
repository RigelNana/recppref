{{cpp/title|expint|expintf|expintl}}
{{cpp/experimental/special_math/navbar}}
{{dcl begin}}
{{dcl|num=1|
double      expint( double arg );
double      expint( float arg );
double      expint( long double arg );
float       expintf( float arg );
long double expintl( long double arg );
}}
{{dcl|num=2|
double      expint( IntegralType arg );
}}
{{dcl end}}

@1@ 计算 {{c|arg}} 的[[enwiki:Exponential integral|指数积分]]。
@2@ 一组接受任何[[cpp/types/is_integral|整数类型]]实参的重载或函数模板。等价于将实参转型为 {{c|double}} 后的 {{v|1}}。

{{cpp/experimental/special_math/macro_note|expint}}

===参数===
{{par begin}}
{{par|arg|浮点或[[cpp/types/is_integral|整数类型]]的值}}
{{par end}}

===返回值===
如果未发生错误，则返回 {{c|arg}} 的指数积分的值，即 {{math|-{{minteg|-arg|∞|{{mfrac|{{mexp|-t}}|t}}d''t''}}}}。

===错误处理===
根据 [[cpp/numeric/math/math_errhandling|math_errhandling]] 的规定进行错误报告。
* 如果实参为 NaN，则返回 NaN 但不报告定义域错误。
* 如果实参为 ±0，则返回 -∞。

===注解===
不支持 TR 29124 但支持 TR 19768 的实现，在头文件 {{tt|tr1/cmath}} 和命名空间 {{tt|std::tr1}} 中提供此函数。

此函数的实现也在 [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/expint/expint_i.html boost.math 中可用]。

===示例===
{{example
|(以 gcc 6.0 运行)
|code=
#define __STDCPP_WANT_MATH_SPEC_FUNCS__ 1
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "Ei(0) = " &lt;&lt; std::expint(0) &lt;&lt; '\n'
              &lt;&lt; "Ei(1) = " &lt;&lt; std::expint(1) &lt;&lt; '\n'
              &lt;&lt; "Gompetz constant = " &lt;&lt; -std::exp(1) * std::expint(-1) &lt;&lt; '\n';
}
|output=
Ei(0) = -inf
Ei(1) = 1.89512
Gompetz constant = 0.596347
}}

===外部链接===
[https://mathworld.wolfram.com/ExponentialIntegral.html Weisstein, Eric W. "Exponential Integral."] From MathWorld--A Wolfram Web Resource.

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}