{{cpp/experimental/title|lcm}}
{{cpp/experimental/lib_extensions_2/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''已并入 ISO C++''' 本页所描述的功能已于 2016 年 6 月并入 ISO C++ 标准主线，参见 {{ltt|cpp/numeric/lcm|std::lcm}} {{mark since c++17}}}}
{{dcl begin}}
{{dcl header|experimental/numeric}}
{{dcl|since=libfund_ts_2|
template&lt; class M, class N &gt;
constexpr std::common_type_t&lt;M, N&gt; lcm( M m, N n );
}}
{{dcl end}}

计算整数 {{c|m}} 和 {{c|n}} 的最小公倍数。

===参数===
{{par begin}}
{{par|m, n|整数值}}
{{par end}}

===返回值===
如果 {{c|m}} 或 {{c|n}} 为零，则返回零。否则返回 {{c|{{!}}m{{!}}}} 和 {{c|{{!}}n{{!}}}} 的最小公倍数。

===说明===
如果 {{tt|M}} 或 {{tt|N}} 不是整数类型，或者任何一个是（可能 cv 限定的）{{c|bool}}，则程序非良构。

如果 {{c|{{!}}m{{!}}}}、{{c|{{!}}n{{!}}}} 或 {{c|{{!}}m{{!}}}} 和 {{c|{{!}}n{{!}}}} 的最小公倍数无法表示为 {{tt|std::common_type_t&lt;M, N&gt;}} 类型的值，则其行为未定义。

===异常===
不抛出异常。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/dsc gcd}}
{{dsc end}}