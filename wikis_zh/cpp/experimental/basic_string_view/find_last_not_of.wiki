{{cpp/experimental/basic_string_view/title | find_last_not_of }}
{{cpp/experimental/basic_string_view/navbar}}
{{dcl begin}}
{{dcl | num=1 | since=libfund_ts |
constexpr size_type 
    find_last_not_of(basic_string_view v, size_type pos {{=}} npos) const noexcept;
}}
{{dcl | num=2 | since=libfund_ts |
constexpr size_type
    find_last_not_of(CharT c, size_type pos {{=}} npos) const noexcept;
}}
{{dcl | num=3 | since=libfund_ts |
constexpr size_type
    find_last_not_of(const CharT* s, size_type pos, size_type count) const;
}}
{{dcl | num=4 | since=libfund_ts |
constexpr size_type
    find_last_not_of(const CharT* s, size_type pos {{=}} npos) const;
}}
{{dcl end}}

查找最后的不等于给定字符序列中任何字符的字符。

@1@ 查找此视图中最后的不等于 {{tt|v}} 中任何字符的字符，从位置 {{tt|pos}} 开始。
@2@ 等价于 {{c|find_last_not_of(basic_string_view(&amp;c, 1), pos)}}。
@3@ 等价于 {{c|find_last_not_of(basic_string_view(s, count), pos)}}。
@4@ 等价于 {{c|find_last_not_of(basic_string_view(s), pos)}}。

===参数===
{{par begin}}
{{par | v | 要搜索的视图}}
{{par | pos | 从之开始搜索的位置}}
{{par | count | 要比较的字符串的长度}}
{{par | s | 指向要比较字符串的指针}}
{{par | ch | 要比较的字符}}
{{par end}} 

===返回值===
不等于给定字符串中任何字符的最末字符的位置，或当未找到这种字符时为 {{lc|npos}}。

===复杂度===
最差为 O({{tt|size()}} * {{tt|v.size()}})。

===参阅===
{{dsc begin}}
{{dsc inc | cpp/experimental/basic_string_view/dsc find}}
{{dsc inc | cpp/experimental/basic_string_view/dsc rfind}}
{{dsc inc | cpp/experimental/basic_string_view/dsc find_first_of}}
{{dsc inc | cpp/experimental/basic_string_view/dsc find_last_of}}
{{dsc inc | cpp/experimental/basic_string_view/dsc find_first_not_of}}
{{dsc end}}