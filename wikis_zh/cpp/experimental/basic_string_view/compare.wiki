{{cpp/experimental/basic_string_view/title | compare }}
{{cpp/experimental/basic_string_view/navbar}}
{{dcl begin}}
{{dcl | num=1 | since=libfund_ts |
constexpr int compare(basic_string_view v) const noexcept;
}}
{{dcl | num=2 | since=libfund_ts |
constexpr int compare(size_type pos1, size_type count1,
                      basic_string_view v) const
}}
{{dcl | num=3 | since=libfund_ts |
constexpr int compare(size_type pos1, size_type count1, basic_string_view v,
                      size_type pos2, size_type count2) const;
}}
{{dcl | num=4 | since=libfund_ts |
constexpr int compare(const CharT* s) const;
}}
{{dcl | num=5 | since=libfund_ts |
constexpr int compare(size_type pos1, size_type count1,
                      const CharT* s) const;
}}
{{dcl | num=6 | since=libfund_ts |
constexpr int compare(size_type pos1, size_type count1,
                      const CharT* s, size_type count2) const;
}}
{{dcl end}}

比较两个字符序列。

@1@要比较的序列的长度 {{tt|rlen}} 为 {{c|size()}} 和 {{c|v.size()}} 中的较小值。此函数通过调用 {{c|traits::compare(data(), v.data(), rlen)}} 来比较两个视图，并根据下表返回值：

{| class="wikitable" style="text-align:center;"
! colspan=2 | 条件
! 结果
! 返回值
|-
| colspan=2 style="text-align:left;" | {{tt|Traits::compare(data(), v.data(), {{spar|rlen}}) &lt; 0}}
| {{tt|this}} ''小于'' {{tt|v}}
| {{c|&lt;0}}
|-
| rowspan=3 | {{tt|Traits::compare(data(), v.data(), {{spar|rlen}}) {{==}} 0}}
| {{tt|size() &lt; v.size()}}
| {{tt|this}} ''小于'' {{tt|v}}
| {{c|&lt;0}}
|-
&lt;!-- --&gt;
| {{tt|size() {{==}} v.size()}}
| {{tt|this}} ''等于'' {{tt|v}}
| {{c|0}}
|-
&lt;!-- --&gt;
| {{tt|size() &gt; v.size()}}
| {{tt|this}} ''大于'' {{tt|v}}
| {{c|&gt;0}}
|-
| colspan=2 style="text-align:left;" | {{tt|Traits::compare(data(), v.data(), {{spar|rlen}}) &gt; 0}}
| {{tt|this}} ''大于'' {{tt|v}}
| {{c|&gt;0}}
|}

@2@ 等价于 {{c|substr(pos1, count1).compare(v)}}。
@3@ 等价于 {{c|substr(pos1, count1).compare(v.substr(pos2, count2))}}。
@4@ 等价于 {{c|compare(basic_string_view(s))}}。
@5@ 等价于 {{c|substr(pos1, count1).compare(basic_string_view(s))}}。
@6@ 等价于 {{c|substr(pos1, count1).compare(basic_string_view(s, count2))}}。

===参数===
{{par begin}}
{{par | v | 要比较的视图}}
{{par | s | 指向要比较的字符串的指针}}
{{par | count1 | 要比较的此视图中的字符数}}
{{par | pos1 | 要比较的此视图中的首个字符的位置}}
{{par | count2 | 要比较的给定试图的字符数}}
{{par | pos2 | 要比较的给定视图中的首个字符的位置}}
{{par end}} 

===返回值===
若此视图小于另一字符序列则为负数，若两个字符序列相等则为零，若此视图大于另一字符序列则为正数。

===复杂度===
1) 与所比较的字符数呈线性。

===参阅===
{{dsc begin}}
{{dsc inc | cpp/experimental/basic_string_view/dsc operator_cmp}}
{{dsc end}}