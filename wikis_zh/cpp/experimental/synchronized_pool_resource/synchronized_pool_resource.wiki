{{cpp/experimental/pmr/synchronized_pool_resource/title|synchronized_pool_resource}}
{{cpp/experimental/lib extensions/pmr/synchronized_pool_resource/navbar}}
{{dcl begin}}
{{dcl|since=libfund_ts|num=1|1=
synchronized_pool_resource();
}}
{{dcl|since=libfund_ts|num=2|1=
explicit synchronized_pool_resource( memory_resource* upstream );
}}
{{dcl|since=libfund_ts|num=3|1=
explicit synchronized_pool_resource( const pool_options&amp; opts );
}}
{{dcl|since=libfund_ts|num=4|1=
synchronized_pool_resource( const pool_options&amp; opts,
                            memory_resource* upstream );
}}
{{dcl|since=libfund_ts|num=5|1=
synchronized_pool_resource( const synchronized_pool_resource&amp; ) = delete;
}}
{{dcl end}}

构造 {{tt|synchronized_pool_resource}}。

@1-4@ 使用指定的上游内存资源构造 {{tt|synchronized_pool_resource}}，并根据指定的选项进行调整。所得的对象持有 {{c|upstream}} 的副本，但并不拥有 {{c|upstream}} 所指向的资源。&lt;br/&gt;
不接受 {{c|opts}} 为形参的重载使用默认构造的 {{ltt|cpp/experimental/pool_options}} 为选项。不接受 {{c|upstream}} 为形参的重载使用 {{c|std::experimental::pmr::get_default_resource()}} 的返回值为上游内存资源。

@5@ 复制构造函数被弃置。

===参数===
{{par begin}}
{{par|opts|包含构造函数选项的 {{tt|pool_options}} 结构体}}
{{par|upstream|所用的上游内存资源}}
{{par end}}

===异常===
@1-4@ 仅当上游资源的 {{tt|allocate()}} 函数抛出异常才抛出异常。未指明是否或在何种条件下回发生此调用。