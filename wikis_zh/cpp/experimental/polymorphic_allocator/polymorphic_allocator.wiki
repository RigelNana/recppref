{{cpp/experimental/pmr/polymorphic_allocator/title|polymorphic_allocator}}
{{cpp/experimental/lib extensions/pmr/polymorphic_allocator/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
polymorphic_allocator() noexcept;
}}
{{dcl|num=2|1=
polymorphic_allocator( const polymorphic_allocator&amp; other ) noexcept = default;
}}
{{dcl|num=3|1=
template&lt; class U &gt; 
polymorphic_allocator( const polymorphic_allocator&lt;U&gt;&amp; other ) noexcept;
}}
{{dcl|num=4|1=
polymorphic_allocator( memory_resource* r );
}}
{{dcl end}}

构造新的 {{tt|polymorphic_allocator}}。
@1@ 使用 {{c|std::experimental::pmr::get_default_resource()}} 的返回值为底层内存资源构造 {{tt|polymorphic_allocator}}。
@2,3@ 使用 {{c|other.resource()}} 为底层内存资源构造 {{tt|polymorphic_allocator}}。
@4@ 使用 {{c|r}} 为底层内存资源构造 {{tt|polymorphic_allocator}}。此构造函数提供从 {{tt|memory_resource*}} 的隐式转换。

===Parameters===
{{par begin}}
{{par|other|要复制的另一 {{tt|polymorphic_allocator}}}}
{{par|r|指向所使用内存资源的指针。不能为空}}
{{par end}}

===异常===
@4@ 无抛出。