{{cpp/experimental/optional/title|value_or}}
{{cpp/experimental/optional/navbar}}
{{dcl begin}}
{{dcl|since=libfund_ts|1=
template&lt; class U &gt; 
constexpr T value_or( U&amp;&amp; default_value ) const&amp;;
}}
{{dcl|since=libfund_ts|1=
template&lt; class U &gt; 
constexpr T value_or( U&amp;&amp; default_value ) &amp;&amp;;
}}
{{dcl end}}

如果 {{c|*this}} 具有值则返回其所含值，否则返回 {{c|default_value}}。
@1@ 等价于 {{c|bool(*this) ? **this : static_cast&lt;T&gt;(std::forward&lt;U&gt;(default_value))}}。
@2@ 等价于 {{c|bool(*this) ? std::move(**this) : static_cast&lt;T&gt;(std::forward&lt;U&gt;(default_value))}}。

===Parameters===
{{par begin}}
{{par|default_value|在 {{c|*this}} 为空的情况下使用的值}}
{{par hreq}}
{{par req named|T|CopyConstructible|overload=1}}
{{par req named|T|MoveConstructible|overload=2}}
{{par req|{{tt|U&amp;&amp;}} 必须可转换为 {{tt|T}}。}}
{{par end}}

===返回值===
如果 {{c|*this}} 含有值则为其所含值，否则为 {{c|default_value}}。

===异常===
由返回值 {{tt|T}} 所选中构造函数所抛出的任何异常。

===示例===
{{example|code=
#include &lt;cstdlib&gt;
#include &lt;experimental/optional&gt;
#include &lt;iostream&gt;

std::experimental::optional&lt;const char*&gt; maybe_getenv(const char* n)
{
    if (const char* x = std::getenv(n))
        return x;
    else
        return {};
}

int main()
{
    std::cout &lt;&lt; maybe_getenv("MYPWD").value_or("(none)") &lt;&lt; '\n';
}
|p=true
|output=
(none)
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/optional/dsc value}}
{{dsc end}}