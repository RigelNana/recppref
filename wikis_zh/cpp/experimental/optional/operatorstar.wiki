{{cpp/experimental/optional/title|operator-&gt;|operator*}}
{{cpp/experimental/optional/navbar}}
{{dcl begin}}
{{dcl|since=libfund_ts|num=1|1=
constexpr const T* operator-&gt;() const;
}}
{{dcl|since=libfund_ts|num=1|1=
constexpr T* operator-&gt;();
}}
{{dcl|since=libfund_ts|num=2|1=
constexpr const T&amp; operator*() const&amp;;
}}
{{dcl|since=libfund_ts|num=2|1=
constexpr T&amp; operator*() &amp;;
}}
{{dcl|since=libfund_ts|num=2|1=
constexpr const T&amp;&amp; operator*() const&amp;&amp;;
}}
{{dcl|since=libfund_ts|num=2|1=
constexpr T&amp;&amp; operator*() &amp;&amp;;
}}
{{dcl end}}

访问所含值。

@1@ 返回指向所含值的指针。

@2@ 返回到所含值的引用。

如果 {{c|*this}} ''不含有值''则其行为未定义。

===参数===
（无）

===返回值===
指向所含值的指针或引用。

===异常===
不抛出。

===注解===
此运算符并不检查 {{tt|optional}} 是否含有值。如果需要带检查访问，可以使用 {{lc|value()}} 或 {{lc|value_or()}}。

===示例===
{{example|code=
#include &lt;experimental/optional&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std::literals;

int main()
{
    std::experimental::optional&lt;int&gt; opt1 = 1;
    std::cout &lt;&lt; *opt1 &lt;&lt; '\n';

    std::experimental::optional&lt;std::string&gt; opt2 = "abc"s;
    std::cout &lt;&lt; opt2-&gt;size() &lt;&lt; '\n';
}
|output=
1
3
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/optional/dsc value}}
{{dsc inc|cpp/experimental/optional/dsc value_or}}
{{dsc end}}