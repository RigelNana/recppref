{{cpp/experimental/weak_ptr/title|weak_ptr}}
{{cpp/experimental/weak_ptr/navbar}}
{{dcl begin}}
{{dcl|num=1|since=libfund_ts|1= 
constexpr weak_ptr() noexcept;
}}
{{dcl|num=2|since=libfund_ts|1= 
weak_ptr( const weak_ptr&amp; r ) noexcept;
}}
{{dcl|num=2|since=libfund_ts|1= 
template&lt; class Y &gt; 
weak_ptr( const weak_ptr&lt;Y&gt;&amp; r ) noexcept;
}}
{{dcl|num=2|since=libfund_ts|1= 
template&lt; class Y &gt; 
weak_ptr( const std::experimental::shared_ptr&lt;Y&gt;&amp; r ) noexcept;
}}
{{dcl|num=3|since=libfund_ts|1= 
weak_ptr( weak_ptr&amp;&amp; r ) noexcept;
}}
{{dcl|num=3|since=libfund_ts|1= 
template&lt; class Y &gt; 
weak_ptr( weak_ptr&lt;Y&gt;&amp;&amp; r ) noexcept;
}}
{{dcl end}}

构造与 {{c|r}} 潜在共享对象的新 {{tt|weak_ptr}}。

@1@ 默认构造函数。构造空 {{tt|weak_ptr}}。
@2@ 构造共享 {{c|r}} 所管理对象的新 {{tt|weak_ptr}}。如果 {{c|r}} 不管理对象，则 {{c|*this}} 也不管理对象。除非 {{tt|Y*}} 可隐式转换为 {{tt|T*}}，或者 {{tt|Y}} 为对于某个类型 {{tt|U}} 和某个数值 {{tt|N}} 的类型“{{tt|N}} 个 {{tt|U}} 的数组”，并且 {{tt|T}} 为类型“（可能 cv 限定的）{{tt|U}} 的位置边界的数组”，否则模板化重载不参与重载决议。
@3@ 移动构造函数。从 {{c|r}} 向 {{c|*this}} 移动 {{tt|weak_ptr}} 实例。此后，{{c|r}} 为空且 {{c|1=r.use_count() == 0}}。除非 {{tt|Y*}} 可隐式转换为 {{tt|T*}}，或者 {{tt|Y}} 为对于某个类型 {{tt|U}} 和某个数值 {{tt|N}} 的类型“{{tt|N}} 个 {{tt|U}} 的数组”，并且 {{tt|T}} 为类型“（可能 cv 限定的）{{tt|U}} 的位置边界的数组”，否则模板化重载不参与重载决议。&lt;!-- LWG 2521 --&gt;

===参数===
{{par begin}}
{{par|r|将由此 {{lc|std::experimental::weak_ptr}} 查看的 {{lc|std::experimental::shared_ptr}} 或 {{lc|std::experimental::weak_ptr}}}}
{{par end}} 

===异常===
{{noexcept}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/weak_ptr/dsc constructor}}
{{dsc inc|cpp/memory/weak_ptr/dsc operator{{=}}}}
{{dsc end}}