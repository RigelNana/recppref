{{cpp/experimental/title|make_exceptional_future}}
{{cpp/experimental/concurrency/navbar}}
{{dcl begin}}
{{dcl header|experimental/future}}
{{dcl|num=1|since=concurrency|1=
template&lt; class T &gt;
future&lt;T&gt; make_exceptional_future( std::exception_ptr ex );
}}
{{dcl|num=2|since=concurrency|1=
template&lt; class T, class E &gt;
future&lt;T&gt; make_exceptional_future( E ex );
}}
{{dcl end}}

@1@ 创建立即就绪的 {{tt|T}} 类型共享状态，并存储异常指针 {{c|ex}}，然后返回与该共享状态该关联的 {{tt|future}}，如同用 {{c|promise&lt;T&gt; p; p.set_exception(ex); return p.get_future(); }}。若 {{c|ex}} 为空则行为未定义。

@2@ 创建立即就绪的 {{tt|T}} 类型共享状态，并存储从 {{c|ex}} 构造的异常指针，然后返回与该共享状态关联的 {{tt|future}}，如同用 {{c|promise&lt;T&gt; p; p.set_exception(std::make_exception_ptr(ex)); return p.get_future(); }}。

===返回值===
与创建的共享状态关联的 {{tt|future}} 对象。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/dsc make_ready_future}}
{{dsc end}}

{{langlinks|en}}