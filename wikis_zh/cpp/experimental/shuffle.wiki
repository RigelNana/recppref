{{cpp/experimental/title|shuffle}}
{{cpp/experimental/lib_extensions_2/navbar}}

{{ddcl|since=libfund_ts_2|header=experimental/algorithm|1=
template&lt; class RandomIt &gt;
void shuffle( RandomIt first, RandomIt last );
}}

重排序给定范围 {{range|first|last}} 中的元素，使得这些元素的每个可能排列拥有相等的出现概率，以[[cpp/experimental/lib extensions 2#逐线程引擎|逐线程引擎]]为随机数生成器。

===参数===
{{par begin}}
{{par | first, last |要随机混洗的元素范围}}
{{par req named | RandomIt |RandomAccessIterator|ValueSwappable}}
{{par end}}

===返回值===
（无）

===复杂度===
与 {{c|first}} 和 {{c|last}} 间的距离成线性。

===示例===
{{example|code=
#include &lt;experimental/algorithm&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    std::string sample{"ABCDEF"};

    for (int i = 0; i != 4; ++i)
    {
        std::experimental::shuffle(sample.begin(), sample.end());
        std::cout &lt;&lt; sample &lt;&lt; '\n';
    }
}
|p=true
|output=
DACBFE
CDFBAE
BDCAFE
BAFCED
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc random shuffle}}
{{dsc end}}

{{langlinks|en}}