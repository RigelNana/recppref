{{cpp/experimental/ranges/title|exchange}}
{{cpp/experimental/ranges/utility/navbar}}
{{ddcl|header=experimental/ranges/utility|since=ranges|1=
template&lt; MoveConstructible T, class U = T &gt;
    requires Assignable&lt;T&amp;, U&gt;
constexpr T exchange( T&amp; obj, U&amp;&amp; new_val ) noexcept(/* 见下文 */);
}}

以 {{c|new_value}} 替换 {{c|obj}} 的值并返回 {{c|obj}} 的旧值，如同用以下方式
{{source| 1=
T old_value = std::move(obj);
obj = std::forward&lt;U&gt;(new_value);
return old_value;
}}

===参数===
{{par begin}}
{{par | obj |要替换其值的对象}}
{{par | new_value |要赋给 {{tt|obj}} 的值}}
{{par end}}

===返回值===
{{c|obj}} 的旧值。

===异常===
{{noexcept|1=std::is_nothrow_move_constructible&lt;T&gt;::value &amp;&amp;
         std::is_nothrow_assignable&lt;T&amp;, U&gt;::value}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc exchange}}
{{dsc end}}

{{langlinks|en}}