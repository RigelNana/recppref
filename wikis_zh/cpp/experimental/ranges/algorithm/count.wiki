{{cpp/experimental/ranges/title|count|count_if}}
{{cpp/experimental/ranges/algorithm/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/algorithm}}
{{dcl|since=ranges|num=1|1=
template&lt; InputIterator I, Sentinel&lt;I&gt; S, class T, class Proj = ranges::identity &gt;
    requires IndirectRelation&lt;ranges::equal_to&lt;&gt;, projected&lt;I, Proj&gt;, const T*&gt;
ranges::difference_type_t&lt;I&gt; count( I first, S last, const T&amp; value, Proj proj = Proj{} );
}}
{{dcl|since=ranges|num=2|1=
template&lt; InputRange R, class T, class Proj = ranges::identity &gt;
    requires IndirectRelation&lt;ranges::equal_to&lt;&gt;, 
                              projected&lt;ranges::iterator_t&lt;R&gt;, Proj&gt;, const T*&gt;
ranges::difference_type_t&lt;ranges::iterator_t&lt;R&gt;&gt; 
    count( R&amp;&amp; r, const T&amp; value, Proj proj = Proj{} );
}}
{{dcl|since=ranges|num=3|1=
template&lt; InputIterator I, Sentinel&lt;I&gt; S, class Proj = ranges::identity,
          IndirectUnaryPredicate&lt;projected&lt;I, Proj&gt;&gt; Pred &gt;
ranges::difference_type_t&lt;I&gt; count_if( I first, S last, Pred pred, Proj proj = Proj{} );
}}
{{dcl|since=ranges|num=4|1=
template&lt; InputRange R, class Proj = ranges::identity,
          IndirectUnaryPredicate&lt;projected&lt;ranges::iterator_t&lt;R&gt;, Proj&gt;&gt; Pred &gt;
ranges::difference_type_t&lt;ranges::iterator_t&lt;R&gt;&gt; 
    count_if( R&amp;&amp; r, Pred pred, Proj proj = Proj{} );
}}
{{dcl end}}

返回范围 {{range|first|last}} 中满足特定准则的元素数量。
@1@ 计数投射后值等于 {{c|value}} 的元素（即 {{c|ranges::invoke(proj, *i) {{==}} value}}）。
@3@ 计数投射后值满足谓词 {{c|pred}} 的元素（即 {{c|ranges::invoke(pred, ranges::invoke(proj, *i)) !{{=}} false}}）。
@2,4@ 与 {{v|1,3}} 相同，但用 {{c|r}} 为源范围，如同以 {{c|ranges::begin(r)}} 为 {{c|first}} 并以 {{c|ranges::end(r)}} 为 {{c|last}}。

{{cpp/experimental/ranges/algorithm/tparams}}

===参数===
{{par begin}}
{{par|first, last|要检验的元素范围}}
{{par|r|要检验的元素范围}}
{{par|value|要搜索的值}}
{{par|pred|应用于投射后元素的谓词}}
{{par|proj|应用于元素的投射}}
{{par end}}

===返回值===
满足条件的元素数量。

===复杂度===
恰好 {{c|last}} - {{c|first}} 次比较/运用谓词，和相同次数运用投射。

===注解===
对于没有任何额外标准获得范围 {{range|first|last}} 中元素数量参见 {{lc|ranges::distance}}。

===可能的实现===
{{eq fun
|1=
template&lt;InputIterator I, Sentinel&lt;I&gt; S, class T, class Proj = ranges::identity&gt;
    requires IndirectRelation&lt;ranges::equal_to&lt;&gt;, projected&lt;I, Proj&gt;, const T*&gt;
ranges::difference_type_t&lt;I&gt; count(I first, S last, const T&amp; value, Proj proj = Proj{})
{
    ranges::difference_type_t&lt;I&gt; ret = 0;
    for (; first != last; ++first)
        if (ranges::invoke(proj, *first) == value)
            ++ret;
    return ret;
}
|2=
template&lt;InputIterator I, Sentinel&lt;I&gt; S, class Proj = ranges::identity,
         IndirectUnaryPredicate&lt;projected&lt;I, Proj&gt;&gt; Pred&gt;
ranges::difference_type_t&lt;I&gt; count_if(I first, S last, Pred pred, Proj proj = Proj{})
{
    ranges::difference_type_t&lt;I&gt; ret = 0;
    for (; first != last; ++first)
        if (ranges::invoke(pred, ranges::invoke(proj, *i)))
            ++ret;
    return ret;
}
}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc count}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc distance}}
{{dsc end}}