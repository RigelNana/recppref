{{cpp/experimental/ranges/title|invoke}}
{{cpp/experimental/ranges/utility/navbar}}
{{ddcl|header=experimental/ranges/functional|since=ranges|1=
template&lt; class F, class... Args &gt;
std::result_of_t&lt;F&amp;&amp;(Args&amp;&amp;...)&gt; invoke( F&amp;&amp; f, Args&amp;&amp;... args );
}}

以参数 {{tt|args}} 调用{{named req|Callable|可调用}}对象 {{tt|f}}，并返回结果，如同用 {{c|return INVOKE(std::forward&lt;F&gt;(f), std::forward&lt;Args&gt;(args)...);}}，其中 ''INVOKE(f, t1, t2, ..., tN)'' 定义如下：
* 若 {{tt|f}} 为类 {{tt|T}} 的[[cpp/language/pointer#成员函数指针|成员函数指针]]：
:* 若 {{c|1=std::is_base_of&lt;T, std::decay_t&lt;decltype(t1)&gt;&gt;::value}} 为 {{c|true}}，则 {{c|INVOKE(f, t1, t2, ..., tN)}} 等价于 {{c|(t1.*f)(t2, ..., tN)}}
:* 否则，{{c|INVOKE(f, t1, t2, ..., tN)}} 等价于 {{c|((*t1).*f)(t2, ..., tN)}}。
* 否则，若 N == 1 且 {{tt|f}} 为类 {{tt|T}} 的[[cpp/language/pointer#数据成员指针|数据成员指针]]：
:* 若 {{c|1=std::is_base_of&lt;T, std::decay_t&lt;decltype(t1)&gt;&gt;::value}} 为 {{c|true}}，则 {{c|INVOKE(f, t1)}} 等价于 {{c|t1.*f}}。
:* 否则，{{c|INVOKE(f, t1)}} 等价于 {{c|(*t1).*f}}。
* 否则 {{c|INVOKE(f, t1, t2, ..., tN)}} 等价于 {{c|f(t1, t2, ..., tN)}}（即 {{tt|f}} 是{{named req|FunctionObject|函数对象}}）。

===参数===
{{par begin}}
{{par | f |要调用的{{named req|Callable|可调用}}对象}}
{{par | args |传递给 {{tt|f}} 的实参}}
{{par end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc invoke}}
{{dsc end}}

{{langlinks|en}}