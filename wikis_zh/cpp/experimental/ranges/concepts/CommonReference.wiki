{{cpp/experimental/ranges/title|CommonReference}}
{{cpp/experimental/ranges/concepts/navbar}}
{{ddcl|header=experimental/ranges/concepts|since=ranges|1=
template&lt; class T, class U &gt;
concept bool CommonReference =
    Same&lt;ranges::common_reference_t&lt;T, U&gt;, ranges::common_reference_t&lt;U, T&gt;&gt; &amp;&amp;
    ConvertibleTo&lt;T, ranges::common_reference_t&lt;T, U&gt;&gt; &amp;&amp;
    ConvertibleTo&lt;U, ranges::common_reference_t&lt;T, U&gt;&gt;;
}}
概念 {{tt|CommonReference&lt;T, U&gt;}} 指定两个类型 {{tt|T}} 与 {{tt|U}} 共享都能转换到的''公共引用类型''（由 {{lc|ranges::common_reference_t}} 计算）。

{{tt|CommonReference&lt;T, U&gt;}} 仅若满足下列条件才得到满足。给定表达式 {{tt|t}} 和 {{tt|u}} 使得 {{c|decltype((t))}} 为 {{tt|T}} 而 {{c|decltype((u))}} 为 {{tt|U}}，
* 当且仅当 {{tt|t}} 为保持相等性的表达式时，{{c|ranges::common_reference_t&lt;T, U&gt;(t)}} 才等于 {{c|ranges::common_reference_t&lt;T, U&gt;(t)}}；且
* 当且仅当 {{tt|u}} 为保持相等性的表达式时，{{c|ranges::common_reference_t&lt;T, U&gt;(u)}} 才等于 {{c|ranges::common_reference_t&lt;T, U&gt;(u)}}。

换言之，转换到公共引用类型必须不改变原表达式的相等性保持属性。

{{cpp/experimental/ranges/equality preservation|skip-requires=yes}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/ranges/type_traits/dsc common_reference}}
{{dsc inc|cpp/experimental/ranges/concepts/dsc Common}}
{{dsc inc|cpp/experimental/ranges/type_traits/dsc common_type}}
{{dsc end}}

{{langlinks|en}}