{{cpp/experimental/ranges/title|CopyConstructible}}
{{cpp/experimental/ranges/concepts/navbar}}
{{ddcl|header=experimental/ranges/concepts|since=ranges|1=
template&lt; class T &gt;
concept bool CopyConstructible =
    MoveConstructible&lt;T&gt; &amp;&amp;
    Constructible&lt;T, T&amp;&gt; &amp;&amp; ConvertibleTo&lt;T&amp;, T&gt; &amp;&amp;
    Constructible&lt;T, const T&amp;&gt; &amp;&amp; ConvertibleTo&lt;const T&amp;, T&gt; &amp;&amp;
    Constructible&lt;T, const T&gt; &amp;&amp; ConvertibleTo&lt;const T, T&gt;;
}}

概念 {{tt|CopyConstructible}} 得到满足的条件是，{{tt|T}} 为左值引用类型，或若它是{{rconcept|MoveConstructible}}对象类型，其中该类型对象能在直接和复制初始化语境中，从该类型（可能为 const 的）左值或 const 右值以通常语义构造（构造副本而不更改源）。

更精确而言，若 {{tt|T}} 为对象类型，则 {{tt|CopyConstructible&lt;T&gt;}} 仅若满足下列条件才得到满足，给定
* {{tt|v}}，（可为 {{c|const}} 的）{{tt|T}} 类型左值或 {{c|const T}} 类型的右值，
下列为真
* 定义 {{c|T u {{=}} v;}} 后，{{tt|u}} 等于 {{tt|v}}；
* {{tt|T{v}&lt;!----&gt;}} 等于 {{tt|v}}。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_copy_constructible}}
{{dsc end}}

{{langlinks|en}}