{{cpp/experimental/ranges/title|WeaklyEqualityComparableWith}}
{{cpp/experimental/ranges/concepts/navbar}}
{{ddcl|header=experimental/ranges/concepts|since=ranges|1=
template&lt; class T, class U &gt;
concept bool WeaklyEqualityComparableWith =
    requires(const std::remove_reference_t&lt;T&gt;&amp; t,
             const std::remove_reference_t&lt;U&gt;&amp; u) {
        { t == u } -&gt; Boolean&amp;&amp;;
        { t != u } -&gt; Boolean&amp;&amp;;
        { u == t } -&gt; Boolean&amp;&amp;;
        { u != t } -&gt; Boolean&amp;&amp;;
    };
}}

概念 {{tt|WeaklyEqualityComparableWith&lt;T, U&gt;}} 指定能用 {{tt|{{==}}}} 和 {{tt|!{{=}}}} 相互比较（以任一顺序）{{tt|T}} 类型对象和 {{tt|U}} 类型对象的相等性，而比较结果一致。更正式地说， {{tt|WeaklyEqualityComparableWith&lt;T, U&gt;}} 仅若满足下列条件才得到满足。给定
* {{tt|t}}，{{c|const std::remove_reference_t&lt;T&gt;}} 类型左值，和
* {{tt|u}}，{{c|const std::remove_reference_t&lt;U&gt;}} 类型左值
下列为真：
* {{c|t {{==}} u}}、{{c|u {{==}} t}}、{{c|t !{{=}} u}}、{{c|u !{{=}} t}} 拥有相同的定义域；
* {{c|1=bool(u == t) == bool(t == u)}}；
* {{c|1=bool(t != u) == !bool(t == u)}}；且
* {{c|1=bool(u != t) == bool(t != u)}}。

{{cpp/experimental/ranges/equality preservation}}
{{cpp/experimental/ranges/note implicit expression variations}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/ranges/concepts/dsc EqualityComparable}}
{{dsc end}}

{{langlinks|en}}