{{cpp/experimental/ranges/title|reference_t|rvalue_reference_t|iter_common_reference_t}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|notes={{mark expos}}|1=
template&lt; class T &gt;
concept bool /*dereferenceable*/ = requires(T&amp; t) { {*t} -&gt; auto&amp;&amp;; };
}}
{{dcl|num=1|since=ranges|1=
template&lt; /*dereferenceable*/ T &gt; 
using reference_t = decltype(*declval&lt;T&amp;&gt;());
}}
{{dcl|num=2|since=ranges|1=
template&lt; /*dereferenceable*/ T &gt;
    requires requires(T&amp; t) { { ranges::iter_move(t) } -&gt; auto&amp;&amp;; }
using rvalue_reference_t = decltype(ranges::iter_move(declval&lt;T&amp;&gt;()));
}}
{{dcl|num=3|since=ranges|1=
template&lt; Readable T &gt; 
using iter_common_reference_t = ranges::common_reference_t&lt;ranges::reference_t&lt;T&gt;,
                                                           ranges::value_type_t&lt;T&gt;&amp;&gt;;
}}
{{dcl end}}

@1@ 获得可解引用类型 {{tt|T}} 的''引用类型''。
@2@ 获得可解引用类型 {{tt|T}} 的''右值引用类型''，即 {{lc|ranges::iter_move}} 的返回类型。
@3@ 计算 {{rconcept|Readable}} 的''共用引用类型''。这是其引用类型及到其值类型的左值引用的共用引用类型。

=== 注解 ===
{{c|-&gt; auto&amp;&amp;}} 制约检查表达式的类型是否非 {{c|void}}。

{{langlinks|en|ja}}