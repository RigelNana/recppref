{{cpp/experimental/ranges/title|Iterator}}
{{cpp/experimental/ranges/iterator/navbar}}
{{ddcl|header=experimental/ranges/iterator|since=ranges|1=
template&lt; class I &gt;
concept bool Iterator =
    requires(I i) {
        { *i } -&gt; auto&amp;&amp;; // 要求：i 可解引用
    } &amp;&amp;
    WeaklyIncrementable&lt;I&gt;;
}}

{{tt|Iterator}} 概念组成迭代器分类学的基础；每个迭代器都满足 {{tt|Iterator}} 要求。

{{cpp/experimental/ranges/equality preservation}}

=== 注解 ===
{{tt|Iterator}} 自身仅指定解引用和自增迭代器的操作。大多数算法将要求额外操作：
* 比较迭代器与哨位（见 {{rconcept|Sentinel}}）；
* 从迭代器读取值（见 {{rconcept|Readable}} 及 {{rconcept|InputIterator}}）；
* 写入值到迭代器（见 {{rconcept|Writable}} 及 {{rconcept|OutputIterator}}）
* 更丰富的迭代器动作集合（见 {{rconcept|ForwardIterator}}、{{rconcept|BidirectionalIterator}}、{{rconcept|RandomAccessIterator}}）

{{c|-&gt; auto&amp;&amp;}} 制约解引用的结果类型不能为 {{c|void}}。

{{langlinks|en}}