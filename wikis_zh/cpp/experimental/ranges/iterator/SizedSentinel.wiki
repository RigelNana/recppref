{{cpp/experimental/ranges/title|SizedSentinel}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|num=1|since=ranges|1=
template&lt; class S, class I &gt;
concept bool SizedSentinel =
    Sentinel&lt;S, I&gt; &amp;&amp;
    !ranges::disable_sized_sentinel&lt;std::remove_cv_t&lt;S&gt;, std::remove_cv_t&lt;I&gt;&gt; &amp;&amp;
    requires(const I&amp; i, const S&amp; s) {
        { s - i } -&gt; Same&lt;ranges::difference_type_t&lt;I&gt;&gt;&amp;&amp;;
        { i - s } -&gt; Same&lt;ranges::difference_type_t&lt;I&gt;&gt;&amp;&amp;;
    };
}}
{{dcl|num=1|since=ranges|1=
template&lt; class S, class I &gt;
constexpr bool disable_sized_sentinel = false;
}}
{{dcl end}}

{{tt|SizedSentinel}} 概念指定能对迭代器类型 {{tt|I}} 的对象和哨位类型 {{tt|S}} 的对象相减，在常数时间内计算其间的距离。

令 {{tt|i}} 为 {{tt|I}} 类型的迭代器，而 {{tt|s}} 为 {{tt|S}} 类型的哨位，使得 {{tt|[i, s)}} 代表范围。令 {{tt|N}} 为需要应用 {{tt|++i}} 以令 {{c|1=bool(i == s)}} 为 true 的最小次数。则 {{tt|SizedSentinel&amp;lt;S, I&amp;gt;}} 仅若符合下列条件才得到满足：

* 若 {{tt|N}} 能以 {{c|ranges::difference_type_t&lt;I&gt;}} 表示，则 {{c|s - i}} 良定义并等于 {{tt|N}}；且
* 若 {{tt|-N}} 能以 {{c|ranges::difference_type_t&lt;I&gt;}} 表示，则 {{c|i - s}} 良定义并等于 {{tt|-N}}。

变量模板 {{tt|disable_sized_sentinel}} 通过特化变量模板为拥有值 {{c|true}}，为能相减但不符合 {{tt|SizedSentinel}} 语义要求的迭代器和哨位提供撤出概念的机制。

{{cpp/experimental/ranges/equality preservation}}
{{cpp/experimental/ranges/note implicit expression variations}}

{{langlinks|en}}