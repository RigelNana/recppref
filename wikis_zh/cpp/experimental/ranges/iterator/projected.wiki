{{cpp/experimental/ranges/title|projected}}
{{cpp/experimental/ranges/iterator/navbar}}
{{ddcl|since=ranges|header=experimental/ranges/iterator|1=
template&lt; Readable I, IndirectRegularUnaryInvocable&lt;I&gt; Proj &gt;
struct projected {
    using value_type =
        std::remove_cv_t&lt;std::remove_reference_t&lt;ranges::indirect_result_of_t&lt;Proj&amp;(I)&gt;&gt;&gt;;
    ranges::indirect_result_of_t&lt;Proj&amp;(I)&gt; operator*() const;
};

template&lt; WeaklyIncrementable I, class Proj &gt;
struct difference_type&lt;projected&lt;I, Proj&gt;&gt; {
    using type = ranges::difference_type_t&lt;I&gt;;
};
}}

类模板 {{tt|projected}} 把 {{rconcept|Readable|可读}}类型 {{tt|I}} 和函数 {{tt|Proj}} 打包成新的可读 ({{tt|Readable}}) 类型，其 {{tt|reference}} 为应用 {{tt|Proj}} 到 {{tt|I}} 的 {{tt|reference}} 类型的结果。它单独为简化制约规定而存在，故而其 {{c|operator*()}} 可以不实际定义。

{{langlinks|en}}