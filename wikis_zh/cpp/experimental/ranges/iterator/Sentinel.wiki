{{cpp/experimental/ranges/title|Sentinel}}
{{cpp/experimental/ranges/iterator/navbar}}
{{ddcl|header=experimental/ranges/iterator|since=ranges|1=
template&lt; class S, class I &gt;
concept bool Sentinel = 
    Semiregular&lt;S&gt; &amp;&amp; Iterator&lt;I&gt; &amp;&amp;
    WeaklyEqualityComparableWith&lt;S, I&gt;;
}}

{{tt|Sentinel}} 概念描述其值代表范围的 {{rconcept|Iterator}} 类型与 {{rconcept|Semiregular}} 类型间的关系。

令 {{tt|s}} 与 {{tt|i}} 分别表示 {{tt|S}} 与 {{tt|I}} 类型的值，使得 {{tt|[i, s)}} 代表范围。{{tt|Sentinel&amp;lt;S, I&amp;gt;}} 仅若下列条件成立才得到满足：

* {{c|1=i == s}} 为良定义。
* 若 {{c|1=bool(i != s)}} 则 {{tt|i}} 可解引用且 {{tt|[++i, s)}} 代表范围。

{{tt|1===}} 能随时间而更改。给定迭代器 {{tt|i}} 和哨位 {{tt|s}} 并使得 {{tt|[i, s)}} 代表范围且 {{c|1=i != s}}，不要求自增任何等于 {{tt|i}} 的迭代器后 {{tt|[i, s)}} 继续代表范围（从而这种自增后不再要求 {{c|1=i == s}} 是良定义的）。

{{langlinks|en}}