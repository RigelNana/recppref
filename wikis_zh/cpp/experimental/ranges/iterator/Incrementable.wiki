{{cpp/experimental/ranges/title|Incrementable}}
{{cpp/experimental/ranges/iterator/navbar}}
{{ddcl|header=experimental/ranges/iterator|since=ranges|1=
template&lt; class I &gt;
concept bool Incrementable =
    Regular&lt;I&gt; &amp;&amp;
    WeaklyIncrementable&lt;I&gt; &amp;&amp;
    requires(I i) {
        { i++ } -&gt; Same&lt;I&gt;&amp;&amp;;
    };
}}

概念 {{tt|Incrementable&amp;lt;I&amp;gt;}} 指定能（用前和后自增运算符）自增的类型上的要求。要求自增运算（包括 {{rconcept|WeaklyIncrementable}} 所要求者）保持相等性，并要求该类型为 {{rconcept|EqualityComparable}}。

令 {{tt|a}} 与 {{tt|b}} 为 {{tt|I}} 类型的可自增对象。{{tt|Incrementable&amp;lt;I&amp;gt;}} 仅若下列条件成立才得到满足：
* 若 {{c|1=bool(a == b)}} 则 {{c|1=bool(a++ == b)}}。
* 若 {{c|1=bool(a == b)}} 则 {{c|1=bool(void(a++), a) == ++b)}}。

{{cpp/experimental/ranges/equality preservation}}

=== 注解 ===
{{tt|a}} 等于 {{tt|b}} 的要求蕴含 {{tt|++a}} 等于 {{tt|++b}}，这允许将 {{tt|Incrementable}} 类型用于多趟算法。

{{langlinks|en}}