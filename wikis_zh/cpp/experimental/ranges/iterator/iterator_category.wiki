{{cpp/experimental/ranges/title|iterator_category}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|num=1|
template&lt; class I &gt;
struct iterator_category {};
}}
{{dcl|num=2|
template&lt; class T &gt;
struct iterator_category&lt;T*&gt;;
}}
{{dcl|num=3|
template&lt; class T &gt;
struct iterator_category&lt;const T&gt; : iterator_category&lt;T&gt; {};
}}
{{dcl|num=4|
template&lt; class T &gt;
    requires requires { typename T::iterator_category; }
struct iterator_category&lt;T&gt;;
}}
{{dcl end}}

计算类 {{tt|I}} 的迭代器类别，若它存在。用户可以对程序定义类型特化 {{tt|iterator_category}}。

@1@ 主模板是空结构体。
@2@ 对指针的特化。若 {{tt|T}} 是对象类型，则提供等于 {{lc|ranges::random_access_iterator_tag}} 的成员类型 {{tt|type}}。否则，无成员 {{tt|type}}。
@3@ 对 const 限定类型的特化。
@4@ 对定义公开且可访问的成员类型 {{tt|iterator_category}} 的类型的特化。若 {{tt|T::iterator_category}} 与命名空间 {{tt|std}} 中的迭代器类别标签之一相同或从它派生，则将它映射到描述如下的命名空间 {{tt|ranges}} 中的对应标签。否则，提供等于 {{tt|T::iterator_category}} 的成员类型 {{tt|type}}。
* 若 {{tt|T::iterator_category}} 与 {{lc|std::random_access_iterator_tag}} 相同或自之派生，则提供等于 {{lc|ranges::random_access_iterator_tag}} 的成员类型 {{tt|type}}。
* 否则，若 {{tt|T::iterator_category}} 与 {{lc|std::bidirectional_iterator_tag}} 相同或自之派生，则提供等于 {{lc|ranges::bidirectional_iterator_tag}} 的成员类型 {{tt|type}}。
* 否则，若 {{tt|T::iterator_category}} 与 {{lc|std::forward_iterator_tag}} 相同或自之派生，则提供等于 {{lc|ranges::forward_iterator_tag}} 的成员类型 {{tt|type}}。
* 否则，若 {{tt|T::iterator_category}} 与 {{lc|std::input_iterator_tag}} 相同或自之派生，则提供等于 {{lc|ranges::input_iterator_tag}} 的成员类型 {{tt|type}}。
* 否则，若 {{tt|T::iterator_category}} 与 {{lc|std::output_iterator_tag}} 相同或自之派生，则无成员 {{tt|type}}。

=== 辅助别名模版 ===
{{ddcl|since=ranges|1=
template&lt; class T &gt; 
using iterator_category_t = typename ranges::iterator_category&lt;T&gt;::type;
}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc iterator tags}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc iterator tags}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc iterator_traits}}
{{dsc end}}

{{langlinks|en|ja}}