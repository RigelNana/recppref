{{cpp/experimental/ranges/title|value_type}}
{{cpp/experimental/ranges/iterator/navbar}}
{{dcl begin}}
{{dcl header|experimental/ranges/iterator}}
{{dcl|num=1|
template&lt; class I &gt;
struct value_type {};
}}
{{dcl|num=2|
template&lt; class T &gt;
struct value_type&lt;T*&gt;;
}}
{{dcl|num=3|
template&lt; class I &gt;
    requires std::is_array&lt;I&gt;::value
struct value_type&lt;I&gt; : value_type&lt;std::decay_t&lt;I&gt;&gt; {};
}}
{{dcl|num=4|
template&lt; class T &gt;
struct value_type&lt;const T&gt; : value_type&lt;std::decay_t&lt;T&gt;&gt; {};
}}
{{dcl|num=5|
template&lt; class T &gt;
    requires requires { typename T::value_type; }
struct value_type&lt;T&gt;;
}}
{{dcl|num=6|
template&lt; class T &gt;
    requires requires { typename T::element_type; }
struct value_type&lt;T&gt;;
}}
{{dcl end}}

计算类型 {{tt|I}} 关联的值类型，若它存在。用户可对程序定义类型特化 {{tt|value_type}}。

@1@ 主模板是空结构体。
@2@ 对指针的特化。若 {{tt|T}} 是对象类型，则提供等于 {{c|std::remove_cv_t&lt;T&gt;}} 的成员类型 {{tt|type}}。否则，无成员 {{tt|type}}。
@3@ 对数组类型的特化。
@4@ 对 const 限定类型的特化。
@5@ 对定义公开且可访问成员类型 {{tt|value_type}} 的类型的特化。若 {{tt|T::value_type}} 是对象类型，则提供等于 {{tt|T::value_type}} 的成员类型 {{tt|type}}。否则无成员 {{tt|type}}。
@6@ 对定义公开且可访问成员类型 {{tt|element_type}} 的类型（例如 {{lc|std::shared_ptr}}）的特化。若 {{tt|T::element_type}} 是对象类型，则提供等于 {{c|std::remove_cv_t&lt;typename T::element_type&gt;}} 的成员类型 {{tt|type}}。否则无成员类型 {{tt|type}}。

=== 辅助别名模版 ===
{{ddcl|since=ranges|1=
template&lt; class T &gt; 
using value_type_t = typename ranges::value_type&lt;T&gt;::type;
}}

=== 注解 ===
若类型一同含有 {{tt|value_type}} 成员和 {{tt|element_type}} 成员，则特化 {{v|5}} 和 {{v|6}} 有歧义。

{{tt|value_type}} 被有意用于如迭代器的 {{rconcept|Readable}}。它并非被有意用于范围。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc Readable}}
{{dsc inc|cpp/experimental/ranges/iterator/dsc iterator_traits}}
{{dsc end}}

{{langlinks|en|ja}}