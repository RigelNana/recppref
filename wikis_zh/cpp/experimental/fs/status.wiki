{{cpp/experimental/fs/title|status|symlink_status}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|num=1|1=
file_status status( const path&amp; p );
file_status status( const path&amp; p, error_code&amp; ec ) noexcept;
}}
{{dcl|since=fs_ts|num=2|1=
file_status symlink_status( const path&amp; p );
file_status symlink_status( const path&amp; p, error_code&amp; ec ) noexcept;
}}
{{dcl end}}

@1@ 确定由 {{c|p}} 标定的文件系统对象的类型和属性，如同通过 POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/stat.html stat] 进行（跟随符号链接到其目标）。
:* 若 {{c|p}} 是常规文件，则返回 {{c|file_status(file_type::regular)}}。
:* 若 {{c|p}} 是目录，则返回 {{c|file_status(file_type::directory)}}。
:* 若 {{c|p}} 是块特殊文件，则返回 {{c|file_status(file_type::block)}}。
:* 若 {{c|p}} 是字符特殊文件，则返回 {{c|file_status(file_type::character)}}。
:* 若 {{c|p}} 是 fifo 或管道文件，则返回 {{c|file_status(file_type::fifo)}}。
:* 若 {{c|p}} 是套接字，则返回 {{c|file_status(file_type::socket)}}。
:* 若 {{c|p}} 不存在，则返回 {{c|file_status(file_type::not_found)}}。
:* 若 {{c|p}} 存在但无法确定文件属性，比如由于缺少权限，则返回 {{c|file_status(file_type::unknown)}}。
:* 若发生错误并妨碍得知 {{c|p}} 是否存在，则无抛出重载设置 {{c|ec}} 并返回 {{c|file_status(file_type::none)}}，而抛出重载则抛出 {{tt|filesystem_error}}。
:* 否则，返回 {{c|file_status(file_type::unknown)}}。
@2@ 与 {{v|1}} 相同，但其行为如同使用 POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/lstat.html lstat]（不跟随符号链接）：
:* 若 {{c|p}} 为符号链接，则返回 {{c|file_status(file_type::symlink)}}。

===参数===
{{par begin}}
{{par|p|要检查的路径}}
{{par|ec|用于无抛出重载中错误报告的输出形参}}
{{par end}}

===返回值===
文件状态（{{rlp|file_status}} 对象）。

===异常===
{{cpp/experimental/fs/error_handling|p}}

===注解===
此函数提供的信息通常也是目录遍历所提供的副产物，且可以通过 {{rlp|directory_entry}} 的成员函数获得。遍历目录时，无需再次调用 {{tt|status}}。

===示例===
{{cpp/experimental/fs/status_example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc file_status}}
{{dsc inc|cpp/experimental/fs/dsc status_known}}
{{dsc inc|cpp/experimental/fs/dsc is_block_file}}
{{dsc inc|cpp/experimental/fs/dsc is_character_file}}
{{dsc inc|cpp/experimental/fs/dsc is_directory}}
{{dsc inc|cpp/experimental/fs/dsc is_fifo}}
{{dsc inc|cpp/experimental/fs/dsc is_other}}
{{dsc inc|cpp/experimental/fs/dsc is_regular_file}}
{{dsc inc|cpp/experimental/fs/dsc is_socket}}
{{dsc inc|cpp/experimental/fs/dsc is_symlink}}
{{dsc inc|cpp/experimental/fs/dsc exists}}
{{dsc inc|cpp/experimental/fs/directory_entry/dsc status}}
{{dsc end}}