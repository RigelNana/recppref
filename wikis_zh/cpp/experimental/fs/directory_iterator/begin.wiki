{{cpp/experimental/fs/title|begin{{small|(directory_iterator)}}|end{{small|(directory_iterator)}}}}
{{cpp/experimental/fs/directory_iterator/navbar}}
{{dcl begin}}
{{dcl|num=1|since=fs_ts|
directory_iterator begin( directory_iterator iter );
}}
{{dcl|num=2|since=fs_ts|
directory_iterator end( const directory_iterator&amp; );
}}
{{dcl end}}
@1@ 返回未改变的 {{c|iter}}。
@2@ 返回默认构造的 {{ltt|cpp/experimental/fs/directory_iterator|directory_iterator}}，它作为尾迭代器。忽略实参。

这些非成员函数使得可以将 {{tt|directory_iterator}} 用于基于范围的 for 循环。

===参数===
{{par begin}}
{{par|iter|directory_iterator}}
{{par end}}

===返回值===
@1@ 未改变的 {{c|iter}}。
@2@ 尾迭代器（默认构造的 {{tt|directory_iterator}}）。

===异常===
{{unreviewed noexcept}}

===示例===
{{example|code=
#include &lt;experimental/filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::create_directories("sandbox/a/b");
    std::ofstream("sandbox/file1.txt");
    std::ofstream("sandbox/file2.txt");
    for (auto&amp; p : fs::directory_iterator("sandbox"))
        std::cout &lt;&lt; p &lt;&lt; '\n';
    fs::remove_all("sandbox");
}
|p=true
|output=
"sandbox/a"
"sandbox/file1.txt"
"sandbox/file2.txt"
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/recursive_directory_iterator/dsc begin}}
{{dsc end}}