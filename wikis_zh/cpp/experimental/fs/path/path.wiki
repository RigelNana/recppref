{{cpp/experimental/fs/path/title|path}}
{{cpp/experimental/fs/path/navbar}}
{{dcl begin}}
{{dcl|since=fs_ts|num=1|
path();
}}
{{dcl|since=fs_ts|num=2|
path( const path&amp; p );
}}
{{dcl|since=fs_ts|num=3|
path( path&amp;&amp; p );
}}
{{dcl|since=fs_ts|num=4|
template&lt; class Source &gt;
path( const Source&amp; source );
}}
{{dcl|since=fs_ts|num=5|
template&lt; class InputIt &gt;
path( InputIt first, InputIt last );
}}
{{dcl|since=fs_ts|num=6|
template&lt; class Source &gt;
path( const Source&amp; source, const std::locale&amp; loc );
}}
{{dcl|since=fs_ts|num=7|
template&lt; class InputIt &gt;
path( InputIt first, InputIt last, const std::locale&amp; loc );
}}
{{dcl end}}

构造新 {{tt|path}} 对象。

@1@ 构造空路径。
@2@ 复制构造函数。构造 {{c|p}} 的副本。
@3@ 移动构造函数。构造 {{c|p}} 的副本，{{c|p}} 遗留为有效单未指明的状态。
@4,5@ 从 {{c|source}} {{v|4}} 所提供的字符序列（它是指针，指向空终止字符/宽字符序列的输入迭代器，或者 {{lc|std::basic_string}}）所提供的字符序列，或以一对输入迭代器 [{{c|first}}, {{c|last}}) {{v|5}} 表示的字符序列，构造路径。允许四种字符类型 {{c|char}}、{{c|char16_t}}、{{c|char32_t}}、{{c|wchar_t}} 中的任何一种，而转换为原生字符集的方法依赖于 {{c|source}} 所用的字符类型。
:*如果源字符类型为 {{c|char}}，则假定源编码为原生编码（因而在 POSIX 系统上不会发生转换）。
:*如果源字符类型为 {{c|char16_t}}，则从 UTF-16 转换为所使用的原生文件系统编码。
:*如果源字符类型为 {{c|char32_t}}，则从 UTF-32 转换为所使用的原生文件系统编码。
:*如果源字符类型为 {{c|wchar_t}}，则假定输入为原生宽编码（因而在 Windows 上不会发生转换）。
@6,7@ 从 {{c|source}} {{v|6}} 所提供的字符序列（它是指针，指向空终止字符序列的输入迭代器，或者 {{lc|std::string}}）所提供的字符序列，或以一对输入迭代器 [{{c|first}}, {{c|last}}) {{v|7}} 表示的字符序列，构造路径。所允许的唯一字符类型为 {{c|char}}。使用 {{c|loc}} 来实施字符编码转换。若 {{tt|value_type}} 为 {{c|wchar_t}}，则使用 {{c|loc}} 的 {{c|std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;}} 刻面将其转换为宽字符。否则，首先使用 {{c|std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;}} 刻面将其转换为宽字符，然后使用 {{c|loc}} 的 {{c|std::codecvt&lt;wchar_t, value_type&gt;}} 刻面将其转换为文件系统原生字符类型。

===参数===
{{par begin}}
{{par|p|要复制的路径}}
{{par|source|{{lc|std::basic_string}}，指向空终止字符串的指针，或具有字符值类型并指向空终止字符序列的输入迭代器（对于重载 {{v|6}} 其字符类型必须为 {{c|char}}）}}
{{par|first, last|一对 {{named req|InputIterator}}，指定 UTF-8 编码的字符序列}}
{{par|loc|定义所用编码转换的本地设置}}
{{par hreq}}
{{par req named|InputIt|InputIterator}}
{{par req|为使用重载 {{v|5}}，{{tt|InputIt}} 的值类型必须为四种字符类型 {{c|char}}、{{c|wchar_t}}、{{c|char16_t}} 和 {{c|char32_t}} 之一。}}
{{par req|为使用重载 {{v|7}}，{{tt|InputIt}} 的值类型必须为 {{c|char}}。}}
{{par end}}

===异常===
@1,2@ （无）
@3@ {{unreviewed noexcept}}
@4-7@ （无）

===注解===
对于来自 Unicode 字符串的可移植路径名，见 {{rlp|u8path}}。

===示例===
{{example
|code=
#include &lt;experimental/filesystem&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::path p1 = "/usr/lib/sendmail.cf"; // 可移植格式
    fs::path p2 = "C:\\users\\abcdef\\AppData\\Local\\Temp\\"; // 原生格式
    fs::path p3 = L"D:/猫.txt"; // 宽字符串

    std::cout &lt;&lt; "p1 = " &lt;&lt; p1 &lt;&lt; '\n'
              &lt;&lt; "p2 = " &lt;&lt; p2 &lt;&lt; '\n'
              &lt;&lt; "p3 = " &lt;&lt; p3 &lt;&lt; '\n';
}
|output=
p1 = "/usr/lib/sendmail.cf"
p2 = "C:\users\abcdef\AppData\Local\Temp\"
p3 = "D:/猫.txt"
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/path/dsc u8path}}
{{dsc end}}