{{cpp/experimental/fs/title|canonical}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|num=1|since=fs_ts|1=
path canonical( const path&amp; p, const path&amp; base {{=}} current_path() );
}}
{{dcl|num=2|since=fs_ts|1=
path canonical( const path&amp; p, error_code&amp; ec );
}}
{{dcl|num=3|since=fs_ts|1=
path canonical( const path&amp; p, const path&amp; base, error_code&amp; ec );
}}
{{dcl end}}

转换路径 {{c|p}} 为规范绝对路径，即没有点、点点元素或符号链接的绝对路径。

若 {{c|p}} 不是绝对路径，则函数表现为如同将其通过 {{c|absolute(p, base)}}（或对于 {{v|2}} 为 {{c|absolute(p)}}）先变成绝对路径。

路径 {{c|p}} 必须存在。

===参数===
{{par begin}}
{{par|p|可以绝对也可以相对于 {{c|base}} 的路径，但其必须为既存路径}}
{{par|base|用在 {{c|p}} 为相对路径情况中的基础路径}}
{{par|ec|用于存储错误状态的错误码}}
{{par end}}

===返回值===
被解析为与 {{c|absolute(p, base)}}（或对于 {{v|2}} 为 {{c|absolute(p)}}）相同的文件的绝对路径。

===异常===
{{cpp/experimental/fs/error_handling|p|base}}

此函数模仿 POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/realpath.html realpath]。

===示例===
{{example
|code=
#include &lt;experimental/filesystem&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::path p = fs::path("..") / ".." / "AppData";
    std::cout &lt;&lt; "当前路径为 " &lt;&lt; fs::current_path() &lt;&lt; '\n'
              &lt;&lt; p &lt;&lt; " 的规范路径为 " &lt;&lt; fs::canonical(p) &lt;&lt; '\n';
}
|p=true
|output=
当前路径为 "C:\Users\abcdef\AppData\Local\Temp"
"..\..\AppData" 的规范路径为 "C:\Users\abcdef\AppData"
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc path}}
{{dsc inc|cpp/experimental/fs/dsc absolute}}
{{dsc end}}