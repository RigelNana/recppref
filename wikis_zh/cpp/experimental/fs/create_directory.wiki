{{cpp/experimental/fs/title|create_directory|create_directories}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|num=1|since=fs_ts|1=
bool create_directory( const path&amp; p );
bool create_directory( const path&amp; p, error_code&amp; ec );
}}
{{dcl|num=2|since=fs_ts|1=
bool create_directory( const path&amp; p, const path&amp; existing_p );
bool create_directory( const path&amp; p, const path&amp; existing_p, error_code&amp; ec );
}}
{{dcl|num=3|since=fs_ts|1=
bool create_directories( const path&amp; p );
bool create_directories( const path&amp; p, error_code&amp; ec );
}}
{{dcl end}}

@1@ 如同用 POSIX [https://pubs.opengroup.org/onlinepubs/9699919799/functions/mkdir.html mkdir()] 以第二个实参为 {{c|static_cast&lt;int&gt;(fs::perms::all)}} 来创建目录 {{c|p}}（父目录必须已经存在）。如果 {{c|p}} 已经存在且已经是目录，则函数不做任何事（此条件并不被当成错误）。
@2@ 与 {{v|1}} 相同，但新目录的属性从 {{c|existing_p}} 复制（它必须为现存目录）。复制哪些属性依赖于 OS：POSIX 系统上，复制属性如同以
{{source|1=
stat(existing_p.c_str(), &amp;attributes_stat)
mkdir(p.c_str(), attributes_stat.st_mode)
}}Windows OS 上，复制属性如同以
{{source|1=
CreateDirectoryExW(existing_p.c_str(), p.c_str(), 0)
}}
@3@ 对 {{c|p}} 中尚不存在的每个元素调用 {{v|1}}。

发生任何错误时，无抛出重载返回 {{c|false}}。

===参数===
{{par begin}}
{{par|p|要创建的新目录的路径}}
{{par|existing_p|从之复制属性的目录的路径}}
{{par|ec|用于无抛出重载中报告错误的输出形参}}
{{par end}}

===返回值===
@1,2@ 若目录创建成功则为 {{c|true}}，否则为 {{c|false}}。

===异常===
@1,3@ {{cpp/experimental/fs/error_handling|p}}
@2@ {{cpp/experimental/fs/error_handling|p|existing_p}}

===注解===
保留属性的重载 {{v|2}} 会被 {{ltt|cpp/experimental/fs/copy|copy()}} 在递归复制目录时隐含调用。它在 boost.filesystem 中的等价物是 [https://www.boost.org/doc/libs/1_57_0/libs/filesystem/doc/reference.html#copy_directory copy_directory]（实参顺序相反）。

===示例===
{{example
|code=
#include &lt;cstdlib&gt;
#include &lt;experimental/filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::create_directories("sandbox/1/2/a");
    fs::create_directory("sandbox/1/2/b");
    fs::permissions("sandbox/1/2/b", fs::perms::remove_perms {{!}} fs::perms::others_all);
    fs::create_directory("sandbox/1/2/c", "sandbox/1/2/b");
    std::system("ls -l sandbox/1/2");
    fs::remove_all("sandbox");
}
|p=true
|output=
drwxr-xr-x 2 user group 4096 Apr 15 09:33 a
drwxr-x--- 2 user group 4096 Apr 15 09:33 b
drwxr-x--- 2 user group 4096 Apr 15 09:33 c
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc create_symlink}}
{{dsc inc|cpp/experimental/fs/dsc copy}}
{{dsc inc|cpp/experimental/fs/dsc perms}}
{{dsc end}}