{{cpp/experimental/fs/title|directory_iterator}}
{{cpp/experimental/fs/directory_iterator/navbar}}
{{fmbox|class=noprint|style=font-size: 0.8em|text='''以并入 ISO C++''' 此页面描述的功能已于 2016 年 3 月并入 ISO C++ 标准主线；参见 [[cpp/filesystem/directory_iterator|std::filesystem::directory_iterator]] {{mark since c++17}}}}

{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|1=
class directory_iterator;
}}
{{dcl end}}

{{tt|directory_iterator}} 是一种{{named req|InputIterator}}，在目录的 {{ltt|cpp/experimental/fs/directory_entry|directory_entry}} 元素上迭代（但不访问子目录）。未指明迭代顺序，但每个目录项均被访问一次。跳过特殊路径名 {{spar|点}} 和 {{spar|点点}}。

如果 {{tt|directory_iterator}} 推进越过最末目录项，则它变为等于默认构造的迭代器，亦成为尾迭代器。两个尾迭代器总是相等，解引用或增加尾迭代器是未定义行为。

如果在目录迭代器创建之后有文件或目录被删除或添加到目录树中，则未指明是否可以通过此迭代器观察到其变化。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|value_type}}|{{tt|filesystem::directory_entry}}}}
{{dsc|{{tt|difference_type}}|{{tt|std::ptrdiff_t}}}}
{{dsc|{{tt|pointer}}|{{tt|const filesystem::directory_entry*}}}}
{{dsc|{{tt|reference}}|{{tt|const filesystem::directory_entry&amp;}}}}
{{dsc|{{tt|iterator_category}}|{{tt|std::input_iterator_tag}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/directory_iterator/dsc constructor}}
{{dsc inc|cpp/experimental/fs/directory_iterator/dsc destructor}}
{{dsc inc|cpp/experimental/fs/directory_iterator/dsc operator{{=}}}}
{{dsc inc|cpp/experimental/fs/directory_iterator/dsc operator*}}
{{dsc inc|cpp/experimental/fs/directory_iterator/dsc increment}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/directory_iterator/dsc begin}}
{{dsc end}}

此外，还提供了 {{c|operator{{==}}}} 和 {{c|operator!{{=}}}}，成员或非成员均有，此为 {{named req|InputIterator}} 的要求。

===示例===
{{example|code=
#include &lt;experimental/filesystem&gt;
#include &lt;fstream&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    fs::create_directories("sandbox/a/b");
    std::ofstream{"sandbox/file1.txt"};
    std::ofstream{"sandbox/file2.txt"};
    for (const fs::directory_entry&amp; entry : fs::directory_iterator{"sandbox"})
        std::cout &lt;&lt; entry &lt;&lt; '\n';
    fs::remove_all("sandbox");
}
|p=true
|output=
"sandbox/a"
"sandbox/file1.txt"
"sandbox/file2.txt"
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc recursive_directory_iterator}}
{{dsc inc|cpp/experimental/fs/dsc directory_options}}
{{dsc inc|cpp/experimental/fs/dsc directory_entry}}
{{dsc end}}