{{cpp/experimental/fs/directory_entry/title|status|symlink_status}}
{{cpp/experimental/fs/directory_entry/navbar}}
{{dcl begin}}
{{dcl|since=fs_ts|num=1|1=
file_status status() const;
file_status status( error_code&amp; ec ) const;
}}
{{dcl|since=fs_ts|num=2|1=
file_status symlink_status() const;
file_status symlink_status( error_code&amp; ec ) const;
}}
{{dcl end}}

@1@ 返回如同以 [[cpp/experimental/fs/status|status]] 调用所确定的潜在已缓存的项目状态（跟随符号链接到其目标）。
@2@ 返回如同以 [[cpp/experimental/fs/status|symlink_status]] 调用所确定的潜在已缓存的项目状态（不跟随符号链接）。

===参数===
{{par begin}}
{{par|ec|用于无抛出重载中错误报告的输出形参}}
{{par end}}

===返回值===
此目录项代表的文件的状态。

===异常===
{{cpp/experimental/fs/error_handling|p}}

===注解===
文件状态信息通常作为目录遍历的副产物提供，这种情况它会被缓存，且可以通过这些成员函数获取而不会造成额外的系统调用成本。在遍历目录时，不需要调用 {{tt|status}}，且应当以缓冲的状态值而非路径调用如 {{tt|is_directory}} 这样的访问器。

===示例===
{{cpp/experimental/fs/status_example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc file_status}}
{{dsc inc|cpp/experimental/fs/dsc status}}
{{dsc inc|cpp/experimental/fs/dsc status_known}}
{{dsc inc|cpp/experimental/fs/dsc is_block_file}}
{{dsc inc|cpp/experimental/fs/dsc is_character_file}}
{{dsc inc|cpp/experimental/fs/dsc is_directory}}
{{dsc inc|cpp/experimental/fs/dsc is_fifo}}
{{dsc inc|cpp/experimental/fs/dsc is_other}}
{{dsc inc|cpp/experimental/fs/dsc is_regular_file}}
{{dsc inc|cpp/experimental/fs/dsc is_socket}}
{{dsc inc|cpp/experimental/fs/dsc is_symlink}}
{{dsc end}}