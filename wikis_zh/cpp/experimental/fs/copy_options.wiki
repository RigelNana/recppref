{{cpp/experimental/fs/title|copy_options}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|1=
enum class copy_options {
    none = 0,
    skip_existing = 1,
    overwrite_existing = 2,
    update_existing = 4,
    recursive = 8,
    copy_symlinks = 16,
    skip_symlinks = 32,
    directories_only = 64,
    create_symlinks = 128,
    create_hard_links = 256
};
}}
{{dcl end}}

此类型表示控制 {{ltt|cpp/experimental/fs/copy|copy()}} 和 {{ltt|cpp/experimental/fs/copy_file|copy_file()}} 函数的行为的可用选项。

{{tt|copy_options}} 满足 {{named req|BitmaskType}} 的规定（这表示按位运算符 {{c|operator&amp;}}、{{c|operator{{!}}}}、{{c|operator^}}、{{c|operator~}}、{{c|operator&amp;{{=}}}}、{{c|operator{{!}}{{=}}}} 和 {{c|operator^{{=}}}} 对此类型有定义）。

===成员常量===
以下每个选项组中最多只能给出一个复制选项，否则复制函数的行为未定义。
{|class="wikitable" style="text-align:left; font-size:85%; max-width:90em;"
|-
!成员常量
!值
!含义
|-
!colspan=3|当文件已经存在时控制 {{ltt|cpp/experimental/fs/copy_file|copy_file()}} 的选项
|-
|{{tt|none}} 
|{{c|0}}
|报告错误（默认行为）。
|-
|{{tt|skip_existing}} 
|{{c|1}}
|保持现有文件，不报告错误。
|-
|{{tt|overwrite_existing}}
|{{c|2}}
|替换现有文件。
|-
|{{tt|update_existing}}
|{{c|4}}
|仅当现有文件比被复制文件更旧时替换它。
|-
!colspan=3|控制 {{ltt|cpp/experimental/fs/copy|copy()}} 对子目录效果的选项
|-
|{{tt|none}}
|{{c|0}}
|跳过子目录（默认行为）。
|-
|{{tt|recursive}}
|{{c|8}}
|递归复制子目录及其内容。
|-
!colspan=3|控制 {{ltt|cpp/experimental/fs/copy|copy()}} 对符号链接效果的选项
|-
|{{tt|none}}
|{{c|0}}
|跟随符号链接（默认行为）。
|-
|{{tt|copy_symlinks}}
|{{c|16}}
|复制符号链接为符号链接，而非其所指向的文件。
|-
|{{tt|skip_symlinks}}
|{{c|32}}
|跳过符号链接。
|-
!colspan=3|控制 {{ltt|cpp/experimental/fs/copy|copy()}} 执行的复制种类的选项
|-
|{{tt|none}}
|{{c|0}}
|复制文件内容（默认行为）。
|-
|{{tt|directories_only}}
|{{c|64}}
|复制目录结构，但不复制任何非目录文件。
|-
|{{tt|create_symlinks}}
|{{c|128}}
|不复制文件，而是创建指向原文件的符号链接。注意：除非目标路径在当前目录中，否则原路径必须为绝对路径。
|-
|{{tt|create_hard_links}}
|{{c|256}}
|不复制文件，而是创建指向与原路径解析为相同文件的硬链接。
|}

===示例===
{{cpp/experimental/fs/copy_example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc copy}}
{{dsc inc|cpp/experimental/fs/dsc copy_file}}
{{dsc end}}