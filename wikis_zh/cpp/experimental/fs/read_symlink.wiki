{{cpp/experimental/fs/title|read_symlink}}
{{cpp/experimental/fs/navbar}}
{{dcl begin}}
{{dcl header|experimental/filesystem}}
{{dcl|since=fs_ts|1=
path read_symlink( const path&amp; p );
path read_symlink( const path&amp; p, error_code&amp; ec );
}}
{{dcl end}}

如果路径 {{c|p}} 指代某个符号链接，则返回指代该符号链接目标的新路径对象。

{{c|p}} 并不代表符号链接，是错误情况。

发生错误时无抛出重载返回空路径。

===参数===
{{par begin}}
{{par|p|到符号链接的路径}}
{{par|ec|用于无抛出重载中错误报告的输出形参}}
{{par end}}

===返回值===
符号链接的目标（它不必存在）。

===异常===
{{cpp/experimental/fs/error_handling|p}}

===示例===
{{example|code=
#include &lt;experimental/filesystem&gt;
#include &lt;iostream&gt;
namespace fs = std::experimental::filesystem;

int main()
{
    // 在典型 Linux 系统上，/lib/libc.so.6 是符号链接
    fs::path p = "/lib/libc.so.6";
    if (exists(p) &amp;&amp; is_symlink(p))
        std::cout &lt;&lt; p &lt;&lt; " -&gt; " &lt;&lt; read_symlink(p) &lt;&lt; '\n';
    else
        std::cout &lt;&lt; p &lt;&lt; " 不存在或不是符号链接\n";
}
|p=true
|output=
"/lib/libc.so.6" -&gt; "libc-2.12.so"
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/experimental/fs/dsc is_symlink}}
{{dsc inc|cpp/experimental/fs/dsc create_symlink}}
{{dsc inc|cpp/experimental/fs/dsc copy_symlink}}
{{dsc inc|cpp/experimental/fs/dsc status}}
{{dsc end}}