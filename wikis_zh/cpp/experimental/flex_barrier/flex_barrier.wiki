{{cpp/experimental/flex_barrier/title|flex_barrier}}
{{cpp/experimental/concurrency/flex_barrier/navbar}}

{{dcl begin}}
{{dcl|num=1|since=concurrency|1= 
explicit flex_barrier( std::ptrdiff_t num_threads );
}}
{{dcl|num=2|since=concurrency|1=
template&lt; class F &gt;
flex_barrier( std::ptrdiff_t num_threads, F completion );
}}
{{dcl|num=3|since=concurrency|1= 
flex_barrier( const flex_barrier &amp; ) = delete;
}}
{{dcl end}}

@1@ 拥有与 {{c|flex_barrier(num_threads, c)}} 相同的效果，其中 {{tt|c}} 是{{named req|Callable}}对象，其调用返回 -1 且无副效应。
@2@ 为 {{c|num_threads}} 个参与线程构造 {{tt|flex_barrier}}，将 {{c|completion}} 用于完成阶段。参与线程集合是前 {{c|num_threads}} 个到达同步点的线程。
@3@ 复制构造函数被弃置；{{tt|flex_barrier}} 不可复制。

===参数===
{{par begin}}
{{par | num_threads |{{tt|flex_barrier}} 的参与线程数；必须非负}}
{{par | completion |控制完成阶段的函数对象；必须以无实参{{named req|Callable}}并拥有 {{lc|std::ptrdiff_t}} 返回类型，调用时必须返回不小于 -1 的值且不抛出异常。}}
{{par hreq}}
{{par req named | F |CopyConstructible}}
{{par end}}

===注解===
若 {{c|num_threads}} 为零，则参与线程集合为空，而 {{tt|flex_barrier}} 只能被销毁。

{{langlinks|en}}