{{cpp/experimental/barrier/title|arrive_and_drop}}
{{cpp/experimental/concurrency/barrier/navbar}}
{{dcl begin}}
{{dcl | since=concurrency | 1=
void arrive_and_drop();
}}
{{dcl end}}

到达 {{tt|barrier}} 的同步点并从参与线程集合中移除当前线程。此函数是否阻塞直至完成阶段结束是未指定的。

若调用方线程不在此 {{tt|barrier}} 的参与线程集合中，则行为未定义。

对 {{tt|arrive_and_drop}} 的调用同步于 {{tt|barrier}} 的完成阶段的开始。如果调用被阻塞，则完成阶段的完成同步于从调用返回。

对 {{tt|arrive_and_drop}} 和 {{tt|arrive_and_wait}} 的调用决不引入与其自身或与彼此间的数据竞争。

===异常===
不抛出异常。

===注解===
若每个参与线程都调用 {{tt|arrive_and_drop()}}，则屏障只能被销毁。

一个线程在 {{tt|barrier}} 上调用 {{tt|arrive_and_drop()}} 后，它就不再是参与线程集合的成员，从而不能再于同一 {{tt|barrier}} 上调用 {{tt|arrive_and_drop()}} 或 {{tt|arrive_and_wait()}}。

===参阅===
{{dsc begin}}
{{dsc inc | cpp/experimental/barrier/dsc arrive_and_wait }}
{{dsc end}}

{{langlinks|en}}