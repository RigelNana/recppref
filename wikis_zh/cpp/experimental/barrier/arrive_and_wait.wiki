{{cpp/experimental/barrier/title|arrive_and_wait}}
{{cpp/experimental/concurrency/barrier/navbar}}
{{dcl begin}}
{{dcl | since=concurrency | 1=
void arrive_and_wait();
}}
{{dcl end}}

阻塞并到达屏障的同步点。

若调用方线程不在此 {{tt|barrier}} 的参与线程集合中，则行为未定义。

对 {{tt|arrive_and_wait}} 的调用同步于 {{tt|barrier}} 的完成阶段的开始。完成阶段的完成同步于从调用返回。

对 {{tt|arrive_and_drop}} 和 {{tt|arrive_and_wait}} 的调用决不引入与其自身或与彼此间的数据竞争。

===注解===
线程从此调用返回后，立即调用 {{tt|arrive_and_wait()}} 或 {{tt|arrive_and_drop()}} 是安全的。不需要确保在一个线程再次调用它时，所有线程都已退出 {{tt|arrive_and_wait()}}。

为 {{tt|num_threads}} 个线程构造的 {{tt|barrier}} 的参与线程集合是前 {{tt|num_threads}} 个到达其同步点的线程。此集合不在循环间更改，除非线程由于 {{tt|arrive_and_drop()}} 调用被移除出集合。

===异常===
不抛出异常。

===参阅===
{{dsc begin}}
{{dsc inc | cpp/experimental/barrier/dsc arrive_and_drop }}
{{dsc end}}

{{langlinks|en}}