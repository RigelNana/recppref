{{cpp/experimental/title|where}}
{{cpp/experimental/simd/navbar}}

{{dcl begin}}
{{dcl header|experimental/simd}}
{{dcl|since=parallelism_ts_2|num=1|
template&lt; class T, class Abi &gt;
where_expression&lt;simd_mask&lt;T, Abi&gt;, simd&lt;T, Abi&gt;&gt;
    where( const typename simd&lt;T, Abi&gt;::mask_type&amp; mask,
           simd&lt;T, Abi&gt;&amp; value ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=2|
template&lt; class T, class Abi &gt;
const_where_expression&lt;simd_mask&lt;T, Abi&gt;, const simd&lt;T, Abi&gt;&gt;
    where( const typename simd&lt;T, Abi&gt;::mask_type&amp; mask,
           const simd&lt;T, Abi&gt;&amp; value ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=3|
template&lt; class T, class Abi &gt;
where_expression&lt;simd_mask&lt;T, Abi&gt;, simd_mask&lt;T, Abi&gt;&gt;
    where( const type_identity_t&lt;simd_mask&lt;T, Abi&gt;&gt;&amp; mask,
           simd_mask&lt;T, Abi&gt;&amp; value ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=4|
template&lt; class T, class Abi &gt;
const_where_expression&lt;simd_mask&lt;T, Abi&gt;, const simd_mask&lt;T, Abi&gt;&gt;
    where( const type_identity_t&lt;simd_mask&lt;T, Abi&gt;&gt;&amp; mask,
           const simd_mask&lt;T, Abi&gt;&amp; value ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=5|
template&lt; class T &gt;
where_expression&lt;bool, T&gt;
    where( /* 见下文 */ mask, T&amp; value ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=6|
template&lt; class T &gt;
const_where_expression&lt;bool, const T&gt;
    where( /* 见下文 */ mask, const T&amp; value ) noexcept;
}}
{{dcl end}}

构造新的 {{rlpt|const_where_expression}} 或 {{rlpt|where_expression}}。

@1-6@ 从给定的掩码和值参数构造 ''where_expression''。

===参数===
@1-4@
{{par begin}}
{{par | mask |{{rlpt|simd_mask}} 对象}}
{{par | value |到应用掩码于其上的对象的引用}}
{{par end}}

@5,6@
{{par begin}}
{{par | mask |{{c/core|bool}} 类型掩码}}
{{par | value |到应用掩码于其上的标量的引用}}
{{par end}}

===返回值===
构造的 {{c|const_where_expression}} 或 {{rlpt|where_expression}}。

===注解===
@5,6@ 使用掩码的实现定义类型，以之禁用从其他类型到 {{c/core|bool}} 的隐式转换。

===示例===
{{example}}

{{langlinks|en}}