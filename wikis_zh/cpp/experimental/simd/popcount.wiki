{{cpp/experimental/title|popcount}}
{{cpp/experimental/simd/navbar}}

{{dcl begin}}
{{dcl header|experimental/simd}}
{{dcl|since=parallelism_ts_2|
template&lt; class T, class Abi &gt;
int popcount( const simd_mask&lt;T, Abi&gt;&amp; k ) noexcept;
}}
{{dcl end}}

返回掩码 {{c|k}} 中的 {{c/core|true}} 值数量。

===参数===
{{par begin}}
{{par|k|要运用归约的 {{rlpt|simd_mask}}}}
{{par end}}

===返回值===
范围 {{range|0|simd_size_v&lt;T, Abi&gt;}} 中的一个 {{c/core|int}} 值。

===示例===
{{example
|code=
#include &lt;cstddef&gt;
#include &lt;experimental/simd&gt;
#include &lt;iostream&gt;
namespace stdx = std::experimental;
 
template&lt;typename Abi&gt;
int count_zeros(stdx::simd&lt;int, Abi&gt; v)
{
    return stdx::popcount(v == 0); // v == 0 returns a simd_mask
}
 
void println(auto rem, auto const v)
{
    std::cout &lt;&lt; rem &lt;&lt; ": ";
    for (std::size_t i = 0; i != v.size(); ++i)
        std::cout &lt;&lt; v[i] &lt;&lt; ' ';
}
 
int main()
{
    stdx::simd&lt;int&gt; x{8};
    println("x", x);
    std::cout &lt;&lt; "  zeros: " &lt;&lt; count_zeros(x) &lt;&lt; '\n';
 
    x[3] = x[1] = false;
    println("x", x);
    std::cout &lt;&lt; "  zeros: " &lt;&lt; count_zeros(x) &lt;&lt; '\n';
}
|p=true
|output=
x: 8 8 8 8   zeros: 0
x: 8 0 8 0   zeros: 2
}}