{{cpp/experimental/title|split, split_by}}
{{cpp/experimental/simd/navbar}}

{{dcl begin}}
{{dcl header|experimental/simd}}
{{dcl|since=parallelism_ts_2|num=1|
template&lt; std::size_t... Sizes, class T, class Abi &gt;
std::tuple&lt;simd&lt;T, simd_abi::deduce_t&lt;T, Sizes&gt;&gt;...&gt;
    split( const simd&lt;T, Abi&gt;&amp; v ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=2|
template&lt; std::size_t... Sizes, class T, class Abi &gt;
std::tuple&lt;simd_mask&lt;T, simd_abi::deduce_t&lt;T, Sizes&gt;&gt;...&gt;
    split( const simd_mask&lt;T, Abi&gt;&amp; v ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=3|
template&lt; class V, class Abi &gt;
std::array&lt;V, simd_size_v&lt;typename V::value_type, Abi&gt; / V::size()&gt;
    split( const simd&lt;typename V::value_type, Abi&gt;&amp; v ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=4|
template&lt; class V, class Abi &gt;
std::array&lt;V, simd_size_v&lt;typename V::value_type, Abi&gt; / V::size()&gt;
    split( const simd_mask&lt;typename V::value_type, Abi&gt;&amp; v ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=5|
template&lt; size_t N, class T, class A &gt;
array&lt;resize_simd&lt;simd_size_v&lt;T, A&gt; / N, simd&lt;T, A&gt;&gt;, N&gt;
    split_by( const simd&lt;T, A&gt;&amp; v ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=6|
template&lt; size_t N, class T, class A &gt;
array&lt;resize_simd&lt;simd_size_v&lt;T, A&gt; / N, simd_mask&lt;T, A&gt;&gt;, N&gt;
    split_by( const simd_mask&lt;T, A&gt;&amp; v ) noexcept;
}}
{{dcl end}}

分割输入的 {{tt|simd}} 或 {{tt|simd_mask}} 对象到多个 {{tt|simd}} 或 {{tt|simd_mask}} 对象中。

@1-2@ 分割输入对象到潜在地类型不同的对象（例如拥有不同大小的类型）中。这些函数仅若 {{c|Sizes...}} 求和为 {{c|v.size()}} 才参与重载决议。

@3-4@ 分割输入对象到对象的数组中。这些函数不参与重载决议，除非
* 对于为 {{tt|simd}} 或 {{tt|simd_mask}} 的 {{c|v}}，数组元素必须分别拥有 {{tt|simd}} 或 {{tt|simd_mask}} 类型；
* {{c|simd_size_v&lt;typename V::value_type, Abi&gt;}} 是 {{c|V::size()}} 的整数倍。

@5,6@ 分割输入对象到对象的数组中。除非 {{c|simd_size_v&lt;T, A&gt;}} 是 {{tt|N}} 的整数倍，否则这些函数不参与重载决议。

===参数===
{{par begin}}
{{par | v |输入的 {{tt|simd}} 或 {{tt|simd_mask}} 对象}}
{{par end}}

===返回值===
@1,2@ 含有分割的 {{tt|simd}} 或 {{tt|simd_mask}} 对象的元组。
@3-6@ 含有分割的 {{tt|simd}} 或 {{tt|simd_mask}} 对象的数组。

===示例===
{{example}}

{{langlinks|en|ja}}