{{cpp/experimental/title|simd_cast|static_simd_cast}}
{{cpp/experimental/simd/navbar}}

{{dcl begin}}
{{dcl header|experimental/simd}}
{{dcl|since=parallelism_ts_2|num=1|
template&lt; class V, class T, class Abi &gt;
/* 见下文 */ simd_cast( const simd&lt;T, Abi&gt;&amp; v ) noexcept;
}}
{{dcl|since=parallelism_ts_2|num=2|
template&lt; class V, class T, class Abi &gt;
/* 见下文 */ static_simd_cast( const simd&lt;T, Abi&gt;&amp; v ) noexcept;
}}
{{dcl end}}

转型 simd 对象到另一 simd 对象。若 V 为 T，则返回 {{c|simd&lt;T, Abi&gt;}}；否则，若 V 为标量类型，则返回 {{c|simd&lt;V, simd_abi::fixed_size&lt;simd&lt;T, Abi&gt;::size()&gt;&gt;}}。否则，V 必须是 simd 类型，而函数返回 V。

@1@ 除非以下情况，否则此函数不参与重载决议：
* 输入元素的每个可能值都能以输出元素表示，
* {{c|is_simd_v&lt;V&gt;}} 为 false 或 {{c|V::size()}} 为 {{c|simd&lt;T, Abi&gt;::size()}}。

@2@ 此函数仅若 {{c|is_simd_v&lt;V&gt;}} 或 {{c|V::size()}} 为 {{c|simd&lt;T, Abi&gt;::size()}} 才参与重载决议。

===参数===
{{par begin}}
{{par | v |输入的 simd 对象}}
{{par end}}

===返回值===
第 i 元素初始化为 {{c|static_cast&lt;To&gt;(v[i])}} 的 simd 对象，其中 To 是指定的输出元素类型。

===注解===
TS 规范缺乏 {{c|simd_cast}} 和 {{c|static_simd_cast}} 对 {{c|simd_mask}} 的重载。libstdc++ 实现在 {{c|std::experimental::__proposed}} 命名空间中提供了缺少的重载。如果已经使用了
{{source|1=
namespace stdx = std::experimental;
}}
可能需要代之以使用
{{source|1=
namespace stdx {
  using namespace std::experimental;
  using namespace std::experimental::__proposed;
}
}}
另外，libstdc++ 在 {{c|simd_mask}} 中实现了 {{c|__cvt()}} 成员函数，它运行进行掩码的隐式转换。参见：https://github.com/VcDevel/std-simd/issues/41

===示例===
{{example}}

{{langlinks|en}}