{{title|开源 C++ 库列表}}
{{cpp/links/objectives}}

{{cot|库：目录}}
* [[#包管理器|包管理器]]
---- 
库:
* [[#音频|音频]]
** [[#音频:CD|CD]]
** [[#音频:音频指纹|音频指纹]]
** [[#音频:格式|格式]]
** [[#音频:标签|标签]]
* [[#性能评测|性能评测]]
* [[#通信|通信]]
* [[#并发|并发]]
* [[#配置|配置]]
** [[#配置:命令行|命令行]]
** [[#配置:CSS|CSS]]
** [[#配置:HOCON|HOCON]]
** [[#配置:JSON|JSON]]
** [[#配置:TOML|TOML]]
** [[#配置:XML|XML]]
** [[#配置:YAML|YAML]]
* [[#容器|容器]]
* [[#密码学|密码学]]
* [[#数据库|数据库]]
* [[#嵌入语言绑定|嵌入语言绑定]]
* [[#嵌入式.2F实时系统|嵌入式/实时系统]]
* [[#文件元数据|文件元数据]]
* [[#金融计算|金融计算]]
* [[#游戏引擎架构|游戏引擎架构]]
* [[#通用多媒体|通用多媒体]]
* [[#通用|通用]]
* [[#GPS|GPS]]
* [[#图形用户界面|图形用户界面]]
** [[#图形用户界面:CopperSpice|CopperSpice]]
** [[#图形用户界面:GTK+|GTK+]]
** [[#图形用户界面:Qt|Qt]]
** [[#图形用户界面:Ultimate++|Ultimate++]]
* [[#图形|图形]]
* [[#3D 图形|3D 图形]]
* [[#图像|图像]]
** [[#图像:格式|格式]]
** [[#图像:绘图|绘图]]
* [[#图像处理|图像处理]]
* [[#国际化|国际化]]
* [[#日志|日志]]
* [[#错误处理|错误处理]]
* [[#数学|数学]]
** [[#数学:自动机理论|自动机理论]]
** [[#数学:数值类库|数值类库]]
** [[#数学:计算几何|计算几何]]
** [[#数学:图论|图论]]
** [[#数学:线性代数|线性代数]]
** [[#数学:机器学习|机器学习]]
** [[#数学:数值计算|数值计算]]
** [[#数学:优化|优化]]
** [[#数学:符号表达式操作|符号表达式操作]]
* [[#元编程|元编程]]
* [[#PDF|PDF]]
* [[#物理与模拟|物理与模拟]]
* [[#机器人学|机器人学]]
** [[#机器人学:认知|机器人认知]]
* [[#序列化|序列化]]
** [[#序列化:二进制序列化|二进制序列化]]
* [[#排序|排序]]
* [[#系统|系统]]
* [[#终端|终端]]
* [[#测试|测试]]
* [[#文本|文本]]
** [[#文本:编码|编码]]
** [[#文本:Diff/Patch|Diff/Patch]]
** [[#文本:格式化|格式化]]
** [[#文本:语法分析|语法分析]]
** [[#文本:搜索|搜索]]
** [[#文本:模板引擎|模板引擎]]
* [[#版本控制|版本控制]]
* [[#视频|视频]]
* [[#Web|Web]]
{{cob}}


=包管理器=
{{cpp/links/package managers}}

=库=

==音频==

{{libtablebegin}}
{{librow | Amplitude Audio SDK | https://amplitudeaudiosdk.com | 一款为游戏需求而设计的跨平台音频引擎。([https://github.com/SparkyStudios/AmplitudeAudioSDK 源码]) | Apache-2.0 | cmake, vcpkg}}
{{librow | Aquila | https://github.com/zsiciarz/aquila | Aquila 是一个开源、跨平台的 C++11 DSP 库。 | MIT | cmake}}
{{librow | Aubio | https://aubio.org/ | 用于音频和音乐分析的 C/Python 库。([https://github.com/aubio/aubio 源码]) | GPL-3.0 | make}}
{{librow | audioFlux | https://github.com/libAudioFlux/audioFlux | 用于音频和音乐分析与特征提取的 C 库。| MIT | }}
{{librow | Essentia | https://essentia.upf.edu/index.html | 开源库，音频和音乐分析、描述和合成工具 (MIR) [https://github.com/MTG/essentia (源码)] | [http://www.gnu.org/licenses/agpl.html Affero GPLv3] }}
{{librow | FFTW | http://www.fftw.org/ | 离散傅里叶变换 (DFT) 计算库 (SSE/SSE2/AVX/Altivec/ARM Neon)。[https://github.com/FFTW/fftw3 (源码)] | GPL-2.0 | cmake }}
{{librow | FMOD | http://www.fmod.org/ | 一款易用的跨平台游戏音频引擎和音频内容创建工具。| 非商用免费/商用 | cmake}}
{{librow | KFR | https://www.kfrlib.com | 快速、现代、C++17、开源并且跨平台的 DSP/DFT 框架。支持音频重采样、FIR/IIR 滤波器、二阶滤波器, (SSE, AVX, AVX-512, ARM NEON)。[https://github.com/kfrlib/kfr (源码)] | GPL-2.0 | cmake}}
{{librow | libsoundio | http://libsound.io/ | 用于跨平台实时音频输入输出的 C 库。([https://github.com/andrewrk/libsoundio 源码]) | MIT | cmake}}
{{librow | Maximilian | https://github.com/micknoise/Maximilian | C++ 音频和音乐 DSP 库。| MIT | cmake}}
{{librow | Miniaudio | https://miniaud.io/ | 音频回放和捕获 C 库。([https://github.com/mackron/miniaudio 源码]) | [https://github.com/mackron/miniaudio#License-1-ov-file Unlicense] | 单源文件}}
{{librow | ni-media | https://github.com/NativeInstruments/ni-media | 用于读取并写入音频文件的 C++ 库。| MIT | cmake, vcpkg}}
{{librow | OpenAL | http://www.openal.org/ | 跨平台音频 API。| BSD/LGPL/私有 | cmake}}
{{librow | PortAudio | http://www.portaudio.com/ | PortAudio 是一款自由的跨平台开源音频 I/O 库。([https://github.com/PortAudio/portaudio 源码]) | MIT | cmake, vcpkg}}
{{librow | rnnoise | https://github.com/xiph/rnnoise | 用于音频降噪的递归神经网络。 | BSD-3-Clause | make}}
{{librow | SELA | https://github.com/sahaRatul/sela | 简单无损音频 (SimplE Lossless Audio)。| MIT | cmake}}
{{librow | SoLoud | https://github.com/jarikomppa/soloud | 易用可移植游戏音频引擎。| zlib | }}
{{librow | Soundtouch | http://www.surina.net/soundtouch/ | SoundTouch 是一个开源、跨平台的音频处理库，用于更改音频流或音频文件的速度、音调和播放速率。[https://gitlab.com/soundtouch/soundtouch (源码)] | [https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html LGPL-2.1] | make}}
{{librow | Tonic | https://github.com/TonicAudio/Tonic | 易用且高效的 C++ 音频合成。| [https://github.com/TonicAudio/Tonic#Unlicense-1-ov-file Unlicense] | }}
{{librow | Verovio | https://www.verovio.org | 快速且轻量级音乐记谱库。([https://github.com/rism-ch/verovio 源码]) | LGPL | cmake, qmake}}
{{librow | Wav2Letter++ | https://github.com/facebookresearch/wav2letter/ | 快速语音识别工具包，完全以 C++ 编写，使用 ArrayFire 张量库和 flashlight 机器学习库以最大化效率。| [https://github.com/flashlight/wav2letter#License-1-ov-file Unlicense] | cmake}}
{{libtableend}}

{{anchor|音频:CD}}
; CD

{{libtablebegin}}
{{librow | libkcompactdisc | https://github.com/KDE/libkcompactdisc | CD 接口库 | GPL v2.0 | cmake}}
{{libtableend}}

{{anchor|音频:音频指纹}}
; 音频指纹

{{libtablebegin}}
{{librow | chromaprint | https://acoustid.org/chromaprint | Chromaprint 是一个音频指纹库，设计用于识别近乎相同的音频。它为搜索性能付出一定精度和健壮性。Chromaprint 可以使用多个 FFT 库 - FFmpeg, FFTW3, KissFFT 或 vDSP。（[https://github.com/acoustid/chromaprint 源码]） | MIT, LGPL-2.1 | cmake}}
{{librow | libmusicbrainz | https://musicbrainz.org/doc/libmusicbrainz | MusicBrainz 客户端库 (libmusicbrainz)，也称为 mb_client，是一个开发库，面向需要为自己的应用程序添加 MusicBrainz 查找能力的开发人员。支持 Windows, Linux 和 Mac OS X （[https://github.com/metabrainz/libmusicbrainz 源码]） | LGPL-2.1 | cmake}}
{{librow | libofa | https://github.com/tanob/libofa/ | MusicIP 开源音频指纹库 | [https://github.com/tanob/libofa/blob/master/COPYING APL] | makefile}}
{{libtableend}}

{{anchor|音频:格式}}
; 格式

{{libtablebegin}}
{{librow | AudioFile | https://github.com/adamstark/AudioFile | 用于读写音频文件的简单 C++ 库。 | MIT | cmake}}
{{librow | audio_file | http://audiofile.68k.org/ | 一款处理许多常见格式音频文件的读取和写入的库。（[https://github.com/mpruett/audiofile/ 源码]）| LGPL-2.1 | makefile}}
{{librow | dr_libs | https://github.com/mackron/dr_libs | 单文件音频 (FLAC, MP3, WAV) 解码库，用于 C 和 C++。 | [https://github.com/mackron/dr_libs#License-1-ov-file Unlicense] | }}
{{librow | flac | https://xiph.org/flac/ | FLAC 代表 '''F'''ree '''L'''ossless '''A'''udio '''C'''odec，意思是以 FLAC 格式压缩的音频没有质量损失。FLAC 是最快且最广泛支持的无损音频编解码器，非私有软件，不受专利拖累。 | [http://opensource.org/docs/definition.php 开源], BSD, GPL}}
{{librow | LAME | https://lame.sourceforge.io/using.php | LAME 是一款高质量 MPEG Audio Layer III (MP3) 编码器。| LGPL | }}
{{librow | libsndfile | http://www.mega-nerd.com/libsndfile/ | 一款提供 C++ 包装的 C 库，用于通过一个标准库接口读写包含声音采样的文件（如 WAV、AIFF）。([https://github.com/erikd/libsndfile/ 源码]) | LGPL-2.1 | cmake, make, vcpkg}}
{{librow | minimp3 | https://github.com/lieff/minimp3 | 极简化的 MP3 解码器| [https://github.com/lieff/minimp3#CC0-1.0-1-ov-file CC0-1.0] | 仅头文件}}
{{librow | Opus | http://opus-codec.org/ | 完全开放的，免版税的，多用途音频编码解码器。| BSD | cmake}}
{{librow | Vorbis | http://xiph.org/vorbis/ | Ogg Vorbis 是一款完全开放的，无私权的，免专利和版税的，通用的压缩音频格式。| BSD | cmake}}
{{libtableend}}

{{anchor|音频:标签}}
; 标签

{{libtablebegin}}
{{librow | id3lib | http://id3lib.sourceforge.net/ | 开源跨平台库，用于读写并操作 ID3v1 和 ID3v2 标签，以及获取一些如比特率之类的基本 mp3 文件头信息。但现在我们建议迁移到 [https://taglib.org/ taglib] :) | LGPL v2}}
{{librow | taglib | https://taglib.org/ | TagLib 音频元数据库是用于读写多种流行音频格式的库：MP3 文件的 ID3v1 和 ID3v2，Ogg Vorbis 注释，以及 FLAC, MPC, Speex, WavPack, TrueAudio, WAV, AIFF, MP4 和 ASF 文件的 ID3 标签和 Vorbis 注释。([https://github.com/taglib/taglib 源码]) | [http://www.gnu.org/licenses/lgpl.html LGPL] 和 [http://www.mozilla.org/MPL/MPL-1.1.html MPL v1.1]}}
{{libtableend}}

==性能评测==

{{libtablebegin}}
{{librow | benchmark | https://github.com/google/benchmark | 用于评测代码片段的库，类似单元测试 | Apache-2.0 | cmake}}
{{librow | Celero | https://github.com/DigitalInBlue/Celero | 功能强大的 C++ 评测库/框架。支持 Windows, Linux, 和 OSX，使用 C++11。 | Apache | cmake}}
{{librow | Criterion | https://github.com/p-ranav/criterion | 用于现代 C++ 的微评测库。| MIT | header-only; cmake}}
{{librow | gperftools | https://github.com/gperftools/gperftools | “谷歌性能工具”包含高性能、多线程的 malloc 实现加上评测堆分配和 CPU 利用的工具。 | BSD 3-Clause "New" or "Revised" License | configure}}
{{librow | nanobench | https://nanobench.ankerl.com | 简单、快速、精确的单头文件微评测功能库，用于 C++11/14/17/20。([https://github.com/martinus/nanobench 源码]) | MIT | header-only; cmake}}
{{librow | picobench | https://github.com/iboB/picobench | 极小型微评测库。| MIT | 仅头文件; cmake}}
{{librow | plf::nanotimer | https://github.com/mattreecebentley/plf_nanotimer | 用于性能评测的最低开销、跨平台的简单定时器类。| zlib}}
{{libtableend}}

==通信==

{{libtablebegin}}
{{librow | ACE | https://www.dre.vanderbilt.edu/~schmidt/ACE.html | 异步网络、多路分离、报文发送([https://github.com/DOCGroup/ACE_TAO 源码]) ([https://www.dre.vanderbilt.edu/Doxygen/ 文档]) | [https://github.com/DOCGroup/ACE_TAO/blob/master/ACE/COPYING 自定义] | make}}
{{librow | Apache Thrift | https://thrift.apache.org/ | Apache Thrift 软件框架，用于规模可变的跨语言服务开发，将软件栈与代码生成引擎结合，构建有效而无缝地在 C++、Java、Python、PHP、Ruby、Erlang、Perl、Haskell、C#、Cocoa、JavaScript、Node.js、Smalltalk、Ocaml、Delphi 及其他语言间工作的服务。([https://github.com/apache/thrift 源码]) | Apache-2.0 | cmake, vcpkg}}
{{librow | Boost.Asio | http://boost.org/libs/asio/ | 异步及同步网络、定时器、序列 I/O | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Beast | http://boost.org/libs/beast/ | 建立于 Boost.Asio 顶上的 HTTP 及 WebSocket 库 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Breep | https://github.com/Organic-Code/Breep | 基于事件、高层、点对点库，允许用户直接发送和接收对象。 | European Union Public License 1.1 | cmake}}
{{librow | brpc | https://brpc.apache.org | 百度广泛使用的工业级 RPC 框架，百万以上实例和数千种服务。([https://github.com/apache/incubator-brpc/ 源码]) ([https://brpc.apache.org/docs/ 文档]) | Apache 2.0 | cmake}}
{{librow | C++ REST SDK | https://github.com/Microsoft/cpprestsdk | 异步 HTTP 客户端及监听器、异步 Stream、URI、JSON | MIT | cmake}}

{{librow | cpp-httplib | https://github.com/yhirose/cpp-httplib | C++11 仅单个头文件的跨平台 HTTP/HTTPS 库 | MIT | 仅头文件; cmake}}
{{librow | FPNN | https://github.com/highras/fpnn | Fast Programmable Nexus Network. 高性能全异步 RPC 服务框架。同时支持HTTP、WebSocket、TCP和可靠UDP。支持超高压服务器开发，有对应各语言客户端SDK。 |  | make}}
{{librow | cpp-netlib | https://github.com/cpp-netlib/cpp-netlib | cpp-netlib：C++ 网络库 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | cmake}}
{{librow | cpr | https://github.com/whoshuu/cpr | 现代 C++ HTTP 请求库 | MIT | cmake}}
{{librow | Crow | https://github.com/ipkn/crow | C++ 微型 web 框架（受 Python Flask 启发） | BSD-3-Clause | cmake}}
{{librow | curlpp | http://www.curlpp.org/ | libcURL（CURL 库）的 C++ 包装。([https://github.com/jpbarrette/curlpp 源码]) | | cmake, vcpkg}}
{{librow | DumaisLib | https://github.com/pdumais/DumaisLib | 多种工具，如：WebServer, JSON, WebSocket 服务器，REST 框架等（用于在你的 C++ 应用中创建 REST API 的库） | MIT | Makefile}}
{{librow | EasyHttp | https://github.com/sony/easyhttpcpp | 跨平台的 HTTP 客户端库，专注于可用性和速度，支持 http 响应缓存及更多 | MIT | cmake}}
{{librow | eCAL | https://github.com/continental/ecal | 高性能进程间通信 | Apache-2.0 | cmake}}
{{librow | fineftp-server | https://github.com/eclipse-ecal/fineftp-server | FTP 服务器库，支持 Windows 和 Unix | MIT | cmake}}
{{librow | FPNN | https://github.com/highras/fpnn | 高速可编程组连网络。高性能全异步 RPC 服务框架。同时支持 HTTP、WebSocket、TCP 和可靠 UDP 协议。支持超高负载服务器的开发，带有相应客户端 SDKs。 | 未知 | make}}
{{librow | gRPC | https://grpc.io/ | 现代开源高性能 RPC 框架，可运行于任何环境。([https://github.com/grpc/grpc 源码]) ([https://grpc.io/docs/ 文档]) | Apache-2.0 | bazel, cmake, vcpkg}}
{{librow | gsoap | http://gsoap2.sourceforge.net/ | XML 数据绑定、快速 WSDL/SOAP/XML 网络服务、WS 安全、 JSON/XML-RPC RESTful 服务的 C/C++ 开发工具套| GPLv2 | }}
{{librow | hmbdc | https://github.com/hmbdc-dev/hmbdc | 轻便高性能 C++17 消息发布/订阅中间件框架/库 | | 仅头文件}}

{{librow | HTTPP | https://github.com/daedric/httpp | 简单、C++14、生产就绪的构建在 Boost 上的 HTTP 服务器，及构建在 libcurl 上的客户端。 | BSD 2-Clause "Simplified" License | cmake, make}}
{{librow | IXWebSocket | https://github.com/machinezone/IXWebSocket | 无依赖的开源 WebSocket + HTTP 库，支持 SSL 和逐条消息 deflate 的 WebSocket 扩展。 | BSD 3-Clause "New" or "Revised" License | cmake, make}}
{{librow | KCP | https://github.com/skywind3000/kcp/blob/master/README.en.md | 快速可靠的 ARQ 协议，帮助应用减少网络延迟。 | MIT | cmake}}
{{librow | libashttp | https://github.com/tghosgor/libashttp | 异步 HTTP 客户端库 | GNU Lesser General Public License v3.0}}
{{librow | libjson-rpc-cpp | https://github.com/cinemast/libjson-rpc-cpp |
提供 C++ 跨平台 JSON-RPC（远程过程调用）支持的框架，完全兼容 JSON-RPC 2.0 &amp; 1.0。 | MIT | cmake, conan}}
{{librow | libnavajo | https://github.com/titi38/libnavajo | C++ 框架，提供快速多线程 http 服务器，HTML5 WebSocket，SSL，X509 和 HTTP 认证、压缩、Cookie 和高级绘画管理，IPv4 和 IPv6（CeCILL-C）。| CeCILL-C FREE SOFTWARE LICENSE AGREEMENT | cmake}}
{{librow | libtins | https://libtins.github.io/ | 网络包装制作及嗅探库 ([https://github.com/mfontanini/libtins 源码]) ([https://libtins.github.io/docs/latest/ 文档]) | BSD-2 | cmake, vcpkg}}
{{librow | LiteNetLibPP | https://github.com/Revan600/LiteNetLibPP | 用于游戏的轻便可靠 UDP 库 | MIT | cmake}}
{{librow | mailio | https://github.com/karastojko/mailio | MIME 和电子邮件库 | BSD 2-Clause "Simplified" | cmake}}
{{librow | nanomsg | https://nanomsg.org/ | 快速消息队列，zeromq 接任者}}
{{librow | netif | https://github.com/gmlc-tdc/netif | C++14 库，用于在 Windows、Linux 和 FreeBSD 上获取网络地址 | BSD 3-Clause "New" or "Revised" License | cmake}}}
{{librow | nghttp2 | https://github.com/nghttp2/nghttp2 | HTTP/2 C 库及工具（服务器、客户端、代理和评测工具） | MIT | cmake, configure}}
{{librow | ngrest | https://github.com/loentar/ngrest | 快速而简易的利用 JSON 的 RESTful Web 服务框架 | Apache-2.0 | cmake}}
{{librow | nng | https://nng.nanomsg.org/ | 快速消息队列，nanomsg 继任者}}
{{librow | Oat++ | https://oatpp.io/ | Web 框架: REST-API 和 Request 实现 ([https://github.com/oatpp/oatpp 源码]) ([https://oatpp.io/docs/start/ 文档]) | Apache 2.0 | cmake}}
{{librow | omniORB | http://omniorb.sourceforge.net | 最快速、完整而可移植的 CORBA ORB 在 C++ 中的实现}}
{{librow | OpenDDS | https://www.opendds.org | 数据分发服务 DDS (Data Distribution Service) 实现}}
{{librow | Paho MQTT | https://github.com/eclipse/paho.mqtt.cpp/ | 现代 MQTT C++ 客户端，来自 Eclipse |  | cmake}}
{{librow | paozhu | https://github.com/hggq/paozhu | C++20 Web 框架，支持 HTTP/2 ORM WebSocket | MIT | cmake}}
{{librow | PcapPlusPlus | https://seladb.github.io/PcapPlusPlus-Doc/ | 多平台 C++ 网络嗅探和包装分析及制作框架。为许多流行的包处理引擎提供 C++ 包装，包括 libpcap, Npcap, WinPcap, DPDK, AF_XDP, 和 PF_RING。([https://github.com/seladb/PcapPlusPlus 源码]) | [https://github.com/seladb/PcapPlusPlus#Unlicense-1-ov-file Unlicense] | conan, homebrew, cmake, vcpkg}}
{{librow | POCO | https://pocoproject.org/ | 网络：加密、HTTP；ZIP 文件 ([https://pocoproject.org/documentation.html 文档])}}
{{librow | rest_rpc | https://github.com/topcpporg/rest_rpc | C++11，高性能，跨平台，简单易用的 rpc 框架 | MIT | cmake}}
{{librow | restbed | https://github.com/corvusoft/restbed | 跨平台的功能丰富的框架，为 C++14 应用带来异步 RESTful 功能（HTTP 上的安全通信）。| [https://github.com/Corvusoft/restbed/blob/master/LICENSE 许可协议] | cmake}}
{{librow | restc-cpp | https://github.com/jgaa/restc-cpp | C++ 访问 JSON API。HTTP 客户端，原生 C++ 类到/自 JSON 的序列化，利用 boost::asio 协程的异步 IO。C++14。 | MIT | cmake}}
{{librow | restful_mapper | https://github.com/logandk/restful_mapper | 于 C++ 中消费 RESTful JSON API 的 ORM | | cmake, make}}
{{librow | seastar | https://github.com/scylladb/seastar | 用 C++14/C++17 实现的高性能服务器端应用框架。 | Apache-2.0 | cmake, etc.}}
{{librow | Silicon | https://siliconframework.org | Silicon C++14 Web 框架：快速而稳健的 Web API | MIT |cmake}}
{{librow | sockpp | https://github.com/fpagliughi/sockpp | 简单的现代 C++ 套接库 | BSD 3-Clause "New" or "Revised" License | cmake}}
{{librow | Simple C++ REST library | https://github.com/pdumais/rest | 在你的 C++ 应用中创建 REST API 的非常简单且自成文档的库}}
{{librow | stream-client | https://github.com/TinkoffCreditSystems/stream-client | 轻量的、基于 Boost 的客户端 socket/connector/socket pool/resolver | Apache-2.0 | 仅头文件；cmake}}
{{librow | tacopie | https://github.com/Cylix/tacopie/ | C++11 TCP 库 | MIT | cmake}}
{{librow | TAO | https://www.dre.vanderbilt.edu/~schmidt/TAO.html | CORBA}}
{{librow | taox11 | https://www.taox11.org | 基于 C++11 的 CORBA 实现 | MIT}}
{{librow | Unicomm | http://libunicomm.org | 异步网络、高层 TCP 通信框架}}
{{librow | uvw | https://github.com/skypjack/uvw | C++17 编写的 [https://github.com/libuv/libuv libuv] （跨平台异步 I/O）包装 | MIT | cmake}}
{{librow | WNetWrap | https://github.com/hack-tramp/wnetwrap | C++ WinInet 包装 | MIT}}
{{librow | wvstreams | https://github.com/apenwarr/wvstreams | C++ 网络库，包括 UniConf 和一个便利 D-Bus API | GPL}}
{{librow | zeromq | http://zeromq.org/ | 快速消息队列}}
{{libtableend}}

==并发==

{{libtablebegin}}
{{librow | AdaptiveCpp | https://github.com/AdaptiveCpp/AdaptiveCpp | 提供针对 NVIDIA，AMD 和 Intel 的 CPU 和 GPU 的 SYCL 和 C++ 并行 STL offloading 编译器 | BSD-2-Clause | cmake}}
{{librow | Asyncpp | https://github.com/vishnuvijayanklm/Asyncpp | 一个异步 c++ 库，提供多种并发操作 | MIT | cmake}}
{{librow | BlockingCollection | https://github.com/CodeExMachina/BlockingCollection | C++11 线程安全、MPMC 阻塞队列、栈和优先级队列类 | GPL-3.0 | 仅头文件}}
{{librow | Boost.Atomic | https://www.boost.org/doc/libs/release/doc/html/atomic.html | 提供原子数据类型和这些数据类型上的操作，以及用于利用原子变量协调多个线程所需的内存定序制约。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Compute | https://github.com/kylelutz/compute | 基于 OpenCL 的 C++ GPU/并行计算库。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | cmake}}
{{librow | Boost.Context | https://www.boost.org/doc/libs/release/libs/context/doc/html/index.html | C++11 库，提供在单个线程上的协作多任务抽象。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Interprocess | https://www.boost.org/doc/libs/release/doc/html/interprocess.html | 提供许多简化进程间通信和同步机制使用的功能：共享内存、内存映射文件、信号量、互斥体、条件变量和可更新互斥体类型，具名版本的同步对象、文件锁、消息队列等。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Lockfree | https://www.boost.org/doc/libs/release/doc/html/lockfree.html | 提供无阻塞（即免锁）并发数据结构：队列、栈和循环缓冲区 (spsc_queue)。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.MPI | https://www.boost.org/doc/libs/release/doc/html/mpi.html | C++ 友好的标准 [https://www.mpi-forum.org/ 消息传递接口 (MPI)] | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Thread | https://www.boost.org/doc/libs/release/doc/html/thread.html | 支持带有共享数据的多线程执行，并提供用于线程间同步数据的方法。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | concurrencpp | https://github.com/David-Haim/concurrencpp | C++ 的现代并发库。支持任务、执行器、定时器和 C++20 协程。 | MIT | cmake}}
{{librow | Cpp-Taskflow | https://github.com/cpp-taskflow/cpp-taskflow | 带任务依赖的快速 C++ 并行编程}}
{{librow | dispenso | https://github.com/facebookincubator/dispenso | C++ 的高性能并发。parallel_for, 未来 (future), 管线, 定时器, 定时/周期性任务, 以及并发数据结构。| MIT | cmake}}
{{librow | Highway | https://github.com/google/highway | 提供性能可移植、长度无关的 SIMD/vector 指令。支持: SSE3, SSE4, AVX*, NEON, SVE*, WASM SIMD, RISC-V, POWER. ([https://github.com/google/highway/tree/master/g3doc 文档]) | [https://github.com/google/highway/blob/master/LICENSE Apache-2.0] | cmake}}
{{librow | hipSYCL | https://github.com/illuhad/hipSYCL | | BSD-2-Clause License | cmake }}
{{librow | HPX | https://github.com/STEllAR-GROUP/hpx/ | 任何规模的并行和分布式应用的通用 C++ 运行时系统（[https://hpx.stellar-group.org/about/ 文档]） | BSL-1.0 | cmake, vcpkg}}
{{librow | Intel TBB | https://software.intel.com/content/www/us/en/develop/tools/threading-building-blocks.html
| Intel® TBB 是一个用于共享内存并行编程和异构计算的跨平台 C++ 库。该库提供：通用并行算法，并发容器，规模可扩展的内存分配器，任务窃取任务调度器，以及低级同步原语。([https://github.com/oneapi-src/oneTBB 源码]) ([https://software.intel.com/content/www/us/en/develop/tools/threading-building-blocks/documentation.html 文档]) | [https://github.com/oneapi-src/oneTBB/blob/tbb_2020/LICENSE Apache-2.0] 或商用 | cmake, make}}
{{librow | KOKKOS | https://github.com/kokkos/kokkos | C++ 中的编程模型，用于书写高性能可移植的 HPC 应用，使用 CUDA, HIP, SYCL, HPX, OpenMP 和 C++ 线程为后端 ([https://kokkos.github.io/kokkos-core-wiki/programmingguide.html 文档]) | [https://github.com/kokkos/kokkos#License-1-ov-file 自定义] | cmake, make}}
{{librow | libopenmpi | https://www.open-mpi.org/ | Open MPI 项目是一种开源消息传递接口（MPI）实现 | [https://www.open-mpi.org/community/license.php 3-clause BSD ]}}
{{librow | libsimdpp | https://github.com/p12tic/libsimdpp | 可移植的零开销 C++ 低级 SIMD 库。| Boost | header-only; cmake}}&lt;!-- 更适合在“并行”节中，若某天它出现--&gt;
{{librow | MPL | https://github.com/rabauke/mpl | C++-17 友好的标准[https://www.mpi-forum.org/ 消息传递接口（MPI）] | BSD 3-Clause "New" or "Revised" | 仅头文件; cmake}}
{{librow | MutexGear | https://github.com/oleh-derevenko/mutexgear | 仅使用互斥体的同步（轮子、读写锁、工作队列）C/C++11 库 | [https://github.com/oleh-derevenko/mutexgear/blob/master/License-MutexGear.txt The MutexGear Library] | configure, msvc, make}}
{{librow | OpenMP | https://www.openmp.org/specifications/ | 用于并行编程的 OpenMP API 规范}}
{{librow | PoCL | http://portablecl.org/index.html | OpenCL 标准的可移植开源 (基于 LLVM) 实现。([https://github.com/pocl/pocl 源码]) ([http://portablecl.org/docs/html 文档]) | MIT | cmake}}
{{librow | RaftLib | https://raftlib.io | C++17 流式并发行为体（actor），可以进行并行数据流计算 | Apache-2.0 | cmake}}
{{librow | SObjectizer | https://sourceforge.net/projects/sobjectizer/ | 通过行为体和发布/订阅模型，简化开发 C++ 并发和事件驱动应用的小型框架。| BSD-3-Clause | cmake, vcpkg, conan}}
{{librow | stdgpu | https://github.com/stotko/stdgpu | 高效的 STL 风格的 GPU 数据结构 | Apache 2.0 | cmake}}
{{librow | subprocess | https://github.com/benman64/subprocess | 用于运行子进程的 C++17/20 跨平台库 | MIT | cmake, teaport}}
{{librow | Taskflow | https://github.com/taskflow/taskflow | 现代 C++ 并行任务编程 | [https://github.com/taskflow/taskflow/blob/master/LICENSE TASKFLOW MIT] | cmake}}
{{librow | task-thread-pool | https://github.com/alugowski/task-thread-pool | C++11 的快速且轻便的线程池。| BSD-2-Clause 或 MIT 或 BSL-1.0 | cmake, vcpkg, single header}}
{{librow | ThreadPool | https://github.com/hosseinmoein/Leopard | 简单的轻型线程池 | BSD-3-Clause | 仅头文件; cmake, make}}
{{librow | thread_pool | https://github.com/DeveloperPaul123/thread-pool | 现代、快速、轻便线程池 | [https://github.com/DeveloperPaul123/thread-pool/blob/master/LICENSE MIT] | cmake}}
{{librow | Thrust | http://thrust.github.io/ | 基于 CUDA、TBB 或 OpenMP 的仿 STL 并行算法及数据结构| [https://github.com/NVIDIA/thrust#licensing Apache v2.0, Boost v1.0.] | cmake}}
{{librow | TimerAlarm | https://github.com/hosseinmoein/Cheetah | 基于线程的定时器和闹钟。| BSD-3-Clause | 仅头文件; cmake, make}}
{{librow | VexCL | https://github.com/ddemidov/vexcl | OpenCL、CUDA、OpenMP 的 C++ 向量表达式模板库 | MIT | cmake}}
{{librow | ViennaCL | http://viennacl.sourceforge.net/ | 带 OpenMP、CUDA 及 OpenCL 后端的线性代数及算法。([https://viennacl.sourceforge.net/viennacl-download.html 源码]) ([https://viennacl.sourceforge.net/viennacl-documentation.html 文档]) | 自定义 | cmake}}
{{librow | Xenium | https://github.com/mpoeter/xenium | C++17 库，提供多种并发数据结构和回收方案。| MIT | 仅头文件; cmake}}
{{libtableend}}

==配置==

{{libtablebegin}}
{{librow | Boost.Program_options | https://www.boost.org/doc/libs/release/doc/html/program_options.html | 该库允许通过命令行、配置文件、环境变量等传统方式获得用户输入的（名称，值）对作为程序选项。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | figcone | https://github.com/kamchatka-volcano/figcone | 通过声明结构体来读取 JSON, YAML, TOML, XML 或 INI 配置数据 | MS-PL | cmake}}
{{librow | gconfmm | https://www.gtkmm.org/ | 流行 GUI 库 GTK 的跨平台（官方）C++ 接口，包括类型安全的回调，以及一组丰富的易于通过继承扩展的部件。'''gtkmm''' 使用 STL，包括 {{lc|std::string|string}}、容器和迭代器。支持 UTF8。([https://gitlab.gnome.org/GNOME/glibmm/ 源码]) ([https://www.gtkmm.org/en/documentation.html 文档]) | [https://gitlab.gnome.org/GNOME/glibmm/-/blob/master/COPYING LGPLv2.1] | autotools, meson, make}}
{{librow | libconfig | https://www.hyperrealm.com/oss_libconfig.shtml | 一个简单的跨平台 C/C++ 库，用于处理结构化配置文件 ({{c/core|"*.cfg"}}) ([https://github.com/hyperrealm/libconfig 源码]) ([https://www.hyperrealm.com/libconfig/libconfig_manual.html 文档]) | LGPL 2.1 | autotools, cmake, make}}
{{librow | libconfini | https://github.com/madmurphy/libconfini | 以 C 编写的跨平台 INI 分析器 ([https://madmurphy.github.io/libconfini/html/index.html 文档]) | GPL-3.0 | autotools, make}}
{{librow | uconfig | https://github.com/TinkoffCreditSystems/uconfig | 轻量级 C++17 配置库 | Apache License 2.0 | 仅头文件; cmake}}
{{libtableend}}

{{anchor|配置:命令行}}
; 命令行

{{libtablebegin}}
{{librow | Argh! | https://github.com/adishavit/argh | 极简化参数处理。| BSD 3-Clause | 仅头文件; cmake, vcpkg}}
{{librow | argparse (hbristow) | https://github.com/hbristow/argparse | 用于解析命令行参数的 C++ 类，具有与 python 的同名类相似的接口。| BSD |}}
{{librow | argparse (morrisfranken) | https://github.com/morrisfranken/argparse | 用于以优雅方式解析命令行参数的轻型库。| Apache 2 | 仅头文件; cmake}}
{{librow | argparse (p-ranav) | https://github.com/p-ranav/argparse | 用于 C++17 的命令行参数解析器。| MIT | 仅头文件; cmake, vcpkg}}
{{librow | args | https://github.com/Taywee/args | 简单的 C++ 参数解析器库。| MIT | 仅头文件; cmake, conan, meson, vcpkg}}
{{librow | Boost.Program_options | https://www.boost.org/doc/libs/release/doc/html/program_options.html | 该库允许通过命令行、配置文件、环境变量等传统方式获得用户输入的（名称，值）对作为程序选项。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | CLI11 | https://github.com/CLIUtils/CLI11 | C++11 命令行分析器，提供一组丰富功能和一个简单直观的接口。 | BSD-3-Clause | 仅头文件; cmake, meson, vcpkg}}
{{librow | clipp | https://github.com/muellan/clipp | 用于现代 C++ 的强大且有表达力的参数解析。| MIT | 仅头文件; cmake, vcpkg}}
{{librow | cmd_line_parser | https://github.com/jermp/cmd_line_parser | 用于 C++17 的命令行解析器。 | MIT | 仅头文件; cmake}}
{{librow | cmdlime | https://github.com/kamchatka-volcano/cmdlime | 用于命令行解析的 C++17 库，提供精简的声明式接口，并支持子命令，验证器，以及选择 GNU, POSIX, 或 X11 命令行选项格式的能力。 | MS-PL | cmake}}
{{librow | cxxopts | https://github.com/jarro2783/cxxopts | 轻量级 C++11/C++17 命令行参数选项分析器，支持标准 GNU 风格的选项语法。 | MIT | 仅头文件; bazel, cmake}}
{{librow | fire-hpp | https://github.com/kongaskristjan/fire-hpp | 使用函数签名创建全功能的 CLI。| BSL-1.0 | 仅头文件; cmake}}
{{librow | flags | https://github.com/sailormoon/flags | 简单可扩展的 C++17 参数解析器。| [http://unlicense.org/ Unlicense] | 仅头文件; cmake}}
{{librow | gflags | https://gflags.github.io/gflags/ | 实现了命令行参数选项处理的库。它包含对 string 等标准类型的自建支持，并可以在所使用的的源文件中定义参数选项。 | BSD | cmake}}
{{librow | structopt | https://github.com/p-ranav/structopt | 通过定义结构体来解析命令行参数。| MIT | 仅头文件; cmake}}
{{librow | tclap | https://sourceforge.net/projects/tclap/ | 一个用于命令行参数选项分析的简洁的模板化的 C++ 库。该库提供简洁而灵活的面向对象接口。 | MIT | cmake}}
{{libtableend}}

{{anchor|配置:CSS}}
; CSS

{{libtablebegin}}
{{librow | mycss | https://github.com/lexborisov/mycss | CSS 解析器}}
{{libtableend}}

{{anchor|配置:HOCON}}
; HOCON

{{libtablebegin}}
{{librow | cpp-hocon | https://github.com/puppetlabs/cpp-hocon/tree/master/lib/src | Pupplet 开发的 HOCON 格式的 C++ 实现。}}
{{libtableend}}

{{anchor|配置:JSON}}
; JSON

{{libtablebegin}}
{{librow | ArduinoJson | https://github.com/bblanchon/ArduinoJson | 用于 Arduino, IoT 和 嵌入式 C++ 的 C++98/11/14/17 JSON 库 | MIT | cmake}}
{{librow | Boost.JSON | https://www.boost.org/doc/libs/release/libs/json/doc/html/index.html | C++11/17 的 JSON 解析、序列化和 DOM | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | cajun-jsonapi | https://sourceforge.net/projects/cajun-jsonapi/ | JSON 的 C++ API，提供尽可能模仿标准 C++ 的直观精简的接口。 | | make}}
{{librow | DAW JSON Link | https://github.com/beached/daw_json_link | 提供带有类型检查的静态 C++ 绑定的 C++17 库，可以不进行库分配就直接分析用户数据，支持推/拉模型、分配器支持和 constexpr  | BSL 1.0 | cmake}}
{{librow | Glaze | https://github.com/stephenberry/glaze | 最快的 JSON 库之一，(C++23) 利用直接内存序列化。还支持 BEVE 和 CSV。 | MIT | cmake, conan, build2, vcpkg}}
{{librow | jansson | http://www.digip.org/jansson/ | Jansson 是编码、解码及操纵 JSON 数据的 C 库，支持 UTF-8。| MIT | cmake, make}}
{{librow | jeayeson | https://github.com/jeaye/jeayeson | 非常健全的 C++14 JSON 库 | BSD-3 | 仅头文件}}
{{librow | jios | https://github.com/castedo/jios | JSON 输入输出流 (JSON Input Output Streams) | MIT | cmake}}
{{librow | JOST | http://ddsbench.svn.sourceforge.net/viewvc/ddsbench/trunk/jost/}}
{{librow | json | https://github.com/nlohmann/json | Niels Lohmann 的 C++11 JSON，提供直观语法 | MIT | 仅头文件; bazel, cmake, meson}}
{{librow | Jsonifier | https://github.com/RealTimeChris/Jsonifier | 提供极快 JSON 解析/序列化功能的几个 C++20 类 | MIT | cmake}}
{{librow | JSON Voorhees | http://tgockel.github.io/json-voorhees/ | C++ 的杀手 JSON ([https://tgockel.github.io/json-voorhees/ 文档] | Apache-2.0 | cmake)}}
{{librow | JSON++ | https://bitbucket.org/tunnuz/json}}
{{librow | json-cpp | https://github.com/ascheglov/json-cpp}}
{{librow | json11 | https://github.com/dropbox/json11 | json11 是 C++11 的轻量 JSON 库，提供 JSON 分析及序列化。| MIT | cmake }}
{{librow | JsonBox | https://github.com/anhero/JsonBox | 用于轻易且快速读写 JSON 的 C++ 库。 | MIT | cmake }}
{{librow | swxJson | https://github.com/swxlion/swxjson | 目前使用最便利的C++JSON库。读写任何层级的复杂结构，只需一个函数调用。性能大概是RapidJSON的1/2。 | MIT | make }}
{{librow | jsoncons | https://github.com/danielaparker/jsoncons/ | JSON 与类 JSON 数据结构库，含 JSON Pointer、JSON Patch、JSONPath、CSV、MessagePack、CBOR、BSON、UBJSON。 | [https://github.com/danielaparker/jsoncons/blob/master/LICENSE 自定义] | 仅头文件}}
{{librow | jsoncpp | https://github.com/open-source-parsers/jsoncpp | 允许操作 JSON 值的库，包括序列化和反序列化，同时保留注释。| MIT | cmake, conan, vcpkg}}
{{librow | jsonme-- | https://github.com/pibara/jsonme--}}
{{librow | libjson | https://sourceforge.net/projects/libjson/}}
{{librow | minijson | https://giacomodrago.github.io/minijson/ | C++ 无 DOM 且免分配的 JSON 分析及序列化| [https://github.com/giacomodrago/minijson_reader/blob/master/LICENSE.txt 自定义] | cmake}}
{{librow | Neyson | https://github.com/Neyn/neyson | 轻量级 C++11 JSON 库 | BSD-3-Clause | cmake}}
{{librow | nosjob | https://fossil.wanderinghorse.net/r/nosjob | 用于生成和消费 JSON 数据的 C++98 库 | MIT | make}}
{{librow | qjson | http://qjson.sourceforge.net/}}
{{librow | rapidjson | https://github.com/miloyip/rapidjson | C++ 的快速 JSON 分析器/生成器，同时提供 SAX/DOM 风格 API，支持 UTF-8/16/32，可以使用 SIMD。 ([http://rapidjson.org/ 文档]) | [https://github.com/Tencent/rapidjson/blob/master/license.txt 自定义] | 仅头文件; cmake, vcpkg}}
{{librow | simdjson | https://github.com/simdjson/simdjson | 每秒解析 GB 级别的 JSON，利用现代未加工和 SIMD 并行化的优势 ([https://arxiv.org/abs/1902.08318 文档]) ([https://youtu.be/wlvKAT7SZIQ Kino]) | Apache-2.0 | cmake, vcpkg}}
{{librow | struct_mapping | https://github.com/bk192077/struct_mapping | 在 JSON 和 C++ 结构之间映射 | MIT | cmake}}
{{librow | swxJson | https://github.com/swxlion/swxjson | 当前使用中最方便的 C++JSON 库。可以用一个函数调用在复杂结构中的任意层进行读写。性能大约有 RapidJSON 的一半。 | MIT | make}}
{{librow | ThorsSerializer | https://github.com/Loki-Astari/ThorsSerializer | JSON/BSON/YAML 输入输出流 | MIT | make}}
{{librow | ujson | https://bitbucket.org/awangk/ujson | µjson 是小型的 C++11、UTF-8 JSON 库 | cmake}}
{{librow | yyjson | https://github.com/ibireme/yyjson | 以 ANSI C 编写的高性能 JSON 库 | MIT | cmake}}
{{librow | zoolib | http://www.zoolib.org/doc/}}
{{libtableend}}

{{anchor|配置:TOML}}
; TOML

{{libtablebegin}}
{{librow | toml++ | https://marzer.github.io/tomlplusplus/ | TOML 解析器和序列化器，用于 C++17 及以上}}
{{librow | toml11 | https://github.com/ToruNiina/toml11 | 基于 C++11 的 TOML 解析库}}
{{libtableend}}

{{anchor|配置:XML}}
; XML

{{libtablebegin}}
{{librow | ai-xml | https://github.com/CarloWood/ai-xml | 通过向雷中添加单个最简函数实现在对象和 XML 之间的序列化。内部使用 [http://libxmlplusplus.sourceforge.net/ libxml++]。 | AGPL-3.0 | make }}
{{librow | GPDS | https://github.com/simulton/gpds | 对象与 XML 之间的通用数据序列化器。内部使用 TinyXML。 }}
{{librow | gSOAP | http://gsoap2.sourceforge.net | XML 数据绑定}}
{{librow | libxml++ | http://libxmlplusplus.sourceforge.net/ | libxml++ 是 libxml XML 解析器 C 库的 C++ 包装。([http://library.gnome.org/devel/libxml++/stable/ 文档]) | LGPL-2 }}
{{librow | pugixml | http://pugixml.org/ |C++ 轻量级、简单且快速的 XML 解析器，支持 XPath。| MIT | cmake, conan}}
{{librow | tinyxml | http://www.grinninglizard.com/tinyxml/}}
{{librow | tinyxml2 | https://github.com/leethomason/tinyxml2/ | 另一 TinyXML，建设中。}}
{{librow | Xerces | http://xerces.apache.org/xerces-c/}}
{{libtableend}}

{{anchor|配置:YAML}}
; YAML

{{libtablebegin}}
{{librow | yaml-cpp | https://github.com/jbeder/yaml-cpp | C++ 的 YAML 解析器和生成器 | MIT | cmake}}
{{libtableend}}

==容器==

{{libtablebegin}}
{{librow | Boost.Bimap | https://www.boost.org/doc/libs/release/libs/bimap/ | 双向映射库，提供  {{tt|bimap&lt;X,Y&gt;}} 等关联容器，其中 {{tt|X}} 和 {{tt|Y}} 都可以用作键。([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Container | https://www.boost.org/doc/libs/release/libs/container/ | 实现多种周知容器的库，包括 STL 式容器，递归容器，以及新的有用容器：{{tt|flat_map}}, {{tt|flat_set}}, {{tt|flat_multimap}}, {{tt|flat_multiset}}, {{tt|stable_vector}}, {{tt|static_vector}}, {{tt|small_vector}}, {{tt|devector}}. ([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | 仅头文件}}
{{librow | Boost.Fusion | https://www.boost.org/doc/libs/release/libs/fusion/ | 用于处理 ''元组'' 的异质集合的库。它提供一组容器（{{tt|vector}}, {{tt|list}}, {{tt|set}} 和 {{tt|map}}），以及对它们底层数据的变换表示方法，即 ''视图''。 ([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Heap | https://www.boost.org/doc/libs/release/libs/heap/ | 一种 ''优先级队列'' 实现，提供比 STL 更丰富的功能和不同的性能特性。 ([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Pointer Container | https://www.boost.org/doc/libs/release/libs/ptr_container/ | 提供以异常安全的方式和最小开销持有 ''堆分配对象'' 的容器。([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Tuple | https://www.boost.org/doc/libs/release/libs/tuple/ | 实现 C++11 前的 n-{{tt|tuple}} (固定大小的元素集合) ([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Variant | https://www.boost.org/doc/libs/release/libs/variant/ | 实现 C++17 前的 {{tt|variant}} (安全、通用、基于栈的可区分 {{tt|union}} 容器) ([https://github.com/boostorg/boost 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | C++ Allocators | https://github.com/hosseinmoein/Cougar | 遵循 STL 的分配器，用于固定大小的静态和基于栈的内存 + 另一种遵循标准的自定义分配边界的分配器 | BSD-3-Clause | cmake, make}}
{{librow | cpp-btree | https://github.com/diegocaro/cpp-btree/ | 更好利用 CPU 缓存的 B-树容器：{{tt|btree_map}}, {{tt|btree_set}}, {{tt|btree_multimap}}, {{tt|btree_multiset}}。([https://code.google.com/archive/p/cpp-btree/source/default/source 源码]) | [https://www.apache.org/licenses/LICENSE-2.0 Apache-2.0] | 仅头文件; cmake}}
{{librow | DataFrame | https://github.com/hosseinmoein/DataFrame | 用于统计、金融和机器学习分析的 C++ DataFrame —— 现代 C++ 中使用原生类型、连续内存存储，且无虚函数的 R 与 Pandas 数据框架。| BSD-3-Clause | cmake, make, conan, vcpkg}}
{{librow | eggs::variant | https://github.com/eggs-cpp/variant | Eggs.Variant 是 C++11/14 的泛型、线程安全的可区分联合体。值得注意的是它有很好的 {{lc|constexpr}} 支持。| [https://github.com/eggs-cpp/variant/blob/master/LICENSE.txt BSL-1.0] | cmake}}
{{librow | Frozen | https://github.com/serge-sans-paille | C++14 的 {{lc|constexpr}} 基于完美散列的不可变集合、映射与算法。|[https://www.apache.org/licenses/LICENSE-2.0 Apache-2.0]|仅头文件; cmake}}
{{librow | Immer | https://github.com/arximboldi/immer | 持久且不可变数据结构 | Boost | cmake }}
{{librow | plf::colony | http://www.plflib.org/colony.htm | 无序的“类背包”容器，在高度修改场景中性能优于 {{tt|std::}} 容器，同时维护指向未被擦除元素的合法指针，无关乎插入或擦除。C++98/11/14/等 兼容。另见 {{stddoc|P0447|P0447}} ({{tt|std::hive}}). ([https://github.com/mattreecebentley/plf_colony 源码]) | [https://en.wikipedia.org/wiki/Zlib_License zlib] | [https://github.com/alaingalvan/conan-plf-colony conan] [https://cppget.org/plf-colony build2]}}
{{librow | plf::list | http://www.plflib.org/list.htm | {{lc|std::list}} 实现，为缓存友好牺牲范围切割，导致更快的插入、擦除和迭代。C++98/03/11/14/17/20/23/26/等 兼容。([https://github.com/mattreecebentley/plf_list 源码]) ([https://plflib.org/list.htm 文档]) | [https://en.wikipedia.org/wiki/Zlib_License zlib] | &amp;mdash;}}
{{librow | plf::reorderase | https://www.plflib.org/reorderase.htm | 对随机访问容器扩展并优化的 "swap-and-pop"/"move-and-pop" 手法，以提高擦除后顺序不重要场合下随机访问容器的擦除性能。涵盖单元素，范围，和 {{tt|std::erase_if}} 风格的擦除。C++98/11/14/等兼容。([https://github.com/mattreecebentley/plf_reorderase 源码]) | [https://en.wikipedia.org/wiki/Zlib_License zlib]}}
{{librow | plf::queue | https://www.plflib.org/queue.htm | 对 {{lc|std::queue}} 容器适配器的就地替换容器，在队列上下文中具有比 {{lc|std::deque}} 和 {{lc|std::list}} 更好的性能。C++98/11/14/等兼容。([https://github.com/mattreecebentley/plf_queue 源码]) | [https://en.wikipedia.org/wiki/Zlib_License zlib]}}
{{librow | plf::stack | http://www.plflib.org/stack.htm | {{lc|std::stack}} 容器适配器的就地替换容器，在栈上下文中有优于 {{lc|std::vector}} 和 {{lc|std::deque}} 的性能。C++98/11/14/等兼容。([https://github.com/mattreecebentley/plf_stack 源码]) | [https://en.wikipedia.org/wiki/Zlib_License zlib]}}
{{librow | ring_span | https://github.com/martinmoene/ring-span-lite | Guy Davidson 与 Arthur O'Dwyer 的 {{tt|ring_span}} ——即环状缓冲区视图的简化实现。C++98- 兼容。|[https://github.com/martinmoene/ring-span-lite/blob/master/LICENSE.txt BSL-1.0] | 仅头文件; cmake}}
{{librow | strict_variant | https://github.com/cbeck88/strict-variant | 实时/嵌入式友好（即 {{tt|-fno-exceptions}}/{{tt|-fno-rtti}} 兼容）的，决不空的 {{tt|variant}}，目标 C++11。阻止许多不想要的隐式转换。| BSL-1.0 | cmake}}
{{librow | TdhLists | https://sites.google.com/a/tdhgis.com/tdhlistsapi/}}
{{librow | Ygg | https://github.com/tinloaf/ygg | 高性能容器和数据结构，例如{{enwiki|Red–black tree|红黑树}}、{{enwiki|Interval tree|区间树}}和区间映射的侵入式 C++11 实现。| MIT | cmake}}
{{libtableend}}

==密码学==

{{libtablebegin}}
{{librow | Botan | https://botan.randombit.net/ | 密码学工具箱。([https://github.com/randombit/botan 源码]) | BSD 2-Clause "Simplified" | make}}
{{librow | crypto++ | https://www.cryptopp.com/ | 密码学方案的自由 C++ 类库。([https://github.com/weidai11/cryptopp 源码]) | Boost | make}}
{{librow | gnutls | https://www.gnutls.org/ | 安全通信库，实现 SSL, TLS 和 DTLS 协议和它们的周边技术。([https://gitlab.com/gnutls/gnutls 源码]) | LGPL-2.1 | make}}
{{librow | openssl | https://www.openssl.org/ | 通用目的密码学和安全通信的健壮、商用级、全功能工具箱。([https://github.com/openssl/openssl 源码]) | Apache-2.0 | make}}
{{librow | TomCrypt | https://www.libtom.net/ | 相当全面、模块化且可移植的密码学工具箱，为开发者提供大量周知的已发表的块密码算法，单向散列函数，链接模式，伪随机数发生器，公钥加密，和大量其他例程。([https://github.com/libtom/libtomcrypt 源码]) | 公共领域 | cmake, make}}
{{libtableend}}

==数据库==

{{libtablebegin}}
{{librow | Boost::MySQL | https://www.boost.org/doc/libs/release/libs/mysql/doc/html/index.html | MySQL 客户端库 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] |}}
{{librow | cpp-redis | https://github.com/Cylix/cpp_redis/ | C++11 轻量的 Redis 客户端：异步、线程安全、无依赖、管道化、多平台。([https://github.com/cpp-redis/cpp_redis/wiki/Redis-Client 文档]) | MIT | cmake}}
{{librow | DTL | http://dtemplatelib.sourceforge.net/ | 使 ODBC 记录集看起来如 STL 容器一样 ([https://sourceforge.net/projects/dtemplatelib/files/ 源码]) ([https://dtemplatelib.sourceforge.net/table_of_contents.htm 文档])}}
{{librow | EasyQtSql | https://github.com/kramolnic/EasyQtSql | 轻量 C++11 库（基于 Qt）快速便捷地进行 SQL 查询| MIT | 仅头文件; qmake}}
{{librow| Galera | https://galeracluster.com/downloads/ | Galera 集群是面向 MySQL/MariaDB 的同步多主库复制库 (Galera) 和 Write Set Replication (WSREP) API ([https://github.com/codership/galera 源码]) | GPLv2 | cmake, scons}}
{{librow | LevelDB | https://github.com/google/leveldb | 谷歌开发的、能够处理十亿级别规模 Key-Value 型数据持久性存储的C++ 程序库。([https://github.com/google/leveldb/blob/main/doc/index.md 文档]) | BSD-3 | cmake}}
{{librow | libpqxx | https://pqxx.org/development/libpqxx/ | PostgreSQL 的 C++ 连接器 ([https://github.com/jtv/libpqxx 源码]) | BSD-3 | cmake, make}}
{{librow | lmdb++ | https://github.com/bendiken/lmdbxx | LMDB 嵌入式 B+ 树数据库的 C++11 包装。| [https://github.com/drycpp/lmdbxx/blob/master/UNLICENSE Unlicense] | make}}
{{librow | mongocxx | https://github.com/mongodb/mongo-cxx-driver/tree/master | MongoDB 的官方 C++11 驱动库 ([https://www.mongodb.com/docs/drivers/cxx 文档])。提供 CRUD 操作、索引和聚合的优化的 API。支持 BSON、连接池和认证机制。它为构建利用 MongoDB 的 C++ 应用提供了高性能和可缩放容量的解决方案。| [https://github.com/mongodb/mongo-cxx-driver/blob/master/LICENSE Apache 2.0] | cmake}}
{{librow | mysql++ | https://dev.mysql.com/ | MySQL DB 及其工具}}
{{librow | nanodbc | https://github.com/nanodbc/nanodbc | 本机 C ODBC API 的小型跨平台 C++14 包装 | MIT | cmake}}
{{librow | ODB | https://www.codesynthesis.com/products/odb/ | C++ 的开源、跨平台且跨数据库的对象关系映射 (ORM) 系统。ODB 支持 MySQL, SQLite, PostgreSQL, Oracle, 和 Microsoft SQL Server 关系数据库，以及 C++98/03 和 C++11 语言标准。| GPL2 和/或 NCUEL}}
{{librow | OTL | http://otl.sourceforge.net/ | 基于 C++ 模板的数据库支持库，Oracle DB, ODBC 和 DB2-CLI. ([https://otl.sourceforge.net/otl3_down.htm 源码])}}
{{librow | Pgfe | https://github.com/dmitigr/pgfe/ | 现代 C++ 的 PostgreSQL 客户端 (FrontEnd) API | Zlib License | cmake }}
{{librow | QTL | https://github.com/znone/qtl | 易用且轻型的 C++ 数据库支持库，支持 MySQL, SQLite 和 ODBC. | Apache-2.0 | make}}
{{librow | QUINCE | https://quince-lib.com/ | '''QU'''eries '''IN''' '''C'''++ '''E'''xpressions (ORM+EDSL) | Boost}}
{{librow | QxOrm | https://www.qxorm.com/ | C++/Qt 对象关系映射 (ORM) 数据库支持库，支持大多数常见数据库，序列化 (JSON, binary, XML); 独立的多线程 HTTP web server | GPLv3 或私有}}
{{librow | redis-cpp | https://github.com/tdv/redis-cpp/ | 用于执行 Redis 命令的轻量级 C++17 客户端库。 | MIT | 仅头文件; cmake}}
{{librow | redis-plus-plus | https://github.com/sewenew/redis-plus-plus | 用 C++ 11 编写的 Redis 客户端, 支持 Redis Sentinel，Redis Cluster，管道，事务，发布订阅，连接池以及类似于 STL 的接口| Apache-2.0 | cmake}}
{{librow | SOCI | http://soci.sourceforge.net/ | 基于插件的数据库支持库，在普通 C++ 代码中嵌入 SQL 查询；支持的后端有：DB2, Firebird, MySQL, ODBC (通用后端), Oracle, PostgreSQL, SQLite3. ([https://github.com/SOCI/soci 源码]) ([https://soci.sourceforge.net/doc/master/ 文档]) | Boost | cmake}}
{{librow | SQLAPI++ | https://www.sqlapi.com/ | C++ 数据库中间件库，支持多种 SQL 数据库系统：Oracle, SQL Server, DB2, Sybase, MySQL, PostgreSQL, SQLite, Informix, InterBase / Firebird, SQLBase, SQL Anywhere, ODBC, MariaDB. ([https://www.sqlapi.com/Download/ 源码]) ([https://www.sqlapi.com/ApiDoc/ 文档]) | [https://www.sqlapi.com/Order/license/ 自定义] | make}}
{{librow | SQLiteCPP | https://github.com/SRombauts/SQLiteCpp | 精巧且易用的 C++ SQLite3 包装。| MIT | cmake, meson, vcpkg}}
{{librow | SQLite ORM | https://github.com/fnc12/sqlite_orm | SQL 的嵌入式领域特定语言 (EDSL), 支持 SQLite, 用于现代 C++. | AGPL-3.0, MIT | 仅头文件; cmake, vcpkg}}
{{librow | sqlpp11 | https://github.com/rbock/sqlpp11 | C++ 类型安全的用于 SQL 查询和结果的嵌入式领域特定语言。| BSD-2 | cmake}}
{{librow | taoPQ | https://github.com/taocpp/taopq | 轻量级 C++17 PostgreSQL 客户端库 | Boost | cmake}}
{{libtableend}}

==嵌入语言绑定==

{{libtablebegin}}
{{librow | AngelScript | http://angelcode.com/angelscript/ | 类似 C++ 的脚本语言。|ZLib}}
{{librow | ChaiScript | https://github.com/ChaiScript/ChaiScript | 易用的 C++ 嵌入式脚本语言。 | BSD-3-Clause}}
{{librow | cling | https://rawcdn.githack.com/root-project/cling/d59d27ad61f2f3a78cd46e652cd9fb8adb893565/www/index.html | 交互式 C++ 解释器，建立于 Clang 和 LLVM 之上，以助力 RAD，创建脚本，可嵌入脚本执行，以及运行时代码生成。([https://github.com/root-project/cling 源码]) | [https://github.com/root-project/cling/blob/master/LICENSE.TXT 自定义] / LGPL | cmake}}
{{librow | ExprTk | https://partow.net/programming/exprtk/index.html | 使用简单，易于集成且极其高效的运行时数学表达式分析器和求值引擎。ExprTk 支持多种形式的函数式、逻辑式和向量处理语义，且非常易于扩展。|}}
{{librow | Jinx | https://jamesboer.github.io/Jinx/index.htm | 为视频游戏设计的脚本语言。| MIT | cmake}}
{{librow | spidermonkey.dev | https://spidermonkey.dev/ | Mozilla 的 JavaScript 和 WebAssembly 引擎。}}
{{librow | muparser | https://beltoforion.de/en/muparser/ | C++ 编写的可扩展的高性能数学表达式解析库。 | BSD-2-Clause | cmake}}
{{librow | PythonQt | http://pythonqt.sourceforge.net/ | Qt 框架的动态 Python 绑定。它提供一种将 Python 脚本嵌入到 C++ Qt 应用中的简易方式。| LGPL 2.1}}
{{librow | lua | https://www.lua.org | 一种轻量级多范式脚本语言，主要设计用于嵌入使用。C 库。| [https://www.lua.org/license.html MIT] | make}}
{{librow | ScriptCaller | https://github.com/Baduit/ScriptCaller | 允许程序员调用 Ruby 脚本的唯头文件库。}}
{{librow | sol2 | https://github.com/ThePhD/sol2 | 一个绑定 Lua 的现代 C++ 库。| MIT | 仅头文件; cmake}}
{{librow | v8pp | https://github.com/pmed/v8pp | 将 C++ 函数和类绑定到 V8 JavaScript 引擎中。| BSL-1.0 | 仅头文件; cmake}}
{{libtableend}}

==嵌入式/实时系统==

{{libtablebegin}}
{{librow | distortos | http://distortos.org/ | 微控制器（ARM, STM32）的面向对象 C++ RTOS ([https://github.com/DISTORTEC/distortos 源码]) ([https://distortos.org/documentation/ 文档]) | MPL-2.0 | cmake}}
{{librow | ETL | http://www.etlcpp.com | 嵌入式模板库 - C++03，为低资源（嵌入式）平台裁剪的可移植模板库 ([https://github.com/ETLCPP/etl.git 源码]) | MIT}}
{{librow | QP/C++ | http://sourceforge.net/projects/qpc/files/QP_C%2B%2B/4.5.04/ | RTOS 内核：基于主动对象和状态机的实时嵌入式框架|GPLv3}}
{{librow | µcuREST | https://github.com/hutorny/micurest | 微控制器的 C++11 REST/JSON 服务器框架}}
{{libtableend}}

==文件元数据==

{{libtablebegin}}
{{librow | exempi | http://libopenraw.freedesktop.org/wiki/Exempi }}
{{librow | exiv2 | http://www.exiv2.org }}
{{librow | libkexiv2 | https://www.kde.org/ }}
{{librow | rarian | https://rarian.freedesktop.org/ }}
{{libtableend}}

==金融计算==

{{libtablebegin}}
{{librow | DataFrame | https://github.com/hosseinmoein/DataFrame | C++ DataFrame —— 现代 C++ 中使用原生类型、连续内存存储，且无虚函数的 R 与 Pandas 数据框架。| BSD-3-Clause | cmake, make, conan}}
{{librow | QuantLib | http://www.quantlib.org/ | 定量金融库 - 用于定量金融的自由/开源库|修改的 BSD}}
{{libtableend}}

== 游戏引擎架构 ==

{{libtablebegin}}
{{librow | Anax | https://github.com/miguelishawt/anax | 开源 C++ 实体系统 | MIT | cmake}}
{{librow | Anura | https://github.com/anura-engine/anura | 全功能游戏引擎，[https://github.com/frogatto/frogatto/wiki Frogatto &amp; Friends] 背后的技术支撑 | [https://github.com/anura-engine/anura/blob/trunk/LICENSE 自定义]开源 | make, vcpkg}}
{{librow | BOX2D | http://box2d.org/ | 物理引擎 | MIT | cmake}}
{{librow | EntityPlus | https://github.com/Yelnats321/EntityPlus | C++17 实体组件系统 | BSD-1.0 | cmake}}
{{librow | EntityX | https://github.com/alecthomas/entityx | 快速、类型安全的 C++ 实体组件系统 | MIT | cmake}}
{{librow | EnTT | https://github.com/skypjack/entt | 用于游戏开发的微型库，以现代 C++ 编写 | MIT | 仅头文件; cmake, bazel, conan, vcpkg, brew, cppget}}
{{libtableend}}

== 通用多媒体 ==

{{libtablebegin}}
{{librow | Kigs-framework | https://github.com/Kigs-framework/kigs | 模块化多目的跨平台框架 | MIT}}
{{librow | openFrameworks | http://www.openframeworks.cc/ | | MIT}}
{{librow | SDL | http://www.libsdl.org/ | 简单 DirectMedia 层(Simple DirectMedia Layer): 对音频、键盘、鼠标、操纵杆及图形硬件，经由平台上图形 API（OpenGL/Direct3D/Metal/Vulkan）的跨平台低层访问 ([https://wiki.libsdl.org/SDL3/FrontPage 文档]) ([https://github.com/libsdl-org/SDL 源码]) | zlib | cmake}}
{{librow | SFML | https://www.sfml-dev.org/index.php | 简单快速多媒体库；多平台 (Windows, Linux, macOS 和近期将支持的 Android &amp; iOS); 提供简单接口以简化游戏和多媒体应用开发。它包含五个模块：系统、窗口、图形（OpenGL）、音频和网络。| zlib/png | cmake}}
{{librow | SIGIL | http://www.libsigil.com/ |  Sound, Input, and Graphics Integration Library; 文本、形状、输入、音频及 2D 图像的难以置信地简单的跨平台极简库}}
{{libtableend}}

==通用==

{{libtablebegin}}
{{librow | Abseil | http://abseil.io/ | Google 设计以补足 C++ 标准库的开源 C++ 库代码汇集。([https://abseil.io/docs/ 文档]) ([https://github.com/abseil/abseil-cpp 源码]) | [https://github.com/abseil/abseil-cpp/blob/master/LICENSE Apache-2.0 ] | cmake}}
{{librow | Abstract Intrusive Containers | https://github.com/wkaras/C-plus-plus-intrusive-container-templates | 比 boost::intrusive 更灵活，但非 STL 兼容。}}
{{librow | Au | https://github.com/aurora-opensource/au | C++14 兼容的物理单位库，无依赖，强调安全性、可访问性和性能。([https://aurora-opensource.github.io/au/main/ 文档]) | [https://github.com/aurora-opensource/au/blob/main/LICENSE.txt Apache 2.0] | header-only}}
{{librow | BDE | https://github.com/bloomberg/bde | 来自 Bloomberg L.P. 的 Bloomberg Development Environment 核心库 | Apache}}
{{librow | Better Enums | https://github.com/aantron/better-enums | 反射性枚举（枚举到字符、迭代等），带 constexpr 支持。 | BSD-2 | 仅头文件, cmake, make}}
{{librow | bitfield.h | https://github.com/wkaras/C-plus-plus-library-bit-fields | 位域结构设施，比基础语言设施更可移植/灵活。}}
{{librow | Boost | https://www.boost.org/doc/libs | 大量通用库的汇集 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | CAF | https://github.com/actor-framework/actor-framework | C++ Actor Framework (CAF) 是开源的 C++11 行动者模型实现，特性为轻量而快速的行动者实现、消息的模式匹配、网络不可见消息传递及更多 | BSD}}
{{librow | Cinder | https://libcinder.org/ | 社区开发的自由开源库，用于专业质量的 C++ 创造性编程。[https://libcinder.org/docs/ (文档)] [https://github.com/cinder/Cinder (源码)] | [https://github.com/cinder/Cinder/blob/master/COPYING Modified BSD License] | CMake }}
{{librow | CommonPP | https://github.com/daedric/commonpp | 多用途库，强调在项目中得出度规。 | BSD}}
{{librow | composite_op.h | https://github.com/wkaras/C-plus-plus-library-default-operators | 基础类数据成员自省，繁琐且常常不可重入，但有时有用。}}
{{librow | cpp-mmf | https://github.com/carlomilanesi/cpp-mmf/ | 对 POSIX 或 Windows 封装映射到内存文件的 C++98 库}}
{{librow | cxxomfort | http://ryan.gulix.cl/fossil.cgi/cxxomfort/ | C++ 特性逆向移植（ C++11 到 C++03 及 C++1y 提案到 C++11/C++03 ）。}}
{{librow | Dlib | https://dlib.net | 网络、线程、图形用户界面、数据结构、线性代数、机器学习、 XML 及文本分析、数值优化、贝叶斯网络和大量其他任务 | Boost}}
{{librow | eventpp | https://github.com/wqking/eventpp | C++ 事件库，提供回调、事件派发和事件队列。使用 eventpp，你可以轻易实现信号-插座机制，发布者-订阅者模式，或观察者模式。| Apache 2.0}}
{{librow | fcppt | http://fcppt.org/ | Freundlich 的 C++ 工具套 (fcppt) 是聚焦于通过提供更好的类型和函数式编程改进 C++ 代码的库汇集。}}
{{librow | Folly | https://github.com/facebook/folly | Facebook 开源库。设计带有构思中的实践性和效率设计的 C++14 组件的跨平台库。([https://github.com/facebook/folly/blob/main/folly/docs 文档]) | [https://github.com/facebook/folly/blob/main/LICENSE Apache-2.0] | cmake, vcpkg}}
{{librow | GSL | https://github.com/Microsoft/GSL | C++ 核心方针支持库的实现，为 Bjarne Stroustrup, Herb Sutter 和 Co 在[https://isocpp.github.io/CppCoreGuidelines 《C++ 核心方针》]中推荐| [https://github.com/microsoft/GSL/blob/main/LICENSE MIT] | cmake, vcpkg}}
{{librow | gsl-lite | https://github.com/martinmoene/gsl-lite | C++98、C++11 及后续版本的 ISO C++ 方针支持库 (GSL) 的一个版本。| MIT | 仅头文件}}
{{librow | GUL14 | https://gul14.info/ | 来自 [https://www.desy.de/ DESY] 的 C++14 通用工具库: 常用工具函数和类型，包括字符串工具，统计和数值函数，容器，调试方法，等等。([https://github.com/gul-cpp/gul14 源码])| LGPL-2.1 | meson, vcpkg}}
{{librow | History | https://github.com/ryder052/History | 现代 C++17 Undo/Redo 框架 | [https://github.com/ryder052/History/blob/master/LICENSE Unlicense]}}
{{librow | hspp | https://github.com/BowenFu/hspp | 实验性库，为 C++ 带来 Haskell 风格的编程 | Apache-2.0 | 仅头文件}}
{{librow | IP-DOS (tm) | https://github.com/ideafarm/ideafarm.home.1 | IdeaFarm (tm) Piggyback 分布式操作系统: 一种 C++ 语言的通用编程环境。 | 私有，开源 | Open Watcom 2.0 }}
{{librow | JUCE | http://www.juce.com/ | 扩展性的成熟跨平台 C++ 工具套 | GPL}}
{{librow | Kangaru | https://github.com/gracicot/kangaru | C++11 与 C++14 的依赖注入容器 | MIT }}
{{librow | Kerbal | https://github.com/WentsingNee/Kerbal | 将现代 STL 设施向后移植到之前版本的标准中。更多功能，更多 constexpr! | LGPL-3.0 | 仅头文件; cmake}}
{{librow | libsourcey | http://sourcey.com/libsourcey/ | 高速网络化和多媒体编码的跨平台 C++14 库。HTTP 、WebSockets、TURN、STUN、Symple 及更多…… | LGPL-2.1 | cmake}}
{{librow | LLNL/units | https://github.com/LLNL/units | 用于测量单位和其间转换，以及测量单位的字符串表示的运行时库 | BSD 3-Clause "New" or "Revised" License | CMake}}
{{librow | Loki | http://loki-lib.sourceforge.net/ | C++ 的设计模式库，包含常见设计模式和手法的灵活实现| MIT | make}}
{{librow | match(it) | https://github.com/BowenFu/matchit.cpp | C++17 的轻量级模式匹配库，提供无宏 API| Apache-2.0 | 仅头文件}}
{{librow | nonstd-lite | https://github.com/martinmoene/nonstd-lite | *-lite 仓库的亲属（比如 [https://github.com/martinmoene/span-lite span-lite], [https://github.com/martinmoene/scope-lite scope-lite], [https://github.com/martinmoene/expected-lite expected-lite]），包含一些提案或已标准化的 C++17/20/23 库类型的 C++98/11 实现，比如 {{lc|std::span}}, {{lc|std::expected}} 等。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | 仅头文件}}
{{librow | nytl | https://github.com/nyorain/nytl | 通用的 C++17 工具模板库。| [https://github.com/martinmoene/ring-span-lite/blob/master/LICENSE.txt BSL-1.0] | 仅头文件}}
{{librow | OnPosix | http://onposix.sourceforge.net/ | 在 POSIX 平台上提供各种抽象（例如线程、网络化、日志、 IPC 等）的 C++ 库。}}
{{librow | Reason | http://www.reasoning.biz/index.htm | XML、xpath、正则表达式、线程、套接字、HTTP、SQL、日期时间、流、编码与解码、文件系统、压缩 | GPL}}
{{librow | SaferCPlusPlus | https://github.com/duneroadrunner/SaferCPlusPlus | SaferCPlusPlus - 不安全的 C++ 原始工具的安全兼容替换品，包括指针、{{c/core|int}} 和 {{lc|std::vector}}。 | Boost}}
{{librow | Smart Enum | https://github.com/krabicezpapundeklu/smart_enum | 给你的枚举 "{{tt|to_string}}"、"{{tt|from_string}}" 和更多。 | BSL-1.0 |cmake}}
{{librow | units | https://github.com/nholthaus/units | 编译时的量纲分析及单位转换库，建立于 C++14 而无依赖。| MIT | 仅头文件}}
{{librow | yaal | https://github.com/AmokHuginnsson/yaal | 另一抽象层 - 算法、集合、任意精度计算、泛型 DSL 文法驱动分析器及更多 | CC BY-ND-NC 4.0 | cmake}}
{{librow | Yato | https://github.com/agruzdev/Yato | 现代 C++(14/17) 的跨平台 STL 风格及 STL 兼容库，实现容器、范围、迭代器、类型特征和其他工具；行动者系统；类型安全配置接口 | Apache-2.0|cmake}}
{{librow | yomm2 | https://github.com/jll63/yomm2 | C++17 的开放式多方法 | Boost}}
{{librow | zoolib | https://github.com/zoolib/zoolib_cxx | ZooLib 是一个功能丰富的 C++ 工具包 | MIT}}
{{libtableend}}

==GPS==

{{libtablebegin}}
{{librow | gpsd | https://gpsd.gitlab.io/gpsd/ | 开源，跨平台 (Linux/Unix/BSD 变体，包括 Android 和 OS X) GPS 工具集，比如 GPS 设备的转译器和复制器守护进程，AIS 无线电，和其他导航传感器。'''gpsd''' 主要以 C 和 Python 编写，但也有 C++ 包装，'''gpsd''' 在移动嵌入式系统中普遍使用。每个需要定位功能的 Android 应用都间接是个 '''gpsd''' 客户端。([https://gpsd.io/#documentation 文档]) ([https://download.savannah.gnu.org/releases/gpsd/ 源码]) | [https://www.openhub.net/licenses/bsd_2clause_ish BSD 2-clause] | scons}}
{{libtableend}}

==图形用户界面==

{{libtablebegin}}
{{librow | Brisk | https://brisklib.com | 跨平台 C++20 模块化 GUI 框架，提供反应式设计和可扩展的 GPU 加速渲染。 ([https://github.com/brisklib/brisk 源码]), ([https://docs.brisklib.com/ 文档]) | GPL2+/私有 | cmake, vcpkg}}
{{librow | Dear ImGui | https://github.com/ocornut/imgui | 具有最小化依赖、可移植、渲染器中立的 C++ 轻量级 GUI 库，为启用 3D 管线的应用而优化 |MIT|vcpkg}}
{{librow | FLTK | https://www.fltk.org/ | 跨平台 C++ GUI 工具包 (Linux, Windows, MacOS)，提供现代 GUI 功能，并通过 OpenGL/GLUT 支持 3D 图形。小型和模块化设计。包含一个 UI 构建工具。| LGPL ver.2}}
{{librow | nana | http://nanapro.org/ | 用现代 C++ 风格的跨平台 GUI 编程。([https://github.com/cnjinhao/nana 源码]), ([http://nanapro.org/en-us/documentation/ 文档]) | [http://www.boost.org/LICENSE_1_0.txt BSL-1.0] | cmake, vcpkg}}
{{librow | nanogui | https://github.com/wjakob/nanogui | 最小化的跨平台器件库，适用于 OpenGL 3.x 或更高版本 ([https://nanogui.readthedocs.io/en/latest/ 文档])}}
{{librow | OWLNext | http://sourceforge.net/projects/owlnext/ | 对 [http://en.wikipedia.org/wiki/Object_Windows_Library OWL] 的现代更新，用于在 Windows 上以标准 C++ 书写 GUI 应用}}
{{librow | Slint | https://slint.dev | 声明式 GUI 工具包，用于为桌面、嵌入式和微控制器建立本机用户界面。([https://github.com/slint-ui/slint 源码]), ([https://slint.dev/docs/cpp 文档]) | GPL 3, [https://github.com/slint-ui/slint/blob/master/LICENSES/LicenseRef-Slint-Royalty-free-1.1.md 免版税], 或商用 | cmake }}
{{librow | tiny file dialogs | http://tinyfiledialogs.sourceforge.net | 一组 C/C++ 跨平台文件对话框（无初始化、无 main 循环、6 种模态的函数调用）||仅头文件}}
{{librow | U++ | https://www.ultimatepp.org | 跨平台 (Windows, GNU/Linux, macOS) 带内置 IDE 的快速应用开发框架。C++17 兼容。([https://www.ultimatepp.org/www$uppweb$documentation$en-us.html 文档]) ([https://github.com/ultimatepp/ultimatepp 源码]) | BSD-3-Clause | make}}
{{librow | WxWidgets | https://wxwidgets.org/ | 自由开源跨平台 (Windows, GNU/Linux, macOS) C++ 框架，用于编写使用本机控件的高级 GUI 应用。([https://docs.wxwidgets.org 文档]) | 修改的 LGPL | cmake, make}}
{{librow | xtd | https://gammasoft71.github.io/xtd/ | 用于在 Windows, macOS, Linux, iOS, and Android 上创建控制台、GUI 和单元测试应用的现代 C++17/20 框架。([https://github.com/gammasoft71/xtd 源码]) ([https://gammasoft71.github.io/xtd/reference_guides/latest/index.html 文档]) | MIT | cmake}}
{{libtableend}}

{{anchor|图形用户界面:CopperSpice}}
; CopperSpice

{{libtablebegin}}
{{librow | CopperSpice | https://www.copperspice.com/ | CopperSpice 是用于开发跨平台软件应用的 C++ 库集合。它使用现代理念的 C++ 并与 STL 无缝结合。CopperSpice 派生自 Qt 框架。([https://www.copperspice.com/documentation-copperspice.html 文档]) ([https://github.com/copperspice/copperspice 源码]) | LGPL-2.1 | cmake}}
{{librow | CsSignal | https://github.com/copperspice/cs_signal | 独立的 C++ 具线程信号/槽库| LGPL-2.1 | cmake}}
{{librow | CsString | https://github.com/copperspice/cs_string | 独立的 C++ 具 Unicode 字符串库| LGPL-2.1 | cmake}}
{{librow | libGuarded | https://github.com/copperspice/libguarded | 独立的 C++ 多线程库，用于管理对共享数据的访问| LGPL-2.1 | cmake}}
{{libtableend}}

{{anchor|图形用户界面:GTK+}}
; GTK+

{{libtablebegin}}
{{librow | evince | https://wiki.gnome.org/Apps/Evince}}
{{librow | flowcanvas | https://drobilla.net/software/flowcanvas.html}}
{{librow | glibmm | https://www.gtkmm.org/}}
{{librow | goocanvasmm | https://live.gnome.org/GooCanvas}}
{{librow | gtkmm | https://gtkmm.org | [https://www.gtk.org/ GTK+] GUI 库的跨平台 C++ 接口。| [https://gtkmm.org/en/license.shtml LGPL]}}
{{librow | libglademm | https://www.gtkmm.org/}}
{{librow | libgnomecanvasmm | https://www.gtkmm.org/}}
{{librow | webkitgtk | https://webkitgtk.org/}}
{{libtableend}}

{{anchor|图形用户界面:Qt}}
; Qt

{{libtablebegin}}
{{librow | libdbusmenu-qt | https://launchpad.net/libdbusmenu-qt | 设计用于使 DBus 上共享和显示目录结构变得简单易用的小型库。可工作于 QT 和 GTK+ 并简化菜单的构建。}}
{{librow | Qt | https://qt.io/ | ([https://doc.qt.io/ 文档]) ([https://qt.io/download 源码])}}
{{librow | QuickQanava | https://github.com/cneben/QuickQanava | C++14 网络/图可视化库 / Qt 节点编辑器。| BSD 2.0 | cmake}}
{{librow | qwt5 | http://qwt.sourceforge.net | 用于技术应用的 Qt Widgets}}
{{librow | qwtplot3d | http://qwtplot3d.sourceforge.net }}
{{librow | QuickProperties | https://github.com/cneben/QuickProperties | QObject/QtObject 属性编辑的 C++/QML 库；项目主页： http://www.qanava.org }}
{{libtableend}}

{{anchor|图形用户界面:U++}}
; U++

{{libtablebegin}}
{{librow | U++ | https://www.ultimatepp.org/ | 一种关注程序员生产率的 C++ 跨平台快速应用开发框架。它包括一组库 (GUI, SQL, 等) 和一个集成开发环境。([https://www.ultimatepp.org/www$uppweb$download$en-us.html 源码/二进制]) | BSD}}
{{librow | upp-components | https://github.com/ismail-yilmaz/upp-components | 用于 U++ 的第三方包集合，如 {{tt|TerminalCtrl}}, {{tt|MessageCtrl}} 等。| BSD-3-Clause}}
{{libtableend}}

==图形==

{{libtablebegin}}
{{librow | bgfx | https://github.com/bkaradzic/bgfx | 非常强大的跨平台图形渲染库，支持平台包括 Windows Mac Linux iOS Android Web，渲染后端包括 DX, OpenGL, Metal WebGL, Vulkan 等。([https://bkaradzic.github.io/bgfx/bgfx.html 文档]) | BSD-2 | make}}
{{librow | cairomm | https://cairographics.org/cairomm/ | [https://www.cairographics.org/ cairo 图形库]的 C++ 包装，cairo 是带有多种输出设备支持的 2D 库：X Window, Quartz, Win32, 图像缓冲区, PostScript, PDF, SVG, OpenGL (实验性). | [https://www.gnu.org/licenses/lgpl.html LGPL]}}
{{librow | dfpsr | https://dawoodoz.com/dfpsr.html | 2D, 3D 和单线图软件渲染器，带有桌面 GUI 工具包，最小化依赖，为长期维护而设计，可在没有 3D 加速驱动情况下运行 | zlib}}
{{librow | gegl | https://gegl.org/ | 通用图形库 (GEGL) 是一种基于数据流的图像处理框架，支持浮点处理和非破坏性图像处理能力。([https://gitlab.gnome.org/GNOME/gegl/ 源码]) | LGPL}}
{{librow | io2d | https://github.com/cpp-io2d/P0267_RefImpl | [https://github.com/cpp-io2d/io2dts P0267] 的参考实现，提案的 {{stddoc|P0267|ISO C++ 2D 图形 API}} | BSL-1.0 | cmake}}
{{librow | nanovg | https://github.com/memononen/nanovg | C 编写的基于 OpenGL 的抗锯齿 2D 向量绘图库，用于 UI 和可视化，已移植到 DX11/Metal/bgfx。 | zlib }}
{{librow | nux | https://launchpad.net/nux | OpenGL 工具包 | LGPL v3}}
{{librow | pangomm | https://gitlab.gnome.org/GNOME/pangomm | [https://www.pango.org/ Pango] 字体布局库的官方 C++ 接口。([https://gitlab.gnome.org/GNOME/pango 源码]) | [https://gitlab.gnome.org/GNOME/pangomm/-/blob/master/COPYING LGPL v2.1] | make}}
{{librow | Skia | https://skia.org/ | C++ 编写的开源 2D 图形库。{{enwiki|Skia Graphics Engine|Skia 图形引擎}}用于 Google Chrome, Chrome OS, Mozilla Firefox, Android, LibreOffice, Flutter, 等。'''Skia''' 有多个后端：软件光栅化，(PDF) 输出，OpenGL, SVG, 等。 | {{enwiki|New BSD License|New BSD}}}}
{{librow | TXLib | https://github.com/ded32/TXLib | TX 库是一个 C++ 编写的用于 Win32 的微型 2D 图形库。}}
{{librow | ULIS | https://github.com/Praxinos/ULIS | 跨平台 C++14 库，用于通用数字图像处理，2D 软件光栅化，无限制的图像格式 ({{tt|u8}}, {{tt|u16}}, {{tt|u32}}, {{co|float}}, {{co|double}}), 自定义位序内存布局, 全部 Photoshop 像素混合模式 + 11 个额外模式, 颜色模型 (RGB, HSL, HSV, CMYK, ...), 颜色管理管线, 颜色空间支持 (icm 配置文件和设备无关性), 利用多线程的优化算法, 利用 SIMD 扩展 (SSE2) 的优化算法, 用于优化的图像池和缓存, 动画图像序列的内存存储. | 自定义 (仅对非商业目的免费) | cmake}}
{{libtableend}}

==3D 图形==

{{libtablebegin}}
{{librow | assimp | http://assimp.sourceforge.net/ | 3D 模型加载}}
{{librow | bgfx | https://github.com/bkaradzic/bgfx#bgfx---cross-platform-rendering-library | 跨平台、不知图形 API 、“带来你自己的引擎/框架”风格的制图库。}}
{{librow | Diligent Engine | https://github.com/DiligentGraphics/DiligentEngine | 现代跨平台低层 3D 图形库。}}
{{librow | Epoxy | https://github.com/anholt/libepoxy | GLEM 的现代后继者。在 GL 环境的一些种类间抽象，这使得有时比使用 GLEW 更加单。自 2015 起为 GTK+ 项目所用。}}
{{librow | G3D | https://casual-effects.com/g3d/www/index.html#features | G3D 创新引擎是一个 C/C++ 编写的全功能，开源，跨平台 (Windows, Linus, Mac OS) 3D 游戏引擎。G3D 已用于商业游戏, 研究论文, 模拟器, 以及大学课程中。它支持实时和离线硬件渲染，光线追踪，模型加载，线性代数，和 GPU 上的通用计算。支持 3DS, OBJ, MP4, PNG, JPG, MD3 和许多其他格式，包括一个原生 OpenGL 可换肤 GUI。 [https://sourceforge.net/projects/g3d/ (源码)] [https://casual-effects.com/g3d/www/index.html#documentation (文档)] | BSD-2 license }}
{{librow | GLAD | http://glad.dav1d.de/ | 可定制的轻量库，用于加载 OpenGL 功能}}
{{librow | GLEW | http://glew.sourceforge.net/ | OpenGL 功能加载}}
{{librow | GLFW | http://www.glfw.org/ | OpenGL 窗口管理器}}
{{librow | GLM | http://glm.g-truc.net/ | OpenGL 数学库 (GLM) 是 C++ 数学库，用于基于 [https://www.opengl.org/registry/doc/GLSLangSpec.4.50.diff.pdf GLSL] 规范的图形软件。| [https://github.com/g-truc/glm?tab{{=}}License-1-ov-file#readme The Happy Bunny (MIT)] | 仅头文件; cmake, vcpkg}}
{{librow | Godot | https://github.com/godotengine/godot | C++17 的全功能多平台 2D 和 3D 游戏引擎，带有一个自身编写的 GUI 编辑器和一个受到 python 启发的脚本语言。 | MIT | scons}}
{{librow | hlsl++ | https://github.com/redorav/hlslpp | 用于使用 HLSL 语法进行渲染的 C++ 数学库。支持 SSE 和 NEON | MIT | 仅头文件}}
{{librow | Horde3D | https://www.horde3d.org/ | 小型开源 3D 渲染引擎。努力创建一个提供下一代游戏所需的震撼性视觉效果的图形引擎，并保持轻量级和尽可能简洁。}}
{{librow | Irrlicht | http://irrlicht.sourceforge.net/ | Irrlicht 引擎是一个 C++ 编写的开源实时 3D 引擎。它跨平台，使用 D3D, OpenGL 和其自己的软件渲染器。}}
{{librow | klein | https://github.com/jeremyong/klein | 一个 C++11/14/17 的 SSE 优化的用于图形和动画的投影集合代数库}}
{{librow | Magnum | http://magnum.graphics | 游戏和数据可视化的轻量模块化的 C++11/C++14 图形中间件}}
{{librow | O3DE | https://github.com/o3de/o3de | 开源 3D 引擎 (之前为 Amazon 的 Lumberyard) 是一个 C++ 多平台 3D 引擎，用于构建 AAA 游戏，影院质量 3D 世界，和高真实度模拟。包括物理模拟，脚本引擎，网络，和[https://o3de.org/docs/welcome-guide/features-intro/ 更多功能]。([https://o3de.org 文档]) | Apache 2.0 | cmake}}
{{librow | Ogre3D | https://ogrecave.github.io/ogre/api/latest/manual.html | OGRE 是一种面向对象图形渲染引擎 - 多用途可视化库，适用于科学可视化，游戏，模拟，虚拟现实和其他图形项目。多平台且非常健壮，有良好的文档。| MIT | cmake}}
{{librow | Open CASCADE | https://www.opencascade.com/content/core-technology | 3D CAD/CAM/CAE 应用的 SDK}}
{{librow | OpenGL | https://www.opengl.org/ | 用于开发 3D 应用的 3D 语言，图形和 SDK。}}
{{librow | OpenSceneGraph | https://www.openscenegraph.com/ | OpenSceneGraph 是一个开源高性能 3D 图形工具包，被可视化模拟，游戏，虚拟现实，科学可视化和建模等领域中的应用开发人员使用。}}
{{librow | Visionaray | https://github.com/szellmann/visionaray | C++ 光束追踪模板库}}
{{librow | VTK | https://vtk.org/ | 可视化工具包 (VTK) 是一个用于操作并显示科学数据的开源软件。它带有最先进的 3D 渲染工具，用于 3D 交互的部件套件，和可扩展的 2D 制图能力。}}
{{librow | Vulkan | https://www.khronos.org/vulkan/ | 一组底层 API，移除了上一代图形 API 中的许多抽象。这对提供最大性能很有好处，但其副作用是向开发者暴露了更多复杂性。幸运的是，有不少优秀的教程可以帮助清除这项障碍并快速获得生产力。}}
{{libtableend}}

==图像==

{{libtablebegin}}
{{librow | Adobe/boost GIL | http://boost.org/libs/gil | 高层通用库，聚焦于 2D 图像上操作的算法。非常有限定 I/O 选项。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | agge | https://github.com/tyoma/agge | Anti-Grain Evolution. 一个关注速度和质量的 C++ 2D 图形引擎 | MIT | cmake}}
{{librow | FreeImage | https://freeimage.sourceforge.io | 一个开源库项目，支持流行图形图像格式，如 PNG, BMP, JPEG, TIFF 及其他 | GPLv2, GPLv3, FIPL |}}
{{librow | FreeImageRe | https://github.com/agruzdev/FreeImageRe | 开源库 FreeImage v3.18 的分支，以支持更新的图像编解码器，经调整更便于使用。维护了所有原来的格式和插件。 | GPLv2, GPLv3, FIPL | cmake}}
{{librow | gegl | http://gegl.org/ }}
{{librow | GraphicsMagick | http://www.graphicsmagick.org/ | 读、写、操纵超过 88 种主要格式的图像。于 2002 年分化自 ImageMagick| [http://www.graphicsmagick.org/Copyright.html Copyright] | Mercurial}}
{{librow | SAIL | https://sail.software | 读写静态、动画、多页图像，以及元数据和 ICC 配置文件。提供转换能力。以简单性和速度为目标。| MIT | cmake}}
{{librow | stb | https://github.com/nothings/stb | 一组面向 C/C++ 游戏开发的库，提供图像加载/写入/调整大小，字体文本光栅化，类型安全容器，ogg vorbis 解码器，实时 DXT 压缩器，Perlin 噪声发生器，用于玩具 DSL 的词法分析器，快速 sprintf，和更多功能。| MIT, [https://github.com/nothings/stb/blob/master/LICENSE 自定义] | 仅头文件}}
{{librow | ThorVG | https://www.thorvg.org/ | Thor 向量图形库是一个轻便可移植库，用于绘制包括 SVG 和 Lottie 的基于向量的场景和动画。它可在各种不同软件平台和应用中自由使用以使图形内容可视化。 ([https://github.com/thorvg/thorvg 源码]) | MIT | conan, meson, msys2, vcpkg }}
{{libtableend}}

{{anchor|图像:格式}}
; 格式

{{libtablebegin}}
{{librow | djvulibre | http://djvu.sourceforge.net/ }}
{{librow | imagemagick | http://www.imagemagick.org/ }}
{{librow | Kaitai Struct C++ runtime | https://github.com/kaitai-io/kaitai_struct_cpp_stl_runtime/blob/master/kaitai/kaitaistream.cpp }}
{{librow | libraw | http://www.libraw.org/ }}
{{librow | openexr | http://www.openexr.com }}
{{librow | poppler | http://poppler.freedesktop.org/ }}
{{librow | qimageblitz | http://www.kde.org/ }}
{{librow | SVG++ | http://svgpp.org/ }}
{{libtableend}}

{{anchor|图像:绘图}}
; 绘图

{{libtablebegin}}
{{librow | Matplot++ | https://github.com/alandefreitas/matplotplusplus | 基于 '''gnuplot''' 的数据可视化 C++ 图形库。'''Matplot++''' 可以获得以下库的优势：OpenCV, OpenGL, LAPACK, BLAS, FFTW, JPEG, TIFF, ZLIB, PNG, GLAD, GLFW3. ([https://github.com/alandefreitas/matplotplusplus/blob/master/docs/README.md 文档]) | MIT | cmake}}
{{librow | plotutils | https://www.gnu.org/software/plotutils/ | GNU '''plotutils''' 包包含 '''libplot'''，一个用于导出 2D 向量图形为多种文件格式的 C/C++ 库，支持向量和位图。'''libplot''' 可以动画 2D 向量图形，并使用 Postscript 风格 API 进行文件导出和图形动画。 | GPL}}
{{librow | sciplot | https://github.com/sciplot/sciplot | 一个基于 [http://www.gnuplot.info/ gnuplot] 的现代 C++ 科学绘图库，可以导出为 PDF, SVG, PNG, EPS, 等文件格式。| MIT | 仅头文件; cmake, vcpkg}}
{{libtableend}}

==图像处理==

{{libtablebegin}}
{{librow | dlib | http://dlib.net/imaging.html }}
{{librow | Halide | https://github.com/halide/Halide | 用于高性能图像和张量处理的 C++ 嵌入式 DSL。 | MIT | cmake, vcpkg}}
{{librow | ITK - Insight Toolkit | https://itk.org | ITK 是一个开源跨平台库，提供用于图像分析的可扩展软件工具套件。使用极限编程方法论开发。ITK 建立在一个经验证的，面向空间的架构上，它用于二维、三维或更高维的科学图像的处理，分段和注册。 | Apache 2.0 | cmake}}
{{librow | opencv | http://opencv.org/ }}
{{librow | OTB | https://www.orfeo-toolbox.org/ }}
{{libtableend}}

==国际化==

{{libtablebegin}}
{{librow | gettext | https://www.gnu.org/software/gettext/ | GNU 国际化库。| GPL | make}}
{{librow | ICU | https://icu.unicode.org/ | Unicode 国际化组件库，是成熟，广泛使用的 C/C++ 库集合，为软件应用程序提供 Unicode 和国际化支持。([https://github.com/unicode-org/icu 源码]) | [https://github.com/unicode-org/icu/blob/main/icu4c/LICENSE icu4c/LICENSE] | make}}
{{librow | spirit-po | https://github.com/cbeck88/spirit-po | 用于分析 po 文件，并提供类似 GNU libintl 的接口的小型库。基于 boost::spirit。|[https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | 仅头文件}}
{{librow | uni-algo | https://github.com/uni-algo/uni-algo | C/C++ 的 Unicode 算法实现 | MIT/Unlicense | cmake, conan, vcpkg}}
{{libtableend}}

==日志==

{{libtablebegin}}
{{librow | Backward | https://github.com/bombela/backward-cpp | 打印漂亮的 Python 风格栈追踪，带颜色和源代码片段，特别是在崩溃时。 | MIT|仅头文件; cmake, conan}}
{{librow | Boost.Log | https://www.boost.org/doc/libs/release/libs/log/doc/html/index.html | 跨平台日志库，易用，可扩展，高性能。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | clutchlog | https://github.com/nojhan/clutchlog | 单头文件日志系统，目标是多用途调试而非服务事件存储。| BSD | cmake}}
{{librow | glog | https://github.com/google/glog | Google 日志库，基于 C++ 式流，C++98 |[https://github.com/google/glog/blob/master/COPYING License] | bazel, cmake, vcpkg}}
{{librow | Log4cplus | https://github.com/log4cplus/log4cplus | 跨平台，C++17 日志 API（模仿 Java log4j API），提供日志管理及配置上的线程安全、灵活且有任意粒度的控制。| [https://github.com/log4cplus/log4cplus/blob/master/LICENSE BSD (two clause) or Apache 2.0] | Autotools, cmake, Visual Studio}}
{{librow | Log4cpp | http://log4cpp.sourceforge.net/ | 用于灵活地记录到文件、系统日志、IDSA 或其他目标的 C++ 类库|LGPL}}
{{librow | log4cxx | https://logging.apache.org/log4cxx/latest_stable/index.html | Apache log4cxx 是 Apache log4j 后的 C++ 模式化记录框架。([https://github.com/apache/logging-log4cxx 源码]) | [https://www.apache.org/licenses Apache] | cmake}}
{{librow | lwlog | https://github.com/ChristianPanov/lwlog | 极为快速的同步和异步 C++17 日志库 | MIT | cmake}}
{{librow | Pantheios | http://www.pantheios.org/ | 诊断日志 API 库，提供类型安全、效率、泛型和可扩展性的结合| BSD 风格|}}
{{librow | plog | https://github.com/SergiusTheBest/plog | C++ 的可移植且简单的日志，少于 1000 行代码 | [https://github.com/SergiusTheBest/plog/blob/master/LICENSE MPL-2.0]}}
{{librow | Quill | https://github.com/odygrd/quill | 跨平台的 C++14 异步[https://github.com/odygrd/quill#Performance 低延迟]日志库 | MIT | cmake}}
{{librow | spdlog | https://github.com/gabime/spdlog | 超快的 C++ 日志库| MIT | 仅头文件; cmake, conan}}
{{libtableend}}

==错误处理==
{{libtablebegin}}
{{librow | Boost.LEAF | https://www.boost.org/doc/libs/release/libs/leaf/doc/html/index.html | C++11 轻量级错误处理库: 单头文件形式，无依赖，无动态内存分配，使用或不使用异常处理均可，多线程就绪。([https://github.com/boostorg/leaf 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]| 仅头文件, cmake}}
{{libtableend}}

==数学==

{{libtablebegin}}
{{librow | alglib | https://www.alglib.net/ | ALGLIB 是一个跨平台 (Windows/POSIX/Linux) 数值分析和数据处理库。ALGLIB 功能包括：数据分析，优化和非线性求解，插值，线性代数和线性求解，FFT 和许多其他功能。| 自由 (GPL/Personal/Academic) 和商用}}
{{librow | ArrayFire | https://www.arrayfire.com/docs/index.htm | 用于并行计算的跨平台 (Windows/OSX/Linux) 通用 HPC (CPU/GPU/OpenCL/CUDA/GPGPU) 库。ArrayFire 使用领域有：向量算法，图像处理，计算机视觉，信号处理，线性代数，统计，以及更多。([https://github.com/arrayfire/arrayfire 源码]) | [https://github.com/arrayfire/arrayfire/blob/master/LICENSE 自定义]}}
{{librow | BigNumber | https://github.com/limeoats/BigNumber | 创建和计算任意长度整数的 C++ 类}}
{{librow | Boost.Math | https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/main_intro.html | 包括几项数学领域中的共线：浮点工具，数学常数，统计分布与函数，统计学，向量函数 - 范数，特殊函数，求根与最小化算法，多项式和关系函数，插值，积分与差分，滤波，复数函数，四元数，八元数，整数工具 (最大公约数与最小公倍数)，数列，有理数和连续分数。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Random | https://www.boost.org/doc/libs/release/doc/html/boost_random.html | 提供用于产生具有有用性质的随机数的多种生成器和分布函数，比如均匀分布。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.SafeNumerics | https://www.boost.org/doc/libs/release/libs/safe_numerics/doc/html/index.html | C++14，保证正确的整数算术，是内建整数类型的就地替换物。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | 仅头文件}}
{{librow | C++ Matrix | https://github.com/hosseinmoein/Matrix | 高性能且精确（例如极端情况）的矩阵数学库，带表达式模板算术运算符}}
{{librow | CasADi | https://web.casadi.org/ | Symbolic framework for nonlinear optimization and algorithmic differentiation. Supports C++ code generation for symbolic expressions and dynamic connection of compiled generated code.}}
{{librow | cpp-measures | https://github.com/carlomilanesi/cpp-measures/ | 处理物理度量的 C++11 库| MPL-2.0 | 仅头文件}}
{{librow | Exact floating-point arithmetic library | https://gitlab.com/ToolsDevler/libdecimal}}
{{librow | G+Smo | http://gs.jku.at/gismo | 等几何分析的跨平台库 ([https://github.com/gismo/gismo/wiki 文档]) | MPL-2.0 | cmake}}
{{librow | GNU MP bignum C++ interface | https://gmplib.org/manual/C_002b_002b-Class-Interface.html#C_002b_002b-Class-Interface | C++ 提供重载函数和运算符的便利类接口。[https://gmplib.org/ GMP] 是一个用于任意精度算术的自由 C 库，在有符号整数、有理数和浮点数上运算。| GNU LGPL v3 和 GNU GPL v2}}
{{librow | libmpdec++ | https://www.bytereef.org/mpdecimal/index.html | 跨平台 C 库 (带有 C++ 包装)，用于正确舍入的任意精度十进制浮点算术。| BSD-2-Clause | make, nmake}}
{{librow | NTL | https://libntl.org/ | 数论库。NTL 是一个高性能，可移植 C++ 库，提供用于操作有符号任意长度整数，以及整数和无穷场的向量、矩阵和多项式的数据结构和算法。| LGPLv2.1+}}
{{librow | PCGrand | https://www.pcg-random.org/ | PCG 是一族简单快速的空间高效、统计良好的随机数生成算法。与许多通用 RNG 不同，它们难于被预测。| Apache}}
{{librow | RPNX Uniform Smooth Noise | https://github.com/exaeta/uniform_smooth_noise | N 维均匀分布的平滑噪声函数，以 C++ 实现。}}
{{librow | SEMT | https://github.com/st-gille/semt | Compile time symbolic differentiation}}
{{librow | stats++ | http://statsxx.com/ | 先进、广泛的统计软件：数据收集及预处理、统计、机器学习及优化，拥有开放的 C++ 源码。}}
{{librow | StatsLib | https://github.com/kthohr/stats | 统计分布函数的模板库。| Apache-2.0 | 仅头文件}}
{{libtableend}}

{{anchor|数学:自动机理论}}
; 自动机理论

{{libtablebegin}}
{{librow | State Diagram | https://state-diagram.com | 一个易用的层次化有限状态机 C++20 库 [https://state-diagram.com/state_diagram_manual.pdf (文档)] | Apache 2.0 License }}
{{librow | yasmine | https://yasmine.seadex.de/yasmine.html | C++11 UML 状态机框架 ([https://yasmine.seadex.de/libyasmine_%28documentation%29.html 文档]) ([https://yasmine.seadex.de/Downloads.html 源码]) | [https://yasmine.seadex.de/License.html License]}}
{{librow | UML_StateMachine | https://gitlab.com/nin-os/uml_statemachine/ | UML State Machine 是一个纯 C++20 库，用于静态地定义状态图并予以执行。[https://gitlab.com/nin-os/uml_statemachine/-/raw/master/doc/User%20manual.pdf (文档)] | GPLv3 License | CMake }}
{{libtableend}}

{{anchor|数学:数值类库}}
; 数值类库

{{libtablebegin}}
{{librow | BigNumber | https://github.com/limeoats/BigNumber | 一个用于创建并计算任意长整数的 C++ 类 | Apache 2.0 | cmake}}
{{librow | Boost.Multiprecision | https://www.boost.org/doc/libs/release/libs/multiprecision/doc/html/index.html | 多精度库提供 C++ 的整数、有理数、浮点和实数类型，比 C++ 普通基础（内建）类型提供更大 '''范围和精度'''。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | cln | https://www.ginac.de/CLN/ | CLN 库用于对所有种类的任意精度数值进行高效运算 | GPL}}
{{librow | CNL | https://johnmcfarlane.github.io/cnl/ | 组合式数值库 - 固定精度数值类型 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | cmake, conan}}
{{librow | fpm | https://github.com/MikeLankamp/fpm | C++11 定点数学库，对整数提供标准库浮点功能。当目标平台缺乏 FPU 或需要确定性计算时会有用。| MIT | 仅头文件; cmake}}
{{librow | Universal Numbers| https://github.com/stillwater-sc/universal | 取代本机算术类型的 C++17/20 模板库 (整数/十进制/定点/浮点/posits/对数/区间) | MIT | cmake, vcpkg, conan}}
{{libtableend}}

{{anchor|数学:计算几何}}
; 计算几何

{{libtablebegin}}
{{librow | Boost.Geometry | https://www.boost.org/doc/libs/release/libs/geometry/doc/html/index.html | Boost.Geometry (即通用几何库 GGL)，定义了求解几何问题的概念、原语和算法。Boost.Geometry 包含一个维度中立，坐标系中立，且可缩放的核心，基于概念、元函数和标签派发。支持的算法有：面积、长度、周长、质心、凸包、相交（clip），包含（点在多边形内）、距离、包裹 (边缘矩形)、简化、变换，和更多的计算。库支持高精度算术数值 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | CGAL | http://www.cgal.org/ | 计算几何算法库| GPL-3.0 or commercial | cmake}}
{{librow | PCL | http://pointclouds.org/ | 点云库}}
{{librow | pmp-library | http://www.pmp-library.org/ | 多边形网格处理库}}
{{librow | Wykobi | http://www.wykobi.com | 计算几何库}}
{{libtableend}}

{{anchor|数学:图论}}
; 图论

{{libtablebegin}}
{{librow | Boost.Graph | https://www.boost.org/doc/libs/release/libs/graph/doc/index.html | | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | CXXGraph | https://github.com/ZigRazor/CXXGraph | 用于图的表示、操作、分区和算法的 C++17 库 | [https://github.com/ZigRazor/CXXGraph/blob/master/LICENSE AGPL-3.0] | header-only; cmake}}
{{librow | GTpo | https://github.com/cneben/QuickQanava/tree/master/GTpo | C++14 有向图建模库，[https://github.com/cneben/QuickQanava QuickQanava 项目]的一部分 | BSD | qmake, cmake}}
{{librow | LEMON | https://lemon.cs.elte.hu/trac/lemon | 高效网络建模与优化库，实现常见数据结构和算法，关注组合优化、图和网络。([https://lemon.cs.elte.hu/trac/lemon/wiki/Documentation 文档]) | [https://lemon.cs.elte.hu/trac/lemon/wiki/License License]}}
{{librow | NGraph | https://math.nist.gov/~RPozo/ngraph/ngraph_index.html | 一个简单 C++ （网络）图库}}
{{librow | OGDF | https://ogdf.uos.de/ | 开放图算法与数据结构框架 - 提供图算法，尤其是自动绘图的 C++ 库。| GPL v2 or v3}}
{{libtableend}}

{{anchor|数学:线性代数}}
; 线性代数

{{libtablebegin}}
{{librow | Armadillo | http://arma.sourceforge.net/ | 用于线性代数和科学计算的 C++ 模板库，提供对 OpenBLAS, Intel MKL, LAPACK, ATLAS, ARPACK, SuperLU 和 FFTW 的包装。可用于机器学习，模式识别，DSP，生物信息学，统计学，金融等领域。| Apache 2.0 | }}
{{librow | Blasw | https://github.com/Mathific/Blasw | C++11 的 BLAS 和一部分 LAPACK 的包装 | BSD-3-Clause | 仅头文件; cmake}}
{{librow | Blaze | https://bitbucket.org/blaze-lib/blaze}}
{{librow | Blitz++ | https://github.com/blitzpp/blitz | C++ 模板类库，提供高性能致密数组和向量，随机数发生器，和小型向量。| GPL-3.0, LGPL-3.0, 自定义 | cmake}}
{{librow | Boost.uBLAS | https://www.boost.org/doc/libs/release/libs/numeric/ublas/doc/index.htm | C++ 模板类库，提供 BLAS 等级 1, 2, 3 的功能，包括致密、打包和稀疏矩阵。使用表达式模板。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | C++ Matrix | https://github.com/hosseinmoein/Tiger | 高性能和精确（比如边界情况）矩阵数学库，提供表达式模板算术运算符 | BSD-3-Clause | cmake, make}}
{{librow | DecompLib | https://github.com/jmatta1/DecompLib | C++11 库，分解向量为正定加权基向量的集合。| MIT | 仅头文件}}
{{librow | Dlib - linear algebra tools | http://dlib.net/linear_algebra.html}}
{{librow | Eigen | https://eigen.tuxfamily.org | 用于线性代数的 C++ 模板库：矩阵、向量、数值求解和相关算法。| MPL2 | cmake, conan}}
{{librow | ETL | https://github.com/wichtounet/etl}}
{{librow | IT++ | http://sourceforge.net/projects/itpp/}}
{{librow | Matrix | https://github.com/mlcpp/Matrix | C++ 的易用科学计算库，支持 Linux 和 Windows。| MIT | cmake}}
{{librow | NumCpp | https://github.com/dpilger26/NumCpp | 实现 Python NumPy 包的 C++ 模板库 | MIT | 仅头文件; cmake, vcpkg, conan}}
{{librow | PETSc | https://www.mcs.anl.gov/petsc/ | 用于偏微分方程建模的科学应用的并行求解的数据结构和例程套件。支持 MPI，基于 CUDA 或 OpenCL 支持 GPU 计算，也支持混合 MPI-GPU 计算。}}
{{librow | Spectra | https://spectralib.org/ | 稀疏特征值计算工具包-重新设计的 ARPACK，是一个开源 C++ 类库，用于大规模特征值问题，建立在 [https://eigen.tuxfamily.org Eigen] 线性代数库（也是开源仅头文件库）之上。([https://github.com/yixuan/spectra/ 源码]) | [https://github.com/yixuan/spectra/blob/master/LICENSE MPL-2.0] | 仅头文件; cmake, vcpkg}}
{{librow | Tense | https://github.com/Mathific/Tense | 快速 C++17 表达式模板矩阵和张量库 | BSD-3-Clause | 仅头文件; cmake}}
{{librow | xtensor | https://xtensor.readthedocs.io/en/latest/ | 用于数值分析的 C++ 库，提供多维数组表达式。| BSD}}
{{libtableend}}

{{anchor|数学:机器学习}}
; 机器学习

{{libtablebegin}}
{{librow | ANNetGPGPU | https://github.com/ANNetGPGPU/ANNetGPGPU | 基于GPU（CUDA）的人工神经网络库。}}
{{librow | btsk | https://github.com/aigamedev/btsk | 游戏行为树入门套件。}}
{{librow | CNTK | https://github.com/Microsoft/CNTK | 微软认知工具包（CNTK），一种开源的深度学习工具包。}}
{{librow | Dlib | http://dlib.net/ml.html | 机器学习工具}}
{{librow | DLDT | https://github.com/opencv/dldt | OpenVINO™工具包-深度学习部署工具包 }}
{{librow | Evolving Objects | http://eodev.sourceforge.net/ | 基于模板的 C++ 演化计算库，可帮助您快速随意地编写自己的随机优化算法。}}
{{librow | FANN | http://leenissen.dk/fann/wp/ | 快速人工神经网络库}}
{{librow | frugally-deep | https://github.com/Dobiasd/frugally-deep | 仅头文件的库，用于在 C++ 中使用Keras模型。}}
{{librow | gaenari | https://github.com/greenfish77/gaenari | 基于 C++17 的增量决策树 | Apache-2.0 | cmake}}
{{librow | Genann | https://github.com/codeplea/genann | 简单神经网络库。}}
{{librow | Kaldi | https://github.com/kaldi-asr/kaldi | 语音识别工具包。}}
{{librow | liblinear | http://www.csie.ntu.edu.tw/~cjlin/liblinear/ }}
{{librow | libtorch | https://pytorch.org/ | 流行的 PyTorch Python 库的 C++ 前端（后端以 C++ 编写）| BSD-style | cmake}}
{{librow | MLPACK | http://mlpack.org | 机器学习包}}
{{librow | NCNN | https://github.com/Tencent/ncnn | 腾讯开发的、针对移动平台进行了优化的高性能神经网络推理框架}}
{{librow | OpenPose | https://github.com/CMU-Perceptual-Computing-Lab/openpose | 实时多人关键点检测库，用于身体，面部，手和脚的检测}}
{{librow | Paddle | https://github.com/PaddlePaddle/Paddle | 并行化分布式深度学习库}}
{{librow | Recast/Detour | https://github.com/recastnavigation/recastnavigation | 导航网格生成器和浏览器，主要用于游戏。}}
{{librow | Shogun | http://shogun-toolbox.org | 大规模机器学习工具箱}}
{{librow | stats++ | http://statsxx.com/ }}
{{librow | tensorflow | https://github.com/tensorflow/tensorflow | 面向所有人的开源机器学习框架；提供稳定的 [https://www.tensorflow.org/api_docs/cc C++ API] 且主要以 C++ 编写| Apache-2.0 | bazel}}
{{librow | TensorRT | https://github.com/NVIDIA/TensorRT | 用于在 NVIDIA GPU 和深度学习加速器上进行高性能推理的 C++ 库}}
{{librow | tiny-dnn | https://github.com/tiny-dnn/tiny-dnn | 基于 C++11 的唯头文件、无依赖的深度学习框架。}}
{{librow | Veles | https://github.com/Samsung/veles | 用于快速深度学习应用程序开发的分布式平台。}}
{{libtableend}}

{{anchor|数学:数值计算}}
; 数值计算

{{libtablebegin}}
{{librow | LibBF | https://bellard.org/libbf | 由 Bellard 开发的任意精度数值计算库，拥有一个将 {{math|π}} 计算到数十亿位的示例程序}}
{{libtableend}}

{{anchor|数学:优化}}
; 优化

{{libtablebegin}}
{{librow | ceres-solver | https://github.com/ceres-solver/ceres-solver | 用于建模和求解大型复杂优化问题的开源 C++ 库。这是一个功能丰富、成熟且高性能的库，从 2010 年起已用于 Google 的产品中。| Apache | cmake, conan}}
{{librow | OptimLib | https://github.com/kthohr/optim | 非线性函数数值优化方法的 C++11 库。}}
{{libtableend}}

{{anchor|数学:符号表达式操作}}
; 符号表达式操作

{{libtablebegin}}
{{librow | CasADi | https://web.casadi.org/ | 用于非线性优化和算法微分的符号框架。支持针对符号表达式的 C++ 代码生成和编译代码后的动态链接。| LGPLv3.0 | cmake}}
{{librow | ExprTk | https://www.partow.net/programming/exprtk/index.html | C++ 数学表达式工具包库 (ExprTk) 是一个使用简单，易于集成且极其高效的运行时数学表达式解析器和求值引擎。ExprTk 支持多种形式的函数式、逻辑式和向量处理语义，且非常易于扩展。| [https://opensource.org/licenses/MIT MIT] | 仅头文件}}
{{librow | GiNaC | https://www.ginac.de/ | 用于创建集成系统的库，其中嵌入符号操作和更多计算机科学的成熟领域(如计算密集的数值应用，图形界面等。 | [https://www.gnu.org/licenses/gpl-3.0.html GPLv3]}}
{{librow | mathiu.cpp | https://github.com/BowenFu/mathiu.cpp | C++17 编写的简单计算机代数系统 | Apache-2.0 | cmake}}
{{librow | SEMT | https://github.com/st-gille/semt | 编译时符号微分 | [https://github.com/st-gille/semt/blob/master/LICENSE License] | make}}
{{librow | SymbolicC++ | https://issc.uj.ac.za/symbolic/symbolic.html | 通用计算机代数系统 | [https://www.gnu.org/licenses/gpl-2.0.html GPLv2] | autoconf}}
{{librow | SymCC | https://www.s3.eurecom.fr/tools/symbolic_execution/symcc.html | 一个编译器包装，它在编译时向程序中嵌入符号求值，并提供相关的运行时支持库。基本上，编译器向程序插入代码，以对每个值计算符号表达式。实际计算在运行时通过调用支持库来进行。| [https://github.com/eurecom-s3/symcc/blob/master/LICENSE GPLv3] | cmake}}
{{librow | SymEngine | https://symengine.org | 独立的快速 C++ 符号操作库。| [https://github.com/symengine/symengine/blob/master/LICENSE MIT] | cmake}}
{{librow | ViennaMath | https://viennamath.sourceforge.net | 一个符号数学库，可以方便地在运行时和编译时实例化、操作并求值数学表达式。| [https://github.com/viennamath/viennamath-dev/blob/master/LICENSE MIT] | cmake}}
{{libtableend}}

==元编程==

{{libtablebegin}}
{{librow | Boost.CallableTraits | https://www.boost.org/doc/libs/release/libs/callable_traits/doc/html/index.html | 编译时检视并操作所有“可调用”类型的 C++11/17 库。Boost.FunctionTypes 的后继者。 | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | 仅头文件}}
{{librow | Boost.Hana | https://www.boost.org/doc/libs/release/libs/hana/doc/html/index.html | 类型与值的新元编程库| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Metaparse | https://www.boost.org/doc/libs/1_61_0/doc/html/metaparse.html | 编译时分析器库，从编译时字符串产生类型、值和元函数| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.Mp11 | https://www.boost.org/doc/libs/release/libs/mp11/doc/html/mp11.html | C++11 元编程库，用于编译时操作包含类型的数据结构。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | 仅头文件}}
{{librow | Boost.MPL | https://www.boost.org/doc/libs/release/libs/mpl/doc/index.html | 原初元编程库，目标为 C++03，慢| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Boost.PFR | https://www.boost.org/doc/libs/release/doc/html/boost_pfr.html | 用于基本反射（无需宏）的 C++14 库：通过索引访问用户定义类型的成员，IO 流化。| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]| 仅头文件}}
{{librow | Boost.Proto | https://www.boost.org/doc/libs/1_61_0/doc/html/proto.html | 构建基于表达式模板的 EDSLs 的库| [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | Brigand | https://github.com/edouarda/brigand | 使用急切元函数，为最佳性能优化}}
{{librow | CoMeta | https://github.com/kfrlib/cometa | 轻量的 C++14 元编程库|仅头文件}}
{{librow | Meta | https://github.com/ericniebler/meta | 使用急切元函数，在 metal 和 brigand 之间，相对于性能妥协}}
{{librow | Metal | https://github.com/brunocodutra/metal | 使用急切元函数，100% SFINAE 友好}}
{{librow | refl-cpp | https://github.com/veselink1/refl-cpp | 一个 C++ 的现代编译时反射库，支持重载、末班、属性和代理}}
{{librow | Refureku | https://github.com/jsoysouvanh/Refureku | 一个 C++17 运行时反射和代码生成库 | MIT | cmake}}
{{librow | visit_struct | https://github.com/cbeck88/visit_struct | 小规模反射库，提供 C++11 的结构体访问器。自容纳，200-400 行代码，取决于如何计算。}}
{{libtableend}}

==PDF==

{{libtablebegin}}
{{librow | HARU | https://libharu.org/ | 用于生成 PDF 文件的自由、跨平台、开源库。([https://github.com/libharu/libharu/wiki 文档]) ([https://github.com/libharu/libharu 源码]) | [https://github.com/libharu/libharu#Zlib-1-ov-file Zlib] | cmake}}
{{librow | JagPDF | http://www.jagpdf.org/ | 用于生成 PDF 的自由开源库 ([http://www.jagpdf.org/doc/index.htm 文档]) | MIT}}
{{librow | PoDoFo | http://podofo.sourceforge.net/ | 用于 PDF 的自由可移植的 C++17 库 | LGPL-2.0 | cmake, conan, vcpkg}}
{{librow | PDF-Writer | https://github.com/galkahana/PDF-Writer | 用于创建、''修改''{{sep}}解析 PDF 文件的高性能 C++ 库 | Apache-2.0 | cmake, conan, vcpkg}}
{{libtableend}}

==物理与模拟==

{{libtablebegin}}
{{librow | Bullet | https://pybullet.org/wordpress | 用于游戏、视觉效果、机器人及强化学习的物理模拟}}
{{librow | HELICS | https://github.com/GMLC-TDC/HELICS | 用于在不同类型的模拟器之间同步时间并交换数据的协调模拟框架 | BSD 3-Clause "New" or "Revised" | cmake}}
{{librow | ProjectCHRONO | http://projectchrono.org | 开源多物理模拟引擎}}
{{librow | ReactPhysics3D | https://www.reactphysics3d.com | 进行 3D 模拟与游戏的 C++ 物理引擎}}
{{libtableend}}

==机器人学==

{{anchor|机器人学:认知}}
; 机器人认知

{{libtablebegin}}
{{librow | GTSAM | https://gtsam.org | 传感器融合，SLAM, SFM, VO, 计算机视觉 ([https://github.com/borglab/gtsam 源码]) | BSD | cmake}}
{{librow | opencv | https://opencv.org/ | 计算机视觉和认知、矫正，支持匹配 ([https://github.com/opencv/opencv 源码]) ([https://docs.opencv.org/ 文档]) | BSD, Apache 2 | cmake}}
{{libtableend}}

==序列化==

{{libtablebegin}}
{{librow | ai-xml | https://github.com/CarloWood/ai-xml | 通过添加单个最小的函数到类，在 XML 间序列化及反序列化。在底层使用 libxml++ 。}}
{{librow | Boost.Serialization | https://www.boost.org/doc/libs/release/libs/serialization/ | | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0]}}
{{librow | C++ XML objects | http://cppxmlobj.sourceforge.net}}
{{librow | cereal | http://uscilab.github.io/cereal/ | C++11 序列化 |BSD}}
{{librow | cista | https://cista.rocks | 简单、高性能、零复制 C++ 序列化与反射库。([https://github.com/felixguendling/cista 源码]) | MIT | cmake}}
{{librow | cppcodec | https://github.com/tplgy/cppcodec | 用于编码/解码 base64、base32 和十六进制的 C++11 库，有一致而灵活的 API | MIT|仅头文件}}
{{librow | GPDS | https://github.com/simulton/gpds | 通用数据序列化器，用以进行对象和 XML 之间的序列化。内部使用 TinyXML。}}
{{librow | gSOAP | http://gsoap2.sourceforge.net | 准确的 XML 序列化}}
{{librow | iguana | https://github.com/qicosmos/iguana | 现代、通用且易用的序列化引擎，以 C++17 开发，基于编译时反射。支持格式：JSON, XML, 用户定义。| Apache-2.0 | cmake}}
{{librow | jios | https://github.com/castedo/jios | JSON 序列化| MIT | cmake}}
{{librow | libs11n | http://www.s11n.net}}
{{librow | protobuf | https://github.com/google/protobuf/ | 协议缓冲区 (即 protobuf) 是来自 Google 的语言中立、平台中立的用于序列化结构数据的可扩展机制，包括 .proto 文件编译器。([https://protobuf.dev/ 文档]) | [https://github.com/protocolbuffers/protobuf/blob/main/LICENSE 自定义] | bazel, cmake}}
{{librow | rpnx-serial | https://github.com/Exaeta/rpnx-serial | 能（反）序列化如 {{lc|std::map}}, {{lc|std::vector}} 等类型的库}}
{{librow | Serio | https://github.com/ShahriarSS/serio | 快速轻便的 C++ 序列化库 | BSD-3-Clause | 仅头文件; cmake}}
{{librow | sweet_persist | http://www.sweetsoftware.co.nz/persist_overview.html}}
{{librow | ThorsSerializer | https://github.com/Loki-Astari/ThorsSerializer | C++ JSON 序列化库 | MIT | make}}
{{librow | yaml-cpp | https://github.com/jbeder/yaml-cpp }}
{{librow | YAS | https://github.com/niXman/yas | 又一个序列化库，是一个没有第三方库依赖的 C++11 库。存档可以为二进制、文本或 JSON | Boost | 仅头文件}}
{{libtableend}}

{{anchor|序列化:二进制序列化}}
; 二进制序列化

{{libtablebegin}}
{{librow | binn | https://github.com/liteserver/binn | 旨在紧凑，快速且易于使用的二进制序列化库，自身是同名格式的实现。 }}
{{librow | blobify | https://github.com/neobrain/blobify | C++17 库，仅从结构体定义推断序列化布局。 | Boost | 仅头文件; cmake}}
{{librow | bson-cxx | https://github.com/dwight/bson-cxx | {{enwiki|BSON}} 格式的 C++11 实现。||scons}}
{{librow | fast_ber | https://github.com/Samuel-Tyler/fast_ber | C++11 使用 BER/DER 编码规则的高性能序列化。编码布局根据 ASN.1 方案定义。}}
{{librow | UBjsonCpp | https://github.com/WhiZTiM/UbjsonCpp | 基于 C++14 的高性能 UBJson 读写库}}
{{libtableend}}

==排序==

{{libtablebegin}}
{{librow | Cpp-sort | https://github.com/Morwenn/cpp-sort | 各种排序算法汇集到单个包中。| MIT}}
{{librow | Indiesort | https://plflib.org/indiesort.htm | 允许对非随机访问容器使用 {{lc|std::sort}} (和其他随机访问排序函数) 的函数模板。它还提升了对随机访问容器和数组中存放大型对象时的排序性能 | zlib }}
{{librow | Timsort | https://github.com/gfx/cpp-TimSort | 稳定排序函数模板，对于逆序或半排序的数据，性能优于基于快速排序的算法，包括 {{lc|std::sort}}。| MIT}}
{{libtableend}}

==系统==

{{libtablebegin}}
{{librow | Infoware | https://github.com/ThePhD/infoware | 用于不触及命令行拉取系统和硬件信息的 C++ 库。| Creative Commons v1.0 | cmake}}
{{libtableend}}

==终端==

{{libtablebegin}}
{{librow | cli | https://github.com/daniele77/cli | 现代 C++ 交互式命令行界面的跨平台库。 | [https://github.com/daniele77/cli/blob/master/LICENSE BSL-1.0] | 仅头文件; cmake, make, nmake, vcpkg}}
{{librow | cwidget | https://salsa.debian.org/cwidget-team | C++ 高层终端界面库，在 GTK+ 和 Qt 上构建，但使用 {{enwiki|Curses (programming library)|curses}} 为其显示层 | GPL v2.0 | make}}
{{librow | replxx | https://github.com/AmokHuginnsson/replxx | readline 和 libedit 的替换品，支持 UTF-8、语法高亮和提示。}}
{{libtableend}}

==测试==

{{libtablebegin}}
{{librow | bandit | http://banditcpp.github.io/bandit/ | C++11 的对人类友好单元测试([https://github.com/banditcpp/bandit 源码]) | MIT | cmake}}
{{librow | Boost.Test | https://www.boost.org/libs/test/ | C++03/11/14/17 单元测试库，大范围平台和编译器上可用。([https://github.com/boostorg/test 源码]) | [https://www.boost.org/LICENSE_1_0.txt BSL-1.0] | cmake, b2}}
{{librow | Catch2 | https://github.com/catchorg/Catch2 | 现代、C++ 原生的测试框架，用于单元测试、TDD 和 BDD - 使用 C++14, C++17 和更新 | Boost | cmake}}
{{librow | cppunit | http://sourceforge.net/projects/cppunit/ | C++ 移植的著名的 JUnit 单元测试框架 | LGPL-2.1 | make}}
{{librow | CUTE | https://github.com/PeterSommerlad/CUTE | C++ 单元测试简化库 (不依赖静态初始化进行注册), 为 TDD 集成到 [https://cevelop.com Cevelop] 中 | MIT | 仅头文件}}
{{librow | doctest | https://github.com/onqtam/doctest | 单元测试和 TDD 使用的最轻量的特性丰富的 C++ 单头文件测试框架| MIT | 仅头文件; cmake}}
{{librow | ELFspy | https://github.com/mollismerx/elfspy | 杜绝假象和间谍的测试 - 仅 Linux|GPL-2.0|make}}
{{librow | faker-cxx | https://github.com/cieslarmichal/faker-cxx | 现代 C++20 伪造库，用于生成测试数据。| MIT | cmake}}
{{librow | Google Test | https://google.github.io/googletest | Google 测试和模仿框架。([https://github.com/google/googletest 源码]) | BSD 3-Clause "New" or "Revised" | bazel, cmake}}
{{librow | lest | https://github.com/martinmoene/lest | C++11 原生轻量单元测试、TDD 和 BDD 框架（包含 C++98 变体）。|Boost|仅头文件; cmake}}
{{librow | liblittletest | https://github.com/etr/liblittletest | 可移植测试框架|LGPL-2.1|仅头文件}}
{{librow | snitch | https://github.com/cschreib/snitch | 轻量级 C++20 测试框架。| Boost | cmake}}
{{librow | tunit | https://github.com/gammasoft71/tunit | Windows、macOS、Linux、iOS 和 Android 上的现代 C++17 单元测试库。[https://gammasoft71.wixsite.com/xtd-tunit 官方网站]| MIT | cmake}}
{{libtableend}}

==文本==

{{anchor|文本:编码}}
; 编码

{{libtablebegin}}
{{librow | strsuite | https://github.com/Loara/StringSuite | 管理具有不同编码的字符串的 C++20 库 | LGPL3.0 | cmake}}
{{librow | uchardet | https://github.com/BYVoid/uchardet | 实现猜字符串编码的功能，和 Python 里的{{tt|uchardet}} 功能基本一样。| MOZILLA PUBLIC LICENSE v1.1 | cmake}}
{{librow | win-iconv | https://github.com/win-iconv/win-iconv | Linux 和 Mac 上的字符集编码转换库。{{tt|iconv}} 的 Windows 实现基于 Win32 字符集转换 API。|公共领域|cmake}}
{{libtableend}}

{{anchor|文本:Diff/Patch}}
; Diff/Patch

{{libtablebegin}}
{{librow | diff_match_patch | https://github.com/google/diff-match-patch | 创建并应用针对字符串的补丁 (需要 Qt) | Apache 2.0 | qmake}}
{{libtableend}}

{{anchor|文本:格式化}}
; 格式化

{{libtablebegin}}
{{librow | coformat | https://gitlab.com/44100Hz/coformat | {{lc|std::format}} 的伴随 C++ 库，提供文本上色和显示风格。| 公共领域| 仅头文件}}
{{librow | fmt | https://github.com/fmtlib/fmt | 开源格式化库，提供 C stdio 和 C++ {{lc|std::iostream|iostream}} 的快速且安全的替代方案。C++20 {{lc|std::format}} 族函数的原型。 | [https://github.com/fmtlib/fmt/blob/master/LICENSE.rst License] | cmake, conan}}
{{libtableend}}

{{anchor|文本:语法分析}}
; 语法分析

{{libtablebegin}}
{{librow | BNFlite | https://github.com/r35382/bnflite | 轻量文法分析器库|MIT|仅头文件}}
{{librow | Boost.Spirit | http://boost-spirit.com/home/ | 一组用于分析和输出生成的 C++17 库，用表达式模板和模板元编程实现的领域特定嵌入语言 (DSEL) 实现。Spirit 库可以完全用 C++ 来编写目标文法。([https://github.com/boostorg/spirit/ 源码]) ([http://www.boost.org/doc/libs/develop/libs/spirit/doc/x3/html/index.html 文档]) | [https://github.com/foonathan/lexy/blob/main/LICENSE BSL-1.0] | cmake}}
{{librow | CTRE | https://github.com/hanickadot/compile-time-regular-expressions | 快速的编译时正则表达式，支持编译时和运行时的匹配/搜索/捕获。| Apache-2.0 | 仅头文件, cmake, vcpkg}}
{{librow | lexy | https://github.com/foonathan/lexy | 一个 C++17 分析器组合器库，可以用一种便利的 C++ DSL 编写分析器，具有手写分析器的全部灵活性和控制力。支持 UTF-8/16/32。([https://lexy.foonathan.net/ 文档]) | [https://github.com/foonathan/lexy/blob/main/LICENSE BSL-1.0] | cmake}}
{{librow | PEGTL | https://github.com/taocpp/PEGTL | 分析表达式文法的模板库，是一个零依赖的 C++17 仅头文件的分析器组合器库，用于根据一种{{enwiki|Parsing Expression Grammar|分析表达式文法}} (PEG) 创建分析器。|Boost|仅头文件}}
{{libtableend}}

{{anchor|文本:搜索}}
; 搜索

{{libtablebegin}}
{{librow | clucene | http://clucene.sourceforge.net | CLucene 是一个跨平台，全功能，开源的索引和搜索引擎/API。([https://sourceforge.net/p/clucene/code/ci/master/tree/ 源码]) ([http://clucene.sourceforge.net/doc/html/ 文档]) | LGPL v2.1 | cmake}}
{{librow | Step20 | https://github.com/storm-ptr/step20 | Ukkonen 的构建{{enwiki|Suffix tree|后缀树}}的在线算法，Manber 的构建{{enwiki|Suffix array|后缀数组}}的算法。|MIT|仅头文件}}
{{librow | xapian | https://xapian.org/ | 具有索引设施的开源搜索引擎 ([https://xapian.org/download 源码]) ([https://xapian.org/docs/ 文档]) | GPL v2+| make}}
{{libtableend}}

{{anchor|文本:模板引擎}}
; 模板引擎

{{libtablebegin}}
{{librow | inja | https://github.com/pantor/inja | C++17 的模板引擎|MIT|仅头文件;cmake, conan, vcpkg, 等}}
{{librow | Jinja2C++ | https://github.com/jinja2cpp/Jinja2Cpp | Jinja2 模板的 C++14/17 实现|MPL-2.0|cmake,conan}}
{{libtableend}}

==版本控制==

{{libtablebegin}}
{{librow | cpp-semver | https://github.com/easz/cpp-semver | 语义化版本号的 C++ 操作库。}}
{{librow | LibGit2 | https://libgit2.org/ | 版本控制系统 Git 的核心库。}}
{{libtableend}}

==视频==

{{libtablebegin}}
{{librow | crystalhd | http://www.broadcom.com/support/crystal_hd/ }}
{{librow | gstreamermm | http://gstreamer.freedesktop.org/ }}
{{librow | libmatroska | http://www.matroska.org/ }}
{{librow | libVLC | http://wiki.videolan.org/LibVLC }}
{{librow | mjpegtools | http://mjpeg.sourceforge.net/ }}
{{librow | OpenH264 | https://www.openh264.org/ | 多平台、多架构的开源库，支持 H.264 编码解码 ([https://github.com/cisco/openh264 源码]) | [https://github.com/cisco/openh264/blob/master/LICENSE BSD-2 Clause] | meson}}
{{libtableend}}

==Web==

{{libtablebegin}}
{{librow | Chromium Embedded | https://bitbucket.org/chromiumembedded/cef/ }}
{{librow | cpp-jwt | https://github.com/arun11299/cpp-jwt}}
{{librow | Drogon | https://github.com/an-tao/drogon | 基于 C++14/17 的 HTTP web 应用框架，运行于 Linux/macOS/Unix/Windows。}}
{{librow | ffead-cpp | https://github.com/sumeetchhetri/ffead-cpp | C++ 企业级应用开发框架，遵从 HTTP1/HTTP2/HTTP3，支持多种服务器后端 | Apache 2.0 | cmake}}
{{librow | libhttpserver | https://github.com/etr/libhttpserver | 用于构建高性能 RESTful web 服务器的 C++ 库。基于 {{tt|libmicrohttpd}} 建立，以向开发者提供 C++ 中创建 HTTP 服务的简单 API。| LGPL-v2.1 | autotools}}
{{librow | libkcddb | https://www.kde.org/ }}
{{librow | liblastfm | https://www.last.fm/ }}
{{librow | libmusicbrainz5 | https://musicbrainz.org/doc/libmusicbrainz }}
{{librow | libnavajo | https://github.com/titi38/libnavajo }}
{{librow | Molybden | https://teamdev.com/molybden | 用于构建具有 HTML/CSS/JS GUI 的跨平台 C++ 桌面应用的 SDK。([https://docs.molybden.io/ 文档]) ([https://api.molybden.io/preview/files.html 源码]) | [https://docs.molybden.io/faq/ License] | [https://docs.molybden.io/quick-start/ npm]}}
{{librow | oatpp | https://oatpp.io/ | 用于 IoT 和高性能 web 服务的强大的可移植轻量零依赖 web 框架。}}
{{librow | QtWebApp | http://stefanfrings.de/qtwebapp/index-en.html | Java Servlets 所启发的 HTTP(s) 服务器，以 C++ 实现}}
{{librow | Tufão | https://github.com/vinipsmaker/tufao | 建立在 Qt 之上的 C++11 的异步 web 框架([http://vinipsmaker.github.com/tufao/ref/ 文档]) | LGPL-2.1, GPL-2.0 | cmake}}
{{librow | uri-template | https://github.com/TinkoffCreditSystems/uri-template | C++ 的 URI 模板展开和逆匹配 | Apache 2.0 | cmake}}
{{librow | userver | https://github.com/userver-framework/userver | C++ 异步框架 | Apache 2.0 | cmake}}
{{librow | Wt | https://www.webtoolkit.eu/wt/ | Web 应用的部件和构造块，内建安全性，PDF 渲染，2D 和 3D 绘图，ORM，图表，身份认证框架。([https://www.webtoolkit.eu/wt/doc/reference/html/index.html 文档]) ([https://www.webtoolkit.eu/wt/download 源码]) | GNU GPL 或商用}}
{{libtableend}}

=参阅=
{{dsc begin}}
{{dsc see c | c/links/libs |非 ANSI/ISO 库|nomono=true}}
{{dsc end}}

=外部链接=
{{elink begin}}
{{elink|{{enwiki|List of unit testing frameworks#C.2B.2B|C++ 单元测试框架列表}} &amp;mdash; Wikipedia}}
{{elink|[https://github.com/p-ranav/awesome-hpp A curated list of (awesome) header-only C++ libraries] &amp;mdash; GitHub}}
{{elink|[https://github.com/fffaraz/awesome-cpp A curated list of (awesome) C++ and C libraries] &amp;mdash; GitHub}}
{{elink|1=[https://www.boost.org/doc/libs/?view=condensed Boost C++ 库] &amp;mdash; Boost.org}}
{{elink|1=[https://trilarion.github.io/opensourcegames/games/languages.html#c++ C++ 开源游戏和框架的大型列表] &amp;mdash; GitHub.io}}
{{elink end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}