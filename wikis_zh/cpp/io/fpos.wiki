{{cpp/title|fpos}}
{{cpp/io/navbar}}
{{dcl begin}}
{{dcl header|ios}}
{{dcl|
template&lt; class State &gt;
class fpos;
}}
{{dcl end}}

类模板 {{tt|std::fpos}} 的特化标识流或文件中的绝对位置。每个 {{tt|fpos}} 类型的对象保有流中的字节位置（常为 {{lc|std::streamoff}} 类型的私有成员）和当前迁移状态，{{tt|State}} 类型的值（通常是  {{lc|std::mbstate_t}}）。

提供下列 {{c/core|std::fpos&lt;std::mbstate_t&gt;}} 的 typedef 名（尽管它们在标准中拼写方式不同，它们代表同一类型）：

{{dsc begin}}
{{dsc header|iosfwd}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|std::streampos}}|{{c/core|std::fpos&lt;std::char_traits&lt;char&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::wstreampos}}|{{c/core|std::fpos&lt;std::char_traits&lt;wchar_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u8streampos}}{{mark c++20}}|{{c/core|std::fpos&lt;std::char_traits&lt;char8_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u16streampos}} {{mark c++11}}|{{c/core|std::fpos&lt;std::char_traits&lt;char16_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u32streampos}} {{mark c++11}}|{{c/core|std::fpos&lt;std::char_traits&lt;char32_t&gt;::state_type&gt;}}}}
{{dsc end}}

{{tt|fpos}} 的所有特化都符合{{named req|DefaultConstructible}}、{{named req|CopyConstructible}}、{{named req|CopyAssignable}}、{{named req|Destructible}}和{{named req|EqualityComparable}}要求。

如果 {{tt|State}} 可平凡复制构造，那么 {{tt|fpos}} 拥有平凡复制构造函数。
如果 {{tt|State}} 可平凡复制赋值，那么 {{tt|fpos}} 拥有平凡复制赋值运算符。
如果 {{tt|State}} 可平凡析构，那么 {{tt|fpos}} 拥有平凡析构函数。

===模板形参===
{{par begin}}
{{par|State|表示迁移状态的类型}}
{{par hreq}}
{{par req named|State|DefaultConstructible|CopyConstructible|CopyAssignable|Destructible}}
{{par end}}

===成员函数===
{{dsc begin}}
{{dsc mem fun|cpp/io/fpos/state|获取/设置迁移状态的值}}
{{dsc end}}

另外，提供支持下列操作的成员和非成员函数：

* 默认构造函数，存储零偏移并值初始化状态对象。

* 非 explicit 的构造函数，接受一个（可以是 const 的）{{lc|std::streamoff}} 类型的实参，存储它的偏移并值初始化状态对象。此构造函数也必须接受特殊值 {{c|std::streamoff(-1)}}：某些流操作返回以此方式构造的 {{tt|std::fpos}} 以指示错误。

* 从（可以是 const 的）{{tt|fpos}} 到 {{lc|std::streamoff}} 的显式转换。结果是存储的偏移。

* {{c/core|1=operator==}} 和 {{c/core|1=operator!=}}，比较两个（可以是 const 的）{{tt|std::fpos}} 类型的对象，返回 {{c/core|bool}} 纯右值。{{c|1=p != q}} 等价于 {{c|1=!(p == q)}}。

* {{c/core|operator+}} 与 {{c/core|operator-}}，使得对于（可以是 const 的）{{tt|fpos&lt;State&gt;}} 类型的对象 {{c|p}} 和（可以是 const 的）{{lc|std::streamoff}} 类型的对象 {{c|o}}：
:* {{c|p + o}} 拥有 {{tt|fpos&lt;State&gt;}} 类型，而存储的偏移为将 {{c|o}} 加到 {{c|p}} 的结果。
:* {{c|o + p}} 拥有可转换为 {{tt|fpos&lt;State&gt;}} 的类型，而转换结果等于 {{c|p + o}}。
:* {{c|p - o}} 拥有 {{tt|fpos&lt;State&gt;}} 类型，而存储的偏移为从 {{c|p}} 的偏移减去 {{c|o}} 的结果。

* {{c/core|1=operator+=}} 与 {{c/core|1=operator-=}}，能接受一个（可以是 const 的） {{lc|std::streamoff}} 并分别对存储的偏移加/减之。

* {{c/core|operator-}}，能对两个（可以是 const 的）{{tt|std::fpos}} 类型的对象相减，产生 {{lc|std::streamoff}}，使得对于两个这种对象 {{c|p}} 与 {{c|q}} 有 {{c|1=p == q + (p - q)}}。

===注解===
一些{{rlp|/|输入/输出流成员函数}}返回并操纵成员 typedef {{tt|pos_type}} 类型的对象。对于流，这些成员 typedef 由模板形参 {{tt|Traits}} 提供，默认为 {{lc|std::char_traits}}，它定义它的 {{tt|pos_type}} 为 {{tt|std::fpos}} 的特化。如果 {{tt|Traits::pos_type}} 不是 {{c/core|std::fpos&lt;std::mbstate_t&gt;}}（别名为 {{tt|std::streampos}}、{{tt|std::wstreampos}} 等等），则输入/输出流库的行为由实现定义。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=57|std=C++98|before={{tt|streampos}} 与 {{tt|wstreampos}} 被矛盾地在要求相同时允许不同|after=澄清为相同}}
{{dr list item|paper=P0759R1|std=C++98|before=规定不清晰且不完整|after=已整理}}
{{dr list item|paper=P1148R0|std=C++11|before=不明确 {{tt|u16streampos}} 和 {{tt|u32streampos}} 的定义是什么以及在哪个头文件|after=使之明确}}
{{dr list item|wg=lwg|dr=2114|paper=P2167R3|std=C++98|before=曾允许相等比较的非 {{c/core|bool}} 返回类型|after=已禁止}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/dsc streamoff}}
{{dsc inc|cpp/io/basic_ostream/dsc tellp}}
{{dsc inc|cpp/io/basic_ostream/dsc seekp}}
{{dsc inc|cpp/io/c/dsc fgetpos}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}