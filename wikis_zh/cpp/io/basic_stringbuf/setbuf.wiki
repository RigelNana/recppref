{{cpp/io/basic_stringbuf/title|setbuf}}
{{cpp/io/basic_stringbuf/navbar}}
{{ddcl|
protected:
virtual std::basic_streambuf&lt;CharT, Traits&gt;* setbuf( char_type* s, std::streamsize n )
}}

若 {{c|s}} 为空指针且 {{c|n}} 为零，则此函数无效果。

否则，效果是实现定义的：一些实现不做任何事，而一些实现清空当前用作缓冲区的 {{lc|std::string}} 成员，并开始以用户提供的大小为 {{c|n}}，首元素为 {{c|s}} 所指向的字符数组，为输入/输出字符序列的缓冲区。

此函数为受保护虚，仅可通过 {{tt|pubsetbuf()}} 或导出自 {{tt|std::basic_stringbuf}} 的用户定义类的成员函数调用它。

===参数===
{{par begin}}
{{par | s |指向用户提供缓冲区首个 CharT 的指针或空指针}}
{{par | n |用户提供缓冲区中的 CharT 元素数或零}}
{{par end}}

===返回值===
{{c|this}}

===注解===
弃用的流缓冲区 {{c|std::strstreambuf}} 或 boost.IOStreams 设备 [http://www.boost.org/doc/libs/release/libs/iostreams/doc/classes/array.html#array {{tt|boost::basic_array}}] 可用于以可移植方式实现用户提供的字符数组上的 I/O 缓冲。

===示例===
{{example
|测试 stringstream 的 setbuf 功能
|code=
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::ostringstream ss;
    char c[1024] = {};
    ss.rdbuf()-&gt;pubsetbuf(c, 1024);
    ss &lt;&lt; 3.14 &lt;&lt; '\n';
    std::cout &lt;&lt; c &lt;&lt; '\n';
}
|output=
3.14（GNU g++/libstdc++ 和 SunPro C++/roguewave 上）
&lt;无&gt;（在 MS Visual Studio 2010、SunPro C++/stlport4、CLang++/libc++ 上）
}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/io/basic_streambuf/dsc pubsetbuf}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}