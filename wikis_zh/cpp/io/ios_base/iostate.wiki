{{cpp/io/ios_base/title|iostate}}
{{cpp/io/ios_base/navbar}}
{{dcl begin}}
{{dcl|
typedef /* 由实现定义 */ iostate;
}}
{{dcl|1=
static constexpr iostate goodbit = 0;
}}
{{dcl|1=
static constexpr iostate badbit  = /* 由实现定义 */
static constexpr iostate failbit = /* 由实现定义 */
static constexpr iostate eofbit  = /* 由实现定义 */
}}
{{dcl end}}

指定流状态标志。它是{{named req|BitmaskType}}，定义了下列常量：
{{cpp/io/ios_base/iostate consts}}

====eofbit====
下列标准库函数设置 eofbit：
* string 输入函数 {{lc|std::getline}}，若它以抵达流结尾，而非抵达指定的终止字符完成。
* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;}} 的数值输入重载，若在 {{l2tt|cpp/locale/num_get/get}} 处理的阶段 2，读取下个字符时遇到流结尾。取决于分析状态，可能或可能不同时设置 {{tt|failbit}}：例如 {{c|1=int n; istringstream buf("1"); buf &gt;&gt; n;}} 设置 {{tt|eofbit}}，但不设置 {{tt|failbit}}：成功分析整数 {{c|1}} 并存储之于 {{tt|n}}。另一方面，{{c|1=bool b; istringstream buf("tr"); buf &gt;&gt; boolalpha &gt;&gt; b;}} 一同设置 {{tt|eofbit}} 和 {{tt|failbit}}：无足够的字符完成布尔 {{c|true}} 的分析。
* {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;{{dsc small|std::basic_istream}}}} 的字符提取重载，若在提取字符数量上的限制（若存在）前抵达流结尾。
* {{lc|std::get_time}} I/O 操纵符和任何 {{lc|std::time_get}} 分析函数：{{l2tt|cpp/locale/time_get/get}}、{{l2tt|cpp/locale/time_get/get_time}}、{{l2tt|cpp/locale/time_get/get_date}} 等，若在分析期待的被处理日期/时间值所需的最末字符前抵达流结尾。
* {{lc|std::get_money}} I/O 操纵符和 {{l2tt|cpp/locale/money_get/get}} 函数，若在分析期待的被处理货币值所需的最末字符前抵达流结尾。
* {{l2tt|cpp/io/basic_istream/sentry}} 的构造函数，在每个有格式输入函数的起始执行：除非未设置 {{tt|skipws}}（例如通过发布 {{lc|std::noskipws}}），否则 sentry 会读取并舍弃前导空白字符。若在此操作中抵达流结尾，则一同设置 {{tt|eofbit}} 和 {{tt|failbit}}，并且不发生输入。
* I/O 操纵符 {{lc|std::ws}}，若它在消耗空白符时抵达流结尾（但不同于有格式输入 sentry，此情况下它不设置 {{tt|failbit}}）。
* 无格式输入函数 {{l2tt|cpp/io/basic_istream/read}}、{{l2tt|cpp/io/basic_istream/get}}、{{l2tt|cpp/io/basic_istream/peek}}、{{l2tt|cpp/io/basic_istream/readsome}}、{{l2tt|cpp/io/basic_istream/ignore}} 和 {{l2tt|cpp/io/basic_istream/getline}} 在抵达流尾时。
* 舍弃输入函数 {{l2tt|cpp/io/basic_istream/ignore}}，在抵达指定的分隔字符前抵达流结尾时。
* 立即输入函数 {{l2tt|cpp/io/basic_istream/readsome}}，若 {{l2tt|cpp/io/basic_streambuf/in_avail}} 返回 {{c|-1}}。

下列函数作为副效应清除 {{tt|eofbit}}：
* {{l2tt|cpp/io/basic_istream/putback}}
* {{l2tt|cpp/io/basic_istream/unget}}
* {{l2tt|cpp/io/basic_istream/seekg}}

注意在几乎所有情况下，若设置了 eofbit，则一同设置 failbit。

====failbit====
下列标准库函数设置 failbit：
* {{l2tt|cpp/io/basic_istream/sentry}} 构造函数，在每个输入函数起始执行，若流上已设置 {{tt|eofbit}} 或 {{tt|badbit}}，或若在消耗前导空白时遇到流结尾。
* {{l2tt|cpp/io/basic_ostream/sentry}} 构造函数，在每个输出函数起始执行，在实现定义的条件下。
* {{ltt|cpp/string/basic_string/operator_ltltgtgt|operator&gt;&gt;{{dsc small|(std::basic_string&lt;&gt;)}}}}，若函数未从输入流提取字符。
* {{ltt|cpp/numeric/complex/operator_ltltgtgt|operator&gt;&gt;{{dsc small|(std::complex&lt;&gt;)}}}}，若函数无法提取合法的复数。
* {{ltt|cpp/io/basic_istream/operator_gtgt2|operator&gt;&gt;}} 的字符数组和单字符重载，若它们无法提取字符。
* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;}} 的 streambuf 重载，若 streambuf 实参为空指针或若没有插入字符到 streambuf。
* {{l2tt|cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;}} 的 streambuf 重载，若函数未插入字符。
* {{ltt|cpp/utility/bitset/operator_ltltgtgt2|operator&gt;&gt;{{dsc small|(std::bitset&lt;&gt;)}}}}，若函数未从输出流提取字符。
* {{lc|std::getline}}，若函数未提取字符，或若它要从输入流提取 {{l2tt|cpp/string/basic_string/max_size}} 个字符。
* {{l2tt|cpp/io/basic_istream/operator_gtgt|operator&gt;&gt;}} 的数值、指针和布尔输入重载（技术上是它们调用的 {{l2tt|cpp/locale/num_get/get}} 的重载），若输入不能分析为合法值，或若分析出的值不适合于目标类型。
* 时间输入操纵符 {{lc|std::get_time}}（技术上是其所调用的 {{l2tt|cpp/locale/time_get/get}}），若输入不能按照给定的格式字符串，无歧义地分析为时间值。
* 货币输入操纵符 {{lc|std::get_money}}（技术上是其所调用的 {{l2tt|cpp/locale/money_get/get}}），若输入不能按照本地环境规则无歧义地分析为货币值。
* 所有{{named req|RandomNumberEngine}}的提取函数，若遇到错误输入。
* 所有{{named req|RandomNumberDistribution}}的提取函数，若遇到错误输入。
* 无格式输入函数 {{l2tt|cpp/io/basic_istream/get}} ，若它们无法提取任何字符。
* {{l2tt|cpp/io/basic_istream/getline}}，若它未提取字符，若它填充给定的缓冲区而未遇到分隔符，或若提供的缓冲区大小小于 1。
* {{l2tt|cpp/io/basic_istream/read}}，若在能提取所有请求的字符前，输入流上出现文件尾条件。
* {{l2tt|cpp/io/basic_istream/seekg}} 在失败时。
* {{l2tt|cpp/io/basic_ostream/tellp}} 在失败时。
* {{lc|std::basic_fstream}}、{{lc|std::basic_ifstream}} 和 {{lc|std::basic_ofstream}} 接收文件名实参的构造函数，若无法打开文件。
* {{l2tt|cpp/io/basic_fstream/open}}、{{l2tt|cpp/io/basic_ifstream/open}} 和 {{l2tt|cpp/io/basic_ofstream/open}}，若无法打开文件。
* {{l2tt|cpp/io/basic_fstream/close}}、{{l2tt|cpp/io/basic_ifstream/close}} 和 {{l2tt|cpp/io/basic_ofstream/close}}，若无法关闭文件。

====badbit====
下列标准库函数设置 badbit：

* {{l2tt|cpp/io/basic_ostream/put}}，若它因任何原因无法插入元素到输出流。
* {{l2tt|cpp/io/basic_ostream/write}}，若它因任何原因无法插入元素到输出流。
* 有格式输出函数 [[cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;]]、{{lc|std::put_money}} 和 {{lc|std::put_time}}，若它们在完成输出前遇到输出流的结尾。
* {{l2tt|cpp/io/basic_ios/init}}，在以对于 {{tt|rdbuf()}} 的空指针调用以初始化流时。
* {{l2tt|cpp/io/basic_istream/putback}} 和 {{l2tt|cpp/io/basic_istream/unget}}，在以空的 {{tt|rdbuf()}} 在流上调用时
* {{l2tt|cpp/io/basic_ostream/operator_ltlt|operator&lt;&lt;{{dsc small|(basic_streambuf*)}}}}，传递空指针为实参时。
* {{l2tt|cpp/io/basic_istream/putback}} 和 {{l2tt|cpp/io/basic_istream/unget}}，若 
{{c|rdbuf()-&gt;sputbackc()}} 或 {{c|rdbuf()-&gt;sungetc()}} 返回 {{c|traits::eof()}}。
* {{l2tt|cpp/io/basic_istream/sync}}、{{l2tt|cpp/io/basic_ostream/flush}} 和 {{tt|unitbuf}} 输出流上的每个输出函数，若 {{c|rdbuf()-&gt;pubsync()}} 返回 {{c|-1}}。
* 每个流 I/O 函数，若任何关联流缓冲的成员函数（如 {{tt|sbumpc()}}、{{tt|xsputn()}}、{{tt|sgetc()}}、{{tt|overflow()}} 等）抛出异常。
* {{l2tt|cpp/io/ios_base/iword}} 和 {{l2tt|cpp/io/ios_base/pword}} 在失败时（例如无法分配内存）。

===示例===
{{example
|
|code=
|output=
}}

===参阅===
{{cpp/io/basic ios/iostate accessors}}

{{dsc begin}}
{{dsc inc|cpp/io/basic_ios/dsc rdstate}}
{{dsc inc|cpp/io/basic_ios/dsc setstate}}
{{dsc inc|cpp/io/basic_ios/dsc clear}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}