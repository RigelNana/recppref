{{cpp/io/ios_base/title|ios_base}}
{{cpp/io/ios_base/navbar}}
{{dcl begin}}
{{dcl rev begin|num=1}}
{{dcl|until=c++11|
private:
ios_base( const ios_base&amp; );
}}
{{dcl|since=c++11|1=
public:
ios_base( const ios_base&amp; ) = delete;
}}
{{dcl rev end}}
{{dcl|num=2|
protected:
ios_base();
}}
{{dcl end}}

@1@ 复制构造函数{{rev inl|until=c++11|是私有的}}{{rev inl|since=c++11|被弃置}}：不能复制流。

@2@ 默认构造函数受保护：只有派生类可以构造 {{tt|std::ios_base}}。构造后内部状态未定义。派生类必须在首次使用或析构函数前调用 {{l2tf std|cpp/io/basic_ios/init}} 以完成初始化；否则行为未定义。

===注解===
同样的情况应用于输入/输出层级中的下个类 {{lc|std::basic_ios}} 的构造函数。进一步派生的类（{{lc|std::istream}} 与 {{lc|std::ostream}}）始终以具体的流缓冲构造，并可能多次调用 {{l2tf std|cpp/io/basic_ios/init}} 以完成它的虚基类的初始化。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=50|std=C++98|before=未指明复制构造函数|after=指明为私有成员函数}}
{{dr list item|wg=lwg|dr=220|std=C++98|before=在还没有调用 {{tt|std::ios_base}} 对象的 {{ltf|cpp/io/basic_ios/init}} 时就销毁该对象的行为不明确|after=此时行为未定义}}
{{dr list item|wg=lwg|dr=1249|std=C++98|before=在首次使用前不需要完成初始化|after=也需要完成初始化}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}