{{cpp/io/basic_osyncstream/title|operator{{=}}}}
{{cpp/io/basic_osyncstream/navbar}}
{{dcl begin}}
{{dcl|since=c++20|1=
basic_osyncstream&amp; operator=( std::basic_osyncstream&amp;&amp; other );
}}
{{dcl end}}

移动赋值同步输出流。

从 {{c|other}} 的对应成员移动赋值被包装的 {{lc|std::basic_syncbuf}}（此移动赋值后，{{c|other.get_wrapped()}} 返回空指针，而 {{c|other}} 的析构不产生输出；放出任何待决的缓冲输出）并[[cpp/io/basic_ostream/operator%3D|移动赋值]]基类 {{lc|std::basic_ostream}}（这会在 {{c|*this}} 和 {{c|other}} 间交换除了 {{tt|rdbuf}} 之外的所有流状态变量）。
 
===参数===
{{par begin}}
{{par|other|要移动的另一同步输出流}}
{{par end}}

===返回值===
{{c|*this}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;syncstream&gt;
#include &lt;utility&gt;

int main()
{
    std::osyncstream out(std::cout);
    out &lt;&lt; "test\n";
    std::ostringstream str_out;
    std::osyncstream{str_out} = std::move(out); // 注意 out 于此处发出
    std::cout &lt;&lt; "str_out = " &lt;&lt; std::quoted(str_out.view()) &lt;&lt; '\n';
}
|output=
test
str_out = ""
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3867|std=C++20|before=移动赋值运算符是 {{c/core|noexcept}} 的，但是 {{ltt std|cpp/io/basic_syncbuf}} 的移动赋值运算符不是|after=移除 {{c/core|noexcept}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_osyncstream/dsc constructor}}
{{dsc inc|cpp/io/basic_osyncstream/dsc destructor}}
{{dsc inc|cpp/io/basic_osyncstream/dsc emit}}
{{dsc end}}

{{langlinks|en|es|ja}}