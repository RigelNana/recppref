{{cpp/io/basic_osyncstream/title|emit}}
{{cpp/io/basic_osyncstream/navbar}}
{{dcl begin}}
{{dcl|1=
void emit();
}}
{{dcl end}}

通过在底层 {{ltt|cpp/io/basic_syncbuf|std::basic_syncbuf}} 上调用 {{ltt|cpp/io/basic_syncbuf/emit|emit()}}，发出所有缓冲的输出并执行任何未决的冲洗。
 
===参数===
（无）

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;syncstream&gt;

int main()
{
    {
        std::osyncstream bout(std::cout);
        bout &lt;&lt; "Hello," &lt;&lt; '\n'; // 不冲洗
        bout.emit(); // 传输字符；不冲洗 cout
        bout &lt;&lt; "World!" &lt;&lt; std::endl; // 标记冲洗；不冲洗 cout
        bout.emit(); // 传输字符；冲洗 cout
        bout &lt;&lt; "Greetings." &lt;&lt; '\n'; // 不冲洗
    } // 析构函数调用 emit() ：传输字符；不冲洗 cout

    // emit 能用于被包装流上的局部异常处理
    std::osyncstream bout(std::cout);
    bout &lt;&lt; "Hello, " &lt;&lt; "World!" &lt;&lt; '\n';
    try
    {
        bout.emit();
    }
    catch (...)
    {
        // 处理异常
    }
}|output=
Hello,
World!
Greetings.
Hello, World!
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_osyncstream/dsc destructor}}
{{dsc inc|cpp/io/basic_syncbuf/dsc emit}}
{{dsc end}}

{{langlinks|en|es|ja}}