{{cpp/title|ios_base}}
{{cpp/io/ios_base/navbar}}
{{ddcl|header=ios|
class ios_base;
}}

类 {{tt|ios_base}} 是作为所有输入/输出流类的基类工作的多用途类。它维护几种数据：

@1@ 状态信息：流状态标志；
@2@ 控制信息：控制输入和输出序列格式化和浸染的本地环境的标志；
@3@ 私有存储：允许 {{c/core|long}} 和 {{c/core|void*}} 成员的有下标可扩展数据结构，它可以实现为两个任意长度的数组，有两个元素的结构体的单个数组，或另一容器；
@4@ 回调：从 {{ltf|cpp/io/ios_base/imbue}}、{{lc|std::basic_ios::copyfmt()}} 和 {{ltf|cpp/io/ios_base/~ios_base}} 调用的任意数量用户定义函数。

典型实现保有对应下列 {{ltt|cpp/io/ios_base/fmtflags}}、{{ltt|cpp/io/ios_base/iostate}}、{{ltt|cpp/io/ios_base/openmode}} 及 {{ltt|cpp/io/ios_base/seekdir}} 所有值的成员常量，维护当前精度、宽度、格式化标志、异常掩码、缓冲区错误状态、保有回调的可调大小容器、当前浸染的本地环境、私有存储的成员变量及 {{ltf|cpp/io/ios_base/xalloc}} 所用的静态整数变量。

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/io/ios_base/dsc constructor}}
{{dsc inc|cpp/io/ios_base/dsc destructor}}
{{dsc inc|cpp/io/ios_base/dsc operator{{=}}}}

{{dsc h2|格式化}}
{{dsc inc|cpp/io/ios_base/dsc flags}}
{{dsc inc|cpp/io/ios_base/dsc setf}}
{{dsc inc|cpp/io/ios_base/dsc unsetf}}
{{dsc inc|cpp/io/ios_base/dsc precision}}
{{dsc inc|cpp/io/ios_base/dsc width}}

{{dsc h2|本地环境}}
{{dsc inc|cpp/io/ios_base/dsc imbue}}
{{dsc inc|cpp/io/ios_base/dsc getloc}}

{{dsc h2|内部可扩展数组}}
{{dsc inc|cpp/io/ios_base/dsc xalloc}}
{{dsc inc|cpp/io/ios_base/dsc iword}}
{{dsc inc|cpp/io/ios_base/dsc pword}}

{{dsc h2|杂项}}
{{dsc inc|cpp/io/ios_base/dsc register_callback}}
{{dsc inc|cpp/io/ios_base/dsc sync_with_stdio}}

{{dsc h1 |成员类}}
{{dsc inc|cpp/io/ios_base/dsc failure}}
{{dsc inc|cpp/io/ios_base/dsc Init}}
{{dsc end}}

{{dsc begin}}
{{dsc h1|成员类型与常量}}
{{dsc hitem|类型|解释}}
{{dsc inc|cpp/io/ios_base/dsc openmode}}
{{dsc inc|cpp/io/ios_base/dsc fmtflags}}
{{dsc inc|cpp/io/ios_base/dsc iostate}}
{{dsc inc|cpp/io/ios_base/dsc seekdir}}
{{dsc inc|cpp/io/ios_base/dsc event}}
{{dsc inc|cpp/io/ios_base/dsc event_callback}}
{{dsc end}}
{{rev begin}}
{{rev|until=c++17|
{{dsc begin}}
{{dsc h2|弃用的成员类型}}
{{dsc hitem |类型|解释}}
{{dsc|{{tt|io_state}}{{mark deprecated}}|可以像 {{tt|iostate}} 一样使用的整数类型}}
{{dsc|{{tt|open_mode}}{{mark deprecated}}|可以像 {{tt|openmode}} 一样使用的整数类型}}
{{dsc|{{tt|seek_dir}}{{mark deprecated}}|可以像 {{tt|seekdir}} 一样使用的整数类型}}
{{dsc|{{tt|streamoff}}{{mark deprecated}}|可以像 {{tt|off_type}} 一样使用的未指定类型，不必是 {{lc|std::streamoff}}}}
{{dsc|{{tt|streampos}}{{mark deprecated}}|可以像 {{tt|pos_type}} 一样使用的未指定类型，不必是 {{lc|std::streampos}}}}
{{dsc end}}
}}
{{rev end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=1357|paper=N3110|std=C++98|before={{tt|std::ios_base}} 为类型 {{tt|openmode}}、{{tt|fmtflags}} 和 {{tt|iostate}} 定义了 {{c/core|operator~}}、&lt;br&gt;{{c/core|operator&amp;}} 和 {{c/core|operator{{!}}}}，违反了{{named req|BitmaskType}}的要求&lt;ref&gt;{{named req|BitmaskType}}应该自身支持逐位操作。逐位操作不应该由外部提供支持。&lt;/ref&gt;|after=移除这些定义}}
{{dr list end}}
&lt;references/&gt;

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/dsc basic_ios}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}