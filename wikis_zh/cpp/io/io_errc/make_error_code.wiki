{{cpp/title|make_error_code{{dsc small|(std::io_errc)}}}}
{{cpp/io/io_errc/navbar}}
{{ddcl|header=ios|since=c++11|
std::error_code make_error_code( std::io_errc e ) noexcept;
}}

从 {{lc|std::io_errc}} 类型的值构造一个 {{lc|std::error_code}} 对象，如同通过 {{c|return std::error_code(static_cast&lt;int&gt;(e), std::iostream_category())}}。

此函数会被 {{lc|std::error_code}} 的带有 {{lc|std::io_errc}} 实参的构造函数调用。

===参数===
{{par begin}}
{{par|e|错误码编号}}
{{par end}}

===返回值===
{{lc|std::error_code}} 类型的值，保有来自 {{c|e}} 的错误码编号，关联到错误类别 {{c|"iostream"}}。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;system_error&gt;

int main()
{
    std::error_code ec = std::make_error_code(std::io_errc::stream);
    
    // 因为有重载方法和 is_error_code_enum 特化，所以可以这样操作
    ec = std::io_errc::stream;
    
    std::cout &lt;&lt; "来自 io_errc::stream 的错误码具有类别 "
              &lt;&lt; ec.category().name() &lt;&lt; '\n';
}
|output=
来自 io_errc::stream 的错误码具有类别 iostream
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2087|std=C++11|before={{tt|make_error_code(io_errc)}} 未声明为 {{c/core|noexcept}}|after=声明为 {{c/core|noexcept}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/error/dsc error_code}}
{{dsc inc|cpp/io/dsc io_errc}}
{{dsc inc|cpp/error/errc/dsc make_error_code}}
{{dsc inc|cpp/thread/future_errc/dsc make_error_code}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}