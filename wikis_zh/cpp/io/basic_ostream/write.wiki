{{cpp/io/basic_ostream/title|write}}
{{cpp/io/basic_ostream/navbar}}
{{ddcl|
basic_ostream&amp; write( const char_type* s, std::streamsize count );
}}

表现为{{named req|UnformattedOutputFunction}}。构造并检查 sentry 对象后，输出以 {{tt|s}} 指向其首元素的字符数组中的相继位置的字符。将各字符插入到输出序列，直至出现下列条件之一：
* 恰好插入了 {{tt|count}} 个字符
* 插入到输出序列失败（该情况下调用 {{c|setstate(badbit)}}）。

===参数===
{{par begin}}
{{par | s |指向要写入的字符串的指针}}
{{par | count |要写入的字符数}}
{{par end}}

===返回值===
{{c|*this}}

===异常===
{{include|cpp/io/stream_exceptions}}

===注解===
不同于有格式的 {{rlp|operator_ltlt2|operator&lt;&lt;}}，此函数不对 {{c|signed char}} 或 {{c|unsigned char}} 类型重载。

而且，不同于有格式输出函数，此函数在失败时不设置 {{tt|failbit}}。

使用非转换本地环境（默认本地环境为非转换）时，{{lc|std::basic_ofstream}} 中此函数的覆写函数可针对零复制大块 I/O 进行优化（通过覆写 {{lc|std::streambuf::xsputn}}）。

===示例===
{{example
|此函数可用于输出对象表示，即二进制输出
|code=
#include &lt;iostream&gt;

int main()
{
    int n = 0x41424344;
    std::cout.write(reinterpret_cast&lt;char*&gt;(&amp;n), sizeof n) &lt;&lt; '\n';

    char c[]="This is sample text.";
    std::cout.write(c, 4).write("!\n", 2);
}
|p=true
|output=
DCBA
This!
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_ostream/dsc operator_ltlt2}}
{{dsc inc|cpp/io/basic_ostream/dsc put}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}