{{cpp/io/basic_ostream/title|flush}}
{{cpp/io/basic_ostream/navbar}}
{{ddcl|
basic_ostream&amp; flush();
}}

向底层输出序列写入尚未提交的更改。表现为{{named req|UnformattedOutputFunction}}。

如果 {{lc|rdbuf()}} 是空指针，那么不会构造 sentry 对象。

否则，在构造并检查 sentry 对象后，调用 {{c|rdbuf()-&gt;pubsync()}}。如果该调用返回 {{c|-1}}，那么就会调用 {{c|setstate(badbit)}}。

===返回值===
{{c|*this}}

===异常===
如果 {{c|1=exceptions() &amp; badbit != 0}}，那么可能抛出 {{lc|std::ios_base::failure}}。

===示例===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;
 
using namespace std::chrono_literals;
 
void f()
{
    std::cout &lt;&lt; "从线程输出... ";
    for (int i{1}; i != 10; ++i)
    {
        std::this_thread::sleep_for(250ms);
        std::cout &lt;&lt; i &lt;&lt; ' ';
 
        // 每次输出三个数字
        // 只能实时观测到该效果
        if (0 == (i % 3))
            std::cout.flush();
    }
    std::cout &lt;&lt; std::endl; // 也会进行冲刷
}
 
int main()
{
    std::thread tr{f};
    std::this_thread::sleep_for(150ms);
    std::clog &lt;&lt; "从 main 输出\n";
    tr.join();
}
|output=
从 main 输出
从线程输出... 1 2 3 4 5 6 7 8 9
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=581|std=C++98|before={{tt|flush()}} 因 {{lwg|60}} 的解决方案而不表现为&lt;br&gt;{{named req|UnformattedOutputFunction}}|after=表现为&lt;br&gt;{{named req|UnformattedOutputFunction}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubsync}}
{{dsc inc|cpp/io/basic_streambuf/dsc sync}}
{{dsc inc|cpp/io/manip/dsc flush}}
{{dsc inc|cpp/io/manip/dsc endl}}
{{dsc inc|cpp/io/basic_istream/dsc sync}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}