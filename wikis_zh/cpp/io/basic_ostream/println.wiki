{{cpp/title|println{{small|(std::ostream)}}}}
{{cpp/io/basic_ostream/navbar}}
{{dcl begin}}
{{dcl header|ostream}}
{{dcla|num=1|since=c++23|
template&lt; class... Args &gt;
void println( std::ostream&amp; os, std::format_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcla|num=2|since=c++26|
void println( std::ostream&amp; os );
}}
{{dcl end}}

根据格式字符串 {{tt|fmt}} 格式化 {{tt|args}} 并追加 {{c|'\n'}}（这表示每次输出均已换行结尾），并将结果插入流 {{c|os}}。

@1@ 等价于：
{{box|{{ltt|cpp/io/basic_ostream/print|std::print}}{{c/core|(os, "{}\n", std::format(os.getloc(), fmt, args...));}}}}

@2@ 等价于：
{{box|{{ltt|cpp/io/basic_ostream/print|std::print}}{{c/core|(os, "\n");}}}}

如果 {{tt|Args}} 中有任何 {{tt|Ti}}，使得 {{c/core|std::formatter&lt;Ti, char&gt;}} 不满足{{named req|BasicFormatter}}的要求（如 {{c|std::make_format_args}} 的要求），则其行为未定义。

===形参===
{{par begin}}
{{par|os|要插入数据的输出流}}
{{par|fmt|{{include|cpp/utility/format/format string}}}}
{{par|args...|要格式化的实参}}
{{par end}}

===异常===
{{std print ostream exceptions}}

===注解===
虽然重载 {{vl|2}} 是在 C++26 中添加的，所有已知实现都使得它在 C++23 模式中可用。

{{ftm begin|sort=yes}}
{{ftm|std=C++23|value=202207L|__cpp_lib_print|格式化输出}}
{{ftm|std=C++23|value=202207L|__cpp_lib_format|暴露 {{lc|std::basic_format_string}}}}
{{ftm end}}

===示例===
{{example
|code=
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=4088|std=C++23|before={{vl|1}} 在格式化实参时忽略了 {{c|os}} 浸染的本地环境|after=使用该本地环境}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_ostream/dsc print}}
{{dsc inc|cpp/io/dsc println}}
{{dsc inc|cpp/utility/format/dsc format}}
{{dsc end}}

{{langlinks|de|en|es|fr|ja|ru}}