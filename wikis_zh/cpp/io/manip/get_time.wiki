{{cpp/title|get_time}}
{{cpp/io/manip/navbar}}
{{ddcl|header=iomanip|since=c++11|
template&lt; class CharT &gt;
/*未指定*/ get_time( std::tm* tmb, const CharT* fmt );
}}

用于表达式 {{c|in &gt;&gt; get_time(tmb, fmt)}} 时，按照格式字符串 {{c|fmt}} 及输入流 {{c|in}} 中当前浸染的本地环境的 {{lc|std::time_get}} 刻面，分析字符输入为日期/时间值。将结果存储到 {{c|tmb}} 指向的 {{lc|std::tm}} 对象中。

===参数===
{{par begin}}
{{par|tmb|指向 {{lc|std::tm}} 对象的合法指针，将结果存储到它指向的对象中}}
{{par|fmt|指向指定转换格式的空终止 {{tt|CharT}} 字符串的指针
{{cpp/locale/time_get/time_get format}}
}}
{{par end}}

===返回值===
{{cpp/io/manip/iomanip return value|get_time}}

===注解===
如 {{lc|std::time_get::do_get}} 中所指定，未指明此函数是否将未由 {{c|fmt}} 中出现的转换指定符所直接设置的 {{c|*tmb}} 中的字段清零：可移植程序在调用 {{tt|std::get_time}} 前应该初始化 {{c|*tmb}} 的每个字段。

===示例===
{{example
|1=注意：选择 clang 或 12.1 及以上版本的 gcc 以观察输出。12.1 版本以前的 libstdc++ 未正确实现 {{c|%b}} 指定符：[https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78714 漏洞 #78714]
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;sstream&gt;

int main()
{
    std::tm t = {};
    std::istringstream ss("2011-Februar-18 23:12:34");
    ss.imbue(std::locale("de_DE.utf-8"));
    ss &gt;&gt; std::get_time(&amp;t, "%Y-%b-%d %H:%M:%S");
    
    if (ss.fail())
        std::cout &lt;&lt; "解析失败\n";
    else
        std::cout &lt;&lt; std::put_time(&amp;t, "%c") &lt;&lt; '\n';
}
|p=true
|output=
Sun Feb 18 23:12:34 2011
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc time_get}}
{{dsc inc|cpp/io/manip/dsc put_time}}
{{dsc inc|cpp/chrono/dsc parse}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}