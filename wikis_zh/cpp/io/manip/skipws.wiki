{{cpp/title|skipws|noskipws}}
{{cpp/io/manip/navbar}}
{{dcl begin}}
{{dcl header|ios}}
{{dcl|num=1|
std::ios_base&amp; skipws( std::ios_base&amp; str );
}}
{{dcl|num=2|
std::ios_base&amp; noskipws( std::ios_base&amp; str );
}}
{{dcl end}}

启用或禁用有格式输入函数所做的跳过前导空白符（默认启用）。在输出上无效果。

@1@ 如同用调用 {{c|str.setf(std::ios_base::skipws)}} 启用流 {{c|str}} 中的 {{tt|skipws}} 标志。

@2@ 如同用调用 {{c|str.unsetf(std::ios_base::skipws)}} 禁用流 {{c|str}} 中的 {{tt|skipws}} 标志。

空白符的跳过由 {{lc|std::basic_istream::sentry}} 的构造函数进行，它读取并舍弃由流所浸染的本地环境的 {{lc|std::ctype}} 刻面分类为空白符的字符。

这是一个 I/O 操纵符，可用如 {{c|out &lt;&lt; std::noskipws}} 的表达式对任何 {{lc|std::basic_ostream}} 类型的 {{tt|out}} 或用如 {{c|in &gt;&gt; std::noskipws}} 的表达式对任何 {{lc|std::basic_istream}} 类型的 {{tt|in}} 调用。

===参数===
{{par begin}}
{{par|str|到 I/O 流的引用}}
{{par end}}

===返回值===
{{c|str}}（到操纵后的流的引用）。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    char c1, c2, c3;
    std::istringstream("a b c") &gt;&gt; c1 &gt;&gt; c2 &gt;&gt; c3;
    std::cout &lt;&lt; "Default  behavior:"
                 " c1 = " &lt;&lt; c1 &lt;&lt; 
                 " c2 = " &lt;&lt; c2 &lt;&lt; 
                 " c3 = " &lt;&lt; c3 &lt;&lt; '\n';
    std::istringstream("a b c") &gt;&gt; std::noskipws &gt;&gt; c1 &gt;&gt; c2 &gt;&gt; c3;
    std::cout &lt;&lt; "noskipws behavior:" 
                 " c1 = " &lt;&lt; c1 &lt;&lt;
                 " c2 = " &lt;&lt; c2 &lt;&lt;
                 " c3 = " &lt;&lt; c3 &lt;&lt; '\n';
}
|output=
Default  behavior: c1 = a c2 = b c3 = c
noskipws behavior: c1 = a c2 =   c3 = b
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/manip/dsc resetiosflags}}
{{dsc inc|cpp/io/manip/dsc setiosflags}}
{{dsc inc|cpp/io/manip/dsc ws}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}