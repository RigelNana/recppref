{{cpp/title|dec|hex|oct}}
{{cpp/io/manip/navbar}}
{{dcl begin}}
{{dcl header|ios}}
{{dcl|num=1|
std::ios_base&amp; dec( std::ios_base&amp; str );
}}
{{dcl|num=2|
std::ios_base&amp; hex( std::ios_base&amp; str );
}}
{{dcl|num=3|
std::ios_base&amp; oct( std::ios_base&amp; str );
}}
{{dcl end}}

修改整数 I/O 的默认数值底。

@1@ 如同以调用 {{c|str.setf(std::ios_base::dec, std::ios_base::basefield)}} 设置流 {{c|str}} 的 {{tt|basefield}} 为 {{tt|dec}}。

@2@ 如同以调用 {{c|str.setf(std::ios_base::hex, std::ios_base::basefield)}} 设置流 {{c|str}} 的 {{tt|basefield}} 为 {{tt|hex}}。

@3@ 如同以调用 {{c|str.setf(std::ios_base::oct, std::ios_base::basefield)}} 设置流 {{c|str}} 的 {{tt|basefield}} 为 {{tt|oct}}。

这是一个 I/O 操纵符，可用如 {{c|out &lt;&lt; std::hex}} 的表达式对任何 {{lc|std::basic_ostream}} 类型的 {{tt|out}} 或用如 {{c|in &gt;&gt; std::hex}} 的表达式对任何 {{lc|std::basic_istream}} 类型的 {{tt|in}} 调用。

===参数===
{{par begin}}
{{par|str|到 I/O 流的引用}}
{{par end}}

===返回值===

{{c|str}}（到操纵后的流的引用）。

===示例===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::cout &lt;&lt; "数值 42 的八进制：  " &lt;&lt; std::oct &lt;&lt; 42 &lt;&lt; '\n'
              &lt;&lt; "数值 42 的十进制：  " &lt;&lt; std::dec &lt;&lt; 42 &lt;&lt; '\n'
              &lt;&lt; "数值 42 的十六进制：" &lt;&lt; std::hex &lt;&lt; 42 &lt;&lt; '\n';
    int n;
    std::istringstream("2A") &gt;&gt; std::hex &gt;&gt; n;
    std::cout &lt;&lt; std::dec &lt;&lt; "按十六进制分析 \"2A\" 得到 " &lt;&lt; n &lt;&lt; '\n';
    // 输出基底是持久的，直至更改
    std::cout &lt;&lt; std::hex &lt;&lt; "42 转为十六进制得到 " &lt;&lt; 42
        &lt;&lt; " 而 21 转为十六进制得到 " &lt;&lt; 21 &lt;&lt; '\n';

    // 注意：不存在将流设置为以二进制格式打印数值的 I/O 操纵符（如 bin）。
    // 如果必须进行二进制暑促，则可以使用 std::bitset 技巧：
    std::cout &lt;&lt; "数值 42 的二进制：  " &lt;&lt; std::bitset&lt;8&gt;{42} &lt;&lt; '\n';
}
|output=
数值 42 的八进制：  52
数值 42 的十进制：  42
数值 42 的十六进制：2a
按十六进制分析 "2A" 得到 42
42 转为十六进制得到 2a 而 21 转为十六进制得到 15
数值 42 的二进制：  00101010
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/manip/dsc setbase}}
{{dsc inc|cpp/io/manip/dsc showbase}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}