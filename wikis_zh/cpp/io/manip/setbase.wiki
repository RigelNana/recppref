{{cpp/title|setbase}}
{{cpp/io/manip/navbar}}
{{ddcl|header=iomanip|
/*未指定*/ setbase( int base );
}}

设置流的数值底。用于表达式 {{c|out &lt;&lt; setbase(base)}} 或 {{c|in &gt;&gt; setbase(base)}} 时，取决于 {{c|base}} 的值，更改流 {{c|out}} 或 {{c|in}} 的 {{tt|basefield}} 标志：

* 值 {{c|16}} 设置 {{tt|basefield}} 为 {{lc|std::ios_base::hex}}。
* 值 {{c|8}} 设置 {{lc|std::ios_base::oct}}。
* 值 {{c|10}} 设置 {{lc|std::ios_base::dec}}。

8、10 或 16 以外的 {{c|base}} 值会重置 {{tt|basefield}} 为零，这对应十进制输出和依赖前缀的输入。

===参数===
{{par begin}}
{{par|base|{{tt|basefield}} 的新值}}
{{par end}}

===返回值===
{{cpp/io/manip/iomanip return value|setbase}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::cout &lt;&lt; "解析字符串 \"10 0x10 010\"\n";
    
    int n1, n2, n3;
    std::istringstream s("10 0x10 010");
    
    s &gt;&gt; std::setbase(16) &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3;
    std::cout &lt;&lt; "以十六进制解析：" &lt;&lt; n1 &lt;&lt; ' ' &lt;&lt; n2 &lt;&lt; ' ' &lt;&lt; n3 &lt;&lt; '\n';

    s.clear();
    s.seekg(0);

    s &gt;&gt; std::setbase(0) &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3;
    std::cout &lt;&lt; "依赖前缀的解析：" &lt;&lt; n1 &lt;&lt; ' ' &lt;&lt; n2 &lt;&lt; ' ' &lt;&lt; n3 &lt;&lt; '\n';

    std::cout &lt;&lt; "以十六进制输出：" &lt;&lt; std::setbase(16)
              &lt;&lt; std::showbase &lt;&lt; n1 &lt;&lt; ' ' &lt;&lt; n2 &lt;&lt; ' ' &lt;&lt; n3 &lt;&lt; '\n';
}
|output=
解析字符串 "10 0x10 010"
以十六进制解析：16 16 16
依赖前缀的解析：10 16 8
以十六进制输出：0xa 0x10 0x8
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=183|std=C++98|before={{tt|setbase}} 只能用于具有 {{lc|std::ostream}} 或 {{lc|std::istream}} 类型的流|after=可以用于所有字符流}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/manip/dsc hex}}
{{dsc inc|cpp/io/manip/dsc showbase}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}