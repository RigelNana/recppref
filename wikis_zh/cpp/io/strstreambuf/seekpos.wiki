{{cpp/io/strstreambuf/title|seekpos}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
protected:
virtual pos_type seekpos( pos_type sp,
                          std::ios_base::openmode which =
                              std::ios_base::in {{!}} std::ios_base::out );
}}

在可能时重寻位 {{lc|std::basic_streambuf::gptr}} 和/或 {{lc|std::basic_streambuf::pptr}} 到 {{c|sp}} 指示的位置。

如果 {{c|which}} 中设置了 {{lc|std::ios_base::in}}，那么会尝试重寻位 {{tt|gptr()}}（读取区域中的下一位置指针）。如果 {{c|which}} 中设置了 {{lc|std::ios_base::out}}，那么会尝试重寻位 {{tt|pptr()}}（写入区域中的下一位置指针）。如果 {{c|which}} 中未设置这些位，那么操作失败。

以下列方式重寻位每个下一位置指针：
* 如果下一位置指针为空，那么操作失败。
* 否则，通过调用 {{c|sp.offset()}} 确定（{{tt|off_type}} 类型的）新偏移 {{c|newoff}}。如果 {{c|newoff}} 为负、在缓冲区边界外或非法，那么操作失败。
* 否则，如同用 {{c|1=gptr() = eback() + newoff}} 或 {{c|1=pptr() = pbase() + newoff}} 赋值下一位置指针。

===参数===
{{par begin}}
{{par|sp|流位置，由 {{lc|seekoff()}} 或 {{tt|seekpos()}} 获得者}}
{{par|which|定义会影响到的输入和/或输出序列。它可以是下列常量之一或它们的组合：
{{cpp/io/ios_base/openmode streambuf consts}}}}
{{par end}}

===返回值===
成功时返回转换到 {{tt|pos_type}} 的结果偏移，失败时返回 {{c|pos_type(off_type(-1))}}。

===注解===
{{tt|seekpos()}} 会被 {{lc|std::basic_streambuf::pubseekpos()}} 调用，后者会被 {{lc|std::basic_istream::seekg()}} 和 {{lc|std::basic_ostream::seekp()}} 的单实参版本调用。

===示例===
{{example
|code=
#include &lt;cstring&gt;
#include &lt;iostream&gt;
#include &lt;strstream&gt;

struct mybuf : std::strstreambuf
{
    mybuf(const char* str) : std::strstreambuf(str, std::strlen(str)) {}
    
    pos_type seekpos(pos_type sp, std::ios_base::openmode which)
    {
        std::cout &lt;&lt; "在 seekpos(" &lt;&lt; sp &lt;&lt; ") 前，读取区域的大小是 "
                  &lt;&lt; egptr() - eback() &lt;&lt; "，其中有 "
                  &lt;&lt; egptr() - gptr() &lt;&lt; " 个可用读取位置。\n";
 
        pos_type rc = std::strstreambuf::seekpos(sp, which);
 
        std::cout &lt;&lt; "seekpos() 返回 " &lt;&lt; rc &lt;&lt; "。\n在调用后，"
                  &lt;&lt; "读取区域的大小是 "
                  &lt;&lt; egptr() - eback() &lt;&lt; "，其中有 "
                  &lt;&lt; egptr() - gptr() &lt;&lt; " 个可用读取位置。\n";
 
        return rc;
    }
};

int main()
{
    mybuf buf("12345");
    std::iostream stream(&amp;buf);
    stream.seekg(2);
}
|output=
在 seekpos(2) 前，读取区域的大小是 5，其中有 5 个可用读取位置。
seekpos() 返回 2。
在调用后，读取区域的大小是 5，其中有 3 个可用读取位置。
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=55|std=C++98|before={{tt|seekpos}} 在失败时返回了未定义的无效流位置|after=失败时返回 {{c|pos_type(off_type(-1))}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/strstreambuf/dsc seekoff}}
{{dsc inc|cpp/io/basic_streambuf/dsc seekpos}}
{{dsc inc|cpp/io/basic_stringbuf/dsc seekpos}}
{{dsc inc|cpp/io/basic_filebuf/dsc seekpos}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}