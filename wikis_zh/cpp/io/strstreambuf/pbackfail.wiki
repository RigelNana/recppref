{{cpp/io/strstreambuf/title | pbackfail }}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
protected:
virtual int_type pbackfail( int_type c = EOF );
}}

此受保护虚函数被公开函数 {{l2tt|cpp/io/basic_streambuf/sungetc}} 和 {{l2tt|cpp/io/basic_streambuf/sputbackc}} 所调用（继而被 {{l2tt|cpp/io/basic_istream/unget}} 和 {{l2tt|cpp/io/basic_istream/putback}} 所调用）。

@1@ 调用方请求后备获取区一个字符（以无实参或以 {{lc|EOF}} 为实参调用 {{tt|pbackfail()}}）
:@a@ 首先，检查是否有回放位置，而若确实没有则失败（{{tt|strstreambuf}} 无重读用的外部字符源）。
:@b@ 若调用方错误而回放位置实际上可用，则简单地自减 {{l2tt|cpp/io/basic_streambuf/gptr|gptr()}}，例如通过调用 {{c|gbump(-1)}}。
@2@ 调用方试图回放异于之前取得的字符（以需要放回的字符调用 {{tt|pbackfail()}}），此情形下
:@a@ 首先，检查是否有回放位置，若无则失败。
:@b@ 然后检查回放位置有何字符。若其处保有的字符已等于 {{c|(char)c}}，则简单地自减 {{l2tt|cpp/io/basic_streambuf/gptr|gptr()}} 。
:@c@ 否则，若缓冲区不可修改（此 strstreambuf 以字符串字面量或某个其他 {{c|const}} 数组构造），则失败。
:@d@ 否则，自减 {{l2tt|cpp/io/basic_streambuf/gptr|gptr()}} 并写入 {{c|c}} 到调整后的 {{c|gptr()}} 所指向的位置。

===参数===
{{par begin}}
{{par|c|要放回的字符，或为 {{c|Traits::eof()}} 以指示请求后备获取区}}
{{par end}}

===返回值===
成功时为 {{c|c}}，除非 {{c|c}} 为 {{lc|EOF}}，该情况下返回异于 {{lc|EOF}} 的未指定值。

失败时为 {{lc|EOF}}。

===示例===
{{example
|code=
|output=
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc pbackfail}}
{{dsc inc|cpp/io/basic_streambuf/dsc sungetc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sputbackc}}
{{dsc inc|cpp/io/basic_istream/dsc unget}}
{{dsc inc|cpp/io/basic_istream/dsc putback}}
{{dsc end}}

{{langlinks|en|ja}}