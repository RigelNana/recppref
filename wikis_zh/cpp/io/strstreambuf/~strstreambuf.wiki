{{cpp/io/strstreambuf/title|~strstreambuf}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
virtual ~strstreambuf();
}}

销毁 {{tt|std::strstreambuf}} 对象。若对象管理动态分配的缓冲区（缓冲状态为“已分配”），且若对象未冻结，则用构造时提供的解分配函数，或若未提供则用 {{c/core|delete[]}} 解分配缓冲区。

===参数===
（无）

===注解===
此析构函数通常为 {{lc|std::strstream}} 的析构函数所调用。

若在动态 {{tt|strstream}} 上调用 {{lc|str()}}，而未在其后调用 {{rlpt|freeze|freeze(false)}}，则此析构函数会泄露内存。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

void* my_alloc(size_t n)
{
    std::cout &lt;&lt; "my_alloc(" &lt;&lt; n &lt;&lt; ") called\n";
    return new char[n];
}

void my_free(void* p)
{
    std::cout &lt;&lt; "my_free() called\n";
    delete[] (char*)p;
}

int main()
{
    {
        std::strstreambuf buf(my_alloc, my_free);
        std::ostream s(&amp;buf);
        s &lt;&lt; 1.23 &lt;&lt; std::ends;
        std::cout &lt;&lt; buf.str() &lt;&lt; '\n';
        buf.freeze(false);
    } // 析构函数调用于此，解分配缓冲区

    {
        std::strstreambuf buf(my_alloc, my_free);
        std::ostream s(&amp;buf);
        s &lt;&lt; 1.23 &lt;&lt; std::ends;
        std::cout &lt;&lt; buf.str() &lt;&lt; '\n';
//      buf.freeze(false);
    } // 析构函数调用于此，内存泄漏！
}
|output=
my_alloc(4096) called
1.23
my_free() called
my_alloc(4096) called
1.23
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}