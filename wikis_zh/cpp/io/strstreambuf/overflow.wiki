{{cpp/io/strstreambuf/title | overflow }}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
protected:
virtual int_type overflow (int_type c = EOF);
}}

后附字符 {{c|c}} 到缓冲区的放置区，若可能则重分配。

@1@ 若 {{tt|1=c == EOF}}，则不做任何事
@2@ 否则，若放置区拥有可用的写位置（{{c|pptr() &lt; epptr()}}），则如同用 {{c|1=*pptr()++ = c}} 存储该字符。
@3@ 否则，若流缓冲区模式非动态，或流当前已冻结，则函数失败并返回 {{c|EOF}}。
@4@ 否则，函数重分配（或初始分配）大小足够保有当前动态数组（若存在）加至少一个额外写入位置的动态数组。若构造函数中使用了指向分配函数的指针 {{tt|palloc}}，则以 {{c|(*palloc)(n)}} 调用该函数，否则用 {{c|new char[n]}}，其中 {{tt|n}} 为要分配的字节数。若构造函数中使用了指向解分配函数的指针 {{tt|pfree}}，则以 {{c|(*pfree)(p)}} 调用该函数分配先前的数组，否则用 {{c|delete[] p}}，若需要解分配。若分配失败，则函数失败并返回 {{c|EOF}} 。

===参数===
{{par begin}}
{{par|c|要存储于放置区的字符}}
{{par end}}

===返回值===
若 {{c|1=c == EOF}}，则返回异于 {{c|EOF}} 的某值。否则，成功时返回 {{c|(unsigned char)(c)}}，失败时返回 {{lc|EOF}}。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

struct mybuf : std::strstreambuf
{
    int_type overflow(int_type c) 
    {
        std::cout &lt;&lt; "overflow() 前：放置区的大小为 " &lt;&lt; epptr()-pbase()
                  &lt;&lt; "，有 " &lt;&lt; epptr()-pptr() &lt;&lt; " 个可用写入位置\n";
        int_type rc = std::strstreambuf::overflow(c);
        std::cout &lt;&lt; "overflow() 后：放置区的大小为 " &lt;&lt; epptr()-pbase()
                  &lt;&lt; "，有 " &lt;&lt; epptr()-pptr() &lt;&lt; " 个可用写入位置\n";
        return rc;
    }
};

int main()
{
    mybuf sbuf; // 读写动态 strstreambuf
    std::iostream stream(&amp;sbuf);

    stream &lt;&lt; "Sufficiently long string to overflow the initial allocation, at least "
           &lt;&lt; " on some systems.";
}
|p=true
|output=
overflow() 前：放置区的大小为 16，有 0 个可用写入位置
overflow() 后：放置区的大小为 32，有 15 个可用写入位置
overflow() 前：放置区的大小为 32 个 0 个可用写入位置
overflow() 后：放置区的大小为 64 个 31 个可用写入位置
overflow() 前：放置区的大小为 64 个 0 个可用写入位置
overflow() 后：放置区的大小为 128 个 63 个可用写入位置
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc overflow}}
{{dsc inc|cpp/io/basic_stringbuf/dsc overflow}}
{{dsc inc|cpp/io/basic_filebuf/dsc overflow}}
{{dsc inc|cpp/io/basic_streambuf/dsc sputc}}
{{dsc inc|cpp/io/basic_ostream/dsc put}}
{{dsc end}}

{{langlinks|en|ja}}