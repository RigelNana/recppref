{{cpp/io/strstreambuf/title|setbuf}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|1=
protected:
virtual streambuf* setbuf( char* s, std::streamsize n );
}}

如果 {{c|s}} 是空指针且 {{c|n}} 为零，那么函数无效果。

否则，效果由实现定义：一些实现不做任何事，而一些实现解分配动态成员数组并使用用户提供的大小为 {{c|n}}，首元素为 {{c|s}} 所指向的数组。

此函数是受保护的虚函数，它只能通过 {{tt|pubsetbuf()}} 或从 {{tt|std::strstreambuf}} 派生的用户定义类调用。

===参数===
{{par begin}}
{{par|s|指向用户提供缓冲区中首字节的指针}}
{{par|n|用户提供缓冲区中的字节数}}
{{par end}}

===返回值===
{{c|this}}

===示例===
{{example
|检查是否在动态 strstream 上支持 {{tt|setbuf()}} 的实现测试（输出以 Sun Studio 获得）：
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

int main()
{
    char a[100] = {};
    std::strstream str;
    str.rdbuf()-&gt;pubsetbuf(a, sizeof a);
    str &lt;&lt; "Test string" &lt;&lt; std::ends;
    std::cout &lt;&lt; "用户提供的缓冲区持有 \"" &lt;&lt; a &lt;&lt; "\"\n";
}
|p=true
|output=
用户提供的缓冲区持有 "Test string"
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=66|std=C++98|before={{tt|setbuf()}} 的效果是“执行分别在每个从 {{tt|strstreambuf}} 派生&lt;br&gt;的类中定义的操作”，但是没有从 {{tt|strstreambuf}} 派生的类|after=效果由实现定义}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc pubsetbuf}}
{{dsc inc|cpp/io/basic_streambuf/dsc setbuf}}
{{dsc inc|cpp/io/basic_stringbuf/dsc setbuf}}
{{dsc inc|cpp/io/basic_filebuf/dsc setbuf}}
{{dsc end}}

{{langlinks|en|ja}}