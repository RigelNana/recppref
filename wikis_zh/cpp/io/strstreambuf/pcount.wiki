{{cpp/io/strstreambuf/title|pcount}}
{{cpp/io/strstreambuf/navbar}}
{{ddcl|deprecated=c++98|removed=c++26|
int pcount() const;
}}

返回写入输出序列的字符数。

若放置区的下一位置指针（{{lc|std::streambuf::pptr()}}）为空指针，则返回零。

否则，返回放置区中的下一位置指针减放置区中的起始指针，即 {{c|pptr() - pbase()}}。

===参数===
（无）

===返回值===
写入放置区的字符数。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

int main()
{
    std::strstream dyn; // 动态分配的输出缓冲区
    dyn &lt;&lt; "Test: " &lt;&lt; 1.23 &lt;&lt; std::ends;
    std::strstreambuf* buf = dyn.rdbuf();
    std::cout &lt;&lt; "输出的大小为 "
              &lt;&lt; buf-&gt;pcount() // 或用 buf.pcount()
              &lt;&lt; " 并持有 \"" &lt;&lt; dyn.str() &lt;&lt; "\"\n";
    dyn.freeze(false); // 在动态流上调用 .str() 后

    char arr[10];
    std::ostrstream user(arr, 10); // 用户提供的输出缓冲区
    buf = user.rdbuf();
    user &lt;&lt; 1.23; // 注意：无 std::ends
    std::cout.write(arr, buf-&gt;pcount()); // 或就是 user.pcount()
    std::cout &lt;&lt; '\n';

    std::istrstream lit("1 2 3"); // 只读固定大小缓冲区
    buf = lit.rdbuf();
    // istrstream 无成员 pcount() ，故 lit.pcount() 将不工作
    std::cout &lt;&lt; "仅输入的 pcount() = " &lt;&lt; buf-&gt;pcount() &lt;&lt; '\n';
}
|output=
输出的大小为 11 并持有 "Test: 1.23"
1.23
仅输入的 pcount() = 0
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/strstream/dsc pcount|strstream}}
{{dsc inc|cpp/io/strstream/dsc pcount|ostrstream}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}