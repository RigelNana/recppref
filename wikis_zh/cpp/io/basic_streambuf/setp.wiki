{{cpp/io/basic_streambuf/title|setp}}
{{cpp/io/basic_streambuf/navbar}}
{{ddcl|1=
protected:
void setp( char_type* pbeg, char_type* pend );
}}

设置定义放置区的指针值。

调用后，{{c|1=pbase() == pbeg}}、{{c|1=pptr() == pbeg}} 和 {{c|1=epptr() == pend}} 都是 {{c|true}}。

如果 {{range|pbeg|pend}} 不是[[cpp/iterator#范围|有效范围]]，那么行为未定义。

===参数===
{{par begin}}
{{par|pbeg|指向放置区新起始的指针}}
{{par|pend|指向放置区新结尾的指针}}
{{par end}}

===示例===
{{example
|code=
#include &lt;array&gt;
#include &lt;cstddef&gt;
#include &lt;iostream&gt;

// 以 std::array 实现的 std::ostream 缓冲区
template&lt;std::size_t size, class CharT = char&gt;
struct ArrayedStreamBuffer : std::basic_streambuf&lt;CharT&gt;
{
    using Base = std::basic_streambuf&lt;CharT&gt;;
    using char_type = typename Base::char_type;
    
    ArrayedStreamBuffer()
    {
        // 设置 std::basic_streambuf 放置区指针以 “buffer” 工作
        Base::setp(buffer.data(), buffer.data() + size);
    }
    
    void print_buffer()
    {
        for (char_type i : buffer)
        {
            if (i == 0)
                std::cout &lt;&lt; "\\0";
            else
                std::cout &lt;&lt; i;
            std::cout &lt;&lt; ' ';
        }
        std::cout &lt;&lt; '\n';
    }
    
private:
    std::array&lt;char_type, size&gt; buffer{}; // 值初始化 “buffer”
};

int main()
{
    ArrayedStreamBuffer&lt;10&gt; streambuf;
    std::ostream stream(&amp;streambuf);
    
    stream &lt;&lt; "hello";
    stream &lt;&lt; ",";
    
    streambuf.print_buffer();
}
|output=
h e l l o , \0 \0 \0 \0
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=4023|std=C++98|before={{tt|setp}} 不要求输出序列是有效范围|after=要求有效}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc setg}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}