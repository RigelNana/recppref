{{cpp/io/basic_streambuf/title|pubsetbuf|setbuf}}
{{cpp/io/basic_streambuf/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
public:
basic_streambuf&lt;CharT, Traits&gt;* pubsetbuf( char_type* s, std::streamsize n )
}}
{{dcl|num=2|1=
protected:
virtual basic_streambuf&lt;CharT, Traits&gt;* setbuf( char_type* s, std::streamsize n )
}}
{{dcl end}}

@1@ 调用最终派生类上的 {{c|setbuf(s, n)}}。

@2@ 此函数的基类版本无效果。派生类可覆写此函数，以允许移除或替换受控制字符序列（缓冲区）为用户提供的数组，或为任何实现特定的目的。

===参数===
{{par begin}}
{{par|s|指向用户提供的缓冲区中首个 {{tt|CharT}} 的指针}}
{{par|n|用户提供缓冲区中的 {{tt|CharT}} 元素数}}
{{par end}}

===返回值===
@1@ {{c|setbuf(s, n)}} 的返回值。
@2@ {{c|this}}

===示例===
{{example
|为读取提供 10k 缓冲区。在 Linux 上可以使用 strace 工具观察实际读取的字节数。
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    int cnt = 0;
    std::ifstream file;
    char buf[1024 * 10 + 1];
    
    file.rdbuf()-&gt;pubsetbuf(buf, sizeof buf);
    
    file.open("/usr/share/dict/words");
    
    for (std::string line; getline(file, line);)
        ++cnt;
    
    std::cout &lt;&lt; cnt &lt;&lt; '\n';
}
|p=true
|output=
356010
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=158|std=C++98|before={{tt|setbuf}} 的默认行为只有在 {{lc|gptr()}} 不为空且不等于 {{lc|egptr()}} 时才有指明|after=在所有场合都指明为无效果}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_stringbuf/dsc setbuf}}
{{dsc inc|cpp/io/basic_filebuf/dsc setbuf}}
{{dsc inc|cpp/io/strstreambuf/dsc setbuf}}
{{dsc inc|cpp/io/c/dsc setbuf}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}