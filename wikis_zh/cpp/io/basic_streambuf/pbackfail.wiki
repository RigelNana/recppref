{{cpp/io/basic_streambuf/title|pbackfail}}
{{cpp/io/basic_streambuf/navbar}}
{{dcl begin}}
{{dcl|1=
protected:
virtual int_type pbackfail( int_type c = Traits::eof() );
}}
{{dcl end}}

只有满足下列任一条件才能调用此函数：
* {{c|gptr()}} 为[[cpp/language/pointer#空指针|空]]，
* {{c|1=gptr() == eback()}}，或
* {{c|traits::eq(traits::to_char_type(c), gptr()[-1])}} 返回 {{c|false}}。

此函数在以下两种情况下会被公开成员函数 {{lc|sungetc()}} 和 {{lc|sputbackc()}} 调用（它们会被 {{l2tt|cpp/io/basic_istream/unget}} 和 {{l2tt|cpp/io/basic_istream/putback}} 调用）：
@1@ 获取区中无回放位置（以无参数调用 {{tt|pbackfail()}}）。此情形中，{{tt|pbackfail()}} 的目的是令获取区后备一个字符，如果关联字符序列允许（例如文件支持的 streambuf 可以在提前一个字符的位置，从文件重新加载缓冲区）。
@2@ 调用方试图回放异于先前取得字符的另一字符（以需要回放的字符调用 {{tt|pbackfail()}}）。此情形中， {{tt|pbackfail()}} 的目的是将字符 {{tt|c}} 置于获取区中刚好前于 {{l2tt|cpp/io/basic_streambuf/gptr|gptr()}} 的位置，以及在可能时修改关联字符序列以反映此更改。这可能涉及如在第一变体中一般的后备获取区。

此函数的默认基类版本不做任何事并且在所有情况下返回 {{c|Traits::eof()}}。派生类覆写此函数： {{l2tt|cpp/io/basic_stringbuf/pbackfail}}、{{l2tt|cpp/io/basic_filebuf/pbackfail}}、{{l2tt|cpp/io/strstreambuf/pbackfail}}，而且期待用户定义和第三方库流类也覆写此函数。

===参数===
{{par begin}}
{{par|ch|要回放的字符，或如果只请求放弃就返回 {{c|Traits::eof()}}}}
{{par end}}

===返回值===
失败情况下是 {{c|Traits::eof()}}，某个不同值指示成功。基类版本始终失败。

===示例===
{{example|
|code=
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=32|std=C++98|before=调用条件“{{c|traits::eq(*gptr(),traits::to_char_type(c))}}&lt;br&gt;返回 {{c|false}}”与 {{lc|sputbackc()}} 的描述不匹配|after=将它改正以匹配}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_filebuf/dsc pbackfail}}
{{dsc inc|cpp/io/basic_stringbuf/dsc pbackfail}}
{{dsc inc|cpp/io/strstreambuf/dsc pbackfail}}
{{dsc inc|cpp/io/basic_streambuf/dsc sungetc}}
{{dsc inc|cpp/io/basic_streambuf/dsc sputbackc}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}