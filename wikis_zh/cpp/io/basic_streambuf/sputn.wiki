{{cpp/io/basic_streambuf/title|sputn|xsputn}}
{{cpp/io/basic_streambuf/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
std::streamsize sputn( const char_type* s, std::streamsize count );
}}
{{dcl|num=2|1=
protected:
virtual std::streamsize xsputn( const char_type* s, std::streamsize count );
}}
{{dcl end}}

@1@ 调用最终派生类的 {{c|xsputn(s, count)}}。

@2@ 从首元素是 {{c|s}} 所指向的数组将 {{c|count}} 个字符写入输出序列。如同以重复调用 {{lc|sputc()}} 写入字符。在写入 {{c|count}} 个字符后或调用 {{lc|sputc()}} 会返回 {{c|Traits::eof()}} 时写入停止。

如果放置区变满（{{c|1=pptr() == epptr()}}），那么未指明是否会调用 {{lc|overflow()}} 还是用其他方法达成同样的效果。

===参数===
（无）

===返回值===
成功写入的字符数。

===注解===
“用其他方法达成同样的效果”允许无中间缓冲的大量输入/输出：部分实现中 {{lc|std::ofstream::write()}} 简单地传递指针给适合的系统调用。

===示例===
{{example|
|code=
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::ostringstream s1;
    std::streamsize sz = s1.rdbuf()-&gt;sputn("This is a test", 14);
    s1 &lt;&lt; '\n';
    std::cout &lt;&lt; "调用 sputn() 返回 " &lt;&lt; sz &lt;&lt; '\n'
              &lt;&lt; "输出序列包含 " &lt;&lt; s1.str();
    
    std::istringstream s2;
    sz = s2.rdbuf()-&gt;sputn("This is a test", 14);
    std::cout &lt;&lt; "在输入流上调用 sputn() 返回 " &lt;&lt; sz &lt;&lt; '\n';
}
|output=
调用 sputn() 返回 14
输出序列包含 This is a test
在输入流上调用 sputn() 返回 0
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=565|std=C++98|before={{tt|xsputn()}} 在 {{c|1=pptr() == epptr()}} 时始终会调用 {{lc|overflow()}}|after=不需要每次都实际调用它}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_streambuf/dsc sgetn}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}