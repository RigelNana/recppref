{{cpp/io/basic_filebuf/title|open}}
{{cpp/io/basic_filebuf/navbar}}
{{dcl begin}}
{{dcl|num=1|
basic_filebuf* open( const char* s, std::ios_base::openmode mode );
}}
{{dcl|num=2|since=c++11|
basic_filebuf* open( const std::string&amp; str, std::ios_base::openmode mode ); 
}}
{{dcl|num=3|since=c++17|
basic_filebuf* open( const std::filesystem::path&amp; p,
                     std::ios_base::openmode mode );
}}
{{dcl|num=4|since=c++17|
basic_filebuf* open( const std::filesystem::path::value_type* s,
                     std::ios_base::openmode mode );
}}
{{dcl end}}

如果关联文件已打开（{{c|1=is_open() != false}}，则直接返回空指针。

否则，打开拥有给定名称（{{c|s}}{{rev inl|since=c++17|、{{c|p.c_str()}}}} 或 {{c|str.c_str()}}，取决于重载）的文件。{{lc|std::ios_base::openmode}} 值可以写成例如 {{c|std::ios_base::out {{!}} std::ios_base::app}} 这样的形式。

{{rrev|since=c++17|只有在 {{tt|std::filesystem::path::value_type}} 不是 {{c/core|char}} 时才会提供重载 {{v|4}}。}}

如同通过以 {{c|mode &amp; ~std::ios_base::ate}} 的结果按下列方式确定的第二实参 (文件访问模式) 调用 {{lc|std::fopen}} 打开文件，{{tt|open()}} 在结果不是以下标志位的组合之一的情况下会失败：
{| class="wikitable"
|-
!colspan="6"|{{c|mode &amp; ~std::ios_base::ate}}
!rowspan="2"|{{sep}}{{lc|std::fopen}}{{sep}}&lt;br&gt;访问模式
!rowspan="2"|文件已存在时&lt;br&gt;的动作
!rowspan="2"|文件不存在时&lt;br&gt;的动作
|-style="text-align:center"
|style="width: 68px;"|{{ltt|cpp/io/ios_base/openmode|binary}}
|style="width: 68px;"|{{ltt|cpp/io/ios_base/openmode|in}}
|style="width: 68px;"|{{ltt|cpp/io/ios_base/openmode|out}}
|style="width: 68px;"|{{ltt|cpp/io/ios_base/openmode|trunc}}
|style="width: 68px;"|{{ltt|cpp/io/ios_base/openmode|app}}
|{{ltt|cpp/io/ios_base/openmode|noreplace}}&lt;br&gt;{{mark since c++23}}
|-
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{c|"r"}}
|rowspan="4"|从头读取
|rowspan="2"|打开失败
|-
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{c|"rb"}}
|-
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{c|"r+"}}
|rowspan="2"|错误
|-
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{c|"r+b"}}
|-
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|rowspan="2"|{{c|"w"}}
|rowspan="6"|销毁内容
|rowspan="6"|创建新文件
|-
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|-
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|rowspan="2"|{{c|"wb"}}
|-
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|-
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{c|"w+"}}
|-
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{c|"w+b"}}
|-
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|rowspan="2"|{{c|"wx"}}
|rowspan="6"|打开失败
|rowspan="6"|创建新文件
|-
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|-
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|rowspan="2"|{{c|"wbx"}}
|-
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|-
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{c|"w+x"}}
|-
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{c|"w+bx"}}
|-
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|rowspan="2"|{{c|"a"}}
|rowspan="8"|写入结尾
|rowspan="8"|创建新文件
|-
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|-
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|rowspan="2"|{{c|"ab"}}
|-
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|-
|{{no|-}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|rowspan="2"|{{c|"a+"}}
|-
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|-
|{{yes|+}}
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|rowspan="2"|{{c|"a+b"}}
|-
|{{yes|+}}
|{{yes|+}}
|{{no|-}}
|{{no|-}}
|{{yes|+}}
|{{no|-}}
|}

如果打开操作成功且 {{c|1=(openmode &amp; std::ios_base::ate) != 0}}（设置了 {{tt|ate}} 位），那么如同用调用 {{c|std::fseek(file, 0, SEEK_END)}} 重寻位文件位置到文件尾，其中 {{c|file}} 是调用 {{lc|std::fopen}} 返回的指针。如果寻位失败，那么就会调用 {{lc|close()}} 并返回空指针以指示失败。

===参数===
{{par begin}}
{{par|s, str, p|要打开的文件名；{{c|s}} 必须指向空终止字符串}}
{{par|openmode|文件打开模式，{{lc|std::ios_base}} 模式的二进制或}}
{{par end}}

===返回值===
成功时返回 {{c|this}}，失败时返回空指针。

===注解===
常由 {{lc|std::basic_fstream}} 的构造函数或 {{tt|open()}} 成员函数调用 {{tt|open()}}。

===示例===
{{example
|
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;

int main()
{
    std::string filename = "Test.b";
    std::filebuf fb;
    
    // 准备文件以读取
    double d = 3.14;
    if (!fb.open(filename, std::ios::binary {{!}} std::ios::out))
    {
        std::cout &lt;&lt; "为写入打开文件 " &lt;&lt; filename &lt;&lt; " 失败\n";
        return 1;
    } 
    fb.sputn(reinterpret_cast&lt;char*&gt;(&amp;d), sizeof d);
    fb.close();
    
    // 为读取打开文件
    double d2 = 0.0;
    if (!fb.open(filename, std::ios::binary {{!}} std::ios::in))
    {
        std::cout &lt;&lt; "为读取打开文件 " &lt;&lt; filename &lt;&lt; " 失败\n";
        return 1;
    }
    
    auto got = fb.sgetn(reinterpret_cast&lt;char*&gt;(&amp;d2), sizeof d2);
    if (sizeof(d2) != got)
        std::cout &lt;&lt; "读取 " &lt;&lt; filename &lt;&lt; " 失败\n";
    else
        std::cout &lt;&lt; "从文件读回：" &lt;&lt; d2 &lt;&lt; '\n';
}
|output=
从文件读回：3.14
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=596|std=C++98|before={{tt|open()}} 不能以追加模式打开文件|after=可以以追加模式打开}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_filebuf/dsc is_open}}
{{dsc inc|cpp/io/basic_filebuf/dsc close}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}