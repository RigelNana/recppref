{{cpp/io/basic_filebuf/title|close}}
{{cpp/io/basic_filebuf/navbar}}
{{ddcl|
std::basic_filebuf&lt;CharT, Traits&gt;* close();
}}

如果放置区存在（即文件为写入而打开），那么会首先调用 {{c|overflow(Traits::eof())}} 向文件写入所有未决输出，包含任何反迁移序列。

如果在 {{rlpf|underflow}}、{{rlpf|overflow}}、{{rlpf|seekpos}} 和 {{rlpf|seekoff}} 之中最近调用的函数是 {{rlpf|overflow}}，那么可能会多次调用 {{l2tf std|cpp/locale/codecvt/unshift}}，以按照浸染的本地环境确定反迁移序列，并将该序列以 {{c|overflow(Traits::eof())}} 写入文件。

然后，如同以调用 {{lc|std::fclose()}} 关闭文件，不考虑任何之前调用成功还是失败。

如果作出的任何函数调用（包含对 {{lc|std::fclose()}} 的调用）失败，那么就会返回空指针。如果作出的任何函数调用抛出异常，那么捕捉该异常并在关闭文件后重抛。如果该文件已关闭，那么立即返回空指针。

任何情况下，都更新 {{lc|is_open()}} 所访问的私有成员变量。

===参数===
（无）

===返回值===
成功时返回 {{c|this}}，失败时返回空指针。

===注解===
{{tt|close()}} 通常是通过 {{lc|std::basic_filebuf}} 的析构函数调用的（而它则通常由 {{lc|std::basic_fstream}} 的析构函数所调用）。

===示例===
{{example
|
|code=
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=443|std=C++98|before=文件通过 {{c|overflow(EOF)}} 写入|after=改成 {{c|overflow(Traits::eof())}}}}
{{dr list item|wg=lwg|dr=622|std=C++98|before=不明确如何处理关闭过程中抛出的异常|after=在关闭文件后重抛}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_filebuf/dsc is_open}}
{{dsc inc|cpp/io/basic_filebuf/dsc ~basic_filebuf}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}