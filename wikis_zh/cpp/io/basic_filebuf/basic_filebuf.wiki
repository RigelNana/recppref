{{cpp/io/basic_filebuf/title |basic_filebuf}}
{{cpp/io/basic_filebuf/navbar}}
{{dcl begin}}
{{dcl| num=1 |
basic_filebuf();
}}
{{dcl| num=2 | since=c++11 |1=
basic_filebuf( const std::basic_filebuf&amp; rhs ) = delete;
}}
{{dcl| num=3 | since=c++11 |
basic_filebuf( std::basic_filebuf&amp;&amp; rhs );
}}
{{dcl end}}

构造新的 {{tt|std::basic_filebuf}} 对象。

@1@ 构造 {{tt|std::basic_filebuf}} 对象，以调用 {{lc|std::basic_streambuf}} 的默认构造函数初始化基类。创建的 {{tt|basic_filebuf}} 不与文件关联，而 {{lc|is_open()}} 返回 {{c|false}}。

@2@ 复制构造函数被弃置；{{tt|std::basic_filebuf}} 非{{named req|CopyConstructible}}。

@3@ 通过从另一 {{tt|std::basic_filebuf}} 对象 {{c|rhs}} 移动所有内容，包含缓冲区、关联的文件、本地环境、打开模式、{{tt|is_open}} 变量和所有其他状态，移动构造 {{tt|std::basic_filebuf}} 对象。移动后，{{c|rhs}} 不与文件关联且 {{c|1=rhs.is_open() == false}}。保证 {{c|rhs}} 的基类和 {{c|*this}} 的基类 {{lc|std::basic_streambuf}} 的成员指针指向不同缓冲区（除非它们为空）。

===参数===
{{par begin}}
{{par | rhs |另一 {{tt|basic_filebuf}} }}
{{par end}}

===注解===
典型地为 {{lc|std::basic_fstream}} 的构造函数所调用。

===示例===
{{example
|code=
}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/io/basic_filebuf/dsc operator{{=}}}}
{{dsc inc | cpp/io/basic_filebuf/dsc ~basic_filebuf}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}