{{cpp/title|basic_syncbuf}}
{{cpp/io/basic_syncbuf/navbar}}
{{ddcl|header=syncstream|since=c++20|1=
template&lt; 
    class CharT, 
    class Traits = std::char_traits&lt;CharT&gt;, 
    class Allocator = std::allocator&lt;CharT&gt; 
&gt; class basic_syncbuf : public std::basic_streambuf&lt;CharT, Traits&gt;
}}

{{tt|std::basic_syncbuf}} 是 {{lc|std::basic_streambuf}}（在构造时作为指针提供）的包装。它在它自身的缓冲区中积累输出，然后在析构和显式请求时将它的整个内容原子地传输给被包装缓冲，所以它们作为相接的字符序列出现。保证无数据竞争，而且发送给被包装缓冲的字符无穿插，只要所有其他对同一流缓冲的输出都通过可能不同的 {{tt|std::basic_syncbuf}} 实例进行。

{{tt|std::basic_syncbuf}} 的典型实现保有指向一个被包装的 {{lc|std::basic_streambuf}} 的指针、一个指示是否在同步（冲洗）时将传输其内容给被包装缓冲的布尔标志、一个指示策略非同步时发射（emit on sync）时的待决冲洗的布尔标志、一个使用 {{tt|Allocator}} 的内部缓冲区（如 {{lc|std::string}}）和一个指向互斥体的指针，该互斥体用于在多个访问同一被包装流缓冲的线程间同步发射（这些互斥体可以处于以指向 {{lc|std::basic_streambuf}} 对象的指针为键的散列映射中）。

同其他 streambuf 类，通常仅通过对应的流 {{ltt|cpp/io/basic_osyncstream|std::osyncstream}} 访问 {{tt|std::basic_syncbuf}} 而非直接访问它。

{{cpp/basic char typedefs|syncbuf|syncstream}}

===成员类型===
{{dsc begin}}
{{dsc hitem |成员类型|定义}}
{{dsc inc | cpp/io/dsc char_type}}
{{dsc inc | cpp/io/dsc traits_type}}
{{dsc inc | cpp/io/dsc int_type}}
{{dsc inc | cpp/io/dsc pos_type}}
{{dsc inc | cpp/io/dsc off_type}}
{{dsc | {{tt|allocator_type}} | {{tt|Allocator}}}}
{{dsc | {{tt|streambuf_type}} | {{c/core|std::basic_streambuf&lt;CharT, Traits&gt;}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc h1 |公开成员函数}}
{{dsc inc | cpp/io/basic_syncbuf/dsc constructor}}
{{dsc inc | cpp/io/basic_syncbuf/dsc operator{{=}}}}
{{dsc inc | cpp/io/basic_syncbuf/dsc swap}}
{{dsc inc | cpp/io/basic_syncbuf/dsc destructor}}
{{dsc inc | cpp/io/basic_syncbuf/dsc emit}}
{{dsc inc | cpp/io/basic_syncbuf/dsc get_wrapped}}
{{dsc inc | cpp/io/basic_syncbuf/dsc get_allocator}}
{{dsc inc | cpp/io/basic_syncbuf/dsc set_emit_on_sync}}

{{dsc h1 |受保护成员函数}}
{{dsc inc | cpp/io/basic_syncbuf/dsc sync}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc | cpp/io/basic_syncbuf/dsc swap2}}
{{dsc end}}

{{cpp/io/basic_streambuf/inherit}}

===注解===
{{feature test macro|__cpp_lib_syncbuf|std=C++20|value=201803L|带同步的缓冲 ostream（[[#Top|{{tt|std::syncbuf}}]], {{lc|std::osyncstream}}）和操纵符}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}