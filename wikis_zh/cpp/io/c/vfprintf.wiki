{{cpp/title|vprintf|vfprintf|vsprintf|vsnprintf}}
{{cpp/io/c/navbar}}
{{dcl begin}}
{{dcl header|cstdio}}
{{dcl|num=1|
int vprintf( const char* format, std::va_list vlist );
}}
{{dcl|num=2|
int vfprintf( std::FILE* stream, const char* format, std::va_list vlist );
}}
{{dcl|num=3|
int vsprintf( char* buffer, const char* format, std::va_list vlist );
}}
{{dcl|num=4|since=c++11|
int vsnprintf( char* buffer, std::size_t buf_size, const char* format, std::va_list vlist );
}}
{{dcl end}}

从 {{c|vlist}} 所定义的各种位置，转换之为字符串等价版本，并将结果写入到各种池。

@1@ 写结果到 {{lc|stdout}}。
@2@ 写结果到文件流 {{tt|stream}}。
@3@ 写结果到字符串 {{tt|buffer}}。
@4@ 写结果到字符串 {{tt|buffer}}。至多写入 {{c|buf_size - 1}} 个字符。结果字符串将以空字符终止，除非 {{c|buf_size}} 为零。若 {{c|buf_size}} 为零，则不写入内容且 {{c|buffer}} 可为空指针，然而仍然计算返回值（本应写入的字节数，不包含空终止符）并返回。

===参数===
{{par begin}}
{{par|stream|要写入的输出文件流}}
{{par|buffer|指向要写入的字符串的指针}}
{{par|buf_size|要写入的最大字符数}}
{{par|format|指向空终止字符串的指针，指定如何转译数据}}
{{par|vlist|含有要打印数据的可变实参列表}}
{{par end}}

{{cpp/io/c/printf format}}

===返回值===
@1-3@ 若成功则为写入的字符数，或若出现错误则为负值。

@4@ 若成功则为写入的字符数，或若出现错误则为负值。若结果字符串由于 {{c|buf_size}} 限制被截断，则函数返回假如未强加极限则本应写入的总字节数（不包含空终止字符）。

===注解===
所有这些函数调用 {{lc|va_arg}} 至少一次，返回后 {{tt|arg}} 的值不确定。这些函数不调用 {{lc|va_end}}，而这必须由调用方进行。

===示例===
{{example
|code=
#include &lt;cstdarg&gt;
#include &lt;cstdio&gt;
#include &lt;ctime&gt;
#include &lt;vector&gt;

void debug_log(const char *fmt, ...)
{
    std::time_t t = std::time(nullptr);
    char time_buf[100];
    std::strftime(time_buf, sizeof time_buf, "%D %T", std::gmtime(&amp;t));
    std::va_list args1;
    va_start(args1, fmt);
    std::va_list args2;
    va_copy(args2, args1);
    std::vector&lt;char&gt; buf(1 + std::vsnprintf(nullptr, 0, fmt, args1));
    va_end(args1);
    std::vsnprintf(buf.data(), buf.size(), fmt, args2);
    va_end(args2);
    std::printf("%s [debug]: %s\n", time_buf, buf.data());
}

int main()
{
    debug_log("Logging, %d, %d, %d", 1, 2, 3);
}
|output=
04/13/15 15:09:18 [debug]: Logging, 1, 2, 3
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fprintf}}
{{dsc inc|cpp/io/c/dsc vfscanf}}
{{dsc inc|cpp/io/dsc vprint_unicode}}
{{dsc inc|cpp/io/dsc vprint_nonunicode}}
{{dsc see c|c/io/vfprintf|vprintf|vfprintf|vsprintf|vsnprintf}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}