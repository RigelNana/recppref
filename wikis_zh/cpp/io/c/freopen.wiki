{{cpp/title|freopen}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
std::FILE* freopen( const char* filename, const char* mode, std::FILE* stream );
}}

首先，尝试关闭与 {{c|stream}} 关联的文件，忽略任何错误。然后，若 {{c|filename}} 非空，则尝试如同用 {{lc|std::fopen}} 以 {{c|mode}} 打开 {{c|filename}} 所指定的文件，然后将该文件与 {{c|stream}} 所指向的文件流关联。若 {{c|filename}} 为空指针，则函数参数重打开已与 {{c|stream}} 关联的文件（此情况下允许哪种模式改变是实现定义的）。

===参数===
{{par begin}}
{{par|filename|要关联文件流的文件}}
{{par|mode|确定新[[#文件访问标记|文件打开模式]]的空终止字符串}}
{{par|stream|要修改的文件流}}
{{par end}}

===文件访问标记===
{{cpp/io/c/file access flags}}

===返回值===
成功时为 {{c|stream}}，失败时为空指针。

===注解===
{{lc|std::freopen}} 是一旦由 I/O 操作或 {{lc|std::fwide}} 建立取向后，改变流窄/宽取向的唯一方式。

{{tt|std::freopen}} 的 Microsoft CRT 版本在 {{c|filename}} 为空指针时不支持任何模式更改并将它当作错误（见[https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/freopen-wfreopen 文档]）。可行的替代方案是非标准函数 [https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/setmode {{tt|_setmode()}}]。

===示例===
{{example
|下列代码重定向 {{tt|stdout}} 到文件
|code=
#include &lt;cstdio&gt;

int main()
{
    std::printf("stdout 打印到控制台\n");
    if (std::freopen("redir.txt", "w", stdout))
    {
        std::printf("stdout 重定向到文件\n"); // 这被写入 redir.txt
        std::fclose(stdout);
    }
}
|output=
stdout 打印到控制台
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fopen}}
{{dsc inc|cpp/io/c/dsc fclose}}
{{dsc see c|c/io/freopen}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}