{{cpp/title|fgets}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
char* fgets( char* str, int count, std::FILE* stream );
}}

从给定文件流读取最多 {{c|count - 1}} 个字符并将它们存储于 {{c|str}} 所指向的字符数组。若文件尾出现或发现换行符则终止分析，后一情况下 {{c|str}} 将包含一个换行符。若读入字节且无错误发生，则紧随写入到 {{c|str}} 的最后一个字符后写入空字符。

===参数===
{{par begin}}
{{par|str|指向 char 数组元素的指针}}
{{par|count|要写入的最大字符数（典型地为 {{c|str}} 的长度）}}
{{par|stream|读取数据来源的文件流}}
{{par end}}

===返回值===
成功时为 {{c|str}}，失败时为空指针。

若遇到文件尾条件导致了失败，则设置 {{c|stream}} 上的''文件尾''指示器（见 {{lc|std::feof()}}）。这仅若它导致未读取字符才是失败，该情况下返回空指针且不改变 {{c|str}} 所指向数组的内容（即不以空字符覆写首字节）。

若其他错误条件导致了失败，则设置 {{c|stream}} 上的''错误''指示器（见 {{lc|std::ferror()}}）。{{c|str}} 所指向的数组内容是不确定的（甚至可以不是空终止的）。

===注解===
[http://pubs.opengroup.org/onlinepubs/9699919799/functions/fgets.html POSIX 额外要求]若 {{tt|fgets}} 遇到异于文件尾条件的失败则设置 {{lc|errno}}。

尽管标准规范在 {{c|1=count &lt;= 1}} 的情况下[https://stackoverflow.com/questions/23388620 不明]，但常见的实现
* 若 {{c|count &lt; 1}} 则不做任何事并报告错误,
* 若 {{c|1=count == 1}}，则
:* 某些实现不做任何事并报告错误，
:* 其他实现不读内容，存储零于 {{c|str[0]}} 并报告成功。

===示例===
{{example
|code=
#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;span&gt;

void dump(std::span&lt;const char&gt; buf, std::size_t offset)
{
    std::cout &lt;&lt; std::dec;
    for (char ch : buf)
        std::cout &lt;&lt; (ch &gt;= ' ' ? ch : '.'), offset--;
    std::cout &lt;&lt; std::string(offset, ' ') &lt;&lt; std::hex
              &lt;&lt; std::setfill('0') &lt;&lt; std::uppercase;
    for (unsigned ch : buf)
        std::cout &lt;&lt; std::setw(2) &lt;&lt; ch &lt;&lt; ' ';
    std::cout &lt;&lt; std::dec &lt;&lt; '\n';
}

int main()
{
    std::FILE* tmpf = std::tmpfile();
    std::fputs("Alan Turing\n", tmpf);
    std::fputs("John von Neumann\n", tmpf);
    std::fputs("Alonzo Church\n", tmpf);

    std::rewind(tmpf);
    for (char buf[8]; std::fgets(buf, sizeof buf, tmpf) != nullptr;)
        dump(buf, 10);
}
|output=
Alan Tu.  41 6C 61 6E 20 54 75 00 
ring..u.  72 69 6E 67 0A 00 75 00 
John vo.  4A 6F 68 6E 20 76 6F 00 
n Neuma.  6E 20 4E 65 75 6D 61 00 
nn..uma.  6E 6E 0A 00 75 6D 61 00 
Alonzo .  41 6C 6F 6E 7A 6F 20 00 
Church..  43 68 75 72 63 68 0A 00
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fscanf}}
{{dsc inc|cpp/io/c/dsc gets}}
{{dsc inc|cpp/io/c/dsc fputs}}
{{dsc see c|c/io/fgets}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}