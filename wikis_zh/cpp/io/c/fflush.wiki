{{cpp/title|fflush}}
{{cpp/io/c/navbar}}
{{ddcl|header=cstdio|
int fflush( std::FILE* stream );
}}

对于输出流（和最近操作为输出的更新流），将来自 {{c|stream}} 缓冲区的未写入数据写入关联的输出设备。

对于输入流（和最近操作为输入的更新流），行为未定义。

{{rrev|since=c++26|
如果有数据被写入输出设备，那么从 {{tt|std::fflush}} 返回会建立一个[[cpp/language/as if|可观察检查点]]。
}}

如果 {{c|stream}} 是空指针，那么对所有打开的输出流进行上述冲洗操作，包含在库包内部所操作的，或其他情况下程序不能直接访问的流。

===参数===
{{par begin}}
{{par|stream|要写入的文件流}}
{{par end}}

===返回值===
成功时返回 {{c|0}}。否则返回 {{c|EOF}} 并设置文件流的错误指示器。

===注解===
POSIX 通过定义其在输入流上的效果[http://pubs.opengroup.org/onlinepubs/9699919799/functions/fflush.html 扩展 {{tt|fflush}} 的规定]，只要该流表示文件或另一可寻位设备：该情况下重定位 POSIX 文件指针以匹配 C 流指针（相当于撤销任何读缓冲）并舍弃任何未从流回读的 {{lc|std::ungetc}} 或 {{lc|std::ungetwc}} 的效果。

Microsoft 也扩展了 {{tt|fflush}} 的规定，定义其在输入流上的效果：Visual Studio 2013 和之前中，[https://learn.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2013/9yky46tz(v=vs.120) 丢弃输入缓冲区]，Visual Studio 2015 和更新版中，[https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fflush?view=msvc-140 没有效果，保留缓冲区]。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/c/dsc fopen}}
{{dsc inc|cpp/io/c/dsc fclose}}
{{dsc see c|c/io/fflush}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}