{{cpp/title | gets}}
{{cpp/io/c/navbar}}
{{ddcl | header=cstdio | deprecated=c++11 |removed=c++14 |
char* gets( char* str );
}}

从 {{lc|stdin}} 读取到给定字符串，直至找到换行字符或遇到文件尾。

===参数===
{{par begin}}
{{par | str |要写入的字符串}}
{{par end}}

===返回值===
成功时为 {{tt|str}}，失败时为空指针。

若因文件尾条件而导致失败，则另外设置 {{lc|stdin}} 上的''文件尾''指示器（见 {{lc|std::feof()}}）。若因某些其他错误而导致失败，则设置 {{lc|stdin}} 上的''错误''指示器（见 {{lc|std::ferror()}}）。

===注解===
{{tt|std::gets()}} 函数不进行边界检查。因此，此函数及其容易受到缓冲区溢出攻击。它无法被安全使用（除非程序运行在限制了 {{tt|stdin}} 上可出现内容的环境）。由于这个原因，此函数于 C++11 被弃用，并于 C++14 被完全移除。可以用 {{lc|std::fgets()}} 代替。

===示例===
{{example|code=
#include &lt;array&gt;
#include &lt;cstdio&gt;
#include &lt;cstring&gt;

int main()
{
    std::puts("永远不要使用 std::gets()。使用 std::fgets() 代替！");

    std::array&lt;char, 16&gt; buf;

    std::printf("输入字符串:\n&gt;");

    if (std::fgets(buf.data(), buf.size(), stdin))
    {
        const auto len = std::strlen(buf.data());
        std::printf(
            "输入字符串:\n[%s] %s且具有 %li 个字符。\n",
            buf.data(), len + 1 &lt; buf.size() ? "未被截断" : "被截断", len
        );
    }
    else if (std::feof(stdin))
    {
        std::puts("错误: 已抵达 stdin 流的结尾。");
    }
    else if (std::ferror(stdin))
    {
        std::puts("从 stdin 读取时发生 I/O 错误。");
    }
    else
    {
        std::puts("未知 stdin 错误。");
    }
}
|p=true
|output=
永远不要使用 std::gets()。使用 std::fgets() 代替！
输入字符串:
&gt;Living on Earth is expensive, but it does include a free trip around the Sun.
输入的字符串:
[Living on Earth] 被截断且具有 15 个字符。
}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/io/c/dsc fscanf}}
{{dsc inc | cpp/io/c/dsc fgets}}
{{dsc inc | cpp/io/c/dsc fputs}}
{{dsc see c | c/io/gets}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}