{{cpp/io/basic_ios/title|clear}}
{{cpp/io/basic_ios/navbar}}
{{dcl begin}}
{{dcl|1=
void clear( std::ios_base::iostate state = std::ios_base::goodbit );
}}
{{dcl end}}

通过以 {{c|state}} 的值赋值以设置流错误状态标志。默认赋值 {{lc|std::ios_base::goodbit}} 以清除所有错误状态标志。

如果 {{lc|rdbuf()}} 是空指针（即没有关联流缓冲），那么赋值 {{c|state {{!}} std::ios_base::badbit}}。可能会抛出异常。

===参数===
{{par begin}}
{{par|state|新的错误状态标志设置。它可以是下列常量的组合：
{{cpp/io/ios_base/iostate consts}}
}}
{{par end}}

===返回值===
（无）

===异常===
如果新的错误状态包含了一个 {{lc|exceptions()}} 掩码也包含的位，那么抛出 {{lc|failure}} 类型的异常。

===示例===
{{example
|无参数的 {{tt|clear()}} 能用于在不期待的输入后反设置 [[#参数|{{tt|failbit}}]]；对于 {{c|std::cin.putback(c)}} 参见 [[cpp/io/c/ungetc#注解|{{tt|ungetc}}]]。
|code=
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    for (char c : {'\n', '4', '1', '.', '3', '\n', 'Z', 'Y', 'X'})
        std::cin.putback(c); // 模拟用户输入（不可移植：见 ungetc 注解）
    
    double n;
    while (std::cout &lt;&lt; "请输入数字：" &amp;&amp; !(std::cin &gt;&gt; n))
    {
        std::cin.clear();
        std::string line;
        std::getline(std::cin, line);
        std::cout &lt;&lt; line &lt;&lt; "\n抱歉，但 '" &lt;&lt; line &lt;&lt; "' 不是数字\n";
    }
    std::cout &lt;&lt; n &lt;&lt; "\n感谢输入数字 " &lt;&lt; n &lt;&lt; '\n';
}
|output=
请输入数字：XYZ
抱歉，但 'XYZ' 不是数字
请输入数字：3.14
感谢输入数字 3.14
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=416|std=C++98|before=当前错误状态包含了 {{lc|exceptions()}} 也包含的位时会抛出异常|after=改成检查修改后的错误状态}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/basic_ios/dsc setstate}}
{{dsc inc|cpp/io/basic_ios/dsc rdstate}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}