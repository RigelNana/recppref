{{cpp/io/basic_istream/title|getline}}
{{cpp/io/basic_istream/navbar}}
{{dcl begin}}
{{dcl|num=1|
basic_istream&amp; getline( char_type* s, std::streamsize count );
}}
{{dcl|num=2|
basic_istream&amp; getline( char_type* s, std::streamsize count, char_type delim );
}}
{{dcl end}}

从流提取字符，直至行尾或指定的分隔符 {{c|delim}}。

重载 {{v|1}} 等价于 {{c|getline(s, count, widen('\n'))}}。

表现为{{named req|UnformattedInputFunction}}。构造并检查 sentry 对象后，从 {{c|*this}} 提取字符并将它们存储于以 {{tt|s}} 指向其首元素的数组中的相继位置，直至出现任何下列条件（按顺序检测）：

# 输入序列中出现文件尾条件。
# 下个可用字符 {{c|c}} 是以 {{c|Traits::eq(c, delim)}} 确定的分隔符。提取该分隔符（与 {{rlpt|get|basic_istream::get()}} 不同）并计入 {{lc|gcount()}}，但不存储它。
# {{c|count}} 非正，或者已经提取了 {{c|count - 1}} 个字符（此时会调用 {{c|setstate(failbit)}}）。

如果函数没有提取字符，那么在调用 {{ltf|cpp/io/basic_ios/setstate}} 前就会在局部错误状态中设置 {{tt|failbit}}。

任何情况下，如果 {{c|count &gt; 0}}，那么它会存储空字符 {{c|CharT()}} 到数组的下个相继位置，并更新 {{lc|gcount()}}。

===注解===
因为条件 #2 在条件 #3 前测试，所以恰好适合缓冲区的输入行不会触发 {{tt|failbit}}。

因为终止字符计为提取的字符，所以空输入行不会触发 {{tt|failbit}}。

===参数===
{{par begin}}
{{par|s|指向要存储字符到的字符串的指针}}
{{par|count|{{c|s}} 指向的字符串的大小}}
{{par|delim|提取所终止于的分隔字符。提取但不存储它。}}
{{par end}}

===返回值===
{{c|*this}}

===异常===
{{include|cpp/io/stream exceptions}}

===示例===
{{example
|code=
#include &lt;array&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;vector&gt;

int main()
{
    std::istringstream input("abc{{!}}def{{!}}gh");
    std::vector&lt;std::array&lt;char, 4&gt;&gt; v;
    
    // 注意：下列循环在从  getline() 返回的流上的 
    // std::ios_base::operator bool() 返回 false 时终止
    for (std::array&lt;char, 4&gt; a; input.getline(&amp;a[0], 4, '{{!}}');)
        v.push_back(a);
    
    for (auto&amp; a : v)
        std::cout &lt;&lt; &amp;a[0] &lt;&lt; '\n';
}
|output=
abc
def
gh
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=531|std=C++98|before={{tt|std::getline}} 无法处理 {{c|count}} 非正的情况|after=此时不会提取字符}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/basic_string/dsc getline}}
{{dsc inc|cpp/io/basic_istream/dsc operator_gtgt}}
{{dsc inc|cpp/io/basic_istream/dsc get}}
{{dsc inc|cpp/io/basic_istream/dsc read}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}