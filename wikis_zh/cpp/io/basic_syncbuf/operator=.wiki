{{cpp/io/basic_syncbuf/title | operator{{=}}}}
{{cpp/io/basic_syncbuf/navbar}}
{{dcl begin}}
{{dcl |1=
basic_syncbuf&amp; operator=(basic_syncbuf&amp;&amp; other);
}}
{{dcl end}}

首先，调用 {{ltt|cpp/io/basic_syncbuf/emit|emit()}} 传输所有待决输出（和延迟冲入，若存在）到被包装流。

然后通过从 {{c|other}} 移动所有内容，包括临时存储、被包装的流指针、策略及所有其他状态（如互斥指针），进行移动赋值。移动后，{{c|other}} 不与流关联，而 {{c|1=other.get_wrapped() == nullptr}}。{{c|other}} 的 {{lc|std::basic_streambuf}} 基类的放置区成员指针保证为空。销毁被移动的 {{c|other}} 将不会产生任何输出。

若 {{c|std::allocator_traits&lt;Allocator&gt;::propagate_on_container_move_assignment::value}} 为 {{c|false}}，则不更改分配器。否则，移动后 {{c|get_allocator()}} 等于 {{c|other.get_allocator()}}。

===参数===
{{par begin}}
{{par| other |要移动的另一 std::basic_syncbuf}}
{{par end}}

===返回值===
{{c|*this}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/io/basic_osyncstream/dsc operator{{=}}}}
{{dsc inc | cpp/io/basic_syncbuf/dsc constructor}}
{{dsc inc | cpp/io/basic_syncbuf/dsc emit}}
{{dsc inc | cpp/io/basic_syncbuf/dsc swap}}
{{dsc end}}

{{langlinks|en|es|ja}}