{{cpp/io/istrstream/title|istrstream}}
{{cpp/io/istrstream/navbar}}
{{dcl begin}}
{{dcl|num=1|deprecated=c++98|removed=c++26|1=
explicit istrstream( const char* s );
}}
{{dcl|num=2|deprecated=c++98|removed=c++26|1=
explicit istrstream( char* s );
}}
{{dcl|num=3|deprecated=c++98|removed=c++26|1=
istrstream( const char* s, std::streamsize n );
}}
{{dcl|num=4|deprecated=c++98|removed=c++26|1=
istrstream( char* s, std::streamsize n );
}}
{{dcl end}}

构造新的 {{lc|std::istrstream}} 及其底层 {{lc|std::strstreambuf}}。

@1,2@ 通过调用 {{c|strstreambuf(s,0)}} 构造底层 {{lc|std::strstreambuf}}，并以该 {{tt|strstreambuf}} 的地址初始化基类。若 {{c|s}} 不指向空终止数组的元素，则行为未定义。

@3,4@ 通过调用 {{c|strstreambuf(s,n)}} 构造底层 {{lc|std::strstreambuf}}，并以该 {{tt|strstreambuf}} 的地址初始化基类。若 {{c|s}} 不指向长度至少为 {{c|n}} 个元素的数组的元素，则行为未定义。

===参数===
{{par begin}}
{{par|s|要用作流内容的 C 字符串或字符数组}}
{{par|n|数组大小}}
{{par end}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;strstream&gt;

int main()
{
    std::istrstream s1("1 2 3"); // 字符串字面量
    int n1, n2, n3;
    if (s1 &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3)
        std::cout &lt;&lt; n1 &lt;&lt; ", " &lt;&lt; n2 &lt;&lt; ", " &lt;&lt; n3 &lt;&lt; '\n';

    char arr[] = {'4', ' ', '5', ' ', '6'};
    std::istrstream s2(arr, sizeof arr);
    if (s2 &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3)
        std::cout &lt;&lt; n1 &lt;&lt; ", " &lt;&lt; n2 &lt;&lt; ", " &lt;&lt; n3 &lt;&lt; '\n';
}
|output=
1, 2, 3
4, 5, 6
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/io/strstreambuf/dsc strstreambuf}}
{{dsc inc|cpp/io/strstream/dsc constructor|ostrstream}}
{{dsc inc|cpp/io/strstream/dsc constructor|strstream}}
{{dsc end}}

{{langlinks|en|ja}}