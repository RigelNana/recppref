{{title|C++20}}
{{cpp/version/navbar}}

C++20 是 C++17 之后的一个大版本，提供了一些重要功能特性（概念、模块、协程和范围）以及其他的语言和库特性。该标准于 2020 年 12 月发布。
{{todo}}

== 新的语言特性 ==

* [[cpp/feature test|特性测试宏]]
* {{ls|cpp/language/operator comparison#三路比较}}运算符 {{c|&lt;{{=}}&gt;}} and [[cpp/language/default_comparisons|{{c|1=operator==() = default}}]]
* {{ls|cpp/language/aggregate initialization#指派初始化式}}
* [[cpp/language/range-for|范围 {{tt|for}}]] 中的初始化语句和初始化器
* {{ltt|cpp/keyword/char8_t}}
* 新{{lt|cpp/language/attributes|属性}}: {{attr|no_unique_address}}, {{attr|likely}}, {{attr|likely|unlikely}}
* [[cpp/language/lambda#Lambda 捕获|lambda 初始化捕获]]中的{{ltt|cpp/language/parameter pack|包展开}}
* 移除了在多种上下文语境中，使用 {{tt|typename}} 关键字以消除类型歧义的要求
* {{ltt|cpp/language/consteval}} 、 {{ltt|cpp/language/constinit}}
* 更为宽松的 constexpr 要求
* 规定有符号整数以补码实现
* [[cpp/language/operator arithmetic|位移运算符]]的未定义行为
* 使用圆括号的{{lt|cpp/language/aggregate initialization|聚合初始化}}
* {{lt|cpp/language/coroutines|协程}}
* {{lt|cpp/language/modules|模块}}
* [[cpp/language/constraints|约束与概念]]
* {{ls|cpp/language/function template#缩略函数模板}}
* DR11: [[cpp/language/new#缺陷报告|数组 new]] 可推导数组长度

== 新的库特性 ==
=== 新的头文件 ===
* {{header|bit}}
* {{header|compare}}
* {{header|concepts}}
* {{header|coroutine}}
* {{header|format}}
* {{header|numbers}}
* {{header|ranges}}
* {{header|source_location}}
* {{header|span}}
* {{header|syncstream}}
* {{header|version}}
[[cpp/thread|线程支持库]]中：
* {{header|barrier}}
* {{header|latch}}
* {{header|semaphore}}
* {{header|stop_token}}

=== 库特性 ===

* [[cpp/utility/feature_test|库特性测试宏]]
* [[cpp/utility/format|格式化库]]
* [[cpp/concepts|概念库]]
* {{header|chrono}} 中的{{ls|cpp/chrono#日历}}和{{ls|cpp/chrono#时区}}库
* {{lc|std::source_location}}
* {{ltt std|cpp/container/span}}
* {{ltt std|cpp/types/endian}}: {{tt|big}} / {{tt|little}} / {{tt|native}}
* {{header|bit}} 中的整型的幂二运算和 {{ltt std|cpp/numeric/bit_cast}}
* 针对数组的 {{lc|std::make_shared}} 支持
* {{ltt std|cpp/types/remove_cvref}}
* {{ltt std|cpp/memory/to_address}}
* [[cpp/atomic/atomic#针对浮点类型的特化|浮点原子对象]], {{ltt|cpp/memory/shared_ptr/atomic|std::shared_ptr}} 原子对象
* 线程协调类：{{ltt std|cpp/thread/barrier}}, {{ltt std|cpp/thread/latch}} 和 {{ltt std|cpp/thread/counting_semaphore}}
* {{ltt std|cpp/thread/jthread}} 和 {{ls|cpp/thread#线程取消}}类: {{ltt std|cpp/thread/stop_token}}, {{ltt std|cpp/thread/stop_source}}, 和 {{ltt std|cpp/thread/stop_callback}}
* {{ltt std|cpp/io/basic_osyncstream}}
* {{ltt std|cpp/string/basic_string|u8string}} 和其他 {{ltt|cpp/language/types#char8_t|char8_t}} 的使用
* {{header|algorithm}}、{{header|utility}}、{{header|complex}} 中设施的 {{lc|constexpr}} 化
* {{ltt|cpp/string/basic_string/starts_with|string::starts_with}} / {{ltt|cpp/string/basic_string/ends_with|ends_with}} and {{ltt|cpp/string/basic_string_view/starts_with|string_view::starts_with}} / {{ltt|cpp/string/basic_string_view/ends_with|ends_with}}
* {{ltt std|cpp/memory/assume_aligned}}
* {{ltt std|cpp/utility/functional/bind_front}}
* {{ltt std|cpp/string/multibyte/c8rtomb}} / {{ltt std|cpp/string/multibyte/mbrtoc8}}
* {{ltt std|cpp/memory/make_obj_using_allocator}} 等
* {{ltt|cpp/memory/shared_ptr/make_shared|std::make_shared_for_overwrite}} / {{ltt|cpp/memory/unique_ptr/make_unique|std::make_unique_for_overwrite}}
* 无序关联容器中的异质查找
* {{ltt|cpp/memory/polymorphic_allocator|std::pmr::polymorphic_allocator}} 的额外成员函数和 {{ltt std|cpp/types/byte}} 作为其默认模板实参
* {{ltt|cpp/algorithm/execution_policy_tag|execution::unseq}}
* {{ltt std|cpp/numeric/midpoint}} 和 {{ltt std|cpp/numeric/lerp}}
* {{ltt std|cpp/iterator/size|ssize}}
* {{ltt std|cpp/types/is_bounded_array}}, {{ltt std|cpp/types/is_unbounded_array}}
* [[cpp/ranges|范围]]
* 统一容器擦除: {{lc|std::erase}} / {{lc|std::erase_if}}，例如 {{ltt|cpp/container/list/erase2|std::erase(std::list)}} 和 {{ltt|cpp/container/map/erase_if|erase_if(std::map)}} 等
* {{header|numbers}} 中的 [[cpp/numeric/constants|数学常数]]

== 缺陷报告 ==
{{cpp/language/history/DR20}}

== 编译器支持情况 ==
主条目： [[cpp/compiler_support#C++20 功能特性|C++ 编译器支持]]
{{cpp/compiler support/20}}
{{cpp/compiler support/note}}

===External links===
{{elink begin}}
{{elink|{{enwiki|C++20}} - Wikipedia}}
{{elink|[https://github.com/makelinux/examples/blob/HEAD/cpp/20.cpp C++20 可行样例]}}
{{elink end}}

{{langlinks|en|es|ja|ru}}