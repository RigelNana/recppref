{{cpp/title|qsort}}
{{cpp/algorithm/navbar}}
{{dcl begin}}
{{dcl header|cstdlib}}
{{dcl|num=1|
void qsort( void *ptr, std::size_t count,
            std::size_t size, /* c-compare-pred */* comp );
void qsort( void *ptr, std::size_t count,
            std::size_t size, /* compare-pred */* comp );
}}
{{dcl|num=2|notes={{mark expos}}|1=
extern "C" using /* c-compare-pred */ = int(const void*, const void*);
extern "C++" using /* compare-pred */ = int(const void*, const void*);
}}
{{dcl end}}

以升序排序 {{c|ptr}} 所指向的给定数组。数组包含 {{c|count}} 个 {{c|size}} 字节大小的元素。用 {{c|comp}} 所指向的函数比较对象。

如果 {{c|comp}} 指示两个元素等价，那么不指定它们的顺序。

如果数组元素类型不是{{rev inl|until=c++11|{{named req|PODType}}}}{{rev inl|since=c++11|{{named req|TriviallyCopyable}}类型}}&lt;!--LWG 3527--&gt;，那么行为未定义。

===参数===
{{par begin}}
{{par|ptr|指向要排序的数组的指针}}
{{par|count|数组元素数}}
{{par|size|数组中元素的大小，以字节表示}}
{{par ccmp|comp}}
{{par end}}

===返回值===
（无）

===注解===
无论名称如何，C++、C 及 POSIX 都不要求此函数用{{enwiki|Quicksort|快速排序}}实现或作出任何复杂度和稳定性保证。

C++ 标准库提供的两个重载互不相同，因为形参 {{c|comp}} 的类型互不相同（{{lt|cpp/language/language linkage|语言链接}}是类型的一部分）。

===示例===
{{example
|下列代码用 {{tt|qsort()}} 排序整数数组：
|code=
#include &lt;array&gt;
#include &lt;climits&gt;
#include &lt;compare&gt;
#include &lt;cstdlib&gt;
#include &lt;iostream&gt;

int main()
{
    std::array a{-2, 99, 0, -743, INT_MAX, 2, INT_MIN, 4};
    
    std::qsort
    (
        a.data(),
        a.size(),
        sizeof(decltype(a)::value_type),
        [](const void* x, const void* y)
        {
            const int arg1 = *static_cast&lt;const int*&gt;(x);
            const int arg2 = *static_cast&lt;const int*&gt;(y);
            const auto cmp = arg1 &lt;=&gt; arg2;
            if (cmp &lt; 0)
                return -1;
            if (cmp &gt; 0)
                return 1;
            return 0;
        }
    );
    
    for (int ai : a)
        std::cout &lt;&lt; ai &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
-2147483648 -743 -2 0 2 4 99 2147483647 
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=405|std=C++98|before=数组中的元素可以具有任意类型|after=仅限{{named req|PODType}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc bsearch}}
{{dsc inc|cpp/algorithm/dsc sort}}
{{dsc inc|cpp/types/dsc is_trivial}}
{{dsc see c|c/algorithm/qsort}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}