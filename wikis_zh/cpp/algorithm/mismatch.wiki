{{cpp/title|mismatch}}
{{cpp/algorithm/navbar}}
{{dcl begin}}
{{dcl header|algorithm}}
{{dcla|num=1|notes={{mark constexpr since c++20}}|
template&lt; class InputIt1, class InputIt2 &gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch( InputIt1 first1, InputIt1 last1,
              InputIt2 first2 );
}}
{{dcl|num=2|since=c++17|
template&lt; class ExecutionPolicy, class ForwardIt1, class ForwardIt2 &gt;
std::pair&lt;ForwardIt1, ForwardIt2&gt;
    mismatch( ExecutionPolicy&amp;&amp; policy,
              ForwardIt1 first1, ForwardIt1 last1,
              ForwardIt2 first2 );
}}
{{dcla|num=3|notes={{mark constexpr since c++20}}|
template&lt; class InputIt1, class InputIt2, class BinaryPred &gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch( InputIt1 first1, InputIt1 last1,
              InputIt2 first2, BinaryPred p );
}}
{{dcl|num=4|since=c++17|
template&lt; class ExecutionPolicy,
          class ForwardIt1, class ForwardIt2, class BinaryPred &gt;
std::pair&lt;ForwardIt1, ForwardIt2&gt;
    mismatch( ExecutionPolicy&amp;&amp; policy,
              ForwardIt1 first1, ForwardIt1 last1,
              ForwardIt2 first2, BinaryPred p );
}}
{{dcla|num=5|since=c++14|notes={{mark constexpr since c++20}}|
template&lt; class InputIt1, class InputIt2 &gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch( InputIt1 first1, InputIt1 last1,
              InputIt2 first2, InputIt2 last2 );
}}
{{dcl|num=6|since=c++17|
template&lt; class ExecutionPolicy, class ForwardIt1, class ForwardIt2 &gt;
std::pair&lt;ForwardIt1, ForwardIt2&gt;
    mismatch( ExecutionPolicy&amp;&amp; policy,
              ForwardIt1 first1, ForwardIt1 last1,
              ForwardIt2 first2, ForwardIt2 last2 );
}}
{{dcla|num=7|since=c++14|notes={{mark constexpr since c++20}}|
template&lt; class InputIt1, class InputIt2, class BinaryPred &gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch( InputIt1 first1, InputIt1 last1,
              InputIt2 first2, InputIt2 last2, BinaryPred p );
}}
{{dcl|num=8|since=c++17|
template&lt; class ExecutionPolicy,
          class ForwardIt1, class ForwardIt2, class BinaryPred &gt;
std::pair&lt;ForwardIt1, ForwardIt2&gt;
    mismatch( ExecutionPolicy&amp;&amp; policy,
              ForwardIt1 first1, ForwardIt1 last1,
              ForwardIt2 first2, ForwardIt2 last2, BinaryPred p );
}}
{{dcl end}}

返回一对到两个范围中的首个不匹配元素的迭代器：一个范围是 {{range|first1|last1}}，而另一个范围从 {{c|first2}} 开始：
* 对于重载 {{v|1-4}}，第二个范围包含 {{c|std::distance(first1, last1)}} 个元素。
* 对于重载 {{v|5-8}}，第二个范围是 {{range|first2|last2}}。
:* 如果 {{c|std::distance(first1, last1)}} 和 {{c|std::distance(first2, last2)}} 不同，那么在抵达 {{c|last1}} 或 {{c|last2}} 时停止比较。

@1,5@ 用 {{c/core|1=operator==}} 比较元素。

@3,7@ 用给定的二元谓词 {{c|p}} 比较元素。

@2,4,6,8@ 同 {{v|1,3,5,7}}，但按照 {{c|policy}} 执行。
@@ {{cpp/algorithm/parallel overload precondition|plural=yes}}

===参数===
{{par begin}}
{{par range|first1|last1|要比较的|range=第一}}
{{par range|first2|last2|要比较的|range=第二}}
{{par exec pol}}
{{par pred2 eq|p|p1=InputIt1|p2=InputIt2}}
{{par hreq}}
{{par req named|InputIt1|InputIterator}}
{{par req named|InputIt2|InputIterator}}
{{par req named|ForwardIt1|ForwardIterator}}
{{par req named|ForwardIt2|ForwardIterator}}
{{par req named|BinaryPred|BinaryPredicate}}
{{par end}}

===返回值===
拥有指向首对两个不相等元素的迭代器的 {{lc|std::pair}}。

如果抵达了 {{c|last1}}，那么返回的迭代器对中的第二个迭代器是 {{c|first2}} 后的第 {{c|std::distance(first1, last1)}} 个迭代器。

对于重载 {{v|5-8}}，如果抵达了 {{c|last2}}，那么返回的迭代器对中的第一个迭代器是 {{c|first1}} 后的第 {{c|std::distance(first2, last2)}} 个迭代器。

===复杂度===
给定 {{mathjax-or|\(\scriptsize N_1\)|N{{su|b=1}}}} 为 {{c|std::distance(first1, last1)}}，{{mathjax-or|\(\scriptsize N_2\)|N{{su|b=2}}}} 为 {{c|std::distance(first2, last2)}}：
@1,2@ 应用最多 {{mathjax-or|\(\scriptsize N_1\)|N{{su|b=1}}}} 次 {{c/core|1=operator==}} 进行比较。
@3,4@ 应用最多 {{mathjax-or|\(\scriptsize N_1\)|N{{su|b=1}}}} 次谓词 {{c|p}}。
@5,6@ 应用最多 {{mathjax-or|\(\scriptsize \min(N_1,N_2)\)|min(N{{su|b=1}},N{{su|b=2}})}} 次 {{c/core|1=operator==}} 进行比较。
@7,8@ 应用最多 {{mathjax-or|\(\scriptsize \min(N_1,N_2)\)|min(N{{su|b=1}},N{{su|b=2}})}} 次谓词 {{c|p}}。

===异常===
{{cpp/algorithm/parallel exceptions reporting behavior|singular=no}}

===可能的实现===
{{eq impl
|title1=mismatch (1)|ver1=1|1=
template&lt;class InputIt1, class InputIt2&gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch(InputIt1 first1, InputIt1 last1, InputIt2 first2)
{
    while (first1 != last1 &amp;&amp; *first1 == *first2)
        ++first1, ++first2;
    
    return std::make_pair(first1, first2);
}
|title2=mismatch (3)|ver2=3|2=
template&lt;class InputIt1, class InputIt2, class BinaryPred&gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch(InputIt1 first1, InputIt1 last1, InputIt2 first2, BinaryPred p)
{
    while (first1 != last1 &amp;&amp; p(*first1, *first2))
        ++first1, ++first2;
    
    return std::make_pair(first1, first2);
}
|title3=mismatch (5)|ver3=5|3=
template&lt;class InputIt1, class InputIt2&gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch(InputIt1 first1, InputIt1 last1, InputIt2 first2, InputIt2 last2)
{
    while (first1 != last1 &amp;&amp; first2 != last2 &amp;&amp; *first1 == *first2)
        ++first1, ++first2;
    
    return std::make_pair(first1, first2);
}
|title4=mismatch (7)|ver4=7|4=
template&lt;class InputIt1, class InputIt2, class BinaryPred&gt;
std::pair&lt;InputIt1, InputIt2&gt;
    mismatch(InputIt1 first1, InputIt1 last1,
             InputIt2 first2, InputIt2 last2, BinaryPred p)
{
    while (first1 != last1 &amp;&amp; first2 != last2 &amp;&amp; p(*first1, *first2))
        ++first1, ++first2;
    
    return std::make_pair(first1, first2);
}
}}

===示例===
{{example
|此程序确定同时在给定字符串起始与在其结尾按逆序同时找到的最长子串（可能重叠）。
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

std::string mirror_ends(const std::string&amp; in)
{
    return std::string(in.begin(),
                       std::mismatch(in.begin(), in.end(), in.rbegin()).first);
}

int main()
{
    std::cout &lt;&lt; mirror_ends("abXYZba") &lt;&lt; '\n'
              &lt;&lt; mirror_ends("abca") &lt;&lt; '\n'
              &lt;&lt; mirror_ends("aba") &lt;&lt; '\n';
}
|output=
ab
a
aba
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc equal}}
{{dsc inc|cpp/algorithm/dsc find}}
{{dsc inc|cpp/algorithm/dsc lexicographical_compare}}
{{dsc inc|cpp/algorithm/dsc search}}
{{dsc inc|cpp/algorithm/ranges/dsc mismatch}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}