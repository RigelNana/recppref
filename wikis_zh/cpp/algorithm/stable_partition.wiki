{{cpp/title|stable_partition}}
{{cpp/algorithm/navbar}}
{{dcl begin}}
{{dcl header|algorithm}}
{{dcla|num=1|constexpr=c++26|
template&lt; class BidirIt, class UnaryPred &gt;
BidirIt stable_partition( BidirIt first, BidirIt last, UnaryPred p );
}}
{{dcl|since=c++17|num=2|1=
template&lt; class ExecutionPolicy, class BidirIt, class UnaryPred &gt;
BidirIt stable_partition( ExecutionPolicy&amp;&amp; policy,
                          BidirIt first, BidirIt last, UnaryPred p );
}}
{{dcl end}}

@1@ 重排序范围 {{range|first|last}} 中的元素，使得所有谓词 {{c|p}} 对其返回 {{c|true}} 的元素均先于谓词 {{c|p}} 对其返回 {{c|false}} 的元素。保持元素的相对顺序。

@2@ 同 {{v|1}}，但按照 {{c|policy}} 执行。
@@ {{cpp/algorithm/parallel overload precondition}}

如果满足以下任意条件，那么行为未定义：
{{rev begin}}
{{rev|until=c++11|
* {{c|*first}} 的类型不{{named req|Swappable}}。
}}
{{rev|since=c++11|
* {{tt|BidirIt}} 不{{named req|ValueSwappable}}。
* {{c|*first}} 的类型不{{named req|MoveConstructible}}。
* {{c|*first}} 的类型不{{named req|MoveAssignable}}。
}}
{{rev end}}

===参数===
{{par begin}}
{{par range|3=要重排序的}}
{{par exec pol}}
{{par pred1|p|如果元素在顺序中应该在其他元素之前|p1=BidirIt}}
{{par hreq}}
{{par req named|BidirIt|BidirectionalIterator}}
{{par req named|UnaryPred|Predicate}}
{{par end}}

===返回值===
指向第二个分组首元素的迭代器。

===复杂度===
给定 {{mathjax-or|\(\scriptsize N\)|N}} 为 {{c|std::distance(first, last)}}：

@1@ 应用 {{mathjax-or|\(\scriptsize N\)|N}} 次 {{c|p}}。
@@ 在额外内存足够时交换 {{mathjax-or|\(\scriptsize O(N)\)|O(N)}} 次，否则交换最多 {{mathjax-or|\(\scriptsize N \cdot log_{2}(N)\)|N⋅log{{su|b=2}}(N)}} 次。

@2@ 应用 {{mathjax-or|\(\scriptsize O(N)\)|O(N)}} 次 {{c|p}}。
@@ 交换 {{mathjax-or|\(\scriptsize N \cdot log(N)\)|N⋅log(N)}} 次。

===异常===
{{cpp/algorithm/parallel exceptions reporting behavior|singular=yes}}

===注解===
此函数试图分配临时缓冲区。如果分配失败，那么就会选择较低效的算法。

[https://github.com/llvm/llvm-project/blob/eda14ebf6a43d9ada6a2be3d1b06b8b6036eb774/libcxx/include/__algorithm/stable_partition.h#L316 libc++] 与 [https://github.com/gcc-mirror/gcc/blob/d2a499a9881c7c079d2a722b57c7fcf022a864dd/libstdc%2B%2B-v3/include/bits/stl_algo.h#L1608 libstdc++] 中的实现亦作为扩展接受{{named req|ForwardIterator}}所代表的范围。

{{feature test macro|__cpp_lib_constexpr_algorithms|{{c/core|constexpr}} 稳定排序 {{vl|1}}|value=202306L|std=C++26}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;int&gt; v{0, 0, 3, -1, 2, 4, 5, 0, 7};
    std::stable_partition(v.begin(), v.end(), [](int n) { return n &gt; 0; });
    for (int n : v)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
3 2 4 5 7 0 0 -1 0
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2150|std=C++98|before={{tt|std::stable_partition}} 只需要将一个满足 {{c|p}} 的元素放在一个不满足 {{c|p}} 的元素之前|after=改正要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc partition}}
{{dsc inc|cpp/algorithm/ranges/dsc stable_partition}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}