{{cpp/title|iter_swap}}
{{cpp/algorithm/navbar}}
{{ddcl|header=algorithm|notes={{mark constexpr since c++20}}|
template&lt; class ForwardIt1, class ForwardIt2 &gt;
void iter_swap( ForwardIt1 a, ForwardIt2 b );
}}

交换给定的迭代器所指向的元素的值。

如果满足以下任意条件，那么行为未定义：
* {{c|a}} 或 {{c|b}} 不[[cpp/iterator#可解性与有效性|可解引用]]。
* {{c|*a}} 与 {{c|*b}} 不{{named req|Swappable}}。

===参数===
{{par begin}}
{{par|a, b|指向要交换的元素的迭代器}}
{{par hreq}}
{{par req named|ForwardIt1, ForwardIt2|ForwardIterator}}
{{par end}}

===返回值===
（无）

===复杂度===
常数。

===注解===
这个函数模板构成{{named req|Swappable}}给出的交换操作的语义。就是说，其会考虑由 [[cpp/language/adl|ADL]] 找到的 {{c|swap}}，并回退于使用 {{lc|std::swap}}。

===可能的实现===
{{eq fun|1=
template&lt;class ForwardIt1, class ForwardIt2&gt;
constexpr //&lt; C++20 起
void iter_swap(ForwardIt1 a, ForwardIt2 b)
{
    using std::swap;
    swap(*a, *b);
}
}}

===示例===
{{example
|下面是选择排序在 C++ 中的实现。
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;random&gt;
#include &lt;string_view&gt;
#include &lt;vector&gt;

template&lt;class ForwardIt&gt;
void selection_sort(ForwardIt begin, ForwardIt end)
{
    for (ForwardIt it = begin; it != end; ++it)
        std::iter_swap(it, std::min_element(it, end));
}

void println(std::string_view rem, std::vector&lt;int&gt; const&amp; v)
{
    std::cout &lt;&lt; rem;
    for (int e : v)
        std::cout &lt;&lt; e &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

template&lt;int min, int max&gt;
int rand_int()
{
    static std::uniform_int_distribution dist(min, max);
    static std::mt19937 gen(std::random_device{}());
    return dist(gen);
}

int main()
{
    std::vector&lt;int&gt; v;
    std::generate_n(std::back_inserter(v), 20, rand_int&lt;-9, +9&gt;);
    
    std::cout &lt;&lt; std::showpos;
    println("排序前: ", v);
    selection_sort(v.begin(), v.end());
    println("排序后: ", v);
}
|p=true
|output=
排序前: -9 -3 +2 -8 +0 -1 +8 -4 -5 +1 -4 -5 +4 -9 -8 -6 -6 +8 -4 -6 
排序后: -9 -9 -8 -8 -6 -6 -6 -5 -5 -4 -4 -4 -3 -1 +0 +1 +2 +4 +8 +8
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=187|std=C++98|before=未指明是否会使用 {{c|swap}}|after=效果等价于 {{c|swap(*a, *b)}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc swap}}
{{dsc inc|cpp/algorithm/dsc swap_ranges}}
{{dsc inc|cpp/iterator/adaptor/dsc iter_swap|reverse_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc iter_swap|move_iterator}}
{{dsc inc|cpp/iterator/ranges/dsc iter_swap}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}