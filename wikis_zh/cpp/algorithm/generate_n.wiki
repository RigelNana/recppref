{{cpp/title|generate_n}}
{{cpp/algorithm/navbar}}
{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|num=1|notes={{mark constexpr since c++20}}|
template&lt; class OutputIt, class Size, class Generator &gt;
OutputIt generate_n( OutputIt first, Size count, Generator g );
}}
{{dcl|num=2|since=c++17|
template&lt; class ExecutionPolicy,
          class ForwardIt, class Size, class Generator &gt;
ForwardIt generate_n( ExecutionPolicy&amp;&amp; policy,
                      ForwardIt first, Size count, Generator g );
}}
{{dcl end}}

@1@ 如果 {{c|count &gt; 0}}，则将给定函数对象 {{c|g}} 所生成的值对始于 {{c|first}} 的范围的前 {{c|count}} 个元素赋值。否则什么也不做。

@2@ 同 {{v|1}}，但按照 {{c|policy}} 执行。
@@ {{cpp/algorithm/parallel overload precondition}}

如果 {{tt|Size}} 不可[[cpp/language/implicit cast|转换]]到[[cpp/language/type|整数类型]]，那么程序非良构。

===参数===
{{par begin}}
{{par|first|要生成的元素范围起始}}
{{par|count|要生成的元素数}}
{{par exec pol}}
{{par gen|g|rp=OutputIt}}
{{par hreq}}
{{par req named|OutputIt|OutputIterator}}
{{par req named|ForwardIt|ForwardIterator}}
{{par end}}

===返回值===
{{c|count &gt; 0}} 时返回最后被赋值元素后一位置的迭代器。否则返回 {{c|first}}。

===复杂度===
调用 {{c|g()}} 和赋值各 {{c|std::max(0, count)}} 次。

===异常===
{{cpp/algorithm/parallel exceptions reporting behavior|singular=yes}}

===可能的实现===
{{eq fun|1=
template&lt;class OutputIt, class Size, class Generator&gt;
constexpr // C++20 起
OutputIt generate_n(OutputIt first, Size count, Generator g)
{
    for (Size i = 0; i &lt; count; ++i)
        *first++ = g();
    
    return first;
}
}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;random&gt;
 
int main()
{
    std::mt19937 rng; // 默认构造，使用固定的种子
    std::generate_n(std::ostream_iterator&lt;std::mt19937::result_type&gt;(std::cout, " "),
                    5, std::ref(rng));
    std::cout &lt;&lt; '\n';
}
|output=
3499211612 581869302 3890346734 3586334585 545404204 
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=426|std=C++98|before=复杂度要求是“正好调用和赋值 {{c|count}} 次”，该要求在 {{c|count}} 为负时无法满足|after=在 {{c|count}} 非正时不会调用或赋值}}
{{dr list item|wg=lwg|dr=865|std=C++98|before=没有返回生成范围后的首个元素的位置|after=返回该位置}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc fill_n}}
{{dsc inc|cpp/algorithm/dsc generate}}
{{dsc inc|cpp/algorithm/ranges/dsc generate_n}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}