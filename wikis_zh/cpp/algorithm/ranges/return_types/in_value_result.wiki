{{cpp/ranges/title|in_value_result}}
{{cpp/algorithm/ranges/return_types/navbar}}

{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|since=c++23|1=
template&lt; class I, class T &gt;
struct in_value_result;
}}
{{dcl end}}

{{tt|ranges::in_value_result}} 是类模板，提供了将迭代器和值作为一个单元存储的方法。

{{cpp/algorithm/ranges/return_types/general_description}}

===模板形参===
{{par begin}}
{{par|I, T|{{tt|ranges::in_value_result}} 储存的对象的类型。}}
{{par end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名字|定义}}
{{dsc mem obj|in|nolink=true|{{tt|I}} 类型的值（假定为迭代器）。}}
{{dsc mem obj|value|nolink=true|{{tt|T}} 类型的值（假定为存储的值）。}}
{{dsc end}}

这些成员都被声明为带有 {{attr|no_unique_address}} 属性。

===成员函数===
{{member|{{small|std::ranges::in_value_result::}}operator in_value_result&lt;I2, T2&gt;|2=
{{dcl begin}}
{{dcl|num=1|1=
template&lt;class I2, class T2&gt;
requires convertible_to&lt;const I&amp;, I2&gt; &amp;&amp; convertible_to&lt;const T&amp;, T2&gt;
constexpr operator in_value_result&lt;I2, T2&gt;() const &amp;;
}}
{{dcl|num=2|1=
template&lt;class I2, class T2&gt;
requires convertible_to&lt;I, I2&gt; &amp;&amp; convertible_to&lt;T, T2&gt;
constexpr operator in_value_result&lt;I2, T2&gt;() &amp;&amp;;
}}
{{dcl end}}
通过从 {{c|*this}} 的对应成员构造结果的每个数据成员，将 {{c|*this}} 转换为结果。
@1@ 等价于 {{c|return {in, value};}}。
@2@ 等价于 {{c|return {std::move(in), std::move(value)};}}。
}}

===标准库===
这些标准库函数使用 {{tt|ranges::in_value_result}} 作为返回值类型：
{{dsc begin}}
{{dsc h2|算法函数}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_with_iter}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_first_with_iter}}
{{dsc end}}

===概要===
{{source|1=
namespace std::ranges
{
    template&lt;class I, class T&gt;
    struct in_value_result
    {
        [[no_unique_address]] I in;
        [[no_unique_address]] T value;
 
        template&lt;class I2, class T2&gt;
        requires convertible_to&lt;const I&amp;, I2&gt; &amp;&amp; convertible_to&lt;const T&amp;, T2&gt;
        constexpr operator in_value_result&lt;I2, T2&gt;() const &amp;
        {
            return {in, value};
        }
 
        template&lt;class I2, class T2&gt;
        requires convertible_to&lt;I, I2&gt; &amp;&amp; convertible_to&lt;T, T2&gt;
        constexpr operator in_value_result&lt;I2, T2&gt;() &amp;&amp;
        {
            return {std::move(in), std::move(value)};
        }
    };
}
}}

===注解===
{{cpp/algorithm/ranges/notes return_types}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;cassert&gt;
#include &lt;functional&gt;

int main()
{
    const auto v = {1, 2, 3};
    const auto ret = std::ranges::fold_left_with_iter(v, 4, std::plus&lt;&gt;());
    assert(ret.in == v.end());
    assert(ret.value == 1 + 2 + 3 + 4);
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc end}}

{{langlinks|cs|de|es|fr|it|ja|ko|pl|pt|ru|en}}