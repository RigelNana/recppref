{{cpp/ranges/title|in_in_result}}
{{cpp/algorithm/ranges/return_types/navbar}}

{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|since=c++20|1=
template&lt; class I1, class I2 &gt;
struct in_in_result;
}}
{{dcl end}}

{{tt|ranges::in_in_result}} 是类模板，提供存储二个迭代器为单个单元的方式。

{{cpp/algorithm/ranges/return_types/general_description}}

===模板形参===
{{par begin}}
{{par | I1, I2 | {{tt|ranges::in_in_result}} 所存储的迭代器类型}}
{{par end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名字|定义}}
{{dsc mem obj|in1|nolink=true|{{tt|I1}} 类型的值（假定为迭代器）。}}
{{dsc mem obj|in2|nolink=true|{{tt|I2}} 类型的值（假定为迭代器）。}}
{{dsc end}}

这些成员都被声明为带有 {{attr|no_unique_address}} 属性。

===成员函数===
{{member|{{small|std::ranges::in_in_result::}}operator in_in_result&lt;II1, II2&gt;|2=
{{dcl begin}}
{{dcl|num=1|1=
template&lt;class II1, class II2&gt;
requires std::convertible_to&lt;const I1&amp;, II1&gt; &amp;&amp; std::convertible_to&lt;const I2&amp;, II2&gt;
constexpr operator in_in_result&lt;II1, II2&gt;() const &amp;;
}}
{{dcl|num=2|1=
template&lt;class II1, class II2&gt;
requires std::convertible_to&lt;I1, II1&gt; &amp;&amp; std::convertible_to&lt;I2, II2&gt;
constexpr operator in_in_result&lt;II1, II2&gt;() &amp;&amp;;
}}
{{dcl end}}
通过从 {{c|*this}} 的每个数据成员构造结果的对应成员，转换 {{c|*this}} 为结果。
@1@ 等价于 {{c|return {in1, in2};}}。
@2@ 等价于 {{c|return {std::move(in1), std::move(in2)};}}。
}}

===标准库===
下列标准库函数以 {{tt|ranges::in_in_result}} 为返回类型：

{{dsc begin}}
{{dsc h2|算法函数}}
{{dsc inc|cpp/algorithm/ranges/dsc mismatch}}
{{dsc inc|cpp/algorithm/ranges/dsc swap_ranges}}
{{dsc end}}

===概要===
{{source|1=
namespace std::ranges
{
    template&lt;class I1, class I2&gt;
    struct in_in_result
    {
        [[no_unique_address]] I1 in1;
        [[no_unique_address]] I2 in2;

        template&lt;class II1, class II2&gt;
        requires std::convertible_to&lt;const I1&amp;, II1&gt; &amp;&amp; std::convertible_to&lt;const I2&amp;, II2&gt;
        constexpr operator in_in_result&lt;II1, II2&gt;() const &amp;
        {
            return {in1, in2};
        }

        template&lt;class II1, class II2&gt;
        requires std::convertible_to&lt;I1, II1&gt; &amp;&amp; std::convertible_to&lt;I2, II2&gt;
        constexpr operator in_in_result&lt;II1, II2&gt;() &amp;&amp;
        {
            return {std::move(in1), std::move(in2)};
        }
    };
}
}}

===注解===
{{cpp/algorithm/ranges/notes return_types}}

===示例===
{{example|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;

int main()
{
    constexpr static auto in1 = {1, 2, 3, 4};
    constexpr static auto in2 = {1, 2, 4, 5};

    constexpr auto result {std::ranges::mismatch(in1, in2)};

    static_assert(2 == std::ranges::distance(in1.begin(), result.in1));
    static_assert(2 == std::ranges::distance(in2.begin(), result.in2));
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc end}}

{{langlinks|cs|de|en|es|fr|it|ja|ko|pl|pt|ru}}