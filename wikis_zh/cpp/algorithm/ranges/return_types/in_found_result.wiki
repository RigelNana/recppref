{{cpp/ranges/title|in_found_result}}
{{cpp/algorithm/ranges/return_types/navbar}}

{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|since=c++20|
template&lt; class I &gt;
struct in_found_result;
}}
{{dcl end}}

{{tt|ranges::in_found_result}} 是类模板，提供存储一个迭代器和一个布尔标志为单个单元的方式。

{{cpp/algorithm/ranges/return_types/general_description}}

===模板形参===
{{par begin}}
{{par | I | {{tt|ranges::in_found_result}} 所存储的迭代器类型}}
{{par end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名字|定义}}
{{dsc mem obj|in|nolink=true|{{tt|I}} 类型的值（假定为迭代器）。它被声明带有 {{attr|no_unique_address}} 属性。}}
{{dsc mem obj|found|nolink=true|{{c/core|bool}} 类型的标志（可能显示是否能找到合适的范围）。}}
{{dsc end}}

===成员函数===
{{member|{{small|std::ranges::in_found_result::}}operator in_found_result&lt;I2&gt;|2=
{{dcl begin}}
{{dcl|num=1|1=
template&lt;class I2&gt;
requires std::convertible_to&lt;const I&amp;, I2&gt;
constexpr operator in_found_result&lt;I2&gt;() const &amp;;
}}
{{dcl|num=2|1=
template&lt;class I2&gt;
requires std::convertible_to&lt;I, I2&gt;
constexpr operator in_found_result&lt;I2&gt;() &amp;&amp;;
}}
{{dcl end}}
通过从 {{c|*this}} 的每个数据成员构造结果的对应成员，将 {{c|*this}} 转换为结果。
@1@ 等价于 {{c|return {in, found};}}。
@2@ 等价于 {{c|return {std::move(in), found};}}。
}}

===标准库===
下列标准库函数以 {{tt|ranges::in_found_result}} 为返回类型：

{{dsc begin}}
{{dsc h2|算法函数}}
{{dsc inc|cpp/algorithm/ranges/dsc next_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc prev_permutation}}
{{dsc end}}

===概要===
{{source|1=
namespace std::ranges
{
    template&lt;class I&gt;
    struct in_found_result
    {
        [[no_unique_address]] I in;
        bool found;
    
        template&lt;class I2&gt;
        requires std::convertible_to&lt;const I&amp;, I2&gt;
        constexpr operator in_found_result&lt;I2&gt;() const &amp;
        {
            return {in, found};
        }
    
        template&lt;class I2&gt;
        requires std::convertible_to&lt;I, I2&gt;
        constexpr operator in_found_result&lt;I2&gt;() &amp;&amp;
        {
            return {std::move(in), found};
        }
    };
}
}}

===注解===
{{cpp/algorithm/ranges/notes return_types}}

===示例===
{{example|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;ranges&gt;

int main()
{
    int v[] {1, 2, 3};

    const auto result = std::ranges::next_permutation(v);

    std::ranges::for_each(std::cbegin(v), result.in, [](int e) {std::cout &lt;&lt; e &lt;&lt; ' ';});

    std::cout &lt;&lt; std::boolalpha &lt;&lt; "\n" "result.found: " &lt;&lt; result.found &lt;&lt; '\n';
}
|output=
1 3 2 
result.found = true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc end}}

{{langlinks|cs|de|en|es|fr|it|ja|ko|pl|pt|ru}}