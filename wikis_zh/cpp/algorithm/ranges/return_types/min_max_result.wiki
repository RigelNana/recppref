{{cpp/ranges/title|min_max_result}}
{{cpp/algorithm/ranges/return_types/navbar}}

{{dcl begin}}
{{dcl header|algorithm}}
{{dcl|since=c++20|
template&lt; class T &gt;
struct min_max_result;
}}
{{dcl end}}

{{tt|ranges::min_max_result}} 是类模板，提供存储二个同类型对象或引用为单个单元的方式。

{{cpp/algorithm/ranges/return_types/general_description}}

===模板形参===
{{par begin}}
{{par | T | {{tt|ranges::min_max_result}} 所存储的对象或引用的类型}}
{{par end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名字|定义}}
{{dsc mem obj|min|nolink=true|可能为到范围中最小元素的引用、指向它的迭代器或其副本，类型为 {{tt|T}}。}}
{{dsc mem obj|max|nolink=true|可能为到范围中最大元素的引用、指向它的迭代器或其副本，类型为 {{tt|T}}。}}
{{dsc end}}

这些成员都被声明为带有 {{attr|no_unique_address}} 属性。

===成员函数===
{{member|{{small|std::ranges::min_max_result::}}operator min_max_result&lt;T2&gt;|2=
{{dcl begin}}
{{dcl|num=1|1=
template&lt;class T2&gt;
requires std::convertible_to&lt;const T&amp;, T2&gt;
constexpr operator min_max_result&lt;T2&gt;() const &amp;;
}}
{{dcl|num=2|1=
template&lt;class T2&gt;
requires std::convertible_to&lt;T, T2&gt;
constexpr operator min_max_result&lt;T2&gt;() &amp;&amp;;
}}
{{dcl end}}
通过从 {{c|*this}} 的每个数据成员构造结果的对应成员，转换 {{c|*this}} 为结果。
@1@ 等价于 {{c|return {min, max};}}。
@2@ 等价于 {{c|return {std::move(min), std::move(max)};}}。
}}

===标准库===
下列标准库函数以 {{tt|ranges::min_max_result}} 为返回类型：

{{dsc begin}}
{{dsc h2 | 算法函数}}
{{dsc inc|cpp/algorithm/ranges/dsc minmax}}
{{dsc inc|cpp/algorithm/ranges/dsc minmax_element}}
{{dsc end}}

===概要===
{{source|1=
namespace std::ranges
{
    template&lt;class T&gt;
    struct min_max_result
    {
        [[no_unique_address]] T min;
        [[no_unique_address]] T max;
      
        template&lt;class T2&gt;
        requires std::convertible_to&lt;const T&amp;, T2&gt;
        constexpr operator min_max_result&lt;T2&gt;() const &amp;
        {
            return {min, max};
        }
      
        template&lt;class T2&gt;
        requires std::convertible_to&lt;T, T2&gt;
        constexpr operator min_max_result&lt;T2&gt;() &amp;&amp;
        {
            return {std::move(min), std::move(max)};
        }
    };
}
}}

===注解===
{{cpp/algorithm/ranges/notes return_types}}

===示例===
{{example|code=
#include &lt;algorithm&gt;
#include &lt;ranges&gt;

int main()
{
    constexpr static auto v = {3, 1, 4, 1, 5, 9, 2};
    {
        constexpr auto result = std::ranges::minmax(v);
        static_assert(1 == result.min &amp;&amp; 9 == result.max);
    }
    {
        constexpr auto result = std::ranges::minmax_element(v);
        static_assert(1 == *result.min &amp;&amp; 9 == *result.max);
    }
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/utility/dsc tuple}}
{{dsc end}}

{{langlinks|cs|de|en|es|fr|it|ja|ko|pl|pt|ru}}