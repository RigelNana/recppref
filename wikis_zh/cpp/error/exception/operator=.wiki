{{cpp/error/exception/title|operator{{=}}}}
{{cpp/error/exception/navbar}}
{{dcl begin}}
{{dcl rev multi|until1=c++11|dcl1=
exception&amp; operator=( const exception&amp; other ) throw();
|notes2={{mark constexpr since c++26}}
|dcl2=
exception&amp; operator=( const exception&amp; other ) noexcept;
}}
{{dcl end}}

复制赋值运算符。赋值 {{c|other}} 的内容。

如果 {{c|*this}} 与 {{c|other}} 均拥有动态类型 {{tt|std::exception}}，那么赋值后 {{c|1=std::strcmp(what(), other.what()) == 0}}。

===参数===
{{par begin}}
{{par|other|要赋值内容的另一异常}}
{{par end}}

===返回值===
{{c|*this}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=471|std=C++98|before=赋值后调用 {{lc|what()}} 的效果由实现定义|after=在动态类型相同时需要与原来的 {{lc|what()}} 一致}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}