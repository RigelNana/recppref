{{cpp/title|invalid_argument}}
{{cpp/error/navbar}}
{{ddcl|header=stdexcept|
class invalid_argument;
}}

定义作为异常抛出的对象类型。它报告因实参值未被接受而引发的错误。

{{lc|std::bitset::bitset}} 和 {{lc|std::stoi}} 与 {{lc|std::stof}} 等一族函数会抛出此异常。

{{inheritance diagram/std-invalid_argument}}

===成员函数===
{{cpp/error/exception/member of derived with message|invalid_argument}}

{{inherited|[[cpp/error/logic_error|{{small|std::}}logic_error]]|}}

{{cpp/error/exception/inherit}}

===注解===
此异常类型的目的同错误条件 {{lc|std::errc::invalid_argument}}（从 {{lc|std::thread}} 的成员函数抛出的 {{lc|std::system_error}} 中）和相关的 errno 常量 {{lc|EINVAL}} 相似。

===示例===
{{example|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;
#include &lt;stdexcept&gt;
#include &lt;string&gt;

int main()
{
    try
    {
        std::bitset&lt;4&gt;{"012"}; // 抛出异常：只接受 '0' 或 '1'
    }
    catch (std::invalid_argument const&amp; ex)
    {
        std::cout &lt;&lt; "#1：" &lt;&lt; ex.what() &lt;&lt; '\n';
    }
    
    try
    {
        [[maybe_unused]] int f = std::stoi("ABBA"); // 抛出异常：没有转换
    }
    catch (std::invalid_argument const&amp; ex)
    {
        std::cout &lt;&lt; "#2：" &lt;&lt; ex.what() &lt;&lt; '\n';
    }

    try
    {
        [[maybe_unused]] float f = std::stof("(3.14)"); // 抛出异常：没有转换
    }
    catch (std::invalid_argument const&amp; ex)
    {
        std::cout &lt;&lt; "#3：" &lt;&lt; ex.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
#1：bitset 的 string 构造函数的实参非法
#2：stoi：没有转换
#3：stof：没有转换
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=254|std=C++98|before=缺失了接受 {{c|const char*}} 的构造函数|after=已补充}}
{{dr list item|wg=lwg|dr=471|std=C++98|before={{tt|std::invalid_argument}} 的复制的解释字符串由实现定义|after=它们与原 {{tt|std::invalid_argument}} 对象的解释字符串相同}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}