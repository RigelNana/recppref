{{cpp/error/system_error/title|system_error}}
{{cpp/error/system_error/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
system_error( std::error_code ec );
}}
{{dcl|num=2|since=c++11|
system_error( std::error_code ec, const std::string&amp; what_arg );
}}
{{dcl|num=2|since=c++11|
system_error( std::error_code ec, const char* what_arg );
}}
{{dcl|num=3|since=c++11|
system_error( int ev, const std::error_category&amp; ecat );
}}
{{dcl|num=4|since=c++11|
system_error( int ev, const std::error_category&amp; ecat,
              const std::string&amp; what_arg );
}}
{{dcl|num=4|since=c++11|
system_error( int ev, const std::error_category&amp; ecat,
              const char* what_arg );
}}
{{dcl|num=5|since=c++11|
system_error( const system_error&amp; other ) noexcept;
}}
{{dcl end}}

构造新的系统错误对象。

@1@ 以错误码 {{c|ec}} 构造。
@2@ 以错误码 {{c|ec}} 和解释字符串 {{c|what_arg}} 构造。{{lc|what()}} 返回的字符串保证含有 {{c|what_arg}} 为子字符串。
@3@ 以底层错误码 {{c|ev}} 和关联的错误分类 {{c|ecat}} 构造。
@4@ 以底层错误码 {{c|ev}}、关联的错误分类 {{c|ecat}} 和解释字符串 {{c|what_arg}} 构造。{{lc|what()}} 返回的字符串保证含有 {{c|what_arg}} 为子字符串（假定它不含内嵌的空字符&lt;!--LWG 3112 --&gt;）。
@5@ 复制构造函数。以 {{c|other}} 的内容初始化内容。若 {{c|*this}} 与 {{c|other}} 均拥有动态类型 {{tt|std::system_error}} 则 {{c|1=std::strcmp(what(), other.what()) == 0}}。

===参数===
{{par begin}}
{{par | ec | 错误码}}
{{par | ev | 以与 {{c|ecat}} 关联的枚举提供的底层错误码}}
{{par | ecat | 错误类别}}
{{par | what_arg | 解释性字符串}}
{{par|other|要复制的另一 {{tt|system_error}}}}
{{par end}}

===示例===
{{example
|演示如何从 {{lc|errno}} 值创建 {{tt|system_error}} 异常 
|code=
#include &lt;iostream&gt;
#include &lt;system_error&gt;

int main()
{
    try
    {
        throw std::system_error(EDOM, std::generic_category(), "FIX ME");
    }
    catch (const std::system_error&amp; ex)
    {
        std::cout &lt;&lt; "code:    [" &lt;&lt; ex.code() &lt;&lt; "]\n"
                     "message: [" &lt;&lt; ex.code().message() &lt;&lt; "]\n"
                     "what:    [" &lt;&lt; ex.what() &lt;&lt; "]\n";
    }
}
|p=true
|output=
code:    [generic:33]
message: [Numerical argument out of domain]
what:    [FIX ME: Numerical argument out of domain]
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}