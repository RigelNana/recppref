{{cpp/title|current_exception}}
{{cpp/error/navbar}}
{{ddcla|header=exception|since=c++11|constexpr=c++26|
std::exception_ptr current_exception() noexcept;
}}

若在当前异常处理（典型地在 {{c/core|catch}} 子句中）中调用，则捕获当前异常对象，并创建一个保有该异常对象副本或到该异常对象引用（依赖于实现）的 {{lc|std::exception_ptr}}。被引用对象至少在仍有 {{tt|exception_ptr}} 对象引用它时保持有效。

若此函数的实现要求对 {{c/core|new}} 的调用且调用失败，则返回地指针将保有到一个 {{lc|std::bad_alloc}} 实例的引用。

若此函数的实现要求复制被捕获异常对象，且其复制构造函数抛出异常，则返回的指针将保有到被抛出异常的引用。若该被抛出异常对象的复制构造函数亦抛出，则返回的指针可能保有到 {{lc|std::bad_exception}} 实例的引用，以打断无尽循环。

若函数在无被处理异常时调用，则返回空的 {{lc|std::exception_ptr}}。

可以在 {{lc|std::terminate_handler}} 中调用此函数，以获取造成对 {{lc|std::terminate}} 的调用的异常。

===返回值===
{{lc|std::exception_ptr}} 的实例，它保有到异常对象的引用，或异常对象的副本，或指向 {{lc|std::bad_alloc}} 实例，或指向 {{lc|std::bad_exception}} 实例。

===注解===
在遵循 [https://itanium-cxx-abi.github.io/cxx-abi/abi.html Itanium C++ ABI] 的实现（GCC, Clang, 等）中，异常是于抛出时在堆上分配的（除了某些情况下的 {{lc|std::bad_alloc}}），而此函数则单纯地创建指代之前分配对象的智能指针。在 MSVC 中，异常是于抛出时在栈上分配的，而此函数会进行堆分配并复制异常对象。

在 Windows 的托管 CLR 环境中（[https://learn.microsoft.com/en-us/cpp/dotnet/exceptions-in-cpp-cli]），实现会在当前异常是托管异常时存储一个 {{lc|std::bad_exception}}（[https://github.com/microsoft/STL/blob/65aab97a8e75e7ba409002e518ed799006dfb285/stl/src/excptptr.cpp#L367]）。注意，{{c|catch(...)}} 也会捕获托管异常：
{{source|1=
#include &lt;exception&gt;

int main()
{
    try
    {
        throw gcnew System::Exception("Managed exception");
    }
    catch (...)
    {
        std::exception_ptr ex = std::current_exception();
        try
        {
            std::rethrow_exception(ex);
        }
        catch (std::bad_exception const &amp;)
        {
            // 会打印此行。
            std::cout &lt;&lt; "Bad exception" &lt;&lt; std::endl;
        }
    }
}
}}

{{ftm begin}}
{{ftm|__cpp_lib_constexpr_exceptions|value=202411L|std=C++26|{{c/core|constexpr}} 的异常类型}}
{{ftm end}}

===示例===
{{include| cpp/error/example_exception_ptr}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/error/dsc exception_ptr}}
{{dsc inc|cpp/error/dsc rethrow_exception}}
{{dsc inc|cpp/error/dsc make_exception_ptr}}
{{dsc inc|cpp/error/dsc uncaught_exception}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}