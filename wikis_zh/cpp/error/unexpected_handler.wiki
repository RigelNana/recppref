{{cpp/title|unexpected_handler}}
{{cpp/error/navbar}}
{{ddcl|header=exception|deprecated=c++11|until=c++17|
typedef void (*unexpected_handler)();
}}

{{tt|std::unexpected_handler}} 是函数指针类型（指向不接收实参并返回 void 的函数），它由函数 {{lc|std::set_unexpected}} 所安装，由 {{lc|std::get_unexpected}} 所查询，并由 {{lc|std::unexpected}} 所调用。

C++ 实现提供默认的 {{tt|std::unexpected_handler}} 函数，它调用 {{lc|std::terminate()}}。若安装空指针值（用 {{lc|std::set_unexpected}}），则实现可以替代地恢复默认处理函数。

期待用户定义的 {{tt|std::unexpected_handler}} 终止程序或抛出异常。若它抛出异常，则可能遇到下列三种情况之一：

1) {{tt|std::unexpected_handler}} 所抛的异常满足之前被违背的动态异常规定。则允许新异常逃出函数并继续栈回溯。

2) {{tt|std::unexpected_handler}} 所抛的异常仍然违背动态异常规定：

2a) 然而，异常规定允许 {{lc|std::bad_exception}}：C++ 运行时销毁抛出的异常对象，并构造 {{lc|std::bad_exception}} 替代地抛出。

2b) 异常规定不允许 {{lc|std::bad_exception}}：调用 {{lc|std::terminate()}}。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/error/dsc unexpected}}
{{dsc inc|cpp/error/dsc set_unexpected}}
{{dsc inc|cpp/error/dsc get_unexpected}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}