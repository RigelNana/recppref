{{cpp/chrono/title|operator+|operator- {{small|(std::chrono::year_month)}}}}
{{cpp/chrono/year_month/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|1=
constexpr std::chrono::year_month operator+( const std::chrono::year_month&amp; ym,
                                             const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::chrono::year_month operator+( const std::chrono::years&amp; dy,
                                             const std::chrono::year_month&amp; ym ) noexcept;
}}
{{dcl|since=c++20|num=3|1=
constexpr std::chrono::year_month operator+( const std::chrono::year_month&amp; ym,
                                             const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|num=4|1=
constexpr std::chrono::year_month operator+( const std::chrono::months&amp; dm,
                                             const std::chrono::year_month&amp; ym ) noexcept;
}}
{{dcl|since=c++20|num=5|1=
constexpr std::chrono::year_month operator-( const std::chrono::year_month&amp; ym,
                                             const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl|since=c++20|num=6|1=
constexpr std::chrono::year_month operator-( const std::chrono::year_month&amp; ym,
                                             const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|num=7|1=
constexpr std::chrono::months operator-( const std::chrono::year_month&amp; ym1,
                                         const std::chrono::year_month&amp; ym2 ) noexcept;
}}
{{dcl end}}

@1,2@ 加上 {{c|dy.count()}} 年到 {{c|ym}}。
@3,4@ 加上 {{c|dm.count()}} 月到 {{c|ym}}。
@5@ 从 {{c|ym}} 减去 {{c|dy.count()}} 年。
@6@ 从 {{c|ym}} 减去 {{c|dm.count()}} 月。
@7@ 返回 {{c|ym1}} 与 {{c|ym2}} 所表示的两个时间点间以月计量的差。

对于能转换到 {{lc|std::chrono::years}} 与 {{lc|std::chrono::months}} 两者的时长，若调用有歧义，则偏好 {{tt|years}} 重载 {{v|1,2,5}}。

===返回值===
@1,2@ {{c|std::chrono::year_month(ym.year() + dy, ym.month())}}
@3,4@ A {{tt|year_month}} value {{tt|z}} such that {{c|1=z - ym == dm}}
@5@ {{c|ym + -dy}}
@6@ {{c|ym + -dm}}
@7@ &lt;br&gt;{{cc|1=
ym1.year() - ym2.year() + std::chrono::months(int(unsigned(ym1.month())) -
int(unsigned(ym2.month())))
}}

===注解===
两个 {{tt|year_month}} 值相减的结果是 {{lc|std::chrono::months}} 类型时长。此时长单位表示格里高利月的平均长度（30.436875 日），而产生的时长与问题中的实际日数无关。例如 {{c|2017y/3 - 2017y/2}} 的结果是 {{c|std::chrono::months(1)}}，即使 2017 年二月只含 28 日。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;
 
int main()
{
    auto ym{std::chrono::year(2021)/std::chrono::July};

    ym = ym + std::chrono::months(14);
    assert(ym.month() == std::chrono::September);
    assert(ym.year() == std::chrono::year(2022));

    ym = ym - std::chrono::years(3);
    assert(ym.month() == std::chrono::month(9));
    assert(ym.year() == std::chrono::year(2019));

    ym = ym + (std::chrono::September - std::chrono::month(2));
    assert(ym.month() == std::chrono::April);
    assert(ym.year() == std::chrono::year(2020));
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/year_month/dsc operator_arith}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}