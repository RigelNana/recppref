{{cpp/chrono/month/title|operator++|operator--}}
{{cpp/chrono/month/navbar}}
{{dcl begin}}
{{dcl|since=c++20|num=1|
constexpr std::chrono::month&amp; operator++() noexcept;
}}
{{dcl|since=c++20|num=2|
constexpr std::chrono::month operator++( int ) noexcept;
}}
{{dcl|since=c++20|num=3|
constexpr std::chrono::month&amp; operator--() noexcept;
}}
{{dcl|since=c++20|num=4|
constexpr std::chrono::month operator--( int ) noexcept;
}}
{{dcl end}}

对月份值加或减 1，将结果对 12 取余，规约成范围 {{closed range|1|12}} 中的整数。
@1,2@ 实施 {{c|1=*this += std::chrono::months{1};}}
@3,4@ 实施 {{c|1=*this -= std::chrono::months{1};}}

===参数===
（无）

===返回值===
@1,3@ 修改后的此 {{tt|month}} 的引用。
@2,4@ 修改前的 {{tt|month}} 的副本。

===注解===
调用这些函数之一后，{{c|ok()}} 始终为 {{c|true}}。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    std::chrono::month m{6};

    ++m;
    assert(m == std::chrono::month(7));

    --m;
    assert(m == std::chrono::month(6));

    m = std::chrono::December;
    m++; // 向上取整到 January
    assert(m.ok());
    std::cout &lt;&lt; unsigned(m) &lt;&lt; '\n';

    m = std::chrono::January;
    m--; // 向下取整到 December
    assert(m.ok());
    std::cout &lt;&lt; unsigned(m) &lt;&lt; '\n';
}
|output=
1
12
}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/chrono/month/dsc operator_arith }}
{{dsc inc | cpp/chrono/month/dsc operator_arith 2 }}
{{dsc end}}

{{langlinks|en|es|ja|ru}}