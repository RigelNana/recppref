{{cpp/chrono/title|operator+|operator- {{small|(std::chrono::month)}}}}
{{cpp/chrono/month/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|num=1|1=
constexpr std::chrono::month operator+( const std::chrono::month&amp; m,
                                        const std::chrono::months&amp; ms ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::chrono::month operator+( const std::chrono::months&amp; ms,
                                        const std::chrono::month&amp; m ) noexcept;
}}
{{dcl|since=c++20|num=3|1=
constexpr std::chrono::month operator-( const std::chrono::month&amp; m, 
                                        const std::chrono::months&amp; ms ) noexcept;
}}
{{dcl|since=c++20|num=4|1=
constexpr std::chrono::months operator-( const std::chrono::month&amp; m1, 
                                         const std::chrono::month&amp; m2 ) noexcept;
}}
{{dcl end}}

@1-2@ 将 {{tt|ms.count()}} 个月加到 {{c|m}}。通过首先求值 {{c|static_cast&lt;long long&gt;(unsigned(m)) + (ms.count() - 1)}}，将它对 12 取余变成 {{closed range|0|11}} 范围中的整数，再加 1，来计算结果中保有的月份值。
@3@ 从 {{c|m}} 减去 {{c|ms.count()}} 个月并返回结果。等价于 {{c|return m + -ms;}}。
@4@ 若 {{c|1=m1.ok()}} 与 {{c|1=m2.ok()}} 均为 {{c|true}}，则返回 {{lc|std::chrono::months}} 值 {{c|m}}，使得 {{tt|m.count()}} 在范围  {{closed range|0|11}} 中且 {{c|1=m2 + m == m1}}。否则返回值未指定。

===返回值===
@1-3@ 保有按上述方式计算的月份值的 {{lc|std::chrono::month}}。
@4@ 表示 {{c|m1}} 与 {{c|m2}} 间距离的 {{lc|std::chrono::months}}。

===注意===
只要计算不溢出，{{v|1-3}} 就始终返回合法的月份，即使 {{c|m.ok()}} 为 {{c|false}}。

两个 {{tt|month}} 值相减的结果是 {{lc|std::chrono::months}} 类型的时长。时长单位表示格里高利月的平均长度，而产生的时长与操作数所表示的具体月分的日数无关。例如 {{c|std::chrono::seconds(std::chrono::April - std::chrono::March)}} 不是三月中的秒数 ({{c|2678400s}})，而是 {{c|2629746s}} (30.436875 天)。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;

int main()
{
    std::chrono::month m{6};

    m = m + std::chrono::months(2);
    assert(m == std::chrono::month(8));

    m = m - std::chrono::months(3);
    assert(m == std::chrono::month(5));
 
    constexpr std::chrono::months ms = std::chrono::month(8) - std::chrono::month(6);
    static_assert(ms == std::chrono::months(2));
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/month/dsc operator_inc dec}}
{{dsc inc|cpp/chrono/month/dsc operator_arith}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}