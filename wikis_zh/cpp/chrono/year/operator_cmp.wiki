{{cpp/chrono/title|1=operator==,&lt;=&gt;{{small|(std::chrono::year)}}}}
{{cpp/chrono/year/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|num=1|1=
constexpr bool operator==( const std::chrono::year&amp; x,
                           const std::chrono::year&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::strong_ordering operator&lt;=&gt;( const std::chrono::year&amp; x,
                                            const std::chrono::year&amp; y ) noexcept;
}}
{{dcl end}}

比较两个 {{lc|std::chrono::year}} {{c|x}} 与 {{c|y}}。

{{cpp/note synthesized compare}}

=== 返回值 ===
@1@ {{c|1=int(x) == int(y)}}
@2@ {{c|1=int(x) &lt;=&gt; int(y)}}

=== 示例 ===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::chrono;

    constexpr year y1{2020};
    constexpr year y2{2021};

    std::cout &lt;&lt; std::boolalpha &lt;&lt; (y1 != y2) &lt;&lt; '\n';

    static_assert((2020y &lt; 2023y) &amp;&amp; (2020y == 2020y) &amp;&amp; (2020y &lt;= 2023y) &amp;&amp;
                  (2023y &gt; 2020y) &amp;&amp; (2023y != 2020y) &amp;&amp; (2023y &gt;= 2020y));
}
|output=
true
}}

{{langlinks|en|es|ja|ru}}