{{cpp/chrono/title|abs{{small|(std::chrono::duration)}}}}
{{cpp/chrono/duration/navbar}}
{{ddcl|since=c++17|header=chrono|
template&lt; class Rep, class Period &gt;
constexpr std::chrono::duration&lt;Rep, Period&gt; abs( std::chrono::duration&lt;Rep, Period&gt; d );
}}

返回时长 {{c|d}} 的绝对值。具体而言，若 {{c|1=d &gt;= d.zero()}}，则返回 {{c|d}}，否则返回 {{c|-d}}。

除非 {{c|std::numeric_limits&lt;Rep&gt;::is_signed}} 为 {{c|true}}，否则该函数不参与重载决议。

===参数===
{{par begin}}
{{par|d|时长}}
{{par end}}

===返回值===
{{c|d}} 的绝对值。

===可能的实现===
{{eq fun|1=
template&lt;class Rep, class Period,
    class = std::enable_if_t&lt;std::numeric_limits&lt;Rep&gt;::is_signed&gt;&gt;
constexpr std::chrono::duration&lt;Rep, Period&gt; abs(std::chrono::duration&lt;Rep, Period&gt; d)
{
    return d &gt;= d.zero() ? +d : -d;
}
}}

===示例===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;iostream&gt;

int main()
{
    using namespace std::chrono;

    static_assert(abs(-42s) == std::chrono::abs(42s));

    std::cout &lt;&lt; "abs(+3min) = " &lt;&lt; abs(3min).count() &lt;&lt; '\n'
              &lt;&lt; "abs(-3min) = " &lt;&lt; abs(-3min).count() &lt;&lt; '\n';
}
|output=
abs(+3min) = 3
abs(-3min) = 3
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/duration/dsc operator_arith}}
{{dsc inc|cpp/numeric/math/dsc abs}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}