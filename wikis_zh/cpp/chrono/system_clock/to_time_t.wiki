{{cpp/chrono/system_clock/title|to_time_t}}
{{cpp/chrono/system_clock/navbar}}
{{dcl begin}}
{{dcl|since=c++11|
static std::time_t to_time_t( const time_point&amp; t ) noexcept;
}}
{{dcl end}}

转换 {{c|t}} 为 {{lc|std::time_t}} 类型。

若 {{lc|std::time_t}} 拥有较低精度，则是舍入还是截断值是实现定义的。

===参数===
{{par begin}}
{{par | t |要转换的系统时钟时间点}}
{{par end}}

===返回值===
表示 {{c|t}} 的 {{lc|std::time_t}} 值。

===示例===
{{example
|获取当前时间为 {{lc|std::time_t}} 的两种办法。
|code=
#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;iostream&gt;
#include &lt;thread&gt;
using namespace std::chrono_literals;

int main()
{
    // 老办法
    std::time_t oldt = std::time({});

    std::this_thread::sleep_for(2700ms);

    // 新办法
    auto const now = std::chrono::system_clock::now();
    std::time_t newt = std::chrono::system_clock::to_time_t(now);

    std::cout &lt;&lt; "newt - oldt == " &lt;&lt; newt - oldt &lt;&lt; " s\n";
}
|p=true
|output=
newt - oldt == 3 s
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/system_clock/dsc from_time_t}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}