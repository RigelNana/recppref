{{cpp/chrono/hh_mm_ss/title|hh_mm_ss}}
{{cpp/chrono/hh_mm_ss/navbar}}
{{dcl begin}}
{{dcl|num=1|1=
constexpr hh_mm_ss() noexcept : hh_mm_ss{Duration::zero()} {}
}}
{{dcl|num=2|
constexpr explicit hh_mm_ss( Duration d );
}}
{{dcl end}}
构造 {{tt|hh_mm_ss}} 对象。

@1@ 构造对应 {{tt|Duration::zero()}} 的 {{tt|hh_mm_ss}} 对象。
@2@ 构造对应 {{c|d}} 的 {{tt|hh_mm_ss}} 对象：
* {{lc|is_negative()}} 返回 {{c|d &lt; Duration::zero()}}。
* {{lc|hours()}} 返回 {{c|std::chrono::duration_cast&lt;std::chrono::hours&gt;(abs(d))}}。
* {{lc|minutes()}} 返回 {{c|std::chrono::duration_cast&lt;std::chrono::minutes&gt;(abs(d) - hours())}}。
* {{lc|seconds()}} 返回 &lt;br&gt;{{c|std::chrono::duration_cast&lt;std::chrono::seconds&gt;(abs(d) - hours() - minutes())}}。
* 若 {{c|std::chrono::treat_as_floating_point_v&lt;precision::rep&gt;}} 为 {{c|true}} 则 {{lc|subseconds()}} 返回 {{c|abs(d) - hours() - minutes() - seconds()}}；否则返回 {{c|std::chrono::duration_cast&lt;precision&gt;(abs(d) - hours() - minutes() - seconds())}}。

===参数===
{{par begin}}
{{par|d|要拆分的时长。}}
{{par end}}

===示例===
{{example
|code=
#include &lt;chrono&gt;
#include &lt;print&gt;
 
int main()
{
    std::println("默认构造函数: {}", std::chrono::hh_mm_ss&lt;std::chrono::minutes&gt;{});

    std::chrono::time_point now = std::chrono::system_clock::now();
    std::chrono::hh_mm_ss time_of_day{now - std::chrono::floor&lt;std::chrono::days&gt;(now)};
    std::println("日内时间是: {}", time_of_day);
}
|p=true
|output=
默认构造函数: 00:00:00
日内时间是: 12:13:14.151617189
}}

{{langlinks|en|es|ja|ru}}