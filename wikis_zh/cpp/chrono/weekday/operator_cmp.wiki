{{cpp/chrono/title|1=operator=={{small|(std::chrono::weekday)}}}}
{{cpp/chrono/weekday/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|1=
constexpr bool operator==( const std::chrono::weekday&amp; x,
                           const std::chrono::weekday&amp; y ) noexcept;
}}
{{dcl end}}

比较两个 {{lc|std::chrono::weekday}} {{c|x}} 和 {{c|y}}。

{{cpp/note synthesized eq}}

=== 返回值 ===
{{c|1=x.c_encoding() == y.c_encoding()}}

=== 注解 ===
{{tt|weekday}} 不支持 {{tt|&lt;}}、{{tt|1=&lt;=}}、{{tt|&gt;}} 和 {{tt|1=&gt;=}} 运算符，因为在哪天是星期的首日上没有普遍的共识。

=== 示例 ===
{{example
|code=
#include &lt;chrono&gt;

int main()
{
    using namespace std::literals;
 
    constexpr std::chrono::weekday wd1{2};
    constexpr std::chrono::weekday wd2{std::chrono::Friday};
    static_assert(wd1 != wd2);

    // 1313 年 1 月 13 日是星期五
    constexpr std::chrono::weekday wd3{1313y/1/13d};
    static_assert(wd2 == wd3);
}
}}

{{langlinks|en|es|ja|ru}}