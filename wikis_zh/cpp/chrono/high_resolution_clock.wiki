{{cpp/title|n=chrono::|high_resolution_clock}}
{{cpp/chrono/high_resolution_clock/navbar}}
{{ddcl|header=chrono|since=c++11|
class high_resolution_clock;
}}

类 {{tt|std::chrono::high_resolution_clock}} 表示实现提供的拥有最小计次周期的时钟。它可以是 {{lc|std::chrono::system_clock}} 或 {{lc|std::chrono::steady_clock}} 的别名，或第三种独立时钟。

{{tt|std::chrono::high_resolution_clock}} 满足{{named req|TrivialClock}}的要求。

===成员类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|rep}}|表示时钟的时长中的计次数的算术类型}}
{{dsc|{{tt|period}}|表示时钟计次周期的 {{lc|std::ratio}} 类型，单位为秒}}
{{dsc|{{tt|duration}}|{{c/core|std::chrono::duration&lt;rep, period&gt;}}}}
{{dsc|{{tt|time_point}}|{{c/core|std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;}}}}
{{dsc end}}

===成员常量===
{{dsc begin}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr bool}} is_steady |若时间间隔计次始终为常量，即纵使在外部时钟调整的情况下，调用 {{ltf|cpp/chrono/high_resolution_clock/now}} 的返回值亦单调递增，则为 {{c|true}}，否则为 {{c|false}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem sfun|cpp/chrono/high_resolution_clock/now|返回表示时钟当前值的 {{lc|std::chrono::time_point}}}}
{{dsc end}}

===注解===
有一些关于如何使用 {{tt|high_resolution_clock}} 的争论。Howard Hinnant，声称将 {{tt|high_resolution_clock}} 引入语言的人，在 2016 年曾于 [https://lists.isocpp.org/mailman/listinfo.cgi/std-discussion ISO C++ 标准 - 讨论邮件列表]中说过他倾向于将其摒弃。他的理由是，因为标准允许将之作为 {{lc|std::chrono::steady_clock}} 或 {{lc|std::chrono::system_clock}} 的别名，所以使用它只会向程序添加不确定性而没有好处。但是，这个讨论的其他参与者也提出倾向使用它，其逻辑基础是，比如由于 {{lc|std::chrono::steady_clock}} 和 {{lc|std::chrono::system_clock}} 都没带来任何特定的分辨率保证，{{tt|high_resolution_clock}} 就起到了有用的角色，它给了厂商一个提供平台的最高分辨率时钟的机会，而 {{lc|std::chrono::steady_clock}} 和 {{lc|std::chrono::system_clock}} 并非如此。

通常它只是 {{lc|std::chrono::steady_clock}} 或 {{lc|std::chrono::system_clock}} 的别名，但具体是哪个取决于库或配置。它是 {{tt|system_clock}} 时不是单调的（即时间能后退）。例如：如 2023 年所知，libstdc++ 中它是 {{tt|system_clock}} 的别名“直到高于纳秒的定义变得可行”&lt;ref&gt;[https://github.com/gcc-mirror/gcc/blob/63663e4e69527b308687c63bacb0cc038b386593/libstdc%2B%2B-v3/include/bits/chrono.h#L1285 libstdc++ {{tt|&lt;chrono.h&gt;}}]&lt;/ref&gt;，MSVC 中它是 {{tt|steady_clock}} 的别名&lt;ref&gt;[https://learn.microsoft.com/en-us/cpp/standard-library/high-resolution-clock-struct?view=msvc-170 msvc {{tt|high_resolution_clock}}]&lt;/ref&gt;，而 libc++ 中当 C++ 标准库实现支持单调时钟时为 {{tt|steady_clock}}，否则为 {{tt|system_clock}} 的别名&lt;ref&gt;[https://github.com/llvm/llvm-project/blob/aa97f6b4947e599e17e900aebd511d8d497c3be9/libcxx/include/__chrono/high_resolution_clock.h#L26 libc++ {{tt|&lt;high_resolution_clock.h&gt;}}]&lt;/ref&gt;。

===参阅===
{{dsc begin}}
{{dsc class|cpp/chrono/system_clock|来自系统范围实时时钟的壁钟时间|notes={{mark c++11}}}}
{{dsc class|cpp/chrono/steady_clock|决不调整的单调时钟|notes={{mark c++11}}}}
{{dsc end}}

===外部链接===
{{eli|&lt;references/&gt;}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}