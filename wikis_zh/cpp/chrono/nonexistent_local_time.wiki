{{cpp/chrono/title|nonexistent_local_time}}
{{cpp/chrono/navbar}}
{{ddcl|header=chrono|since=c++20|
class nonexistent_local_time;
}}

定义要作为异常抛出的对象类型，以报告试图转换不存在的 {{lc|std::chrono::local_time}} 为 {{lc|std::chrono::sys_time}} 而未指定 {{lc|std::chrono::choose}}（如 {{tt|choose::earliest}} 或 {{tt|choose::latest}}）。

{{lc|std::chrono::time_zone::to_sys}} 和调用它的函数（例如接收 {{lc|std::chrono::zoned_time}} 的 {{lc|std::chrono::local_time}} 构造函数）会抛出此异常。

{{inheritance diagram/std-chrono-nonexistent_local_time}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor | nolink=true | 构造异常对象 }}
{{dsc mem fun | operator{{=}} | nolink=true | 替换异常对象}}
{{dsc mem fun | what | nolink=true | 返回解释字符串}}
{{dsc end}}

{{member|{{small|std::chrono::nonexistent_local_time::}}nonexistent_local_time|2=
{{dcl begin}}
{{dcl|num=1|since=c++20|
template&lt; class Duration &gt;
nonexistent_local_time( const std::chrono::local_time&lt;Duration&gt;&amp; tp,
                        const std::chrono::local_info&amp; i );
}}
{{dcl|num=2|since=c++20|
nonexistent_local_time( const nonexistent_local_time&amp; other ) noexcept;
}}
{{dcl end}}
构造异常对象。

@1@ {{tt|what()}} 所返回的解释字符串等价于下列代码后 {{tt|os.str()}} 所产生者：

{{source|1=
std::ostringstream os;
os &lt;&lt; tp &lt;&lt; " is in a gap between\n"
   &lt;&lt; std::chrono::local_seconds(i.first.end.time_since_epoch()) + i.first.offset 
   &lt;&lt; ' ' &lt;&lt; i.first.abbrev &lt;&lt; " and\n"
   &lt;&lt; std::chrono::local_seconds(i.second.begin.time_since_epoch()) + i.second.offset
   &lt;&lt; ' ' &lt;&lt; i.second.abbrev
   &lt;&lt; " which are both equivalent to\n"
   &lt;&lt; i.first.end &lt;&lt; " UTC";
}}
@@ 若 {{c|1=i.result != std::chrono::local_info::nonexistent}} 则行为未定义。

@2@ 复制构造函数。若 {{c|*this}} 与 {{c|other}} 均拥有动态类型 {{tt|std::chrono::nonexistent_local_time}} 则 {{c|1=std::strcmp(what(), other.what()) == 0}}。

===参数===
{{par begin}}
{{par | tp |试图转换的时间点}}
{{par | i |描述转换尝试的结果的 {{lc|std::chrono::local_info}}}}
{{par | other | 要复制的另一 {{tt|nonexistent_local_time}}}}
{{par end}}

===异常===
可能抛出 {{lc|std::bad_alloc}}

===注解===
因为不容许复制派生自 {{tt|std::exception}} 的标准库类抛出异常，此信息通常在内部存储为分离分配的引用计数字符串。
}}

{{cpp/error/exception/member assignment what|chrono::nonexistent_locale_time|std=c++20}}

{{cpp/error/runtime_error/inherit}}

{{cpp/error/exception/inherit}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/dsc ambiguous_local_time}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}