{{cpp/chrono/title|1=operator==,&lt;=&gt;{{small|(std::chrono::year_month_day)}}}}
{{cpp/chrono/year_month_day/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl|since=c++20|num=1|1=
constexpr bool operator==( const std::chrono::year_month_day&amp; x,
                           const std::chrono::year_month_day&amp; y ) noexcept;
}}
{{dcl|since=c++20|num=2|1=
constexpr std::strong_ordering
    operator&lt;=&gt;( const std::chrono::year_month_day&amp; x,
                 const std::chrono::year_month_day&amp; y ) noexcept;
}}
{{dcl end}}

比较两个 {{tt|year_month_day}} 值 {{c|x}} 与 {{c|y}}。这是字典序比较：首先比较 {{lc|year()}}，然后是 {{lc|month()}}，最后比较 {{lc|day()}}。

{{cpp/note synthesized compare}}

=== 返回值 ===
@1@ {{c|1=x.year() == y.year() &amp;&amp; x.month() == y.month() &amp;&amp; x.day() == y.day()}}
@2@ 若 {{c|1=x.year() &lt;=&gt; y.year != 0}} 则为 {{c|1=x.year() &lt;=&gt; y.year}}；否则若 {{c|1=x.month() &lt;=&gt; y.month() != 0}} 则为 {{c|1=x.month() &lt;=&gt; y.month()}}；否则为 {{c|1=x.day() &lt;=&gt; y.day()}}。

=== 注解 ===
若 {{c|x}} 和 {{c|y}} 都表示合法日期（{{c|1=x.ok() &amp;&amp; y.ok() == true}}），则字典序比较的结果与日历顺序一致。

=== 示例 ===
{{example
|code=
#include &lt;chrono&gt;

int main()
{
    constexpr auto ymd1{std::chrono::day(13)/7/1337};
    constexpr auto ymd2{std::chrono::year(1337)/7/13};
    static_assert(ymd1 == ymd2);
    static_assert(ymd1 &lt;= ymd2);
    static_assert(ymd1 &gt;= ymd2);
    static_assert(ymd1 &lt;=&gt; ymd2 == 0);
}
}}

{{langlinks|en|es|ja|ru}}