{{title|1=operator==,!=,&lt;,&lt;=,&gt;,&gt;=,&lt;=&gt;{{small|(std::chrono::time_point)}}}}
{{cpp/chrono/time_point/navbar}}
{{dcl begin}}
{{dcl header|chrono}}
{{dcl rev multi|num=1
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator==( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator==( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=2
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator!=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|until2=c++20|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator!=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=3
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&lt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&lt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                          const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=4
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&lt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&lt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=5
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&gt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&gt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                          const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl rev multi|num=6
|since1=c++11|dcl1=
template&lt; class Clock, class Dur1, class Dur2 &gt;
bool operator&gt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                 const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
|since2=c++14|dcl2=
template&lt; class Clock, class Dur1, class Dur2 &gt;
constexpr bool operator&gt;=( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                           const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl|num=7|since=c++20|1=
template&lt; class Clock, class Dur1, std::three_way_comparable_with&lt;Dur1&gt; Dur2 &gt;
constexpr auto operator&lt;=&gt;( const std::chrono::time_point&lt;Clock,Dur1&gt;&amp; lhs,
                            const std::chrono::time_point&lt;Clock,Dur2&gt;&amp; rhs );
}}
{{dcl end}}

比较两个时间点。通过对这些时间点 {{lc|time_since_epoch()}} 的结果进行比较来完成。

@1,2@ 检查时间点 {{c|lhs}} 与 {{c|rhs}} 是否指代给定时钟的同一时间点。

@3-6@ 比较时间点 {{c|lhs}} 与 {{c|rhs}}。

@7@ 比较时间点 {{c|lhs}} 与 {{c|rhs}}。返回类型从 {{c|1=lhs.time_since_epoch() &lt;=&gt; rhs.time_since_epoch()}} 推导，从而为 {{tt|Dur1}} 与 {{tt|Dur2}} 的三路比较结果类型。

{{rrev|since=c++20|1=
{{cpp/note synthesized eq}}
}}

===参数===
{{par begin}}
{{par | lhs, rhs |要比较的 time_point}}
{{par end}}

===返回值===
@1@若 {{c|lhs}} 与 {{c|rhs}} 指代同一时间点则为 {{c|true}}，否则为 {{c|false}}。

@2@若 {{c|lhs}} 与 {{c|rhs}} 指代不同时间点则为 {{c|true}}，否则为 {{c|false}}。

@3@若 {{c|lhs}} 指代的时间点''先于'' {{c|rhs}} 则为 {{c|true}}，否则为 {{c|false}}。

@4@若 {{c|lhs}} 指代的时间点''先于'' {{c|rhs}}，或指代的时间点与 {{c|rhs}} 相同则为 {{c|true}}，否则为 {{c|false}}。

@5@若 {{c|lhs}} 指代的时间点''后于'' {{c|rhs}} 则为 {{c|true}}，否则为 {{c|false}}。

@6@若 {{c|lhs}} 指代的时间点''后于'' {{c|rhs}}，或指代的时间点与 {{c|rhs}} 相同则为 {{c|true}}，否则为 {{c|false}}。

@7@ {{c|1=lhs.time_since_epoch() &lt;=&gt; rhs.time_since_epoch()}} 。

{{cpp/impldef exception}}

===注解===
{{tt|time_point}} 的双路比较运算符曾在 C++11 中不是 {{c/core|constexpr}}，这已在 C++14 中更正。

{{langlinks|en|es|ja|ru}}