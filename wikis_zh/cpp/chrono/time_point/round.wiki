{{cpp/chrono/title|round{{small|(std::chrono::time_point)}}}}
{{cpp/chrono/time_point/navbar}}
{{ddcl|since=c++17|header=chrono|
template&lt; class ToDuration, class Clock, class Duration &gt;
constexpr std::chrono::time_point&lt;Clock, ToDuration&gt;
    round( const std::chrono::time_point&lt;Clock, Duration&gt;&amp; tp );
}}

返回能以 {{tt|ToDuration}} 表示的最接近 {{c|tp}} 的时间点，中点情况下向偶数舍入。

除非 {{tt|ToDuration}} 是 {{lc|std::chrono::duration}} 的特化且 {{c|std::chrono::treat_as_floating_point_v&lt;typename ToDuration::rep&gt;}} 为 {{c|false}}，否则此函数不参与重载决议。

===参数===
{{par begin}}
{{par | tp |要舍入到最近值的时间点}}
{{par end}}

===返回值===
舍入到使用 {{tt|ToDuration}} 类型时长的最近时间点的 {{c|tp}}，中点情况下向偶数舍入。

===可能的实现===
{{eq fun|1=
namespace detail
{
    template&lt;class&gt; inline constexpr bool is_duration_v = false;
    template&lt;class Rep, class Period&gt; inline constexpr bool is_duration_v&lt;
        std::chrono::duration&lt;Rep, Period&gt;&gt; = true;
}

template&lt;class To, class Clock, class FromDuration,
         class = std::enable_if_t&lt;detail::is_duration_v&lt;To&gt; &amp;&amp;
                !std::chrono::treat_as_floating_point_v&lt;typename To::rep&gt;&gt;&gt;
constexpr std::chrono::time_point&lt;Clock, To&gt; round(
    const std::chrono::time_point&lt;Clock, FromDuration&gt;&amp; tp)
{
    return std::chrono::time_point&lt;Clock, To&gt;{
        std::chrono::round&lt;To&gt;(tp.time_since_epoch())};
}
}}

===示例===
{{include|cpp/chrono/time_point/round example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/time_point/dsc time_point_cast}}
{{dsc inc|cpp/chrono/time_point/dsc ceil}}
{{dsc inc|cpp/chrono/time_point/dsc floor}}
{{dsc inc|cpp/chrono/duration/dsc round}}
{{dsc inc|cpp/numeric/math/dsc round}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}