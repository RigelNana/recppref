{{cpp/chrono/title|operator+|operator- {{small|(std::chrono::year_month_weekday_last)}}}}
{{cpp/chrono/year_month_weekday_last/navbar}}
{{dcl begin}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last 
    operator+( const std::chrono::year_month_weekday_last&amp; ymwdl,
               const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last 
    operator+( const std::chrono::months&amp; dm, 
               const std::chrono::year_month_weekday_last&amp; ymwdl ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last
    operator+( const std::chrono::year_month_weekday_last&amp; ymwdl, 
               const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last
    operator+( const std::chrono::years&amp; dy, 
               const std::chrono::year_month_weekday_last&amp; ymwdl ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last
    operator-( const std::chrono::year_month_weekday_last&amp; ymwdl, 
               const std::chrono::months&amp; dm ) noexcept;
}}
{{dcl|since=c++20|
constexpr std::chrono::year_month_weekday_last 
    operator-( const std::chrono::year_month_weekday_last&amp; ymwdl,
               const std::chrono::years&amp; dy ) noexcept;
}}
{{dcl end}}

@1,2@ 将 {{c|dm.count()}} 月加到 {{c|ymwdl}} 所表示的日期。结果与 {{c|std::chrono::year_month(ymwdl.year(), ymwdl.month()) + dm}} 拥有相同的 {{rlpf|accessors|year}} 和 {{rlpf|accessors|month}}，并与 {{c|ymwdl}} 拥有相同的 {{rlpf|accessors|weekday}}。
@3,4@ 将 {{c|dy.count()}} 年加到 {{c|ymwdl}} 所表示的日期。结果等价于 {{c|std::chrono::year_month_weekday_last(ymwdl.year() + dy, ymwdl.month(), ymwd.weekday_last())}}。
@5@ 从 {{c|ymwdl}} 所表示的日期减去 {{c|dm.count()}} 月。等价于 {{c|ymwdl+ -dm}}。
@6@ 从 {{c|ymwdl}} 所表示的日期减去 {{c|dy.count()}} 年。等价于 {{c|ymwdl + -dy}}。

对于能转换到 {{lc|std::chrono::years}} 与 {{lc|std::chrono::months}} 两者的时长，若调用本会有歧义则偏好 {{tt|years}} 的重载 {{v|3,4,6}}。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;chrono&gt;
using namespace std::chrono;

int main()
{
    constexpr auto ymwdl1{Tuesday[last]/11/2021};
    auto ymwdl2 = ymwdl1;
    ymwdl2 = std::chrono::months(12) + ymwdl2;
    ymwdl2 = ymwdl2 - std::chrono::years(1);
    assert(ymwdl1 == ymwdl2);
}
}}

{{langlinks|en|ja|ru}}