{{cpp/title|tm}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|
struct tm;
}}

保有拆分到各组分的日历日期和时间的结构体。

===成员对象===
{{dsc begin}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_sec|秒数 &amp;ndash; {{rev inl|until=c++11|{{closed range|0|61}}}}{{rev inl|since=c++11|{{closed range|0|60}}}}&lt;ref name="leapsecond" group="注"&gt;范围允许正闰秒。不允许同一分钟内有两个闰秒（C89 中错误地引入范围 {{closed range|0|61}}，而在 C99 中更正）&lt;/ref&gt;}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_min|分钟数 &amp;ndash; {{closed range|0|59}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_hour|小时数 &amp;ndash; {{closed range|0|23}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_mday|日 &amp;ndash; {{closed range|1|31}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_mon|月份 &amp;ndash; {{closed range|0|11}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_year|从 1900 年经过的年数}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_wday|星期(从星期日开始计) &amp;ndash; {{closed range|0|6}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_yday|从 1 月 1 日始经过的天数 &amp;ndash; {{closed range|0|365}}}}
{{dsc mem obj|nolink=true|{{dsc small|int}} tm_isdst|夏令时标志。值若夏令时有效则为正，若无效则为零，若无可用信息则为负}}
{{dsc end}}

&lt;references group="注" /&gt;

======注解======
BSD，GNU 和 musl C 库都支持两个额外的成员，它们由 [https://pubs.opengroup.org/onlinepubs/9799919799/basedefs/time.h.html POSIX.1-2024] 所标准化。

{{dsc begin}}
{{dsc mem obj|nolink=true|{{dsc small|long}} tm_gmtoff|UTC 向东调整秒数}}
{{dsc mem obj|nolink=true|{{dsc small|const char*}} tm_zone|简写时区}}
{{dsc end}}

===示例===
{{example
|展示日历时间。
|code=
#include &lt;ctime&gt;
#include &lt;iostream&gt;

int main()
{
    std::tm tm{};
    tm.tm_year = 2022 - 1900;
    tm.tm_mday = 1;
    std::mktime(&amp;tm);

    std::cout &lt;&lt; std::asctime(&amp;tm); // 注意隐含的尾部 '\n'
}
|p=true
|output=
Sat Jan  1 00:00:00 2022
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc localtime}}
{{dsc inc|cpp/chrono/c/dsc gmtime}}
{{dsc see c|c/chrono/tm}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}