{{cpp/title|timespec_get}}
{{cpp/chrono/c/navbar}}
{{dcl begin}}
{{dcl header|ctime}}
{{dcl|num=1|since=c++17|
int timespec_get( std::timespec* ts, int base );
}}
{{dcl|num=2|since=c++17|
#define TIME_UTC /* 由实现定义 */
}}
{{dcl end}}

@1@ 修改 {{c|ts}} 所指向的 {{lc|std::timespec}} 对象，使其保有时间基底 {{c|base}} 中的当前日历时间。
@2@ 展开成适合用作 {{tt|std::timespec_get}} 的 {{c|base}} 实参的值。

实现可提供其他以 {{tt|TIME_}} 起始的宏常量，以指示另外的时间基底。

若 {{c|base}} 为 {{tt|TIME_UTC}}，则
* 设 {{c|ts-&gt;tv_sec}} 为从实现定义的纪元开始的秒数，截断到整数值
* 设 {{c|ts-&gt;tv_nsec}} 成员为纳秒的整数，取整到系统时钟的分辨率

===参数===
{{par begin}}
{{par | ts |指向 {{lc|std::timespec}} 类型对象的指针}}
{{par | base |{{tt|TIME_UTC}} 或另一指示时间基底的非零整数值}}
{{par end}}

===返回值===
若成功则为 {{c|base}} 的值，否则为零。

===注解===
POSIX 函数 [https://pubs.opengroup.org/onlinepubs/9699919799/functions/clock_getres.html {{tt|clock_gettime(CLOCK_REALTIME, ts)}}] 亦可用于将从纪元开始的时间植入 {{tt|std::timespec}}。

===示例===
{{example
|code=
#include &lt;ctime&gt;
#include &lt;iostream&gt;

int main()
{
    std::timespec ts;
    std::timespec_get(&amp;ts, TIME_UTC);
    char buf[100];
    std::strftime(buf, sizeof buf, "%D %T", std::gmtime(&amp;ts.tv_sec));
    std::cout &lt;&lt; "当前时间: " &lt;&lt; buf &lt;&lt; '.' &lt;&lt; ts.tv_nsec &lt;&lt; " UTC\n";
}
|p=true
|output=
当前时间: 06/24/16 20:07:42.949494132 UTC
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc timespec}}
{{dsc inc|cpp/chrono/c/dsc time}}
{{dsc see c|c/chrono/timespec_get}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}