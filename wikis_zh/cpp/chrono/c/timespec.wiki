{{cpp/title|timespec}}
{{cpp/chrono/c/navbar}}
{{ddcl|header=ctime|since=c++17|
struct timespec;
}}
保有时长的结构体，拆分成秒和纳秒。

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|说明}}
{{dsc mem obj|nolink=true|{{dsc small|{{lc|std::time_t}}}} {{tt|tv_sec}}|2=整秒数，值 &amp;gt;= {{c|0}}}}
{{dsc mem obj|nolink=true|{{dsc small|{{c/core|long}}}} {{tt|tv_nsec}}|纳秒数，范围 {{closed range|0|999999999}} 中的值}}
{{dsc end}}

{{tt|tv_sec}} 与 {{tt|tv_nsec}} 的声明顺序未指定。实现可以向 {{tt|timespec}} 添加其他数据成员。

===注解===
在一些平台上 {{tt|tv_nsec}} 的类型为 {{c/core|long long}}，这当前在 C++ 中不符合标准，但 C 从 C23 起允许。

===示例===
{{example
|code=
#include &lt;ctime&gt;
#include &lt;iostream&gt;

int main()
{
    std::timespec ts;
    std::timespec_get(&amp;ts, TIME_UTC);
    char buff[0x80];
    std::strftime(buff, sizeof buff, "%D %T", std::gmtime(&amp;ts.tv_sec));

//  auto [sec, nsec] = ts; // UB: 因为未指明声明顺序和数据成员列表，故不能使用结构化绑定

    std::cout &lt;&lt; "当前时间: " &lt;&lt; buff &lt;&lt; " (UTC)\n"
              &lt;&lt; "原始 timespec.tv_sec: " &lt;&lt; ts.tv_sec &lt;&lt; '\n'
              &lt;&lt; "原始 timespec.tv_nsec: " &lt;&lt; ts.tv_nsec &lt;&lt; '\n';
}
|p=true
|output=
当前时间: 04/06/23 12:03:31 (UTC)
原始 timespec.tv_sec: 1680782611
原始 timespec.tv_nsec: 678437213
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/chrono/c/dsc timespec_get}}
{{dsc inc|cpp/chrono/c/dsc tm}}
{{dsc see c|c/chrono/timespec}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}