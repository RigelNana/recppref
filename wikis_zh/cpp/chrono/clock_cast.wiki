{{cpp/chrono/title|clock_cast}}
{{cpp/chrono/navbar}}
{{ddcl|header = chrono|since=c++20|1=
template&lt; class Dest, class Source, class Duration &gt;
auto clock_cast( const std::chrono::time_point&lt;Source, Duration&gt;&amp; t );
}}

转换时钟 {{tt|Source}} 的时间点 {{tt|t}} 为时钟 {{tt|Dest}} 的等价时间点，必要时以 {{lc|std::chrono::system_clock}} 和/或 {{lc|std::chrono::utc_clock}} 作为中介。

* 若表达式 {{c|std::chrono::clock_time_conversion&lt;Dest, Source&gt;{}(t)}} 为良构，则返回该表达式的结果。
* 否则，若下列二个表达式至少有一个为良构，则
:* 若二个表达式均为良构，则转换有歧义，而程序非良构。
:* 否则，二个表达式恰有一个为良构；返回该表达式的结果。

:@1@{{c|std::chrono::clock_time_conversion&lt;Dest, std::chrono::system_clock&gt;{}(
    std::chrono::clock_time_conversion&lt;std::chrono::system_clock, Source&gt;{}(t))}}
:@2@{{c|std::chrono::clock_time_conversion&lt;Dest, std::chrono::utc_clock&gt;{}(
    std::chrono::clock_time_conversion&lt;std::chrono::utc_clock, Source&gt;{}(t))}}

* 否则，若下列二个表达式至少有一个为良构，则
:* 若两个表达式均为良构，则转换有歧义，而程序非良构。
:* 否则，二个表达式恰有一个为良构；返回该表达式的结果。
:@1@{{c|std::chrono::clock_time_conversion&lt;Dest, std::chrono::utc_clock&gt;{}(
    std::chrono::clock_time_conversion&lt;std::chrono::utc_clock, std::chrono::system_clock&gt;{}(
        std::chrono::clock_time_conversion&lt;std::chrono::system_clock, Source&gt;{}(t)))}}
:@2@{{c|std::chrono::clock_time_conversion&lt;Dest, std::chrono::system_clock&gt;{}(
    std::chrono::clock_time_conversion&lt;std::chrono::system_clock, std::chrono::utc_clock&gt;{}(
        std::chrono::clock_time_conversion&lt;std::chrono::utc_clock, Source&gt;{}(t)))}}

* 否则，此函数不参与重载决议。

=== 返回值 ===
上面确定的转换结果。

=== 示例 ===
{{example}}

=== 参阅 ===
{{dsc begin}}
{{dsc inc | cpp/chrono/dsc clock_time_conversion}}
{{dsc end}}

{{langlinks|en|ja|ru}}