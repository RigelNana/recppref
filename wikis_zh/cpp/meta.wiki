{{title|元编程库 {{mark since c++11}}}}
{{cpp/meta/navbar}}

C++ 提供元编程设施，诸如类型特征、编译时有理数算术，以及编译时整数序列。

===定义===
以下类型统称为''可引用类型''：
* {{ls|cpp/language/type#对象类型}}
* 没有{{spar sep|cv限定符}}和{{spar sep|引用限定符}}的{{ls|cpp/language/function#函数类型}}
* [[cpp/language/reference|引用类型]]

对于任何可引用类型 {{tt|T}}，都可以创建到它的引用&lt;ref&gt;引用类型可以通过{{ls|cpp/language/reference#引用折叠}}实现&lt;/ref&gt;。

&lt;references/&gt;

===类型特征===
类型特征定义基于模板的编译时接口，用以查询类型的属性。

试图特化在标头 {{header|type_traits}} 定义且在本页列出的模板会导致未定义行为，但可以按描述要求特化 {{lc|std::common_type}} {{rev inl|since=c++20|和 {{ltt|cpp/types/common_reference|std::basic_common_reference}}}}。

除非另有说明，标头 {{header|type_traits}} 定义的模板都可以用不完整类型实例化，尽管以不完整类型实例化标准库模板通常是禁止的。

====基类====
大部分非变换类型特征需要无歧义地公开继承 {{lc|std::integral_constant}}，以满足{{named req|UnaryTypeTrait}}或{{named req|BinaryTypeTrait}}。

{{dsc begin}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc integral_constant}}
{{dsc end}}

标准提供 {{lc|std::integral_constant}} 对类型 {{c/core|bool}} 的两个特化： 
{{dsc begin}}
{{dsc header|type_traits}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|true_type}}|{{c/core|std::integral_constant&lt;bool, true&gt;}}}}
{{dsc|{{tt|false_type}}|{{c/core|std::integral_constant&lt;bool, false&gt;}}}}
{{dsc end}}

====一元类型特征====
一元类型特征可以用于在编译时查询类型的布尔属性。

所有这些类型特征都满足{{named req|UnaryTypeTrait}}，每个类型特征的基特征都是 {{lc|std::true_type}} 和 {{lc|std::false_type}} 之一，取决于是否符合对应的条件。

{{dsc begin}}
{{dsc h2|基础类型类别}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc is_void}}
{{dsc inc|cpp/types/dsc is_null_pointer}}
{{dsc inc|cpp/types/dsc is_integral}}
{{dsc inc|cpp/types/dsc is_floating_point}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_enum}}
{{dsc inc|cpp/types/dsc is_union}}
{{dsc inc|cpp/types/dsc is_class}}
{{dsc inc|cpp/types/dsc is_function}}
{{dsc inc|cpp/types/dsc is_pointer}}
{{dsc inc|cpp/types/dsc is_lvalue_reference}}
{{dsc inc|cpp/types/dsc is_rvalue_reference}}
{{dsc inc|cpp/types/dsc is_member_object_pointer}}
{{dsc inc|cpp/types/dsc is_member_function_pointer}}

{{dsc h2|复合类型类别}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc is_fundamental}}
{{dsc inc|cpp/types/dsc is_arithmetic}}
{{dsc inc|cpp/types/dsc is_scalar}}
{{dsc inc|cpp/types/dsc is_object}}
{{dsc inc|cpp/types/dsc is_compound}}
{{dsc inc|cpp/types/dsc is_reference}}
{{dsc inc|cpp/types/dsc is_member_pointer}}

{{dsc h2|类型属性}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc is_const}}
{{dsc inc|cpp/types/dsc is_volatile}}
{{dsc inc|cpp/types/dsc is_trivial}}
{{dsc inc|cpp/types/dsc is_trivially_copyable}}
{{dsc inc|cpp/types/dsc is_standard_layout}}
{{dsc inc|cpp/types/dsc is_pod}}
{{dsc inc|cpp/types/dsc is_literal_type}}
{{dsc inc|cpp/types/dsc has_unique_object_representations}}
{{dsc inc|cpp/types/dsc is_empty}}
{{dsc inc|cpp/types/dsc is_polymorphic}}
{{dsc inc|cpp/types/dsc is_abstract}}
{{dsc inc|cpp/types/dsc is_final}}
{{dsc inc|cpp/types/dsc is_aggregate}}
{{dsc inc|cpp/types/dsc is_implicit_lifetime}}
{{dsc inc|cpp/types/dsc is_signed}}
{{dsc inc|cpp/types/dsc is_unsigned}}
{{dsc inc|cpp/types/dsc is_bounded_array}}
{{dsc inc|cpp/types/dsc is_unbounded_array}}
{{dsc inc|cpp/types/dsc is_scoped_enum}}
{{dsc end}}

{{dsc begin}}
{{dsc h2|受支持操作}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc is_constructible}}
{{dsc inc|cpp/types/dsc is_default_constructible}}
{{dsc inc|cpp/types/dsc is_copy_constructible}}
{{dsc inc|cpp/types/dsc is_move_constructible}}
{{dsc inc|cpp/types/dsc is_assignable}}
{{dsc inc|cpp/types/dsc is_copy_assignable}}
{{dsc inc|cpp/types/dsc is_move_assignable}}
{{dsc inc|cpp/types/dsc is_destructible}}
{{dsc inc|cpp/types/dsc has_virtual_destructor}}
{{dsc inc|cpp/types/dsc is_swappable}}
{{dsc inc|cpp/types/dsc reference_constructs_from_temporary}}
{{dsc inc|cpp/types/dsc reference_converts_from_temporary}}
{{dsc end}}

====属性查询====
属性查询特征可以用于在编译时查询类型的整数属性。

所有这些类型特征都满足{{named req|UnaryTypeTrait}}，每个类型特征的基特征都是 {{c/core|std::integral_constant&lt;std::size_t, Value&gt;}}，其中 {{tt|Value}} 是对应属性的查询结果。

{{dsc begin}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc alignment_of}}
{{dsc inc|cpp/types/dsc rank}}
{{dsc inc|cpp/types/dsc extent}}
{{dsc end}}

====类型关系====
类型关系特征可以用于在编译时查询类型之间的关系。

所有这些类型特征都满足{{named req|BinaryTypeTrait}}，每个类型特征的基特征都是 {{lc|std::true_type}} 和 {{lc|std::false_type}} 之一，取决于是否符合对应的条件。

{{dsc begin}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc is_same}}
{{dsc inc|cpp/types/dsc is_base_of}}
{{dsc inc|cpp/types/dsc is_virtual_base_of}}
{{dsc inc|cpp/types/dsc is_convertible}}
{{dsc inc|cpp/types/dsc is_layout_compatible}}
{{dsc inc|cpp/types/dsc is_pointer_interconvertible_base_of}}
{{dsc inc|cpp/types/dsc is_invocable}}
{{dsc end}}

====类型变换====
类型变换特征按照预定义对着将一个类型变换到另一个。 

所有这些类型特征都满足{{named req|TransformationTrait}}。

{{dsc begin}}
{{dsc h2|常性/易变性说明符}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc remove_cv}}
{{dsc inc|cpp/types/dsc add_cv}}

{{dsc h2|引用}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc remove_reference}}
{{dsc inc|cpp/types/dsc add_reference}}

{{dsc h2|符号修饰符}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc make_signed}}
{{dsc inc|cpp/types/dsc make_unsigned}}

{{dsc h2|数组}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc remove_extent}}
{{dsc inc|cpp/types/dsc remove_all_extents}}

{{dsc h2|指针}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc remove_pointer}}
{{dsc inc|cpp/types/dsc add_pointer}}

{{dsc h2|其他变换}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc aligned_storage}}
{{dsc inc|cpp/types/dsc aligned_union}}
{{dsc inc|cpp/types/dsc decay}}
{{dsc inc|cpp/types/dsc remove_cvref}}
{{dsc inc|cpp/types/dsc enable_if}}
{{dsc inc|cpp/types/dsc conditional}}
{{dsc inc|cpp/types/dsc common_type}}
{{dsc inc|cpp/types/dsc common_reference}}
{{dsc inc|cpp/types/dsc underlying_type}}
{{dsc inc|cpp/types/dsc result_of}}
{{dsc inc|cpp/types/dsc void_t}}
{{dsc inc|cpp/types/dsc type_identity}}
{{dsc end}}

{{anchor|逻辑运算}}
====逻辑运算 {{mark since c++17}}====
逻辑运算符特征将逻辑运算符应用到其他类型特征上。
{{dsc begin}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc conjunction}}
{{dsc inc|cpp/types/dsc disjunction}}
{{dsc inc|cpp/types/dsc negation}}
{{dsc end}}

{{anchor|成员关系}}
====成员关系 {{mark since c++17}}====
{{dsc begin}}
{{dsc header|type_traits}}
{{dsc inc|cpp/types/dsc is_pointer_interconvertible_with_class}}
{{dsc inc|cpp/types/dsc is_corresponding_member}}
{{dsc end}}

===[[cpp/numeric/ratio|编译时有理数算术]]===
标头 {{header|ratio}} 提供[[cpp/numeric/ratio|操作和存储编译时比值的类型和函数]]。

{{anchor|编译时整数序列}}
===编译时整数序列 {{mark since c++14}}===
{{dsc begin}}
{{dsc header|utility}}
{{dsc inc|cpp/utility/dsc integer_sequence}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}