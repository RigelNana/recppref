{{cpp/text/text_encoding/title|aliases_view}}
{{cpp/text/text_encoding/navbar}}
{{dcl begin}}
{{ddcl|since=c++26|1=
class text_encoding::aliases_view
    : public ranges::view_interface&lt;text_encoding::aliases_view&gt;
}}

嵌套类 {{tt|text_encoding::aliases_view}} 是字符编码别名上的 {{lconcept|view}}。

令 {{c|r}} 代表 {{tt|aliases_view}} 的实例。对于非空范围 {{c|r}}：
* {{c|r.front()}} 是注册字符编码的首选名称，
* {{c|r}} 包含注册字符编码的各个别名，未指明别名之间的次序，
* {{c|r}} 中的每个元素都是以[[cpp/language/charset#代码单元与字面量编码|字面量字符编码]]的非 null 且非空的空终止字节字符串，而且仅比较[[cpp/language/charset#基本字符集|基本字符集]]中的字符，并且
* {{c|r}} 以 {{lc|std::strcmp}} 进行比较时不包含重复值。

以下为 {{tt|text_encoding::aliases_view}} 具有的类型属性：
* 它实现 {{lconcept|copyable}}、{{lconcept|random_access_range}} 和 {{lconcept|borrowed_range}}。
* 它不必满足 {{lconcept|common_range}} 和 {{lconcept|default_initializable}}。
* {{c/core|ranges::range_value_t&lt;text_encoding​::​aliases_view&gt;}} 和 {{c/core|ranges::range_reference_t&lt;text_encoding::aliases_view&gt;}} 都代表 {{c/core|const char*}}。
* {{c/core|ranges::iterator_t&lt;text_encoding::aliases_view&gt;}} 是{{named req|ConstexprIterator}}。

===成员函数===
{{dsc begin}}
{{dsc mem fun|begin|nolink=true|返回指向别名视图开头的由实现定义类型的迭代器}}
{{dsc mem fun|end|nolink=true|返回别名视图的由实现定义类型的哨位}}
{{cpp/ranges/view_interface/inherit|embedded=yes|size=invalid|back=invalid|data=invalid}}
{{dsc end}}

{{anchor|begin}}
{{member|{{small|std::text_encoding::aliases_view::}}begin|
{{ddcl|since=c++26|
constexpr /* 由实现定义 */ begin() const;
}}

返回指向 {{c|r}} 开头的由实现定义类型的迭代器。
}}

{{anchor|end}}
{{member|{{small|std::text_encoding::aliases_view::}}end|
{{ddcl|since=c++26|
constexpr /* 由实现定义 */ end() const;
}}

返回 {{c|r}} 的由实现定义类型的哨位。
}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/text/text_encoding/dsc aliases}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}