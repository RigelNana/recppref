{{cpp/text/text_encoding/title|environment}}
{{cpp/text/text_encoding/navbar}}
{{ddcl|since=c++26|
static text_encoding environment();
}}

构造新的表示环境编码的 {{tt|text_encoding}} 对象，它代表执行环境的由实现定义的字符编码方案。运行时的执行环境是程序运行于其中的[[cpp/language/main_function|环境]]。

执行环境中的环境编码与特定于本地环境的[[cpp/language/charset#执行字符集|执行字符集]]的编码相互独立。换言之，环境编码保持与本地环境无关，就是说，{{c|environment()}} 返回的值不会受到会修改环境的函数（如 {{lc|std::setlocale}} 和 POSIX 函数 [https://pubs.opengroup.org/onlinepubs/9699919799/functions/setenv.html {{tt|setenv()}}]）的影响。

如果 {{c|CHAR_BIT}} 不为 {{c|8}}，那么本函数被弃置。

===参数===
（无）

===返回值===
保有对环境字符编码的表示的对象。

===注解===
环境编码可能与全局的本地环境关联编码不同，后者可通过 {{c|std::locale().encoding()}} 访问。

在 Windows 平台上，环境编码可用 [https://learn.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-getacp {{tt|GetACP()}}] 来确定然后映射为 MIBenum 值。

在 POSIX 平台上，环境编码与 POSIX 本地环境 {{c|""}} 关联，它可以实现为，若在程序启动时设置[[cpp/locale/locale/global|全局 C++ 本地环境]]为 {{c|"C"}} 之前就设置环境本地环境 {{c|""}}，则它对应于 [https://pubs.opengroup.org/onlinepubs/9699919799/functions/nl_langinfo.html {{tt|nl_langinfo_l()}}] 的某个值。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/locale/dsc encoding}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}