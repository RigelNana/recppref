{{cpp/text/text_encoding/title|''comp-name''}}
{{cpp/text/text_encoding/navbar}}
{{ddcl|since=c++26|notes={{mark expos}}|
static constexpr bool /*comp-name*/( std::string_view a, std::string_view b );
}}

根据 [https://www.unicode.org/reports/tr22/tr22-8.html#Charset_Alias_Matching Unicode 字符集别名匹配]规则比较两个以普通字面量编码的字符串 {{c|a}} 和 {{c|b}}。

进行以下步骤后，两个字符串从左向右比较相等时，认为它们相等：
* 移除所有非字母数组字符，
* 将所有字母转为相同大小写，以及
* 移除任何没有紧跟数值前缀的 {{c|'0'}} 字符序列。数值前缀由一个非零数字（{{c|'1'}} 到 {{c|'9'}}）可选跟着一个或多个非字母数字字符构成。

以下为示例：
{{source|1=
static_assert(/*comp-name*/("UTF-8", "utf8") == true);
static_assert(/*comp-name*/("u.t.f-008", "utf8") == true);
static_assert(/*comp-name*/("ISO-8859-1", "iso88591") == true);
static_assert(/*comp-name*/("ut8", "utf8") == false);
static_assert(/*comp-name*/("utf-80", "utf8") == false);
}}

===参数===
{{par begin}}
{{par|a, b|要比较的字符串}}
{{par end}}

===返回值===
当两个字符串按上述比较相等时返回 {{c|true}}；否则返回 {{c|false}}。

{{langlinks|de|en|es|ja|ru}}