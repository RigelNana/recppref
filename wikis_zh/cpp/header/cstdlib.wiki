{{cpp/header/title|cstdlib}}
{{cpp/header/navbar}}
{{cpp/header/c}}

此头文件提供杂项工具。此处所定义的各个符号为多个标准库组件所用。

{{dsc begin}}
{{dsc h1|类型}}
{{dsc inc|cpp/numeric/math/dsc div_t}}
{{dsc inc|cpp/numeric/math/dsc ldiv_t}}
{{dsc inc|cpp/numeric/math/dsc lldiv_t}}
{{dsc inc|cpp/types/dsc size_t}}

{{dsc h1|宏常量}}
{{dsc inc|cpp/utility/program/dsc EXIT_status}}
{{dsc inc|cpp/numeric/random/dsc MB_CUR_MAX}}
{{dsc inc|cpp/types/dsc NULL}}
{{dsc inc|cpp/numeric/random/dsc RAND_MAX}}
{{dsc h1|函数}}
{{dsc h2|进程控制}}
{{dsc inc|cpp/utility/program/dsc abort}}
{{dsc inc|cpp/utility/program/dsc exit}}
{{dsc inc|cpp/utility/program/dsc quick_exit}}
{{dsc inc|cpp/utility/program/dsc _Exit}}
{{dsc inc|cpp/utility/program/dsc atexit}}
{{dsc inc|cpp/utility/program/dsc at_quick_exit}}
{{dsc inc|cpp/utility/program/dsc system}}
{{dsc inc|cpp/utility/program/dsc getenv}}

{{dsc h2|内存管理}}
{{dsc inc|cpp/memory/c/dsc malloc}}
{{dsc inc|cpp/memory/c/dsc aligned_alloc}}
{{dsc inc|cpp/memory/c/dsc calloc}}
{{dsc inc|cpp/memory/c/dsc realloc}}
{{dsc inc|cpp/memory/c/dsc free}}

{{dsc h2|数值字符串转换}}
{{dsc inc|cpp/string/byte/dsc atof}}
{{dsc inc|cpp/string/byte/dsc atoi}}
{{dsc inc|cpp/string/byte/dsc strtol}}
{{dsc inc|cpp/string/byte/dsc strtoul}}
{{dsc inc|cpp/string/byte/dsc strtof}}

{{dsc h2|宽字符串操纵}}
{{dsc inc|cpp/string/multibyte/dsc mblen}}
{{dsc inc|cpp/string/multibyte/dsc mbtowc}}
{{dsc inc|cpp/string/multibyte/dsc wctomb}}
{{dsc inc|cpp/string/multibyte/dsc mbstowcs}}
{{dsc inc|cpp/string/multibyte/dsc wcstombs}}

{{dsc h2|杂项算法与数学}}
{{dsc inc|cpp/numeric/random/dsc rand}}
{{dsc inc|cpp/numeric/random/dsc srand}}
{{dsc inc|cpp/algorithm/dsc qsort}}
{{dsc inc|cpp/algorithm/dsc bsearch}}
{{dsc inc|cpp/numeric/math/dsc abs}}
{{dsc inc|cpp/numeric/math/dsc div}}
{{dsc end}}

===概要===
{{source|1=
namespace std {
  using size_t =  /* 见描述 */; // 独立
  using div_t =   /* 见描述 */; // 独立
  using ldiv_t =  /* 见描述 */; // 独立
  using lldiv_t = /* 见描述 */; // 独立
}

#define NULL         /* 见描述 */ // 独立
#define EXIT_FAILURE /* 见描述 */ // 独立
#define EXIT_SUCCESS /* 见描述 */ // 独立
#define RAND_MAX     /* 见描述 */
#define MB_CUR_MAX   /* 见描述 */

namespace std {
  // 仅用于阐释的函数类型别名
  extern "C" using /* C atexit 处理函数 */ = void();                 // 仅用于阐述
  extern "C++" using /* atexit 处理函数 */ = void();                 // 仅用于阐述
  extern "C" using /* C 比较谓词 */ = int(const void*, const void*); // 仅用于阐述
  extern "C++" using /* 比较谓词 */ = int(const void*, const void*); // 仅用于阐述

  // 启动与终止
  [[noreturn]] void abort() noexcept;                       // 独立
  int atexit(/* C atexit 处理函数 */* func) noexcept;        // 独立
  int atexit(/* atexit 处理函数 */* func) noexcept;          // 独立
  int at_quick_exit(/* C atexit 处理函数 */* func) noexcept; // 独立
  int at_quick_exit(/* atexit 处理函数 */* func) noexcept;   // 独立
  [[noreturn]] void exit(int status);                       // 独立
  [[noreturn]] void _Exit(int status) noexcept;             // 独立
  [[noreturn]] void quick_exit(int status) noexcept;        // 独立

  char* getenv(const char* name);
  int system(const char* string);

  // C 库内存分配
  void* aligned_alloc(size_t alignment, size_t size);
  void* calloc(size_t nmemb, size_t size);
  void free(void* ptr);
  void* malloc(size_t size);
  void* realloc(void* ptr, size_t size);

  double atof(const char* nptr);
  int atoi(const char* nptr);
  long int atol(const char* nptr);
  long long int atoll(const char* nptr);
  double strtod(const char* nptr, char** endptr);
  float strtof(const char* nptr, char** endptr);
  long double strtold(const char* nptr, char** endptr);
  long int strtol(const char* nptr, char** endptr, int base);
  long long int strtoll(const char* nptr, char** endptr, int base);
  unsigned long int strtoul(const char* nptr, char** endptr, int base);
  unsigned long long int strtoull(const char* nptr, char** endptr, int base);

  // 多字节/宽字符串及字符转换函数
  int mblen(const char* s, size_t n);
  int mbtowc(wchar_t* pwc, const char* s, size_t n);
  int wctomb(char* s, wchar_t wchar);
  size_t mbstowcs(wchar_t* pwcs, const char* s, size_t n);
  size_t wcstombs(char* s, const wchar_t* pwcs, size_t n);

  // C 标准库算法
  void* bsearch(const void* key, const void* base,  // 独立
                size_t nmemb, size_t size, /* C 比较谓词 */* compar);
  void* bsearch(const void* key, const void* base,  // 独立
                size_t nmemb, size_t size, /* 比较谓词 */* compar);
  void qsort(void* base, size_t nmemb, size_t size, // 独立
             /* C 比较谓词 */* compar);
  void qsort(void* base, size_t nmemb, size_t size, // 独立
             /* 比较谓词 */* compar);

  // 低质量随机数生成
  int rand();
  void srand(unsigned int seed);

  // 绝对值
  int abs(int j);                       // 独立
  long int abs(long int j);             // 独立
  long long int abs(long long int j);   // 独立
  /* 浮点数类型 */ abs(/* 浮点数类型 */ j); // 独立或被删除

  long int labs(long int j);            // 独立
  long long int llabs(long long int j); // 独立

  div_t div(int numer, int denom);                         // 独立
  ldiv_t div(long int numer, long int denom);              // 独立
  lldiv_t div(long long int numer, long long int denom);   // 独立
  ldiv_t ldiv(long int numer, long int denom);             // 独立
  lldiv_t lldiv(long long int numer, long long int denom); // 独立
}
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=286|std=C++98|before={{tt|&lt;cstdlib&gt;}} 没有提供 {{tt|size_t}} 的定义|after=已提供}}
{{dr list end}}

===参阅===
* [[cpp/utility/program|程序支持工具]]
* [[cpp/numeric/random|伪随机数生成]]
* [[cpp/numeric/math|常用数学函数]]
* [[cpp/memory/c|C 内存管理库]]
* [[cpp/string/byte|空终止字节字符串]]
* [[cpp/string/multibyte|空终止多字节字符串]]
* [[cpp/algorithm|算法库]]

{{langlinks|en|es|ja}}