{{cpp/header/title|cerrno}}
{{cpp/header/navbar}}
{{cpp/header/c}}

此标头是[[cpp/error|错误处理]]库的一部分。

===宏===
{{dsc begin}}
{{dsc inc|cpp/error/dsc errno}}
{{dsc macro const|E2BIG           |nolink=true|notes={{mark c++11}}|参数列表过长}}
{{dsc macro const|EACCES          |nolink=true|notes={{mark c++11}}|禁止访问}}
{{dsc macro const|EADDRINUSE      |nolink=true|notes={{mark c++11}}|地址在使用中}}
{{dsc macro const|EADDRNOTAVAIL   |nolink=true|notes={{mark c++11}}|地址不可用}}
{{dsc macro const|EAFNOSUPPORT    |nolink=true|notes={{mark c++11}}|不支持的地址族}}
{{dsc macro const|EAGAIN          |nolink=true|notes={{mark c++11}}|资源不可用，须重试}}
{{dsc macro const|EALREADY        |nolink=true|notes={{mark c++11}}|连接已在进行}}
{{dsc macro const|EBADF           |nolink=true|notes={{mark c++11}}|无效文件描述符}}
{{dsc macro const|EBADMSG         |nolink=true|notes={{mark c++11}}|无效消息}}
{{dsc macro const|EBUSY           |nolink=true|notes={{mark c++11}}|设备或资源忙}}
{{dsc macro const|ECANCELED       |nolink=true|notes={{mark c++11}}|操作已取消}}
{{dsc macro const|ECHILD          |nolink=true|notes={{mark c++11}}|无子进程}}
{{dsc macro const|ECONNABORTED    |nolink=true|notes={{mark c++11}}|连接被打断}}
{{dsc macro const|ECONNREFUSED    |nolink=true|notes={{mark c++11}}|连接被拒绝}}
{{dsc macro const|ECONNRESET      |nolink=true|notes={{mark c++11}}|连接被重置}}
{{dsc macro const|EDEADLK         |nolink=true|notes={{mark c++11}}|可能发生资源死锁}}
{{dsc macro const|EDESTADDRREQ    |nolink=true|notes={{mark c++11}}|要求目标地址}}
{{dsc macro const|EDOM            |nolink=true                     |数学参数在函数定义域外}}
{{dsc macro const|EEXIST          |nolink=true|notes={{mark c++11}}|文件已存在}}
{{dsc macro const|EFAULT          |nolink=true|notes={{mark c++11}}|无效地址}}
{{dsc macro const|EFBIG           |nolink=true|notes={{mark c++11}}|文件过大}}
{{dsc macro const|EHOSTUNREACH    |nolink=true|notes={{mark c++11}}|主机不可抵达}}
{{dsc macro const|EIDRM           |nolink=true|notes={{mark c++11}}|标识符被移除}}
{{dsc macro const|EILSEQ          |nolink=true                     |非法字节序列}}
{{dsc macro const|EINPROGRESS     |nolink=true|notes={{mark c++11}}|操作已在进行}}
{{dsc macro const|EINTR           |nolink=true|notes={{mark c++11}}|函数被中断}}
{{dsc macro const|EINVAL          |nolink=true|notes={{mark c++11}}|无效参数}}
{{dsc macro const|EIO             |nolink=true|notes={{mark c++11}}|I/O 错误}}
{{dsc macro const|EISCONN         |nolink=true|notes={{mark c++11}}|套接字已连接}}
{{dsc macro const|EISDIR          |nolink=true|notes={{mark c++11}}|此项目是目录}}
{{dsc macro const|ELOOP           |nolink=true|notes={{mark c++11}}|符号链接级别过多}}
{{dsc macro const|EMFILE          |nolink=true|notes={{mark c++11}}|文件描述符值过大}}
{{dsc macro const|EMLINK          |nolink=true|notes={{mark c++11}}|链接过多}}
{{dsc macro const|EMSGSIZE        |nolink=true|notes={{mark c++11}}|消息过大}}
{{dsc macro const|ENAMETOOLONG    |nolink=true|notes={{mark c++11}}|文件名过长}}
{{dsc macro const|ENETDOWN        |nolink=true|notes={{mark c++11}}|网络已关闭}}
{{dsc macro const|ENETRESET       |nolink=true|notes={{mark c++11}}|连接被网络打断}}
{{dsc macro const|ENETUNREACH     |nolink=true|notes={{mark c++11}}|网络不可达}}
{{dsc macro const|ENFILE          |nolink=true|notes={{mark c++11}}|系统中打开文件过多}}
{{dsc macro const|ENOBUFS         |nolink=true|notes={{mark c++11}}|无缓冲空间可用}}
{{dsc macro const|ENODATA         |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|流头部读取队列中无消息}}
{{dsc macro const|ENODEV          |nolink=true|notes={{mark c++11}}|设备不存在}}
{{dsc macro const|ENOENT          |nolink=true|notes={{mark c++11}}|文件或目录不存在}}
{{dsc macro const|ENOEXEC         |nolink=true|notes={{mark c++11}}|可执行文件格式错误}}
{{dsc macro const|ENOLCK          |nolink=true|notes={{mark c++11}}|无可用锁}}
{{dsc macro const|ENOLINK         |nolink=true|notes={{mark c++11}}|链接已切断}}
{{dsc macro const|ENOMEM          |nolink=true|notes={{mark c++11}}|空间不足}}
{{dsc macro const|ENOMSG          |nolink=true|notes={{mark c++11}}|无所需类型的消息}}
{{dsc macro const|ENOPROTOOPT     |nolink=true|notes={{mark c++11}}|协议不可用}}
{{dsc macro const|ENOSPC          |nolink=true|notes={{mark c++11}}|设备无剩余空间}}
{{dsc macro const|ENOSR           |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|无流资源}}
{{dsc macro const|ENOSTR          |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|此项目非流}}
{{dsc macro const|ENOSYS          |nolink=true|notes={{mark c++11}}|不支持的函数}}
{{dsc macro const|ENOTCONN        |nolink=true|notes={{mark c++11}}|未连接的套接字}}
{{dsc macro const|ENOTDIR         |nolink=true|notes={{mark c++11}}|此项目非目录}}
{{dsc macro const|ENOTEMPTY       |nolink=true|notes={{mark c++11}}|目录非空}}
{{dsc macro const|ENOTRECOVERABLE |nolink=true|notes={{mark c++11}}|状态不可恢复}}
{{dsc macro const|ENOTSOCK        |nolink=true|notes={{mark c++11}}|此项目非套接字}}
{{dsc macro const|ENOTSUP         |nolink=true|notes={{mark c++11}}|不支持}}
{{dsc macro const|ENOTTY          |nolink=true|notes={{mark c++11}}|不适合的 I/O 控制操作}}
{{dsc macro const|ENXIO           |nolink=true|notes={{mark c++11}}|设备或地址不存在}}
{{dsc macro const|EOPNOTSUPP      |nolink=true|notes={{mark c++11}}|套接字不支持的操作}}
{{dsc macro const|EOVERFLOW       |nolink=true|notes={{mark c++11}}|值过大而无法存入数据类型}}
{{dsc macro const|EOWNERDEAD      |nolink=true|notes={{mark c++11}}|先前拥有者已死}}
{{dsc macro const|EPERM           |nolink=true|notes={{mark c++11}}|操作不允许}}
{{dsc macro const|EPIPE           |nolink=true|notes={{mark c++11}}|管道损坏}}
{{dsc macro const|EPROTO          |nolink=true|notes={{mark c++11}}|协议错误}}
{{dsc macro const|EPROTONOSUPPORT |nolink=true|notes={{mark c++11}}|不支持的协议}}
{{dsc macro const|EPROTOTYPE      |nolink=true|notes={{mark c++11}}|错误的套接字协议类型}}
{{dsc macro const|ERANGE          |nolink=true|                     结果过大}}
{{dsc macro const|EROFS           |nolink=true|notes={{mark c++11}}|只读文件系统}}
{{dsc macro const|ESPIPE          |nolink=true|notes={{mark c++11}}|非法寻位}}
{{dsc macro const|ESRCH           |nolink=true|notes={{mark c++11}}|无此进程}}
{{dsc macro const|ETIME           |nolink=true|notes={{mark c++11}} {{mark deprecated c++23}}|流 ioctl() 超时}}
{{dsc macro const|ETIMEDOUT       |nolink=true|notes={{mark c++11}}|连接超时}}
{{dsc macro const|ETXTBSY         |nolink=true|notes={{mark c++11}}|文本文件忙}}
{{dsc macro const|EWOULDBLOCK     |nolink=true|notes={{mark c++11}}|操作可能阻塞}}
{{dsc macro const|EXDEV           |nolink=true|notes={{mark c++11}}|跨设备链接}}
{{dsc end}}

===注解===
头文件 {{tt|&lt;cerrno&gt;}} 基于 C 标准库头文件 {{tt|errno.h}}，然而 C++ 主要从 POSIX 标准，而非 C 标准库采用 {{tt|&lt;cerrno&gt;}} 所定义的宏。

===概要===
{{source|
#define errno /* 见描述 */
#define E2BIG /* 见描述 */           // 独立
#define EACCES /* 见描述 */          // 独立
#define EADDRINUSE /* 见描述 */      // 独立
#define EADDRNOTAVAIL /* 见描述 */   // 独立
#define EAFNOSUPPORT /* 见描述 */    // 独立
#define EAGAIN /* 见描述 */          // 独立
#define EALREADY /* 见描述 */        // 独立
#define EBADF /* 见描述 */           // 独立
#define EBADMSG /* 见描述 */         // 独立
#define EBUSY /* 见描述 */           // 独立
#define ECANCELED /* 见描述 */       // 独立
#define ECHILD /* 见描述 */          // 独立
#define ECONNABORTED /* 见描述 */    // 独立
#define ECONNREFUSED /* 见描述 */    // 独立
#define ECONNRESET /* 见描述 */      // 独立
#define EDEADLK /* 见描述 */         // 独立
#define EDESTADDRREQ /* 见描述 */    // 独立
#define EDOM /* 见描述 */            // 独立
#define EEXIST /* 见描述 */          // 独立
#define EFAULT /* 见描述 */          // 独立
#define EFBIG /* 见描述 */           // 独立
#define EHOSTUNREACH /* 见描述 */    // 独立
#define EIDRM /* 见描述 */           // 独立
#define EILSEQ /* 见描述 */          // 独立
#define EINPROGRESS /* 见描述 */     // 独立
#define EINTR /* 见描述 */           // 独立
#define EINVAL /* 见描述 */          // 独立
#define EIO /* 见描述 */             // 独立
#define EISCONN /* 见描述 */         // 独立
#define EISDIR /* 见描述 */          // 独立
#define ELOOP /* 见描述 */           // 独立
#define EMFILE /* 见描述 */          // 独立
#define EMLINK /* 见描述 */          // 独立
#define EMSGSIZE /* 见描述 */        // 独立
#define ENAMETOOLONG /* 见描述 */    // 独立
#define ENETDOWN /* 见描述 */        // 独立
#define ENETRESET /* 见描述 */       // 独立
#define ENETUNREACH /* 见描述 */     // 独立
#define ENFILE /* 见描述 */          // 独立
#define ENOBUFS /* 见描述 */         // 独立
#define ENODEV /* 见描述 */          // 独立
#define ENOENT /* 见描述 */          // 独立
#define ENOEXEC /* 见描述 */         // 独立
#define ENOLCK /* 见描述 */          // 独立
#define ENOLINK /* 见描述 */         // 独立
#define ENOMEM /* 见描述 */          // 独立
#define ENOMSG /* 见描述 */          // 独立
#define ENOPROTOOPT /* 见描述 */     // 独立
#define ENOSPC /* 见描述 */          // 独立
#define ENOSYS /* 见描述 */          // 独立
#define ENOTCONN /* 见描述 */        // 独立
#define ENOTDIR /* 见描述 */         // 独立
#define ENOTEMPTY /* 见描述 */       // 独立
#define ENOTRECOVERABLE /* 见描述 */ // 独立
#define ENOTSOCK /* 见描述 */        // 独立
#define ENOTSUP /* 见描述 */         // 独立
#define ENOTTY /* 见描述 */          // 独立
#define ENXIO /* 见描述 */           // 独立
#define EOPNOTSUPP /* 见描述 */      // 独立
#define EOVERFLOW /* 见描述 */       // 独立
#define EOWNERDEAD /* 见描述 */      // 独立
#define EPERM /* 见描述 */           // 独立
#define EPIPE /* 见描述 */           // 独立
#define EPROTO /* 见描述 */          // 独立
#define EPROTONOSUPPORT /* 见描述 */ // 独立
#define EPROTOTYPE /* 见描述 */      // 独立
#define ERANGE /* 见描述 */          // 独立
#define EROFS /* 见描述 */           // 独立
#define ESPIPE /* 见描述 */          // 独立
#define ESRCH /* 见描述 */           // 独立
#define ETIMEDOUT /* 见描述 */       // 独立
#define ETXTBSY /* 见描述 */         // 独立
#define EWOULDBLOCK /* 见描述 */     // 独立
#define EXDEV /* 见描述 */           // 独立
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=288|std=C++98|before={{tt|&lt;cerrno&gt;}} 中未定义宏 {{tt|EILSEQ}}|after=已定义}}
{{dr list end}}

===参阅===
* [[cpp/error/errno macros|错误数值的描述]]

{{langlinks|en|es|ja|ru}}