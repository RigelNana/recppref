{{cpp/header/title|cstring}}
{{cpp/header/navbar}}
{{cpp/header/c}}

此头文件用于 [[cpp/string/byte|C 风格空终止字节字符串]]。

{{dsc begin}}
{{dsc h1|宏}}
{{dsc inc|cpp/types/dsc NULL}}

{{dsc h1|类型}}
{{dsc inc|cpp/types/dsc size_t}}

{{dsc h1|函数}}
{{dsc h2|字符串操纵}}
{{dsc inc|cpp/string/byte/dsc strcpy}}
{{dsc inc|cpp/string/byte/dsc strncpy}}
{{dsc inc|cpp/string/byte/dsc strcat}}
{{dsc inc|cpp/string/byte/dsc strncat}}
{{dsc inc|cpp/string/byte/dsc strxfrm}}

{{dsc h2|字符串检验}}
{{dsc inc|cpp/string/byte/dsc strlen}}
{{dsc inc|cpp/string/byte/dsc strcmp}}
{{dsc inc|cpp/string/byte/dsc strncmp}}
{{dsc inc|cpp/string/byte/dsc strcoll}}
{{dsc inc|cpp/string/byte/dsc strchr}}
{{dsc inc|cpp/string/byte/dsc strrchr}}
{{dsc inc|cpp/string/byte/dsc strspn}}
{{dsc inc|cpp/string/byte/dsc strcspn}}
{{dsc inc|cpp/string/byte/dsc strpbrk}}
{{dsc inc|cpp/string/byte/dsc strstr}}
{{dsc inc|cpp/string/byte/dsc strtok}}

{{dsc h2|字符数组操纵}}
{{dsc inc|cpp/string/byte/dsc memchr}}
{{dsc inc|cpp/string/byte/dsc memcmp}}
{{dsc inc|cpp/string/byte/dsc memset}}
{{dsc inc|cpp/string/byte/dsc memcpy}}
{{dsc inc|cpp/string/byte/dsc memmove}}

{{dsc h2|杂项}}
{{dsc inc|cpp/string/byte/dsc strerror}}
{{dsc end}}

===注解===
* {{lc|NULL}} 也在以下标头定义：
** {{header|clocale}}
** {{header|ctime}}
** {{header|cstddef}}
** {{header|cstdio}}
** {{header|cwchar}}
* {{lc|std::size_t}} 也在以下标头定义：
** {{header|ctime}}
** {{header|cstddef}}
** {{header|cstdio}}
** {{header|cuchar}} {{mark since c++17}}
** {{header|cwchar}}

===概要===
{{source|1=
namespace std {
  using size_t = /* 见描述 */;                           // 独立

  void* memcpy(void* s1, const void* s2, size_t n);      // 独立
  void* memmove(void* s1, const void* s2, size_t n);     // 独立
  char* strcpy(char* s1, const char* s2);                // 独立
  char* strncpy(char* s1, const char* s2, size_t n);     // 独立
  char* strcat(char* s1, const char* s2);                // 独立
  char* strncat(char* s1, const char* s2, size_t n);     // 独立
  int memcmp(const void* s1, const void* s2, size_t n);  // 独立
  int strcmp(const char* s1, const char* s2);            // 独立
  int strcoll(const char* s1, const char* s2);
  int strncmp(const char* s1, const char* s2, size_t n); // 独立
  size_t strxfrm(char* s1, const char* s2, size_t n);
  const void* memchr(const void* s, int c, size_t n);    // 独立
  void* memchr(void* s, int c, size_t n);                // 独立
  const char* strchr(const char* s, int c);              // 独立
  char* strchr(char* s, int c);                          // 独立
  size_t strcspn(const char* s1, const char* s2);        // 独立
  const char* strpbrk(const char* s1, const char* s2);   // 独立
  char* strpbrk(char* s1, const char* s2);               // 独立
  const char* strrchr(const char* s, int c);             // 独立
  char* strrchr(char* s, int c);                         // 独立
  size_t strspn(const char* s1, const char* s2);         // 独立
  const char* strstr(const char* s1, const char* s2);    // 独立
  char* strstr(char* s1, const char* s2);                // 独立
  char* strtok(char* s1, const char* s2);                // 独立
  void* memset(void* s, int c, size_t n);                // 独立
  char* strerror(int errnum);
  size_t strlen(const char* s);                          // 独立
}

#define NULL /* 见描述 */                                // 独立
}}

{{langlinks|en|ja|ru}}