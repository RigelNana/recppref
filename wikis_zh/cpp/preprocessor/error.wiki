{{title|诊断指令}}
{{cpp/preprocessor/navbar}}

显示给定的错误消息并使得程序非良构{{rev inl|since=c++23|，或显示给定的警告消息而不影响程序的合法性}}。

===语法===
{{sdsc begin}}
{{sdsc|num=1|{{ttb|#error}} {{spar|诊断消息}}}}
{{sdsc|num=2|notes={{mark since c++23}}|{{ttb|#warning}} {{spar|诊断消息}}}}
{{sdsc end}}

===解释===
@1@ 实现在遇到 {{c|#error}} 指令后，显示消息{{spar|诊断消息}}，并令程序非良构（停止编译）。

@2@ 同 {{v|1}}，但不影响程序的合法性并且编译继续。

{{spar sep|诊断消息}}可以由不必带有引号的多个单词组成。

===注解===
在其于 C++23 的标准化前，{{c|#warning}} 已经被许多编译器作为遵从的扩展提供。

===示例===
{{example
|code=
#if __STDC_HOSTED__ != 1
#   error "不是宿主式实现"
#endif

#if __cplusplus &gt;= 202302L
#   warning "将 #warning 作为标准特性使用"
#endif

#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "所用实现为宿主式\n";
}
|p=true
|output=
所用实现为宿主式
}}

===引用===
{{ref std c++23}}
{{ref std|section=15.8|title=Error directive|id=cpp.error}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=15.8|title=Error directive|id=cpp.error}}
{{ref std end}}
{{ref std c++17}}
{{ref std|section=19.5|title=Error directive|id=cpp.error}}
{{ref std end}}
{{ref std c++14}}
{{ref std|section=16.5|title=Error directive|id=cpp.error}}
{{ref std end}}
{{ref std c++11}}
{{ref std|section=16.5|title=Error directive|id=cpp.error}}
{{ref std end}}
{{ref std c++03}}
{{ref std|section=16.5|title=Error directive|id=cpp.error}}
{{ref std end}}
{{ref std c++98}}
{{ref std|section=16.5|title=Error directive|id=cpp.error}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc see c|c/preprocessor/error |诊断指令|nomono=true}}
{{dsc end}}

{{langlinks|ar|cs|de|en|es|fr|it|ja|pl|pt|ru}}