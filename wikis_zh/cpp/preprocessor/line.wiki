{{title|文件名和行信息}}
{{cpp/preprocessor/navbar}}

更改预处理器中的行号，可选地更改当前文件名。

===语法===

{{sdsc begin}}
{{sdsc|num=1|{{ttb|#line}} {{spar|行号}}}}
{{sdsc|num=2|{{ttb|#line}} {{spar|行号}} {{ttb|"}}{{spar|文件名}}{{ttb|"}}}}
{{sdsc end}}

===解释===
1) 将当前的预处理器行号更改为 {{spar|行号}}。宏 {{c|__LINE__}} 在该点后的展开将产生 {{spar|行号}} 加上自此遇到的实际代码行数。

2) 还将当前的预处理器文件名更改为 {{spar|文件名}}。宏 {{c|__FILE__}} 在该点后的展开将生成 {{spar|文件名}}。

任何预处理器记号（宏常量或表达式）都允许作为 {{c|#line}} 的实参，只要它们展开成合法的十进制整数，可选地后随一个合法的字符串即可。

{{spar|行号}} 必须是至少有一个十进制位的序列（否则程序非良构），并且始终按十进制解释（即使它以 {{tt|0}} 开始也是如此）。

若 {{spar|行号}} 为 0 或大于 {{rev inl|until=c++11|32767}}{{rev inl|since=c++11|2147483647}}，则行为未定义。

===注解===
一些自动代码生成工具通过以其他语言编写的文件产生 C++ 源文件时，会使用此指令。这种情况下，它们在所生成的 C++ 文件中插入 {{tt|#line}} 指令，以指代原（人类编辑的）源文件的行号和文件名。

===示例===
{{example|p=true|code=
#include &lt;cassert&gt;
#define FNAME "test.cc"
int main()
{
#line 777 FNAME
        assert(2+2 == 5);
}
|output=
test: test.cc:777: int main(): Assertion `2+2 == 5' failed.
}}

===引用===
{{ref std c++23}}
{{ref std|section=15.7|title=Line control|id=cpp.line}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=15.7|title=Line control|id=cpp.line}}
{{ref std end}}
{{ref std c++17}}
{{ref std|section=19.4|title=Line control|id=cpp.line}}
{{ref std end}}
{{ref std c++14}}
{{ref std|section=16.4|title=Line control|id=cpp.line}}
{{ref std end}}
{{ref std c++11}}
{{ref std|section=16.4|title=Line control|id=cpp.line}}
{{ref std end}}
{{ref std c++98}}
{{ref std|section=16.4|title=Line control|id=cpp.line}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc source_location}}
{{dsc see c|c/preprocessor/line|文件名和行信息|nomono=true}}
{{dsc end}}

{{langlinks|cs|de|en|es|fr|it|ja|pt|ru}}