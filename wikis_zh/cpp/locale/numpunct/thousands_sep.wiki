{{cpp/locale/numpunct/title|thousands_sep, do_thousands_sep}}
{{cpp/locale/numpunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
char_type thousands_sep() const;
}}
{{dcl|num=2|1=
protected:
virtual char_type do_thousands_sep() const;
}}
{{dcl end}}

@1@ 公开成员函数，调用最终派生类的成员函数 {{tt|do_thousands_sep}}。

@2@ 返回在分析或格式化整数和浮点值整数部分时用作数位组间分隔符的字符。

===返回值===
用作千位分隔符的 {{tt|char_type}} 类型的值。{{tt|std::numpunct}} 的标准特化返回 {{c|','}} 和 {{c|L','}}。

===示例===
{{example
|
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

struct space_out : std::numpunct&lt;char&gt;
{
    char do_thousands_sep()   const { return ' '; }  // 以空格分隔
    std::string do_grouping() const { return "\1"; } // 1 位组
};

int main()
{
    std::cout &lt;&lt; "默认本地环境：" &lt;&lt; 12345678 &lt;&lt; '\n';
    std::cout.imbue(std::locale(std::cout.getloc(), new space_out));
    std::cout &lt;&lt; "更改 numpunct 后的本地环境：" &lt;&lt; 12345678 &lt;&lt; '\n';
}
|output=
默认本地环境：12345678
更改 numpunct 后的本地环境：1 2 3 4 5 6 7 8
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=20|std=C++98|before=返回类型是 {{tt|string_type}}|after=改成 {{tt|char_type}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/numpunct/dsc do_grouping}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}