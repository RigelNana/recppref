{{cpp/locale/numpunct/title|truename, do_truename, falsename, do_falsename}}
{{cpp/locale/numpunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
string_type truename() const;
}}
{{dcl|num=2|1=
public:
string_type falsename() const;
}}
{{dcl|num=3|1=
protected:
virtual string_type do_truename() const;
}}
{{dcl|num=4|1=
protected:
virtual string_type do_falsename() const;
}}
{{dcl end}}

@1,2@ 公开成员函数，分别调用最终派生类的成员函数 {{tt|do_truename}} 和 {{tt|do_falsename}}。
@3@ 返回拥有表示布尔值 {{c|true}} 的字符串。
@4@ 返回拥有表示布尔值 {{c|false}} 的字符串。

===返回值===
@1,3@ 用作 {{c|true}} 表示的 {{tt|string_type}} 类型对象。{{tt|std::numpunct}} 的标准特化返回 {{c|"true"}} 和 {{c|L"true"}}。

@2,4@ 用作 {{c|false}} 表示的 {{tt|string_type}} 类型对象。{{tt|std::numpunct}} 的标准特化返回 {{c|"false"}} 和 {{c|L"false"}}。

===示例===

{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

struct custom_tf : std::numpunct&lt;char&gt;
{
    std::string do_truename()  const { return {'t'}; }
    std::string do_falsename() const { return {'f'}; }
};

int main()
{
    std::cout &lt;&lt; std::boolalpha;

    // 默认 boolalpha 输出
    std::cout &lt;&lt; "默认本地环境,\n"
                 "  boolalpha  true: " &lt;&lt; true &lt;&lt; "\n"
                 "  boolalpha false: " &lt;&lt; false &lt;&lt; "\n\n";

    // 对本地环境应用 custom_tf
    std::cout.imbue(std::locale(std::cout.getloc(), new custom_tf));
    std::cout &lt;&lt; "带有改动的 numpunct 的本地环境,\n"
                 "  boolalpha  true: " &lt;&lt; true &lt;&lt; "\n"
                 "  boolalpha false: " &lt;&lt; false &lt;&lt; '\n';
}
|output=
默认本地环境,
  boolalpha  true: true
  boolalpha false: false

带有改动的 numpunct 的本地环境,
  boolalpha  true: t
  boolalpha false: f
}}

{{langlinks|en|es|ja}}