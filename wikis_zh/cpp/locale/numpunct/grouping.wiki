{{cpp/locale/numpunct/title|grouping|do_grouping}}
{{cpp/locale/numpunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
std::string grouping() const;
}}
{{dcl|num=2|1=
protected:
virtual std::string do_grouping() const;
}}
{{dcl end}}

@1@ 公开成员函数，调用最终派生类的成员函数 {{tt|do_grouping}}。

@2@ 返回 {{lc|std::string}}，其每个 {{c|char}} 元素中保有 {{ltt|cpp/locale/num_put/put|num_put::put()}}（从而还有 {{ltt|cpp/io/basic_ostream/operator_ltlt|basic_ostream::operator&lt;&lt;}}）所格式化的数值输出的每组位数。

此函数返回一个字符串 {{c|vec}}，它被用作整数值的向量。（例如，{{c|"\003"}} 指定每组 3 个数字，而 {{c|"3"}} 则意味着每组 51 个数字。）其每个元素 {{c|vec[i]}} 表示数值的整数部分中（从右侧数）第 {{tt|i}} 个数字组中的数字个数：{{c|vec[0]}} 持有最右侧分组的数字个数，{{c|vec[1]}} 为右数第二个分组，等等。最后一个字符指定的分组，即 {{c|vec[vec.size()-1]}}，被重复使用以对数值（左侧）的所有剩余数字进行分组。如果 {{c|vec[i]}} 非正数或等于 {{c|CHAR_MAX}}，则对应的数字分组无限制。

===返回值===
保有分组的 {{lc|std::string}} 类型的对象。{{tt|std::numpunct}} 的标准特化返回空字符串，指示无分组。典型分组（例如 {{tt|en_US}} 本地环境）返回 {{c|"\003"}}。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;limits&gt;
#include &lt;locale&gt;

struct space_out : std::numpunct&lt;char&gt;
{
    char do_thousands_sep()   const { return ' ';  } // 以空格分隔
    std::string do_grouping() const { return "\1"; } // 1 位组
};

struct g123 : std::numpunct&lt;char&gt;
{
    std::string do_grouping() const { return "\1\2\3"; }
};

int main()
{
    std::cout &lt;&lt; "默认本地环境: " &lt;&lt; 12345678 &lt;&lt; '\n';
    std::cout.imbue(std::locale(std::cout.getloc(), new space_out));
    std::cout &lt;&lt; "带有修改的 numpunct 的本地环境: " &lt;&lt; 12345678 &lt;&lt; '\n';
    std::cout.imbue(std::locale(std::cout.getloc(), new g123));
    std::cout &lt;&lt; "带有 \\1\\2\\3 分组的本地环境: "
              &lt;&lt; std::numeric_limits&lt;unsigned long long&gt;::max() &lt;&lt; '\n'
              &lt;&lt; "相同，用于浮点数值: "
              &lt;&lt; std::fixed &lt;&lt; 123456789.123456789 &lt;&lt; '\n';
}
|output=
默认本地环境: 12345678
带有修改的 numpunct 的本地环境: 1 2 3 4 5 6 7 8
带有 \\1\\2\\3 分组的本地环境: 18,446,744,073,709,551,61,5
相同，用于浮点数值: 123,456,78,9.123457
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/numpunct/dsc do_thousands_sep}}
{{dsc end}}

{{langlinks|en|ja}}