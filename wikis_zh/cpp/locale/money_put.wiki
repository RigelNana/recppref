{{cpp/title|money_put}}
{{cpp/locale/money_put/navbar}}
{{ddcl|header=locale|1=
template&lt; 
    class CharT,
    class OutputIt = std::ostreambuf_iterator&lt;CharT&gt;
&gt; class money_put;
}}

类 {{tt|std::money_put}} 封装格式化货币值为字符串所用的规则。标准输入/输出操纵符 {{lc|std::put_money}} 使用输入/输出流的本地环境的 {{tt|std::money_put}} 刻面。

{{inheritance diagram/std-money_put}}

如果标准库不保证提供 {{tt|std::money_put}} 的某个特化（见下文），那么它的成员函数 {{lc|put()}} 和 {{lc|do_put()}} 不保证会遵守指定的行为。

===特化===
标准库保证提供以下特化（{{rlp|locale|所有本地环境对象都需要实现}}这些特化）：
{{dsc begin}}
{{dsc header|locale}}
{{dsc|{{c/core|std::money_put&lt;char&gt;}}|创建货币值的窄字符串表示}}
{{dsc|{{c/core|std::money_put&lt;wchar_t&gt;}}|创建货币值的宽窄字符串表示}}
{{dsc end}}

另外，标准库也保证提供满足以下类型要求的所有特化：
* {{tt|CharT}} 是以下类型之一：
** {{c/core|char}}
** {{c/core|wchar_t}}
** 由实现定义的其他任何[[cpp/string|字符容器类型]]，该类型需要满足实例化所有 [[cpp/io|iostream 组件]]所需的对字符的要求
* {{tt|OutputIt}} 需要满足{{named req|OutputIterator}}的要求

===嵌套类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|string_type}}|{{c/core|std::basic_string&lt;CharT&gt;}}}}
{{dsc|{{tt|iter_type}}|{{tt|OutputIt}}}}
{{dsc end}}

{{cpp/locale/facet data members}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|cpp/locale/money_put/money_put|构造新的 {{tt|money_put}} 刻面}}
{{dsc mem fun|cpp/locale/money_put/put|调用 {{tt|do_put}}}}
{{dsc end}}

===受保护成员函数===
{{dsc begin}}
{{dsc prot mem dtor|cpp/locale/money_put/~money_put |销毁 {{tt|money_put}} 刻面}}
{{dsc inc|cpp/locale/money_put/dsc do_put}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;locale&gt;

int main()
{
    // 使用输入/输出操纵符
    std::cout.imbue(std::locale("en_US.UTF-8"));
    std::cout &lt;&lt; "美国本地环境："
               &lt;&lt; std::showbase &lt;&lt; std::put_money(12345678.9)&lt;&lt; '\n';
    
    // 直接使用平面
    std::cout.imbue(std::locale("de_DE.UTF-8"));
    std::cout &lt;&lt; "德国本地环境：";
    auto&amp; f = std::use_facet&lt;std::money_put&lt;char&gt;&gt;(std::cout.getloc());
    f.put({std::cout}, true, std::cout, std::cout.fill(), 12345678.9 );
    std::cout &lt;&lt; '\n';
}
|output=
美国本地环境：$123,456.79
德国本地环境：123.456,79 EUR
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=427|std=C++98|before={{tt|money_put}} 保证接受任何满足实例化所有&lt;br&gt;iostream 组件所需的对字符类型的要求的 {{tt|CharT}}|after=只保证接受 {{c/core|char}}、{{c/core|wchar_t}}&lt;br&gt;和其他由实现定义的字符类型}}
{{dr list item|wg=lwg|dr=2392|std=C++98|before={{tt|money_put}} 能够保证接受的 {{tt|CharT}} 只有字符类型|after=可以保证接受由实现定义的字符容器类型}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc moneypunct}}
{{dsc inc|cpp/locale/dsc money_get}}
{{dsc inc|cpp/io/manip/dsc put_money}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}