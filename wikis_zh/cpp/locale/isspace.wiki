{{cpp/title|isspace{{small|(std::locale)}}}}
{{cpp/locale/navbar}}
{{ddcl|header=locale|
template&lt; class CharT &gt;
bool isspace( CharT ch, const locale&amp; loc );
}}

检查给定字符按给定本地环境的 {{lc|std::ctype}} 刻面是否分类为空白字符。

===参数===
{{par begin}}
{{par|ch|字符}}
{{par|loc|本地环境}}
{{par end}}

===返回值===
若字符被分类为空白字符则返回 {{c|true}}，否则返回 {{c|false}}。

===可能的实现===
{{eq fun
|1=
template&lt;class CharT&gt;
bool isspace(CharT ch, const std::locale&amp; loc)
{
    return std::use_facet&lt;std::ctype&lt;CharT&gt;&gt;(loc).is(std::ctype_base::space, ch);
}
}}

===示例===
{{example
|演示以不同本地环境使用 {{tt|std::isspace()}}（OS 限定）。
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

void try_with(wchar_t c, const char* loc)
{
    std::wcout &lt;&lt; "isspace('" &lt;&lt; c &lt;&lt; "', locale(\"" &lt;&lt; loc &lt;&lt; "\")) 返回 "
               &lt;&lt; std::boolalpha &lt;&lt; std::isspace(c, std::locale(loc)) &lt;&lt; '\n';
}

int main()
{
    const wchar_t EM_SPACE = L'\u2003'; // Unicode 字符 'EM SPACE'
    try_with(EM_SPACE, "C");
    try_with(EM_SPACE, "en_US.UTF8");
}
|p=true
|output=
isspace(' ', locale("C")) 返回 false
isspace(' ', locale("en_US.UTF8")) 返回 true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/byte/dsc isspace}}
{{dsc inc|cpp/string/wide/dsc iswspace}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}