{{cpp/locale/time_get/title|date_order|do_date_order}}
{{cpp/locale/time_get/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|
public:
dateorder date_order() const;
}}
{{dcl|num=2|
protected:
virtual dateorder do_date_order() const;
}}
{{dcl end}}

@1@ 公开成员函数，调用最终派生类的所保有虚成员函数 {{tt|do_date_order}}。
@2@ 返回 {{lc|std::time_base::dateorder}} 类型值，它描述此 locale 所用的默认日期格式（为 {{lc|get_date()}} 所期待并为 {{lc|std::strftime()}} 用格式指定符 {{c|'%x'}} 所产生）。

合法值（继承自 {{lc|std::time_base}}）：

{{dsc begin}}
{{dsc|{{tt|no_order}}|含有可变项目（星期之日、尤里乌斯日等），或未实现此函数}}
{{dsc|{{tt|dmy}}|日、月、年（欧洲本地环境）}}
{{dsc|{{tt|mdy}}|月、日、年（美洲本地环境）}}
{{dsc|{{tt|ymd}}|年、月、日（亚洲本地环境）}}
{{dsc|{{tt|ydm}}|年、日、月（罕见）}}
{{dsc end}}

===返回值===
{{tt|dateorder}} 类型的值。

===注解===
此函数为可选，它可在每种情况下都返回 {{tt|no_order}}。

===示例===
{{example
|使用 clang (libc++) 获得以下输出。
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

void show_date_order()
{
    std::time_base::dateorder d =
        std::use_facet&lt;std::time_get&lt;char&gt;&gt;(std::locale()).date_order();

    switch (d)
    {
        case std::time_base::no_order:
            std::cout &lt;&lt; "no_order\n";
            break;
        case std::time_base::dmy:
            std::cout &lt;&lt; "日, 月, 年\n";
            break;
        case std::time_base::mdy:
            std::cout &lt;&lt; "月, 日, 年\n";
            break;
        case std::time_base::ymd:
            std::cout &lt;&lt; "年, 月, 日\n";
            break;
        case std::time_base::ydm:
            std::cout &lt;&lt; "年, 日, 月\n";
            break;
    }
}

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    std::cout &lt;&lt; "美国本地环境中，默认日期顺序是: ";
    show_date_order();

    std::locale::global(std::locale("ja_JP.utf8"));
    std::cout &lt;&lt; "日本本地环境中，默认日期顺序是: ";
    show_date_order();

    std::locale::global(std::locale("de_DE.utf8"));
    std::cout &lt;&lt; "德国本地环境中，默认日期顺序是: ";
    show_date_order();
}
|p=true
|output=
美国本地环境中，默认日期顺序是: 月, 日, 年
日本本地环境中，默认日期顺序是: 年, 月, 日
德国本地环境中，默认日期顺序是: 日, 月, 年
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/time_get/dsc do_get_date}}
{{dsc inc|cpp/locale/dsc time_base}}
{{dsc end}}

{{langlinks|en|ja}}