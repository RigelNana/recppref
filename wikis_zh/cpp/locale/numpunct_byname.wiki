{{cpp/title|numpunct_byname}}
{{cpp/locale/navbar}}
{{ddcl|header=locale|
template&lt; class CharT &gt;
class numpunct_byname : public std::numpunct&lt;CharT&gt;;
}}

{{tt|std::numpunct_byname}} 是 {{lc|std::numpunct}} 刻面，它封装在它构造时指定的本地环境的数值标点偏好。

===特化===
标准库保证提供以下特化：
{{dsc begin}}
{{dsc header|locale}}
{{dsc|{{c/core|std::numpunct_byname&lt;char&gt;}}|窄字符输入/输出的本地环境限定 {{lc|std::numpunct}} 刻面}}
{{dsc|{{c/core|std::numpunct_byname&lt;wchar_t&gt;}}|宽字符输入/输出的本地环境限定 {{lc|std::numpunct}} 刻面}}
{{dsc end}}

===嵌套类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|string_type}}|{{c/core|std::basic_string&lt;CharT&gt;}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/locale/byname/dsc constructor|numpunct_byname}}
{{dsc inc|cpp/locale/byname/dsc destructor|numpunct_byname}}
{{dsc end}}

{{include|cpp/locale/byname/constructor|numpunct_byname}}
{{include|cpp/locale/byname/destructor|numpunct_byname}}

{{include|cpp/locale/numpunct/inherit}}

===示例===
{{example
|此示例演示如何应用另一语言的数值标点规则而不更改本地环境的剩余部分。
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    const double number = 1000.25;
    std::wcout &lt;&lt; L"默认本地环境：" &lt;&lt; number &lt;&lt; L'\n';
    std::wcout.imbue(std::locale(std::wcout.getloc(),
                                 new std::numpunct_byname&lt;wchar_t&gt;("ru_RU.UTF8")));
    std::wcout &lt;&lt; L"带有俄语数值标点的本地环境：" &lt;&lt; number &lt;&lt; L'\n';
}
|output=
默认本地环境：1000.25
带有俄语数值标点的本地环境：1 000,25
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/dsc numpunct}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}