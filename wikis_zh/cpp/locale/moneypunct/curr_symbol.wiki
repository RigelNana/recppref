{{cpp/locale/moneypunct/title|curr_symbol, do_curr_symbol}}
{{cpp/locale/moneypunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|
public:
string_type curr_symbol() const;
}}
{{dcl|num=2|
protected:
virtual string_type do_curr_symbol() const;
}}
{{dcl end}}

@1@ 公开成员函数，调用最终派生类的成员函数 {{tt|do_curr_symbol}}。

@2@ 返回此本地环境用作通货标识符的字符串。如果 {{tt|International}}（{{tt|std::moneypunct}} 的第二模板形参）是 {{c|false}}，那么此标识符通常为单个（宽）字符，例如 {{c|"￥"}} 或 {{c|"$"}}。如果 {{tt|International}} 是 {{c|true}}，那么标识符通常是保有三个 {{enwiki|ISO 4217}} 通货代码，后随空格的四字符字符串（{{c|"JPY "}} 或 {{c|"USD "}}）。

===返回值===
保有通货符号或代码的 {{tt|string_type}} 类型对象。

===示例===
{{example
|
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

void show_ccy(const char* locname)
{
    std::locale loc(locname);
    std::cout &lt;&lt; locname &lt;&lt; " 的通货符号是 "
              &lt;&lt; std::use_facet&lt;std::moneypunct&lt;char, true&gt;&gt;(loc).curr_symbol()
              &lt;&lt; "或简写为 " &lt;&lt; std::use_facet&lt;std::moneypunct&lt;char&gt;&gt;(loc).curr_symbol()
              &lt;&lt; "\n";
}

int main()
{
    show_ccy("en_US.utf8");
    show_ccy("ja_JP.utf8");
    show_ccy("sv_SE.utf8");
    show_ccy("ru_RU.utf8");
    show_ccy("vi_VN.utf8");
}
|output=
en_US.utf8 的通货符号是 USD 或简写为 $
ja_JP.utf8 的通货符号是 JPY 或简写为 ￥
sv_SE.utf8 的通货符号是 SEK 或简写为 kr
ru_RU.utf8 的通货符号是 RUB 或简写为 руб
vi_VN.utf8 的通货符号是 VND 或简写为 ₫
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=666|std=C++98|before=标识符字符串在 {{tt|International}} 是 {{c|true}} 时要求长度为 {{c|4}}|after=不要求长度}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/moneypunct/dsc do_pos_format}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}