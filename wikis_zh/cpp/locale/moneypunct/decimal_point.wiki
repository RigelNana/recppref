{{cpp/locale/moneypunct/title|decimal_point, do_decimal_point}}
{{cpp/locale/moneypunct/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
CharT decimal_point() const;
}}
{{dcl|num=2|1=
protected:
virtual CharT do_decimal_point() const;
}}
{{dcl end}}

@1@ 公开成员函数，调用最终派生类的成员函数 {{tt|do_decimal_point}}。

@2@ 返回用作货币 I/O 中小数点的字符，若格式使用小数（即若 {{lc|do_frac_digits()}} 大于零）。对于典型的美国本地环境，其为字符 {{c|'.'}}（或 {{c|L'.'}}）。

===返回值===
保有小数点的 {{tt|CharT}} 类型值。

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;

void show_dpt(const char* locname)
{
    std::locale loc(locname);
    std::cout.imbue(loc);
    std::cout &lt;&lt; locname &lt;&lt; " 小数点是 '"
              &lt;&lt; std::use_facet&lt;std::moneypunct&lt;char&gt;&gt;(loc).decimal_point()
              &lt;&lt; "' 例如: " &lt;&lt; std::showbase &lt;&lt; std::put_money(123);
    if (std::use_facet&lt;std::moneypunct&lt;char&gt;&gt;(loc).frac_digits() == 0)
        std::cout &lt;&lt; " (不用小数) ";

    std::cout &lt;&lt; '\n';
}

int main()
{
    show_dpt("en_US.utf8");
    show_dpt("ja_JP.utf8");
    show_dpt("sv_SE.utf8");
    show_dpt("de_DE.utf8");

}
|output=
en_US.utf8 小数点是 '.' 例如: $1.23
ja_JP.utf8 小数点是 '.' 例如: ￥123 (不用小数)
sv_SE.utf8 小数点是 ',' 例如: 1,23 kr
de_DE.utf8 小数点是 ',' 例如: 1,23 €
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/moneypunct/dsc do_frac_digits}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}