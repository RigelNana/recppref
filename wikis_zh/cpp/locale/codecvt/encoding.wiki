{{cpp/locale/codecvt/title|encoding, do_encoding}}
{{cpp/locale/codecvt/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
public:
int encoding() const throw();
|dcl2=
public:
int encoding() const noexcept;
}}
{{dcl rev multi|num=2|until1=c++11|dcl1=
protected:
virtual int do_encoding() const throw();
|dcl2=
protected:
virtual int do_encoding() const noexcept;
}}
{{dcl end}}

@1@ 公开成员函数，调用最终派生类的成员函数 {{tt|do_encoding}}。

@2@ 若此 codecvt 刻面所表示的编码将每个内部字符映射为相同的常数个外部字符，则返回该个数。若编码为变长（如 UTF-8 或 UTF-16），则返回 {{c|0}}。若编码依赖平台，则返回 {{c|-1}}。

===返回值===
对应一个 {{tt|internT}} 字符的准确 {{tt|externT}} 字符数。若该数变化则为 {{c|0}}，若编码依赖平台则为 {{c|-1}}。

无转换特化 {{c|std::codecvt&lt;char, char, std::mbstate_t&gt;}} 返回 {{c|1}}。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

int main()
{
    std::cout &lt;&lt; "en_US.utf8 是一种变长编码，encoding() 返回 "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                    std::locale("en_US.utf8")
              ).encoding() &lt;&lt; '\n';

    std::cout &lt;&lt; "zh_CN.gb18030 也是变长的，encoding() == "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                    std::locale("zh_CN.gb18030")
              ).encoding() &lt;&lt; '\n';

    std::cout &lt;&lt; "ru_RU.koi8r 是一种单字节编码，encoding() == "
              &lt;&lt; std::use_facet&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt;&gt;(
                    std::locale("ru_RU.koi8r")
              ).encoding() &lt;&lt; '\n';
}
 | output=
en_US.utf8 是一种变长编码，encoding() 返回 0
zh_CN.gb18030 也是变长的，encoding() == 0
ru_RU.koi8r 是一种单字节编码，encoding() == 1
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/string/multibyte/dsc MB_CUR_MAX}}
{{dsc inc|cpp/locale/codecvt/dsc do_max_length}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}