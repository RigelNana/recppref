{{cpp/locale/wstring_convert/title|converted}}
{{cpp/locale/wstring_convert/navbar}}
{{ddcl|header=locale|
std::size_t converted() const noexcept;
}}

返回最近的 {{lc|from_bytes()}} 或 {{lc|to_bytes()}} 成功处理的源字符数。

===返回值===
{{box|{{rlpsi|/#cvtcount}}}}

===示例===
{{example
|code=
#include &lt;codecvt&gt;
#include &lt;iostream&gt;
#include &lt;locale&gt;
#include &lt;string&gt;

int main()
{
    std::string utf8 = "z\u00df\u6c34\U0001d10b"; // 或 u8"zß水𝄋"
                  // 或 "\x7a\xc3\x9f\xe6\xb0\xb4\xf0\x9d\x84\x8b";
    std::cout &lt;&lt; "原 UTF-8 字符串的大小：" &lt;&lt; utf8.size() &lt;&lt; '\n';
    
    // UTF-8 - UTF-32 标准转换刻面
    std::wstring_convert&lt;std::codecvt_utf8&lt;char32_t&gt;, char32_t&gt; cvt;
    
    // UTF-8 到 UTF-32
    std::u32string utf32 = cvt.from_bytes(utf8);
    std::cout &lt;&lt; "UTF-32 字符串的大小：" &lt;&lt; utf32.size() &lt;&lt; '\n';
    std::cout &lt;&lt; "converted() == " &lt;&lt; cvt.converted() &lt;&lt; '\n';
    
    // UTF-32 到 UTF-8
    utf8 = cvt.to_bytes(utf32);
    std::cout &lt;&lt; "新 UTF-8 字符串的大小：" &lt;&lt; utf8.size() &lt;&lt; '\n';
    std::cout &lt;&lt; "converted() == " &lt;&lt; cvt.converted() &lt;&lt; '\n';
}
|output=
原 UTF-8 字符串的大小：10
UTF-32 字符串的大小：4
converted() == 10
新 UTF-8 字符串的大小：10
converted() == 4
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2174|std=C++11|before=未要求 {{tt|wstring_convert::converted}} 为 noexcept|after=已要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/wstring_convert/dsc to_bytes}}
{{dsc inc|cpp/locale/wstring_convert/dsc from_bytes}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}