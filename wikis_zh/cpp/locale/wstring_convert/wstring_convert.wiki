{{cpp/locale/wstring_convert/title|wstring_convert}}
{{cpp/locale/wstring_convert/navbar}}
{{dcl begin}}
{{dcl|num=1|
wstring_convert() : wstring_convert( new Codecvt ) {}
}}
{{dcl|num=2|
explicit wstring_convert( Codecvt* pcvt );
}}
{{dcla|num=3|
wstring_convert( Codecvt* pcvt, state_type state );
}}
{{dcla|num=4|
explicit wstring_convert( const byte_string&amp; byte_err,
                          const wide_string&amp; wide_err = wide_string() );
}}
{{dcl|num=5|since=c++14|1=
wstring_convert( const std::wstring_convert&amp; ) = delete;
}}
{{dcl end}}

{|class="wikitable" style="text-align: center;"
!rowspan=2|{{nbsp|2}}重载{{nbsp|2}}
!colspan=5|{{rlps|/#数据成员}}
|-
!style="font-weight: normal;"|{{nbsp}}{{tti|byte_err_string}}{{nbsp}}
!style="font-weight: normal;"|{{nbsp}}{{tti|wide_err_string}}{{nbsp}}
!style="font-weight: normal;"|{{tti|cvtptr}}
!style="font-weight: normal;"|{{tti|cvtstate}}
!style="font-weight: normal;"|{{nbsp}}{{tti|cvtcount}}{{nbsp}}
|-
|{{v|1}}
|rowspan=3 colspan=2|[[cpp/language/default initialization|默认初始化]]
|{{nbsp}}{{c|new Codecvt}}{{nbsp}}
|rowspan=2|默认初始化
|rowspan=4|未初始化
|-
|{{v|2}}
|rowspan=2|{{c|pcvt}}
|-
|{{v|3}}
|{{c|state}}
|-
|{{v|4}}
|{{c|byte_err}}
|{{c|wide_err}}
|{{c|new Codecvt}}
|{{nbsp}}{{c|state_type()}}{{nbsp}}
|}

@2,3@ 如果 {{c|pcvt}} 是空指针，那么行为未定义。

@5@ 复制构造函数被弃置，{{tt|wstring_convert}} 不{{named req|CopyConstructible}}。

===参数===
{{par begin}}
{{par|pcvt|指向转换刻面的指针}}
{{par|state|转换迁移状态的初始值}}
{{par|byte_err|错误时显示的窄字符串}}
{{par|wide_err|错误时显示的宽字符串}}
{{par end}}

===示例===
{{example
|code=
#include &lt;codecvt&gt;
#include &lt;locale&gt;
#include &lt;utility&gt;

// 为 wstring/wbuffer 的转换适配绑定本地环境的刻面的工具包装器
template&lt;class Facet&gt;
struct deletable_facet : Facet
{
    using Facet::Facet; // 继承构造函数
    ~deletable_facet() {}
};

int main()
{
    // UTF-16le / UCS4 转换
    std::wstring_convert
        &lt;std::codecvt_utf16&lt;char32_t, 0x10ffff, std::little_endian&gt;&gt; u16to32;
    
    // UTF-8 / 宽字符串转换，带定制消息
    std::wstring_convert&lt;std::codecvt_utf8&lt;wchar_t&gt;&gt; u8towide("Error!", L"Error!");
    
    // GB18030 / 宽字符串转换平面
    using F = deletable_facet&lt;std::codecvt_byname&lt;wchar_t, char, std::mbstate_t&gt;&gt;;
    std::wstring_convert&lt;F&gt; gbtowide(new F("zh_CN.gb18030"));
}
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2175|std=C++11|before={{c|pcvt}} 可以是空指针|after=此时行为未定义}}
{{dr list item|wg=lwg|dr=2176|std=C++11|before=构造函数是隐式的|after=改成显式的}}
{{dr list item|paper=P0935R0|std=C++11|before=默认构造函数是显式的|after=改成隐式的}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}