{{cpp/locale/wstring_convert/title|&amp;#10;~wstring_convert}}
{{cpp/locale/wstring_convert/navbar}}
{{dcl begin}}
{{dcl|
~wstring_convert();
}}
{{dcl end}}

销毁 {{tt|wstring_convert}} 对象并删除 {{rlpsi|/#cvtptr}}{{sep}}。

===注解===
一些实现能删除任何刻面，包含拥有受保护析构函数的本地环境特有的刻面。其他实现要求刻面拥有公开析构函数，类似于 {{header|codecvt}} 的本地环境独立平面。

===示例===
{{example
|code=
#include &lt;codecvt&gt;
#include &lt;locale&gt;
#include &lt;utility&gt;

// 包装 wstring/wbuffer_convert 所用的绑定本地环境平面的工具
template&lt;class Facet&gt;
struct deletable_facet : Facet
{
    template&lt;class... Args&gt;
    deletable_facet(Args&amp;&amp;... args) : Facet(std::forward&lt;Args&gt;(args)...) {}
    ~deletable_facet() {}
};

int main()
{
    // GB18030 / UCS4 转换，直接使用基于本地环境的刻面
    // typedef std::codecvt_byname&lt;char32_t, char, std::mbstate_t&gt; gbfacet_t;
    // 编译错误："calling a protected destructor of codecvt_byname&lt;&gt; in ~wstring_convert"
    // std::wstring_convert&lt;gbfacet_t&gt; gbto32(new gbfacet_t("zh_CN.gb18030"));
    
    // GB18030 / UCS4 转换刻面使用拥有公开析构函数的刻面
    typedef deletable_facet&lt;std::codecvt_byname&lt;char32_t, char, std::mbstate_t&gt;&gt; gbfacet_t;
    std::wstring_convert&lt;gbfacet_t&gt; gbto32(new gbfacet_t("zh_CN.gb18030"));
} // 析构函数会在这里调用
|output=
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}