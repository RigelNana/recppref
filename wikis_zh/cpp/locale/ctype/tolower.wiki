{{cpp/locale/ctype/title|tolower|do_tolower}}
{{cpp/locale/ctype/navbar}}
{{dcl begin}}
{{dcl header|locale}}
{{dcl|num=1|1=
public:
CharT tolower( CharT c ) const;
}}
{{dcl|num=2|1=
public:
const CharT* tolower( CharT* beg, const CharT* end ) const;
}}
{{dcl|num=3|1=
protected:
virtual CharT do_tolower( CharT c ) const;
}}
{{dcl|num=4|1=
protected:
virtual const CharT* do_tolower( CharT* beg, const CharT* end ) const;
}}
{{dcl end}}

@1,2@ 公开成员函数，调用最终派生类上的受保护虚成员函数 {{tt|do_tolower}}。
@3@ 若此 locale 定义 {{c|c}} 的小写形式，则转换它为小写形式。
@4@ 对字符数组 {{range|beg|end}} 中每个存在小写形式的字符，以其小写形式替换该字符。

===参数===
{{par begin}}
{{par | c |要转换的字符}}
{{par | beg |指向要转换的数组中首字符的指针}}
{{par | end |指向要转换的数组尾后一位置的指针}}
{{par end}}

===返回值===
@1,3@ 小写字符，或若无列于此本地环境的小写形式则为 {{c|c}}。
@2,4@ {{c|end}}。

===注解===
此函数只能进行 1:1 字符映射，例如希腊文大写字母 'Σ' 拥有二个小写形式，取决于在词中的位置：'σ' 与 'ς'。此情况下对 {{tt|do_tolower}} 的调用不能获得正确的小写形式。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;locale&gt;

void try_lower(const std::ctype&lt;wchar_t&gt;&amp; f, wchar_t c)
{
    wchar_t up = f.tolower(c);
    if (up != c)
        std::wcout &lt;&lt; "\'" &lt;&lt; c &lt;&lt; "' 的小写形式是 " &lt;&lt; up &lt;&lt; '\n';
    else
        std::wcout &lt;&lt; '\'' &lt;&lt; c &lt;&lt; "' 没有小写形式\n";
}

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    std::wcout.imbue(std::locale());
    std::wcout &lt;&lt; "美国英语 UTF-8 本地环境中:\n";
    auto&amp; f = std::use_facet&lt;std::ctype&lt;wchar_t&gt;&gt;(std::locale());
    try_lower(f, L'Σ');
    try_lower(f, L'Ɛ');
    try_lower(f, L'Ａ');

    std::wstring str = L"HELLo, wORLD!";
    std::wcout &lt;&lt; "字符串 '" &lt;&lt; str &lt;&lt; "' 的小写形式是 ";
    f.tolower(&amp;str[0], &amp;str[0] + str.size());
    std::wcout &lt;&lt; "'" &lt;&lt; str &lt;&lt; "'\n";
}
|output=
美国英语 UTF-8 本地环境中:
'Σ' 的小写形式是 σ
'Ɛ' 的小写形式是 ɛ
'Ａ' 的小写形式是 ａ
字符串 'HELLo, wORLD!' 的小写形式是 'hello, world!'
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/locale/ctype/dsc toupper}}
{{dsc inc|cpp/string/byte/dsc tolower}}
{{dsc inc|cpp/string/wide/dsc towlower}}
{{dsc end}}

{{langlinks|en|ja}}