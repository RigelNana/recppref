{{cpp/title|extents|dextents|dims}}
{{cpp/container/mdspan/extents/navbar}}
{{dcl begin}}
{{dcl header|mdspan}}
{{dcl|num=1|since=c++23|1=
template&lt; class IndexType, std::size_t... Extents &gt;
class extents;
}}
{{dcl|num=2|since=c++23|1=
template&lt; class IndexType, std::size_t Rank &gt;
using dextents = /* 见下文 */
}}
{{dcl|num=3|since=c++26|1=
template&lt; std::size_t Rank, class IndexType = std::size_t &gt;
using dims = std::dextents&lt;IndexType, Rank&gt;;
}}
{{dcl end}}

@1@ 表示一个秩等于 {{c|sizeof...(Extents)}} 的多维索引空间。
@2@ 用于全动态 {{tt|extents}} 的便利别名模板。令 {{tt|d}} 代表 {{c|std::dynamic_extent}}，其每个特化 {{c|dextents&lt;IndexType, Rank&gt;}} 均等价于 {{c|extents&lt;IndexType /*, d, d, ..., d*/&gt;}}（即重复共 {{tt|Rank}} 次 {{tti|d}}）。
@3@ 用于全动态 {{tt|extents}} 的便利别名模板，其以 {{co|std::size_t}} 作为默认索引类型。

{{tt|extents}} 的每个特化均实现 {{lconcept|regular}} 且为 {{named req|TriviallyCopyable}}。

===模板形参===
{{par begin}}
{{par|IndexType|各个非动态 {{tt|Extents}} 的类型。应当为有符号或无符号整数类型。否则程序非良构}}
{{par|Extents|表示每个秩索引的尺度（整数区间的大小）。其各个元素要么等于 {{co|std::dynamic_extent}}（此种情况它表示一个''动态尺度''，而尺度大小则动态确定），要么可表示为 {{tt|IndexType}} 类型的值（由此它表示一个''静态尺度''，尺度大小就是它的值），要么程序就非良构}}
{{par|Rank|代表全动态 {{tt|extents}} 的秩}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|index_type}}|{{tt|IndexType}}}}
{{dsc|{{tt|size_type}}|{{c/core|std::make_unsigned_t&lt;index_type&gt;}}}}
{{dsc|{{tt|rank_type}}|{{lc|std::size_t}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名字|定义}}
{{dsc expos mem obj|private=yes|spec={{c/core|std::array&lt;index_type, rank_dynamic()&gt;}}|dynamic-extents|存储各个动态尺度大小的数组。}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/mdspan/extents/dsc constructor}}

{{dsc h2|观察器}}
{{dsc inc|cpp/container/mdspan/extents/dsc rank}}
{{dsc inc|cpp/container/mdspan/extents/dsc rank_dynamic}}
{{dsc inc|cpp/container/mdspan/extents/dsc static_extent}}
{{dsc inc|cpp/container/mdspan/extents/dsc extent}}

{{dsc h2|辅助类型}}
{{dsc inc|cpp/container/mdspan/extents/dsc fwd-prod-of-extents}}
{{dsc inc|cpp/container/mdspan/extents/dsc rev-prod-of-extents}}
{{dsc inc|cpp/container/mdspan/extents/dsc index-cast}}
{{dsc inc|cpp/container/mdspan/extents/dsc dynamic-index}}
{{dsc inc|cpp/container/mdspan/extents/dsc dynamic-index-inv}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/mdspan/extents/dsc operator{{==}}}}
{{dsc end}}

==={{rl|deduction guides|推导指引}}{{mark c++23}}===

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc rank}}
{{dsc inc|cpp/types/dsc extent}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}