{{cpp/container/mdspan/layout_stride/title|mapping}}
{{cpp/container/mdspan/layout_stride/mapping/navbar}}
{{dcl begin}}
{{dcl header|mdspan}}
{{dcl|since=c++23|1=
template&lt; class Extents &gt;
class layout_stride::mapping;
}}
{{dcl end}}

类模板 {{tt|layout_stride::mapping}} 控制多维索引如何以用户定义的步长映射为表示偏移的一维值。

{{tt|mapping}} 的每个特化都是{{named req|LayoutMapping}}，并且是满足 {{lconcept|regular}} 的{{named req|TriviallyCopyable}}类型。

如果多维索引空间 {{c|Extents()}} 的大小在 {{c|Extents::rank_dynamic()}} 为 {{c|0}} 时不能表示为 {{c|Extents::index_type}} 类型的值，则程序非良构。

===模板形参===
{{par begin}}
{{par|Extents|指定编译时已知的维度数量和它们的大小。必须是 {{tt|std::extents}} 的特化。}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|extents_type}}|{{tt|Extents}}}}
{{dsc|{{tt|index_type}}|{{tt|extents_type::index_type}}}}
{{dsc|{{tt|size_type}}|{{tt|extents_type::size_type}}}}
{{dsc|{{tt|rank_type}}|{{tt|extents_type::rank_type}}}}
{{dsc|{{tt|layout_type}}|{{lc|std::layout_stride}}}}
{{dsc end}}

===成员常量===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem sconst|private=yes|spec={{c/core|constexpr rank_type}}|rank_|{{c|extents_type::rank()}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem obj|spec={{tt|extents_type}}|extents_|id=extents|private=yes|尺度对象}}
{{dsc expos mem obj|spec={{c/core|std::array&lt;index_type, rank_&gt;}}|strides_|id=strides|private=yes|步长的数组}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc constructor|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc operator{{=}}|layout_stride}}

{{dsc h2|观察器}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc extents|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc strides|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc required_span_size|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc operator()|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc is_unique|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc is_exhaustive|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc is_strided|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc is_always_unique|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc is_always_exhaustive|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc is_always_strided|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc stride|layout_stride}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc operator{{==}}|layout_stride}}
{{dsc inc|cpp/container/mdspan/layout_mapping/dsc submdspan_mapping|layout_stride}}
{{dsc end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/container/mdspan/layout_left/dsc mapping}}
{{dsc inc|cpp/container/mdspan/layout_right/dsc mapping}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}