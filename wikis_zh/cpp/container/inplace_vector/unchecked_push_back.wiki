{{cpp/container/inplace_vector/title|unchecked_push_back}}
{{cpp/container/inplace_vector/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr reference unchecked_push_back( const T&amp; value );
}}
{{dcl|num=2|since=c++26|
constexpr reference unchecked_push_back( T&amp;&amp; value );
}}
{{dcl end}}

将给定元素 {{c|value}} 追加到容器末尾。

等价于：{{c|return *try_push_back(std::forward&lt;decltype(value)&gt;(value));}}

@1@ 新元素是由  初始化新元素为 {{c|value}} 的副本。
@2@ 移动 {{c|value}} 进新元素。

{{cpp/precondition|在调用该函数之前，{{c|size() &lt; capacity()}} 必须是 {{c|true}}。}}

{{cpp/container/note iterator invalidation|inplace_vector|unchecked_push_back}}

===参数===
{{par begin}}
{{par|value|要追加的元素值}}
{{par hreq}}
{{par req named|T|CopyInsertable|overload=1}}
{{par req named|T|MoveInsertable|overload=2}}
{{par end}}

===返回值===
{{rlpf|back}}，即对插入元素的引用。

===复杂度===
常数。

===异常===
插入的元素初始化时抛出的任何异常。

{{cpp/strong exception safety guarantee|plural=yes}}

===注解===
{{todo|Explain the purpose of this API.}}

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;inplace_vector&gt;
#include &lt;string&gt;

int main()
{
    std::inplace_vector&lt;std::string, 2&gt; fauna;
    std::string dog{"dog"};

    auto&amp; r1 = fauna.unchecked_push_back("cat"); // overload (1)
    assert(r1 == "cat" and fauna.size() == 1);
    auto&amp; r2 = fauna.unchecked_push_back(std::move(dog)); // overload (2)
    assert(r2 == "dog" and fauna.size() == 2);
    assert(fauna[0] == "cat" and fauna[1] == "dog");
    // fauna.unchecked_push_back("bug"); // undefined behavior: there is no space
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/container/dsc push_back|inplace_vector}}
{{dsc inc|cpp/container/dsc emplace_back|inplace_vector}}
{{dsc inc|cpp/container/dsc append_range|inplace_vector}}
{{dsc inc|cpp/container/dsc try_push_back|inplace_vector}}
{{dsc inc|cpp/container/dsc try_emplace_back|inplace_vector}}
{{dsc inc|cpp/container/dsc try_append_range|inplace_vector}}
{{dsc inc|cpp/container/dsc unchecked_emplace_back|inplace_vector}}
{{dsc inc|cpp/container/dsc pop_back|inplace_vector}}
{{dsc inc|cpp/iterator/dsc back_inserter}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}