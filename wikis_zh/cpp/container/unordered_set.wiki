{{cpp/title|unordered_set}}
{{cpp/container/unordered_set/navbar}}
{{dcl begin}}
{{dcl header|unordered_set}}
{{dcl|num=1|since=c++11|1=
template&lt;
    class Key,
    class Hash = std::hash&lt;Key&gt;,
    class KeyEqual = std::equal_to&lt;Key&gt;,
    class Allocator = std::allocator&lt;Key&gt;
&gt; class unordered_set;
}}
{{dcl|num=2|since=c++17|1=
namespace pmr {
    template&lt;
        class Key,
        class Hash = std::hash&lt;Key&gt;,
        class Pred = std::equal_to&lt;Key&gt;
    &gt; using unordered_set = std::unordered_set&lt;Key, Hash, Pred,
                                std::pmr::polymorphic_allocator&lt;Key&gt;&gt;;
}
}}
{{dcl end}}

{{tt|unordered_set}} 是一种关联容器，含有 {{tt|Key}} 类型的唯一对象集合。搜索、插入和移除拥有平均常数时间复杂度。

在内部，元素并不以任何特别顺序排序，而是组织进桶中。元素被放进哪个桶完全依赖其值的散列。这允许对单独元素的快速访问，因为一旦计算了散列值，它就指代元素被放入的确切的桶。

不可修改容器元素（即使通过非 const 迭代器），因为修改可能更改元素的散列，并破坏容器。

{{tt|std::unordered_set}} 满足{{named req|Container}}、{{named req|AllocatorAwareContainer}}和{{named req|UnorderedAssociativeContainer}}的要求。

{{cpp/is_constexpr|since=c++26|transient=yes}}

===迭代器失效===
{| class="dsctable" style="font-size:1.0em"
! 操作
! 失效
|-
| 所有只读操作、{{lc|swap}}、{{lc|std::swap}}
| 决不
|-
| {{lc|clear}}、{{lc|rehash}}、{{lc|reserve}}、{{lc|1=operator=}}
| 始终
|-
| {{lc|insert}}、{{lc|emplace}}、{{lc|emplace_hint}}
| 仅限重散列的情况
|-
| {{lc|erase}}
| 仅限指向被擦除元素的迭代器
|}

====注解====
* swap 函数不会使容器内的任何迭代器失效，但它们会使标记交换区域结尾的迭代器失效。

* 指向在容器中存储的键或元素的引用和指针只会因为擦除该元素而失效，即使对应迭代器失效也是如此。

* 在移动赋值容器后，除非由不兼容的分配器强制进行了逐元素移动赋值，否则到被移动的容器中的引用，指针和迭代器（除了尾后迭代器）都保持有效，但它们现在会指代 {{c|*this}} 中的元素。

===模板形参===
{{todo|添加模板形参的说明。}}

===成员类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc inc|cpp/container/dsc key_type|unordered_set}}
{{dsc inc|cpp/container/dsc value_type|unordered_set}}
{{dsc inc|cpp/container/dsc size_type|unordered_set}}
{{dsc inc|cpp/container/dsc difference_type|unordered_set}}
{{dsc inc|cpp/container/dsc hasher|unordered_set}}
{{dsc inc|cpp/container/dsc key_equal|unordered_set}}
{{dsc inc|cpp/container/dsc allocator_type|unordered_set}}
{{dsc inc|cpp/container/dsc reference|unordered_set}}
{{dsc inc|cpp/container/dsc const_reference|unordered_set}}
{{dsc inc|cpp/container/dsc pointer|unordered_set}}
{{dsc inc|cpp/container/dsc const_pointer|unordered_set}}
{{dsc inc|cpp/container/dsc iterator|unordered_set}}
{{dsc inc|cpp/container/dsc const_iterator|unordered_set}}
{{dsc inc|cpp/container/dsc local_iterator|unordered_set}}
{{dsc inc|cpp/container/dsc const_local_iterator|unordered_set}}
{{dsc inc|cpp/container/dsc node_type|unordered_set}}
{{dsc inc|cpp/container/dsc insert_return_type|unordered_set}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/dsc constructor|unordered_set}}
{{dsc inc|cpp/container/dsc destructor|unordered_set}}
{{dsc inc|cpp/container/dsc operator{{=}}|unordered_set}}
{{dsc inc|cpp/container/dsc get_allocator|unordered_set}}

{{dsc h2|迭代器}}
{{dsc inc|cpp/container/dsc begin|unordered_set}}
{{dsc inc|cpp/container/dsc end|unordered_set}}

{{dsc h2|容量}}
{{dsc inc|cpp/container/dsc empty|unordered_set}}
{{dsc inc|cpp/container/dsc size|unordered_set}}
{{dsc inc|cpp/container/dsc max_size|unordered_set}}

{{dsc h2|修改器}}
{{dsc inc|cpp/container/dsc clear|unordered_set}}
{{dsc inc|cpp/container/dsc insert|unordered_set}}
{{dsc inc|cpp/container/dsc insert_range|unordered_set}}
{{dsc inc|cpp/container/dsc emplace|unordered_set}}
{{dsc inc|cpp/container/dsc emplace_hint|unordered_set}}
{{dsc inc|cpp/container/dsc erase|unordered_set}}
{{dsc inc|cpp/container/dsc swap|unordered_set}}
{{dsc inc|cpp/container/dsc extract|unordered_set}}
{{dsc inc|cpp/container/dsc merge|unordered_set}}

{{dsc h2|查找}}
{{dsc inc|cpp/container/dsc count|unordered_set}}
{{dsc inc|cpp/container/dsc find|unordered_set}}
{{dsc inc|cpp/container/dsc contains|unordered_set}}
{{dsc inc|cpp/container/dsc equal_range|unordered_set}}

{{dsc h2|桶接口}}
{{dsc inc|cpp/container/dsc begin(int)|unordered_set}}
{{dsc inc|cpp/container/dsc end(int)|unordered_set}}
{{dsc inc|cpp/container/dsc bucket_count|unordered_set}}
{{dsc inc|cpp/container/dsc max_bucket_count|unordered_set}}
{{dsc inc|cpp/container/dsc bucket_size|unordered_set}}
{{dsc inc|cpp/container/dsc bucket|unordered_set}}

{{dsc h2|散列策略}}
{{dsc inc|cpp/container/dsc load_factor|unordered_set}}
{{dsc inc|cpp/container/dsc max_load_factor|unordered_set}}
{{dsc inc|cpp/container/dsc rehash|unordered_set}}
{{dsc inc|cpp/container/dsc reserve|unordered_set}}

{{dsc h2|观察器}}
{{dsc inc|cpp/container/dsc hash_function|unordered_set}}
{{dsc inc|cpp/container/dsc key_eq|unordered_set}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/dsc operator_cmp_unord|unordered_set}}
{{dsc inc|cpp/container/dsc swap2|unordered_set}}
{{dsc inc|cpp/container/dsc erase_if|unordered_set}}
{{dsc end}}

{{rrev|since=c++17|
==={{rl|deduction guides|推导指引}}===
}}

===注解===
{{cpp/container/assoc note}}

{{ftm begin|std=1|comment=1}}
{{ftm|__cpp_lib_containers_ranges|value=202202L|std=C++23|容器的范围构造和插入}}
{{ftm|__cpp_lib_constexpr_containers|value=202502L|std=C++26|{{c/core|constexpr}} {{tt|std::unordered_set}}}}
{{ftm end}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;unordered_set&gt;

void print(const auto&amp; set)
{
    for (const auto&amp; elem : set)
        std::cout &lt;&lt; elem &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

int main()
{
    std::unordered_set&lt;int&gt; mySet{2, 7, 1, 8, 2, 8}; // 创建 int 的集合
    print(mySet);
    
    mySet.insert(5); // 将元素 5 加入集合
    print(mySet);
    
    if (auto iter = mySet.find(5); iter != mySet.end())
        mySet.erase(iter); // 移除 iter 指向的元素
    print(mySet);
    
    mySet.erase(7); // 移除元素 7
    print(mySet);
}
|p=true
|output=
8 1 7 2
5 8 1 7 2
8 1 7 2
8 1 2
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2050|std=C++11|before={{tt|reference}}、{{tt|const_reference}}、{{tt|pointer}} 和&lt;br&gt;{{tt|const_pointer}} 的定义都基于 {{tt|allocator_type}}|after=基于 {{tt|value_type}} 和&lt;br&gt;{{lc|std::allocator_traits}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/container/dsc unordered_multiset}}
{{dsc inc|cpp/container/dsc set}}
{{dsc inc|cpp/container/dsc flat_set}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}