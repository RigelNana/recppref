{{cpp/title|hash{{petty|&lt;std::vector&lt;bool&gt;&gt;}}}}
{{cpp/container/vector_bool/navbar}}
{{ddcl|header=vector|since=c++11|1=
template&lt; class Allocator &gt;
struct hash&lt;std::vector&lt;bool, Allocator&gt;&gt;;
}}

{{lc|std::hash}} 对 {{c|std::vector&lt;bool&gt;}} 的模板特化允许用户获得 {{c|std::vector&lt;bool&gt;}} 类型对象的散列。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;unordered_set&gt;
#include &lt;vector&gt;

using vb = std::vector&lt;bool&gt;;

vb to_vector_bool(unsigned n)
{
    vb v;
    do
    {
        v.push_back(n &amp; 1);
        n &gt;&gt;= 1;
    }
    while (n);
    return v;
}

auto print(const vb&amp; v, bool new_line = true)
{
    for (std::cout &lt;&lt; "{ "; const bool e : v)
        std::cout &lt;&lt; e &lt;&lt; ' ';
    std::cout &lt;&lt; '}' &lt;&lt; (new_line ? '\n' : ' ');
}

int main()
{
    for (auto i{0U}; i != 8; ++i)
    {
        std::cout &lt;&lt; std::hex &lt;&lt; std::uppercase;
        vb v = to_vector_bool(i);
        std::cout &lt;&lt; std::hash&lt;vb&gt;{}(v) &lt;&lt; ' ' &lt;&lt; std::dec;
        print(v);
    }

    // 针对 vector&lt;bool&gt; 的 std::hash 使得可以将它们放在
    // unordered_* 关联容器中，如 unordered_set。

    std::unordered_set v{vb{0}, vb{0, 0}, vb{1}, vb{1}, vb{1, 0}, vb{1, 1}&lt;!----&gt;};

    for (vb const&amp; e : v)
        print(e, 0);
    std::cout &lt;&lt; '\n';
}
|p=true
|output=
6D09EE26D5863619 { 0 }
3C27D9F591D20E49 { 1 }
E74D3F72B7599C63 { 0 1 }
EE3BE81F55123770 { 1 1 }
3AAD2A2EDBEC6C35 { 0 0 1 }
EB057F773CB64C43 { 1 0 1 }
6E1354730102BE00 { 0 1 1 }
E2E622597C18899D { 1 1 1 }
{ 1 1 } { 1 0 } { 1 } { 0 0 } { 0 }
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc end}}

{{langlinks|en|ja|ru}}