{{title|{{tt|std::priority_queue}} 的推导指引}}
{{cpp/container/priority_queue/navbar}}
{{dcl begin}}
{{dcl header|queue}}
{{dcl|num=1|since=c++17|1=
template&lt; class Comp, class Container &gt;
priority_queue( Comp, Container )
    -&gt; priority_queue&lt;typename Container::value_type, Container, Comp&gt;;
}}
{{dcl|num=2|since=c++17|1=
template&lt; class InputIt,
          class Comp = std::less&lt;/*iter-val-t*/&lt;InputIt&gt;&gt;,
          class Container = std::vector&lt;/*iter-val-t*/&lt;InputIt&gt; &gt;
priority_queue( InputIt, InputIt, Comp = Comp(), Container = Container() )
    -&gt; priority_queue&lt;/*iter-val-t*/&lt;InputIt&gt;, Container, Comp&gt;;
}}
{{dcla|num=3|since=c++17|1=
template&lt; class Comp, class Container, class Alloc &gt;
priority_queue( Comp, Container, Alloc )
    -&gt; priority_queue&lt;typename Container::value_type, Container, Comp&gt;;
}}
{{dcla|num=4|since=c++17|
template&lt; class InputIt, class Alloc &gt;
priority_queue( InputIt, InputIt, Alloc )
    -&gt; priority_queue&lt;/*iter-val-t*/&lt;InputIt&gt;,
                      std::vector&lt;/*iter-val-t*/&lt;InputIt&gt;, Alloc&gt;,
                      std::less&lt;/*iter-val-t*/&lt;InputIt&gt;&gt;&gt;;
}}
{{dcl|num=5|since=c++17|
template&lt; class InputIt, class Comp, class Alloc &gt;
priority_queue( InputIt, InputIt, Comp, Alloc )
    -&gt; priority_queue&lt;/*iter-val-t*/&lt;InputIt&gt;,
                      std::vector&lt;/*iter-val-t*/&lt;InputIt&gt;, Alloc&gt;, Comp&gt;;
}}
{{dcl|num=6|since=c++17|
template&lt; class InputIt, class Comp, class Container, class Alloc &gt;
priority_queue( InputIt, InputIt, Comp, Container, Alloc )
    -&gt; priority_queue&lt;typename Container::value_type, Container, Comp&gt;;
}}
{{dcla|num=7|since=c++23|1=
template&lt; ranges::input_range R,
          class Comp = std::less&lt;ranges::range_value_t&lt;R&gt;&gt; &gt;
priority_queue( std::from_range_t, R&amp;&amp;, Comp = Comp() )
    -&gt; priority_queue&lt;ranges::range_value_t&lt;R&gt;,
                      std::vector&lt;ranges::range_value_t&lt;R&gt;&gt;, Comp&gt;;
}}
{{dcl|num=8|since=c++23|1=
template&lt; ranges::input_range R, class Comp, class Alloc &gt;
priority_queue( std::from_range_t, R&amp;&amp;, Comp, Alloc )
    -&gt; priority_queue&lt;ranges::range_value_t&lt;R&gt;,
                      std::vector&lt;ranges::range_value_t&lt;R&gt;, Alloc&gt;, Comp&gt;;
}}
{{dcl|num=9|since=c++23|1=
template&lt; ranges::input_range R, class Alloc &gt;
priority_queue( std::from_range_t, R&amp;&amp;, Alloc )
    -&gt; priority_queue&lt;ranges::range_value_t&lt;R&gt;,
                      std::vector&lt;ranges::range_value_t&lt;R&gt;, Alloc&gt;&gt;;
}}
{{cpp/container/deduction guides expos type aliases}}
{{dcl end}}

为 {{lc|std::priority_queue}} 提供了下列[[cpp/language/class template argument deduction|推导指引]]：

@1-6@ 允许从底层容器类型以及从迭代器范围推导。

@7-9@ 允许从 {{ltt|cpp/ranges/from_range|std::from_range_t}} 标签和一个 {{lc|std::ranges::input_range|input_range}} 推导。

{{cpp/enable_if|plural=yes|
* {{tt|InputIt}} 满足{{named req|InputIterator}}、
* {{tt|Comp}} 不满足{{named req|Allocator}}、
* {{tt|Container}} 不满足{{named req|Allocator}}，
* {{rev inl|since=c++23|对于重载 {{vl|4,5}}，}}{{tt|Alloc}} 满足{{named req|Allocator}}，并且
* 对于重载 {{vl|3,6}}，{{c|std::uses_allocator_v&lt;Container, Alloc&gt;}} 为 {{c|true}} }}。

{{cpp/container/inputit_allocator_detection}}

===注解===
{{ftm begin|std=yes|comment=yes}}
{{ftm|__cpp_lib_containers_ranges|[[cpp/ranges/to#容器兼容范围|按范围]]的构造和插入；重载 {{vl|7-9}}|value=202202L|std=C++23}}
{{ftm end}}

===示例===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;vector&gt;

int main()
{
    const std::vector&lt;int&gt; v = {1, 2, 3, 4};
    std::priority_queue pq1{std::greater&lt;int&gt;{}, v}; // 推导 std::priority_queue&lt;
                                                     //     int, std::vector&lt;int&gt;,
                                                     //     std::greater&lt;int&gt;&gt;
    for (; !pq1.empty(); pq1.pop())
        std::cout &lt;&lt; pq1.top() &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';

    std::priority_queue pq2{v.begin(), v.end()}; // 推导 std::priority_queue&lt;int&gt;

    for (; !pq2.empty(); pq2.pop())
        std::cout &lt;&lt; pq2.top() &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
1 2 3 4
4 3 2 1
}}

===缺陷报告===
{{dr list begin}}
{{dr list item |wg=lwg|dr=3506|std=C++17|before=缺少源自迭代器和分配器的推导指引|after=已添加，{{vl|4-6}}}}
{{dr list end}}

{{langlinks|de|en|es|ja|ru}}