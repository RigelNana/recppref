{{cpp/container/multiset/title|insert}}
{{cpp/container/multiset/navbar}}
{{dcl begin}}
{{dcl|num=1|
iterator insert( const value_type&amp; value );
}}
{{dcl|num=2|since=c++11|
iterator insert( value_type&amp;&amp; value );
}}
{{dcl rev multi|num=3|until1=c++11
|dcl1=
iterator insert( iterator pos, const value_type&amp; value );
|dcl2=
iterator insert( const_iterator pos, const value_type&amp; value );
}}
{{dcl|num=4|since=c++11|
iterator insert( const_iterator pos, value_type&amp;&amp; value );
}}
{{dcl|num=5|
template&lt; class InputIt &gt;
void insert( InputIt first, InputIt last );
}}
{{dcl|num=6|since=c++11|
void insert( std::initializer_list&lt;value_type&gt; ilist );
}}
{{dcl|num=7|since=c++17|
iterator insert( node_type&amp;&amp; nh );
}}
{{dcl|num=8|since=c++17|
iterator insert( const_iterator pos, node_type&amp;&amp; nh );
}}
{{dcl end}}

插入元素到容器。保留等价元素的顺序。

@1,2@ 插入 {{c|value}}。如果容器拥有带等价键的元素，那么插入到范围上界。

@3,4@ 将 {{c|value}} 插入到尽可能接近正好在 {{c|pos}} 之前的位置。

@5@ 插入来自范围 {{tt|[first, last)}} 的元素。

@6@ 插入来自 initializer_list {{c|ilist}} 的元素。

{{cpp/container/node handle insert desc|multiset|7|8}}

{{cpp/container/note iterator invalidation|multiset|insert}}

===参数===
{{par begin}}
{{par|pos|指向新元素将被插入位置之前的迭代器}}
{{par|value|要插入的元素值}}
{{par range|3=要插入的|range=源}}
{{par|ilist|插入值来源的 initializer_list}}
{{par|nh|兼容的[[cpp/container/node_handle|结点句柄]]}}
{{par hreq}}
{{par req named|InputIt|InputIterator}}
{{par end}} 

===返回值===
@1-4@ 指向被插入元素的迭代器。

@5,6@ （无）

{{cpp/container/node handle insert return|multiset|7|8}}

===异常===
@1-4,7,8@ 如果任何操作抛出异常，那么插入无效果。

@5,6@ 无异常安全保证。

===复杂度===
@1,2,7@ {{tt|O(log(size()))}}

@3,4,8@ 如果正好在 {{c|pos}} 的前一个位置插入，那么是均摊常数，否则是 {{tt|O(log(size()))}}。

@5,6@{{tt|O(N&amp;middot;log(size() + N))}}，其中 {{tt|N}} 是要插入的元素数。

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=233|std=C++98|before={{c|pos}} 只是提示，可以完全忽略|after=必须在尽可能接近正好在&lt;br&gt;{{c|pos}} 之前的位置插入}}
{{dr list item|wg=lwg|dr=264|std=C++98|before=重载 {{v|5}} 的复杂度在范围 {{tt|[i, j)}} 已经按 {{tt|Compare}} 排序的情况下要求是线性|after=取消这种情况下的线性复杂度要求}}
{{dr list item|wg=lwg|dr=371|std=C++98|before=等价元素不一定会保留顺序|after=要求保留}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/container/dsc emplace|multiset}}
{{dsc inc|cpp/container/dsc emplace_hint|multiset}}
{{dsc inc|cpp/iterator/dsc inserter}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}