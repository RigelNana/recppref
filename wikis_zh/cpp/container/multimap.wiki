{{cpp/title|multimap}}
{{cpp/container/multimap/navbar}}
{{dcl begin}}
{{dcl header|map}}
{{dcl|num=1|1=
template&lt;
    class Key,
    class T,
    class Compare = std::less&lt;Key&gt;,
    class Allocator = std::allocator&lt;std::pair&lt;const Key, T&gt;&gt;
&gt; class multimap;
}}
{{dcl|num=2|since=c++17|1=
namespace pmr {
    template&lt;
        class Key,
        class T,
        class Compare = std::less&lt;Key&gt;
    &gt; using multimap = std::multimap&lt;Key, T, Compare,
        std::pmr::polymorphic_allocator&lt;std::pair&lt;const Key, T&gt;&gt;&gt;;
}
}}
{{dcl end}}

multimap 是关联容器，含有键值对的已排序列表，同时容许多个元素拥有同一键。按照应用到键的比较函数 {{tt|Compare}} 排序。搜索、插入和移除操作拥有对数复杂度。

{{tt|std::multimap}} 的迭代器以键的非降序进行迭代，其中非降序由构造时所用的比较函数定义。就是说，给定
* {{c|m}}，为 {{tt|std::multimap}}
* {{c|it_l}} 和 {{c|it_r}}，到 {{c|m}} 的可解引用迭代器，其中 {{c|it_l &lt; it_r}}。
{{c|1=m.value_comp()(*it_r, *it_l) == false}}（使用默认比较函数时为从小到大）。

{{rrev|since=c++11|
拥有等价键的键值对的顺序就是插入顺序，且不会更改。
}}

标准库使用{{named req|Compare}}规定时，均以等价关系确定唯一性，如{{named req|Compare}}中所述。不精确地说，如果两个对象 {{c|a}} 与 {{c|b}} 相互比较不小于对方：{{c|!comp(a, b) &amp;&amp; !comp(b, a)}}，那么认为它们等价。

{{tt|std::multimap}} 满足{{named req|Container}}、{{named req|AllocatorAwareContainer}}、{{named req|AssociativeContainer}}和{{named req|ReversibleContainer}}的要求。

{{cpp/is_constexpr|since=c++26|transient=yes}}

===模板形参===
{{todo|添加模板形参的说明。}}

===成员类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc inc|cpp/container/dsc key_type|multimap}}
{{dsc inc|cpp/container/dsc mapped_type|multimap}}
{{dsc inc|cpp/container/dsc value_type|multimap}}
{{dsc inc|cpp/container/dsc size_type|multimap}}
{{dsc inc|cpp/container/dsc difference_type|multimap}}
{{dsc inc|cpp/container/dsc key_compare|multimap}}
{{dsc inc|cpp/container/dsc allocator_type|multimap}}
{{dsc inc|cpp/container/dsc reference|multimap}}
{{dsc inc|cpp/container/dsc const_reference|multimap}}
{{dsc inc|cpp/container/dsc pointer|multimap}}
{{dsc inc|cpp/container/dsc const_pointer|multimap}}
{{dsc inc|cpp/container/dsc iterator|multimap}}
{{dsc inc|cpp/container/dsc const_iterator|multimap}}
{{dsc inc|cpp/container/dsc reverse_iterator|multimap}}
{{dsc inc|cpp/container/dsc const_reverse_iterator|multimap}}
{{dsc inc|cpp/container/dsc node_type|multimap}}
{{dsc end}}

===成员类===
{{dsc begin}}
{{dsc inc|cpp/container/dsc value_compare|multimap}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/dsc constructor|multimap}}
{{dsc inc|cpp/container/dsc destructor|multimap}}
{{dsc inc|cpp/container/dsc operator{{=}}|multimap}}
{{dsc inc|cpp/container/dsc get_allocator|multimap}}

{{dsc h2|迭代器}}
{{dsc inc|cpp/container/dsc begin|multimap}}
{{dsc inc|cpp/container/dsc end|multimap}}
{{dsc inc|cpp/container/dsc rbegin|multimap}}
{{dsc inc|cpp/container/dsc rend|multimap}}

{{dsc h2|容量}}
{{dsc inc|cpp/container/dsc empty|multimap}}
{{dsc inc|cpp/container/dsc size|multimap}}
{{dsc inc|cpp/container/dsc max_size|multimap}}

{{dsc h2|修改器}}
{{dsc inc|cpp/container/dsc clear|multimap}}
{{dsc inc|cpp/container/dsc insert|multimap}}
{{dsc inc|cpp/container/dsc insert_range|multimap}}
{{dsc inc|cpp/container/dsc emplace|multimap}}
{{dsc inc|cpp/container/dsc emplace_hint|multimap}}
{{dsc inc|cpp/container/dsc erase|multimap}}
{{dsc inc|cpp/container/dsc swap|multimap}}
{{dsc inc|cpp/container/dsc extract|multimap}}
{{dsc inc|cpp/container/dsc merge|multimap}}

{{dsc h2|查找}}
{{dsc inc|cpp/container/dsc count|multimap}}
{{dsc inc|cpp/container/dsc find|multimap}}
{{dsc inc|cpp/container/dsc contains|multimap}}
{{dsc inc|cpp/container/dsc equal_range|multimap}}
{{dsc inc|cpp/container/dsc lower_bound|multimap}}
{{dsc inc|cpp/container/dsc upper_bound|multimap}}

{{dsc h2|观察器}}
{{dsc inc|cpp/container/dsc key_comp|multimap}}
{{dsc inc|cpp/container/dsc value_comp|multimap}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/container/dsc operator_cmp|multimap}}
{{dsc inc|cpp/container/dsc swap2|multimap}}
{{dsc inc|cpp/container/dsc erase_if|multimap}}
{{dsc end}}

{{rrev|since=c++17|
==={{rl|deduction guides|推导指引}}===
}}

===注解===
{{ftm begin|std=1|comment=1}}
{{ftm|__cpp_lib_containers_ranges|value=202202L|std=C++23|容器的范围构造和插入}}
{{ftm|__cpp_lib_constexpr_containers|value=202502L|std=C++26|{{c/core|constexpr}} {{tt|std::multimap}}}}
{{ftm end}}

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=230|std=C++98|before={{tt|Key}} 不需要满足{{named req|CopyConstructible}}&lt;br&gt;（因此不保证能构造 {{tt|Key}} 类型的键）|after={{tt|Key}} 也需要满足&lt;br&gt;{{named req|CopyConstructible}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/container/dsc map}}
{{dsc inc|cpp/container/dsc unordered_multimap}}
{{dsc inc|cpp/container/dsc flat_multimap}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}