{{cpp/container/forward_list/title|erase_after}}
{{cpp/container/forward_list/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
iterator erase_after( const_iterator pos );
}}
{{dcl|num=2|since=c++11|
iterator erase_after( const_iterator first, const_iterator last );
}}
{{dcl end}}

从容器移除指定元素。

@1@ 移除 {{tt|pos}} 后的元素。

@2@ 移除 {{tt|first}} 后直至 {{tt|last}} 前的元素。

===参数===
{{par begin}}
{{par|pos|指向前趋要被移除元素的迭代器}}
{{par range|3=要移除的}}
{{par end}} 

===返回值===
@1@ 指向后随被擦除元素的迭代器，或若不存在这种元素则为 {{lc|end()}}。
@2@ {{c|last}}

===复杂度===
@1@ 常数。
@2@ 与 {{tt|first}} 和 {{tt|last}} 之间的距离成线性。

===示例===
{{example
|code=
#include &lt;forward_list&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;

int main()
{
    std::forward_list&lt;int&gt; l = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };

//  l.erase(l.begin()); // 错误：没有名为 erase() 的函数
    
    l.erase_after(l.before_begin()); // 移除首元素
    
    for (auto n : l)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';

    auto fi = std::next(l.begin());
    auto la = std::next(fi, 3);
    
    l.erase_after(fi, la);
    
    for (auto n : l)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
2 3 4 5 6 7 8 9
2 3 6 7 8 9
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/container/dsc clear|forward_list}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}