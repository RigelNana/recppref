{{cpp/title|ratio_less_equal}}
{{cpp/numeric/ratio/navbar}}
{{ddcl|header=ratio|since=c++11|1=
template&lt; class R1, class R2 &gt;
struct ratio_less_equal : std::integral_constant&lt;bool, /* 见下文 */&gt; { };
}}

若比例 {{tt|R1}} 小于或等于比例 {{tt|R2}}，则提供的成员常量 {{c|value}} 等于 {{c|true}}。否则 {{c|value}} 等于 {{c|false}}。

===辅助变量模板===
{{ddcl|since=c++17|1=
template&lt; class R1, class R2 &gt;
constexpr bool ratio_less_equal_v = ratio_less_equal&lt;R1, R2&gt;::value;
}}

{{cpp/types/integral_constant/inherit| {{c|1=R1::num * R2::den &lt;= R2::num * R1::den}} 或避免溢出的等价表达式，}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ratio&gt;

int main()
{
    static_assert(std::ratio_less_equal&lt;std::ratio&lt;1, 2&gt;, std::ratio&lt;3, 4&gt;&gt;::value,
                  "1/2 &lt;= 3/4");

    if (std::ratio_less_equal&lt;std::ratio&lt;10,11&gt;, std::ratio&lt;11,12&gt;&gt;::value)
        std::cout &lt;&lt; "10/11 &lt;= 11/12" "\n";

    static_assert(std::ratio_less_equal_v&lt;std::ratio&lt;10, 11&gt;, std::ratio&lt;11, 12&gt;&gt;);

    if constexpr (std::ratio_less_equal_v&lt;std::ratio&lt;10, 11&gt;, std::ratio&lt;11, 12&gt;&gt;)
        std::cout &lt;&lt; "11/12 &lt;= 12/13" "\n";
}
|output=
10/11 &lt;= 11/12
11/12 &lt;= 12/13
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/ratio/dsc ratio_equal}}
{{dsc inc|cpp/numeric/ratio/dsc ratio_not_equal}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}