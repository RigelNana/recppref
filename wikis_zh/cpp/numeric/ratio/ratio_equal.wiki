{{cpp/title|ratio_equal}}
{{cpp/numeric/ratio/navbar}}
{{ddcl|header=ratio|since=c++11|1=
template&lt; class R1, class R2 &gt;
struct ratio_equal : std::integral_constant&lt;bool, /* 见下文 */&gt; { };
}}

若比例 {{tt|R1}} 与 {{tt|R2}} 相等，则提供的成员常量 {{c|value}} 等于 {{c|true}}。否则 {{c|value}} 等于 {{c|false}}。

===辅助变量模板===
{{ddcl|since=c++17|1=
template&lt; class R1, class R2 &gt;
constexpr bool ratio_equal_v = ratio_equal&lt;R1, R2&gt;::value;
}}

{{cpp/types/integral_constant/inherit|{{c|1=R1::num == R2::num &amp;&amp; R1::den == R2::den}}}}

===可能的实现===
{{eq fun
|1=
template&lt; class R1, class R2 &gt;
struct ratio_equal : public std::integral_constant &lt;
                                 bool,
                                 R1::num == R2::num &amp;&amp; R1::den == R2::den
                            &gt; {};
}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ratio&gt;
 
int main()
{
    constexpr bool equ = std::ratio_equal_v&lt;std::ratio&lt;2,3&gt;,
                                            std::ratio&lt;6,9&gt;&gt;;
    static_assert(equ);
    std::cout &lt;&lt; "2/3 " &lt;&lt; (equ ? "==" : "!=") &lt;&lt; " 6/9\n";
}
|output=
2/3 == 6/9
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/ratio/dsc ratio_not_equal}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}