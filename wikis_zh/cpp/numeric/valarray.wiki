{{cpp/title|valarray}}
{{cpp/numeric/valarray/navbar}}
{{ddcl|header=valarray|
template&lt; class T &gt;
class valarray;
}}

{{tt|std::valarray}} 是表示并操作值数组的类。它支持对元素逐个进行数学运算，并且支持多种形式的广义下标运算符、切片及间接访问。

===注解===
{{tt|std::valarray}} 及帮助类定义为免除某些形式的别名使用，从而允许这些类上的操作被优化得类似 C 程序语言中关键词 {{ltt|c/language/restrict}} 的效果。而且，接收 {{tt|valarray}} 实参的函数和运算符允许返回代理对象，以使得编译器将诸如 {{c|1=v1 = a * v2 + v3;}} 的表达式优化成执行 {{c|1=v1[i] = a * v2[i] + v3[i];}} 的单个循环，避免任何临时量或多趟运算。然而，{{enwiki|expression templates|表达式模板}}使得同样的优化技巧对任何 C++ 容器可用，而数值库的主流则因灵活性而偏好表达式模板甚于 {{tt|valarray}}。某些 C++ 标准库实现使用表达式模板以实现 {{tt|std::valarray}} 上的高效运算（例如 GNU libstdc++ 与 LLVM libc++）。只有少数库进一步优化了 {{tt|valarray}}，例如 [https://software.intel.com/en-us/node/684140 Intel Integrated Performance Primitives]。

===模板形参===
{{par begin}}
{{par|T|元素的类型。类型必须满足{{named req|NumericType}}}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|value_type}}|{{tt|T}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc valarray}}
{{dsc inc|cpp/numeric/valarray/dsc ~valarray}}
{{dsc inc|cpp/numeric/valarray/dsc operator{{=}}}}
{{dsc inc|cpp/numeric/valarray/dsc operator_at}}
{{dsc inc|cpp/numeric/valarray/dsc operator_arith}}
{{dsc inc|cpp/numeric/valarray/dsc operator_arith2}}
{{dsc inc|cpp/numeric/valarray/dsc swap}}
{{dsc inc|cpp/numeric/valarray/dsc size}}
{{dsc inc|cpp/numeric/valarray/dsc resize}}
{{dsc inc|cpp/numeric/valarray/dsc sum}}
{{dsc inc|cpp/numeric/valarray/dsc min}}
{{dsc inc|cpp/numeric/valarray/dsc max}}
{{dsc inc|cpp/numeric/valarray/dsc shift}}
{{dsc inc|cpp/numeric/valarray/dsc cshift}}
{{dsc inc|cpp/numeric/valarray/dsc apply}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc swap2}}
{{dsc inc|cpp/numeric/valarray/dsc begin2}}
{{dsc inc|cpp/numeric/valarray/dsc end2}}
{{dsc inc|cpp/numeric/valarray/dsc operator_arith3}}
{{dsc inc|cpp/numeric/valarray/dsc operator_cmp}}
{{dsc inc|cpp/numeric/valarray/dsc abs}}

{{dsc h2|指数函数}}
{{dsc inc|cpp/numeric/valarray/dsc exp}}
{{dsc inc|cpp/numeric/valarray/dsc log}}
{{dsc inc|cpp/numeric/valarray/dsc log10}}

{{dsc h2|幂函数}}
{{dsc inc|cpp/numeric/valarray/dsc pow}}
{{dsc inc|cpp/numeric/valarray/dsc sqrt}}

{{dsc h2|三角函数}}
{{dsc inc|cpp/numeric/valarray/dsc sin}}
{{dsc inc|cpp/numeric/valarray/dsc cos}}
{{dsc inc|cpp/numeric/valarray/dsc tan}}
{{dsc inc|cpp/numeric/valarray/dsc asin}}
{{dsc inc|cpp/numeric/valarray/dsc acos}}
{{dsc inc|cpp/numeric/valarray/dsc atan}}
{{dsc inc|cpp/numeric/valarray/dsc atan2}}

{{dsc h2|双曲函数}}
{{dsc inc|cpp/numeric/valarray/dsc sinh}}
{{dsc inc|cpp/numeric/valarray/dsc cosh}}
{{dsc inc|cpp/numeric/valarray/dsc tanh}}
{{dsc end}}

===辅助类===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc slice}}
{{dsc inc|cpp/numeric/valarray/dsc slice_array}}
{{dsc inc|cpp/numeric/valarray/dsc gslice}}
{{dsc inc|cpp/numeric/valarray/dsc gslice_array}}
{{dsc inc|cpp/numeric/valarray/dsc mask_array}}
{{dsc inc|cpp/numeric/valarray/dsc indirect_array}}
{{dsc end}}

==={{rl|deduction_guides|推导指引}}{{mark since c++17}}===

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/simd/dsc simd}}
{{dsc inc|cpp/numeric/simd/dsc simd_mask}}
{{dsc inc|cpp/experimental/simd/dsc simd}}
{{dsc inc|cpp/experimental/simd/dsc simd_mask}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}