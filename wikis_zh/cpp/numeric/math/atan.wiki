{{cpp/title|atan|atanf|atanl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=atan
|param1=num
|constexpr_since=26
|desc=计算 {{c|num}} 的弧（反）正切主值。
}}

===参数===
{{par begin}}
{{par|num|浮点数或整数}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|num}} 在 {{math|[- {{mfrac|&amp;pi;|2}} , +{{mfrac|&amp;pi;|2}}]}} 弧度范围中的弧（反）正切（{{math|arctan(num)}}）。

如果发生下溢所致的值域错误，那么返回（舍入后的）正确结果。

===错误处理===
报告 {{lc|math_errhandling}} 中指定的错误。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 如果实参是 ±0，那么返回不修改的实参
* 如果实参是 +∞，那么返回 +&amp;pi;/2
* 如果实参是 -∞，那么返回 -&amp;pi;/2
* 如果实参是 NaN，那么返回 NaN

===注解===
[http://pubs.opengroup.org/onlinepubs/9699919799/functions/atan.html POSIX 指定]在下溢情况下，返回不修改的 {{c|num}}，而在不支持的情况下返回不大于 {{ltt|cpp/types/climits#浮点数类型极限|DBL_MIN}}、{{lc|FLT_MIN}} 和 {{lc|LDBL_MIN}} 的由实现定义的值。

{{cpp/numeric/math/additional integer overload note|atan}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "atan(1) = " &lt;&lt; std::atan(1) &lt;&lt; '\n'
              &lt;&lt; "4*atan(1) = " &lt;&lt; 4 * std::atan(1) &lt;&lt; '\n';

    // 特殊值
    std::cout &lt;&lt; "atan(Inf) = " &lt;&lt; std::atan(INFINITY) &lt;&lt; '\n'
              &lt;&lt; "2*atan(Inf) = " &lt;&lt; 2 * std::atan(INFINITY) &lt;&lt; '\n'
              &lt;&lt; "atan(-0.0) = " &lt;&lt; std::atan(-0.0) &lt;&lt; '\n'
              &lt;&lt; "atan(+0.0) = " &lt;&lt; std::atan(0) &lt;&lt; '\n';
}
|output=
atan(1) = 0.785398
4*atan(1) = 3.14159
atan(Inf) = 1.5708
2*atan(Inf) = 3.14159
atan(-0.0) = -0
atan(+0.0) = 0
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc asin}}
{{dsc inc|cpp/numeric/math/dsc acos}}
{{dsc inc|cpp/numeric/math/dsc atan2}}
{{dsc inc|cpp/numeric/math/dsc tan}}
{{dsc inc|cpp/numeric/complex/dsc atan}}
{{dsc inc|cpp/numeric/valarray/dsc atan}}
{{dsc see c|c/numeric/math/atan}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}