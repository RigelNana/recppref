{{cpp/title|fdim|fdimf|fdiml}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=fdim
|param1=x
|param2=y
|constexpr_since=23
|desc=返回 {{c|x}} 与 {{c|y}} 间的正差，即在 {{c|x &gt; y}} 时返回 {{c|x - y}}，否则（即在 {{c|1=x &lt;= y}} 时）返回 {{c|+0}}。
}}

===参数===
{{par begin}}
{{par|x, y|浮点数或整数}}
{{par end}}

===返回值===
在成功时返回 {{c|x}} 与 {{c|y}} 间的正差。

如果出现上溢导致的值域错误，那么返回 {{tt|+HUGE_VAL}}、{{tt|+HUGE_VALF}} 或 {{tt|+HUGE_VALL}}。

如果出现下溢导致的值域错误，那么返回（舍入后的）正确结果。

===错误处理===
报告 {{lc|math_errhandling}} 中指定的错误。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 如果任一实参是 NaN，那么返回 NaN

===注解===
除了 NaN 处理的要求外，等价于 {{c|std::fmax(x - y, 0)}}。

{{cpp/numeric/math/additional overload note|fdim}}

===示例===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;cfenv&gt;
#include &lt;cmath&gt;
#include &lt;cstring&gt;
#include &lt;iostream&gt;
 
#ifndef __GNUC__
#pragma STDC FENV_ACCESS ON
#endif
 
int main()
{
    std::cout &lt;&lt; "fdim(4, 1) = " &lt;&lt; std::fdim(4, 1) &lt;&lt; '\n'
              &lt;&lt; "fdim(1, 4) = " &lt;&lt; std::fdim(1, 4) &lt;&lt; '\n'
              &lt;&lt; "fdim(4,-1) = " &lt;&lt; std::fdim(4, -1) &lt;&lt; '\n'
              &lt;&lt; "fdim(1,-4) = " &lt;&lt; std::fdim(1, -4) &lt;&lt; '\n';
    
    // 错误处理
    errno = 0;
    std::feclearexcept(FE_ALL_EXCEPT);
    
    std::cout &lt;&lt; "fdim(1e308, -1e308) = " &lt;&lt; std::fdim(1e308, -1e308) &lt;&lt; '\n';
    
    if (errno == ERANGE)
        std::cout &lt;&lt; "    errno == ERANGE: " &lt;&lt; std::strerror(errno) &lt;&lt; '\n';
    if (std::fetestexcept(FE_OVERFLOW))
        std::cout &lt;&lt; "    发生 FE_OVERFLOW\n";
}
|output=
fdim(4, 1) = 3
fdim(1, 4) = 0
fdim(4,-1) = 5
fdim(1,-4) = 5
fdim(1e308, -1e308) = inf
    errno == ERANGE: Numerical result out of range
    发生 FE_OVERFLOW
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc abs}}
{{dsc inc|cpp/numeric/math/dsc fmax}}
{{dsc see c|c/numeric/math/fdim}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}