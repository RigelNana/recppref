{{cpp/numeric/math/unary_is|isfinite
|description=确定给定的浮点数 {{c|num}} 是否拥有有限值，即它是正规、非正规或零，但不是无穷大或 NaN。
|condition=拥有有限值
}}

===示例===
{{example
|code=
#include &lt;cfloat&gt;
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::boolalpha
              &lt;&lt; "isfinite(NaN) = " &lt;&lt; std::isfinite(NAN) &lt;&lt; '\n'
              &lt;&lt; "isfinite(Inf) = " &lt;&lt; std::isfinite(INFINITY) &lt;&lt; '\n'
              &lt;&lt; "isfinite(-Inf) = " &lt;&lt; std::isfinite(-INFINITY) &lt;&lt; '\n'
              &lt;&lt; "isfinite(HUGE_VAL) = " &lt;&lt; std::isfinite(HUGE_VAL) &lt;&lt; '\n'
              &lt;&lt; "isfinite(0.0) = " &lt;&lt; std::isfinite(0.0) &lt;&lt; '\n'
              &lt;&lt; "isfinite(exp(800)) = " &lt;&lt; std::isfinite(std::exp(800)) &lt;&lt; '\n'
              &lt;&lt; "isfinite(DBL_MIN/2.0) = " &lt;&lt; std::isfinite(DBL_MIN / 2.0) &lt;&lt; '\n';
}
|output=
isfinite(NaN) = false
isfinite(Inf) = false
isfinite(-Inf) = false
isfinite(HUGE_VAL) = false
isfinite(0.0) = true
isfinite(exp(800)) = false
isfinite(DBL_MIN/2.0) = true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc fpclassify}}
{{dsc inc|cpp/numeric/math/dsc isinf}}
{{dsc inc|cpp/numeric/math/dsc isnan}}
{{dsc inc|cpp/numeric/math/dsc isnormal}}
{{dsc see c|c/numeric/math/isfinite}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}