{{cpp/title|asinh|asinhf|asinhl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=asinh
|param1=num
|constexpr_since=26
|desc=计算 {{c|num}} 的反双曲正弦。
}}

===参数===
{{par begin}}
{{par|num|浮点数或整数}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|num}} 的反双曲正弦（{{math|sinh{{su|p=-1}}(num)}} 或 {{math|arsinh(num)}}）。

如果发生下溢导致的值域错误，那么返回（舍入后的）正确结果。

===错误处理===
报告 {{lc|math_errhandling}} 中指定的错误。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 如果实参是 ±0 或 ±∞，那么返回不修改的实参
* 如果实参是 NaN，那么返回 NaN

===注解===
虽然（C++ 对此函数引用的）C 标准命名此函数为“弧双曲正弦”，双曲函数的反函数却是面积函数。其实参为双曲扇形的面积，而非弧长。正确的名称是“反双曲正弦”（POSIX 所用）或“面积双曲正弦”。

{{cpp/numeric/math/additional integer overload note|asinh}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "asinh(1) = " &lt;&lt; std::asinh(1) &lt;&lt; '\n'
              &lt;&lt; "asinh(-1) = " &lt;&lt; std::asinh(-1) &lt;&lt; '\n';
    
    // 特殊值
    std::cout &lt;&lt; "asinh(+0) = " &lt;&lt; std::asinh(+0.0) &lt;&lt; '\n'
              &lt;&lt; "asinh(-0) = " &lt;&lt;  std::asinh(-0.0) &lt;&lt; '\n';
}
|output=
asinh(1) = 0.881374
asinh(-1) = -0.881374
asinh(+0) = 0
asinh(-0) = -0
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc acosh}}
{{dsc inc|cpp/numeric/math/dsc atanh}}
{{dsc inc|cpp/numeric/math/dsc sinh}}
{{dsc inc|cpp/numeric/complex/dsc asinh}}
{{dsc see c|c/numeric/math/asinh}}
{{dsc end}}

===外部链接===
[http://mathworld.wolfram.com/InverseHyperbolicSine.html Weisstein, Eric W. “反双曲正弦”]来自 MathWorld--A Wolfram Web Resource。

{{langlinks|de|en|es|fr|it|ja|pt|ru}}