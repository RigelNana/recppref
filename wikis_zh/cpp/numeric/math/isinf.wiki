{{cpp/numeric/math/unary_is|isinf
|description=确定给定浮点数 {{c|num}} 是否为正或负无穷大。
|condition=为无穷大
|note=
[https://gcc.gnu.org/wiki/FloatingPointMath GCC] 和 [https://clang.llvm.org/docs/UsersManual.html#controlling-floating-point-behavior Clang] 支持 {{tt|-ffinite-math}} 选项（并额外由 {{tt|-ffast-math}} 蕴含），此选项允许编译器假设 IEEE-754 特殊浮点数（例如 NaN，无限和负零）不存在。也就是说，在此选项下会假设 {{tt|std::isinf}} 固定返回 {{c|false}}。
}}

===示例===
{{example
|code=
#include &lt;cfloat&gt;
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#include &lt;limits&gt;

int main()
{
    const double max = std::numeric_limits&lt;double&gt;::max();
    const double inf = std::numeric_limits&lt;double&gt;::infinity();

    std::cout &lt;&lt; std::boolalpha
              &lt;&lt; "isinf(NaN) = " &lt;&lt; std::isinf(NAN) &lt;&lt; '\n'
              &lt;&lt; "isinf(Inf) = " &lt;&lt; std::isinf(INFINITY) &lt;&lt; '\n'
              &lt;&lt; "isinf(max) = " &lt;&lt; std::isinf(max) &lt;&lt; '\n'
              &lt;&lt; "isinf(inf) = " &lt;&lt; std::isinf(inf) &lt;&lt; '\n'
              &lt;&lt; "isinf(0.0) = " &lt;&lt; std::isinf(0.0) &lt;&lt; '\n'
              &lt;&lt; "isinf(exp(800)) = " &lt;&lt; std::isinf(std::exp(800)) &lt;&lt; '\n'
              &lt;&lt; "isinf(DBL_MIN/2.0) = " &lt;&lt; std::isinf(DBL_MIN / 2.0) &lt;&lt; '\n';
}
|output=
isinf(NaN) = false
isinf(Inf) = true
isinf(max) = false
isinf(inf) = true
isinf(0.0) = false
isinf(exp(800)) = true
isinf(DBL_MIN/2.0) = false
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc fpclassify}}
{{dsc inc|cpp/numeric/math/dsc isfinite}}
{{dsc inc|cpp/numeric/math/dsc isnan}}
{{dsc inc|cpp/numeric/math/dsc isnormal}}
{{dsc see c|c/numeric/math/isinf}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}