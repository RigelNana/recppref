{{cpp/title|nearbyint|nearbyintf|nearbyintl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=nearbyint
|param1=num
|desc=以[[cpp/numeric/fenv/FE_round|当前舍入模式]]舍入浮点数实参 {{c|num}} 到浮点数格式的整数。
}}

===参数===
{{par begin}}
{{par|num|浮点数或整数}}
{{par end}}

===返回值===
返回 {{c|num}} 按照[[cpp/numeric/fenv/FE_round|当前舍入模式]]的最接近整数。

===错误处理===
此函数不受制于任何指定于 {{lc|math_errhandling}} 的错误。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 决不引发 {{lc|FE_INEXACT}}
* 如果 {{c|num}} 是 ±∞，那么返回不修改的该值
* 如果 {{c|num}} 是 ±0，那么返回不修改的该值
* 如果 {{c|num}} 是 NaN，那么返回 NaN

===注解===
{{tt|std::nearbyint}} 和 {{lc|std::rint}} 之间仅有的区别是 {{tt|std::nearbyint}} 永远不会引发 {{lc|FE_INEXACT}}。

所有标准浮点数格式的最大可表示浮点数都是整数，所以 {{tt|std::nearbyint}} 自身永远不会溢出；然而将结果存储到整数对象时，结果可能溢出任何整数类型（包括 {{lc|std::intmax_t}}）。

如果当前舍入模式是 {{lc|FE_TONEAREST}}，那么此函数在中点情况向偶数舍入（同 {{lc|std::rint}}，但不同于 {{lc|std::round}}）。

{{cpp/numeric/math/additional integer overload note|nearbyint}}

===示例===
{{example
|code=
#include &lt;cfenv&gt;
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#pragma STDC FENV_ACCESS ON

int main()
{
    std::fesetround(FE_TONEAREST);
    std::cout &lt;&lt; "就近舍入：\n"
              &lt;&lt; "nearbyint(+2.3) = " &lt;&lt; std::nearbyint(2.3)
              &lt;&lt; "  nearbyint(+2.5) = " &lt;&lt; std::nearbyint(2.5)
              &lt;&lt; "  nearbyint(+3.5) = " &lt;&lt; std::nearbyint(3.5) &lt;&lt; '\n'
              &lt;&lt; "nearbyint(-2.3) = " &lt;&lt; std::nearbyint(-2.3)
              &lt;&lt; "  nearbyint(-2.5) = " &lt;&lt; std::nearbyint(-2.5)
              &lt;&lt; "  nearbyint(-3.5) = " &lt;&lt; std::nearbyint(-3.5) &lt;&lt; '\n';
    
    std::fesetround(FE_DOWNWARD);
    std::cout &lt;&lt; "向下舍入：\n"
              &lt;&lt; "nearbyint(+2.3) = " &lt;&lt; std::nearbyint(2.3)
              &lt;&lt; "  nearbyint(+2.5) = " &lt;&lt; std::nearbyint(2.5)
              &lt;&lt; "  nearbyint(+3.5) = " &lt;&lt; std::nearbyint(3.5) &lt;&lt; '\n'
              &lt;&lt; "nearbyint(-2.3) = " &lt;&lt; std::nearbyint(-2.3)
              &lt;&lt; "  nearbyint(-2.5) = " &lt;&lt; std::nearbyint(-2.5)
              &lt;&lt; "  nearbyint(-3.5) = " &lt;&lt; std::nearbyint(-3.5) &lt;&lt; '\n';
    
    std::cout &lt;&lt; "nearbyint(-0.0) = " &lt;&lt; std::nearbyint(-0.0)  &lt;&lt; '\n'
              &lt;&lt; "nearbyint(-Inf) = " &lt;&lt; std::nearbyint(-INFINITY) &lt;&lt; '\n';
}
|output=
就近舍入：
nearbyint(+2.3) = 2  nearbyint(+2.5) = 2  nearbyint(+3.5) = 4
nearbyint(-2.3) = -2  nearbyint(-2.5) = -2  nearbyint(-3.5) = -4
向下舍入：
nearbyint(+2.3) = 2  nearbyint(+2.5) = 2  nearbyint(+3.5) = 3
nearbyint(-2.3) = -3  nearbyint(-2.5) = -3  nearbyint(-3.5) = -4
nearbyint(-0.0) = -0
nearbyint(-Inf) = -inf
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc rint}}
{{dsc inc|cpp/numeric/math/dsc round}}
{{dsc inc|cpp/numeric/fenv/dsc feround}}
{{dsc see c|c/numeric/math/nearbyint}}
{{dsc end}}

{{langlinks|de|es|fr|it|ja|pt|ru|zh}}