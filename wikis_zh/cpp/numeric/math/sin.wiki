{{cpp/title|sin|sinf|sinl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=sin
|param1=num
|constexpr_since=26
|desc=计算 {{c|num}}（以弧度度量）的正弦。
}}

===参数===
{{par begin}}
{{par|num|以弧度表示角的浮点数或整数}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|num}} 在范围 {{math|[-1 ; +1]}} 中的正弦（{{math|sin(num)}}）。

{{rrev|until=c++11|
如果 {{c|num}} 的绝对值很大，那么结果可能拥有少量或完全没有有效数字。
}}

如果发生定义域错误，那么返回值由实现定义（在受支持的平台上是 NaN）。

如果发生下溢导致的值域错误，那么返回（舍入后的）正确结果。

===错误处理===
报告 {{lc|math_errhandling}} 中指定的错误。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 如果实参是 ±0，那么返回不修改的该值
* 如果实参是 ±∞，那么返回 NaN 并引发 {{lc|FE_INVALID}}&lt;!-- C 或 C++ 中不定义为定义域错误，虽然 POSIX 中定义为定义域错误 --&gt;
* 如果实参是 NaN，那么返回 NaN

===注解===
实参为无穷大的情况不被指定为（C++ 所委派的）C 中的定义域错误，但被指定为 [https://pubs.opengroup.org/onlinepubs/9699919799/functions/sin.html POSIX 中的定义域错误]。

POSIX 也指定在溢出的情况下，返回不修改的 {{c|num}}，而且在不支持这么做的情况下返回由实现定义的不大于 {{lc|DBL_MIN}}、{{lc|FLT_MIN}} 及 {{lc|LDBL_MIN}} 的值。

{{cpp/numeric/math/additional integer overload note|sin}}

===示例===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;cfenv&gt;
#include &lt;cmath&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;

// #pragma STDC FENV_ACCESS ON

const double pi = std::acos(-1); // C++20 起也可用 std::numbers::pi

constexpr double your_sin(double x)
{
    double sin{0}, pow{x};
    for (auto fac{1LLU}, n{1ULL}; n != 20; fac *= ++n, pow *= x)
        if (n &amp; 1)
            sin += (n &amp; 2 ? -pow : pow) / fac;
    return sin;
}

int main()
{
    std::cout &lt;&lt; std::setprecision(10) &lt;&lt; std::showpos
              &lt;&lt; "典型用法：\n"
              &lt;&lt; "std::sin(pi/6) = " &lt;&lt; std::sin(pi / 6) &lt;&lt; '\n'
              &lt;&lt; "your sin(pi/6) = " &lt;&lt; your_sin(pi / 6) &lt;&lt; '\n'
              &lt;&lt; "std::sin(pi/2) = " &lt;&lt; std::sin(pi / 2) &lt;&lt; '\n'
              &lt;&lt; "your sin(pi/2) = " &lt;&lt; your_sin(pi / 2) &lt;&lt; '\n'
              &lt;&lt; "std::sin(-3*pi/4) = " &lt;&lt; std::sin(-3 * pi / 4) &lt;&lt; '\n'
              &lt;&lt; "your sin(-3*pi/4) = " &lt;&lt; your_sin(-3 * pi / 4) &lt;&lt; '\n'
              &lt;&lt; "特殊值：\n"
              &lt;&lt; "std::sin(+0) = " &lt;&lt; std::sin(0.0) &lt;&lt; '\n'
              &lt;&lt; "std::sin(-0) = " &lt;&lt; std::sin(-0.0) &lt;&lt; '\n';

    // 错误处理
    std::feclearexcept(FE_ALL_EXCEPT);

    std::cout &lt;&lt; "std::sin(INFINITY) = " &lt;&lt; std::sin(INFINITY) &lt;&lt; '\n';
    if (std::fetestexcept(FE_INVALID))
        std::cout &lt;&lt; "    发生 FE_INVALID\n";
}
|p=true
|output=
典型用法：
std::sin(pi/6) = +0.5
your sin(pi/6) = +0.5
std::sin(pi/2) = +1
your sin(pi/2) = +1
std::sin(-3*pi/4) = -0.7071067812
your sin(-3*pi/4) = -0.7071067812
特殊值：
std::sin(+0) = +0
std::sin(-0) = -0
std::sin(INFINITY) = -nan
    发生 FE_INVALID
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc cos}}
{{dsc inc|cpp/numeric/math/dsc tan}}
{{dsc inc|cpp/numeric/math/dsc asin}}
{{dsc inc|cpp/numeric/complex/dsc sin}}
{{dsc inc|cpp/numeric/valarray/dsc sin}}
{{dsc see c|c/numeric/math/sin}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}