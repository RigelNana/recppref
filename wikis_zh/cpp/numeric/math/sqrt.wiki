{{cpp/title|sqrt|sqrtf|sqrtl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=sqrt
|param1=num
|constexpr_since=26
|desc=计算 {{c|num}} 的平方根。
}}

===参数===
{{par begin}}
{{par|num|浮点数或整数}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|num}} 的平方根（{{mathjax-or|\({\small \sqrt{num} }\)|{{mrad|num}}}}）。

如果发生定义域错误，那么返回值由实现定义（在支持的平台上是 NaN）。

如果发生下溢导致的值域错误，那么返回（舍入后的）正确结果。

===错误处理===
报告 {{lc|math_errhandling}} 中指定的错误。

如果 {{c|num}} 小于零，那么发生定义域错误。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 如果实参小于 -0，那么引发 {{lc|FE_INVALID}} 并返回 NaN。
* 如果实参是 +∞ 或 ±0，那么返回不修改的该值。
* 如果实参是 NaN，那么返回 NaN。

===注解===
IEEE 标准要求 {{tt|std::sqrt}} 从无限精确的结果舍入。特别是在浮点数类型能表示精确结果时一定会产生精确结果。其他有此要求的运算只有[[cpp/language/operator arithmetic|算术运算符]]和函数 {{lc|std::fma}}。其他函数，包括 {{lc|std::pow}}，都没有受到这么强的制约。

{{cpp/numeric/math/additional integer overload note|sqrt}}

===示例===
{{example
|code=
#include &lt;cerrno&gt;
#include &lt;cfenv&gt;
#include &lt;cmath&gt;
#include &lt;cstring&gt;
#include &lt;iostream&gt;
// #pragma STDC FENV_ACCESS ON

int main()
{
    // 正常使用
    std::cout &lt;&lt; "sqrt(100) = " &lt;&lt; std::sqrt(100) &lt;&lt; '\n'
              &lt;&lt; "sqrt(2) = " &lt;&lt; std::sqrt(2) &lt;&lt; '\n'
              &lt;&lt; "黄金比例 = " &lt;&lt; (1 + std::sqrt(5)) / 2 &lt;&lt; '\n';
    
    // 特殊值
    std::cout &lt;&lt; "sqrt(-0) = " &lt;&lt; std::sqrt(-0.0) &lt;&lt; '\n';
    
    // 错误处理
    errno = 0;
    std::feclearexcept(FE_ALL_EXCEPT);
    
    std::cout &lt;&lt; "sqrt(-1.0) = " &lt;&lt; std::sqrt(-1) &lt;&lt; '\n';
    if (errno == EDOM)
        std::cout &lt;&lt; "    errno = EDOM " &lt;&lt; std::strerror(errno) &lt;&lt; '\n';
    if (std::fetestexcept(FE_INVALID))
        std::cout &lt;&lt; "    发生 FE_INVALID\n";
}
|p=true
|output=
sqrt(100) = 10
sqrt(2) = 1.41421
黄金比例 = 1.61803
sqrt(-0) = -0
sqrt(-1.0) = -nan
    errno = EDOM Numerical argument out of domain
    发生 FE_INVALID
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc pow}}
{{dsc inc|cpp/numeric/math/dsc cbrt}}
{{dsc inc|cpp/numeric/math/dsc hypot}}
{{dsc inc|cpp/numeric/complex/dsc sqrt}}
{{dsc inc|cpp/numeric/valarray/dsc sqrt}}
{{dsc see c|c/numeric/math/sqrt}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pl|pt|ru}}