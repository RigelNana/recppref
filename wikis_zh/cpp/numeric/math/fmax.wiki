{{cpp/title|fmax|fmaxf|fmaxl}}
{{cpp/numeric/math/navbar}}
{{cpp/numeric/math/declarations
|family=fmax
|param1=x
|param2=y
|constexpr_since=23
|desc=返回两个浮点数的较大者，把 NaN 当做缺失数据（在 NaN 和数值间选择数值）。
}}

===参数===
{{par begin}}
{{par|x, y|浮点数或整数}}
{{par end}}

===返回值===
成功时返回两个浮点数值的较大者。返回值准确且不依赖任何舍入模式。

===错误处理===
此函数不受制于 {{lc|math_errhandling}} 中指定的任何错误条件。

如果实现支持 IEEE 浮点数算术（IEC 60559），那么
* 如果两个实参之一是 NaN，那么返回另一实参的值
* 只有在两个实参都是 NaN 时才会返回 NaN

===注解===
不要求此函数对零的符号敏感，尽管某些实现额外强制在一个参数是 {{c|+0}} 而另一个是 {{c|-0}} 时返回 {{c|+0}}。

{{cpp/numeric/math/additional overload note|fmax}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "fmax(2,1)    = " &lt;&lt; std::fmax(2, 1) &lt;&lt; '\n'
              &lt;&lt; "fmax(-Inf,0) = " &lt;&lt; std::fmax(-INFINITY, 0) &lt;&lt; '\n'
              &lt;&lt; "fmax(NaN,-1) = " &lt;&lt; std::fmax(NAN, -1) &lt;&lt; '\n';
}
|output=
fmax(2,1)    = 2
fmax(-Inf,0) = 0
fmax(NaN,-1) = -1
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/math/dsc isgreater}}
{{dsc inc|cpp/numeric/math/dsc fmin}}
{{dsc inc|cpp/algorithm/dsc max}}
{{dsc inc|cpp/algorithm/dsc max_element}}
{{dsc inc|cpp/algorithm/dsc minmax}}
{{dsc inc|cpp/algorithm/dsc minmax_element}}
{{dsc see c|c/numeric/math/fmax}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}