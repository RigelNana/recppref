{{cpp/title|gamma_distribution}}
{{cpp/numeric/random/gamma_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class RealType = double &gt;
class gamma_distribution;
}}

产生随机正浮点数 {{math|x}}，分布服从概率密度函数：

:{{mathjax-or|1=\(\mathsf{p}(x\mid\alpha,\beta) = \frac{e^{-x/\beta} }{\beta^\alpha\cdot\Gamma(\alpha)}\cdot x^{\alpha-1} \)|2=P(x{{!}}α,β) {{=}} {{mfrac|e{{su|p=-x/β}}|β{{su|p=α}} · Γ(α)}} · x{{su|p=α-1}}}}

其中 {{math|α}} 被称为''形状''参数而 {{math|β}} 被称为''尺度''参数。形状参数有时以字母 {{math|k}} 表示，而尺度参数有时以字母 {{math|θ}} 表示。

对于浮点 {{math|α}}，获得的值是 {{math|α}} 个独立指数分布的随机变量的和，每个的平均值均为 {{math|β}}。

{{tt|std::gamma_distribution}} 满足{{named req|RandomNumberDistribution}}。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|RealType}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|RealType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|gamma_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|gamma_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|gamma_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/distribution/dsc params|gamma_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|gamma_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|gamma_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|gamma_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|gamma_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|gamma_distribution}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());
 
    // alpha=1，beta=2 的 gamma 分布近似于指数分布。
    std::gamma_distribution&lt;&gt; d(1,2);

    std::map&lt;int, int&gt; hist;
    for (int n = 0; n != 10000; ++n)
        ++hist[2 * d(gen)];

    for (auto const&amp; [x, y] : hist)
        if (y / 100.0 &gt; 0.5)
            std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(1)
                      &lt;&lt; x / 2.0 &lt;&lt; '-' &lt;&lt; (x + 1) / 2.0 &lt;&lt; ' '
                      &lt;&lt; std::string(y / 100, '*') &lt;&lt; '\n';
}
|p=true
|output=
0.0-0.5 **********************
0.5-1.0 ****************
1.0-1.5 *************
1.5-2.0 **********
2.0-2.5 ********
2.5-3.0 ******
3.0-3.5 *****
3.5-4.0 ****
4.0-4.5 ***
4.5-5.0 **
5.0-5.5 **
5.5-6.0 *
6.0-6.5 *
6.5-7.0
7.0-7.5
7.5-8.0
}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/GammaDistribution.html Weisstein, Eric W. “Γ 分布。”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}