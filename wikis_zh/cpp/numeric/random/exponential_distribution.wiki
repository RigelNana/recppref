{{cpp/title|exponential_distribution}}
{{cpp/numeric/random/exponential_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class RealType = double &gt;
class exponential_distribution;
}}

产生随机浮点值 {{mathjax-or|\(\small x\)|x}}，分布服从概率密度函数：

:{{mathjax-or|1=\(\small P(x{{!}}\lambda) = \lambda e^{-\lambda x}\)|2=P(x{{!}}λ) = λe{{su|p=-λx}}}}

若随机事件以常数频率 {{mathjax-or|\(\small\lambda\)|λ}} 于每个时间/距离单位发生，则获得的值为直至下次随机事件的时间/距离。例如，此分布描述盖革计数器的点击间的时间，或 DNA 链中变异点间的距离。

这是 {{lc|std::geometric_distribution}} 的连续对应。

{{tt|std::exponential_distribution}} 满足{{named req|RandomNumberDistribution}}。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|RealType}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|RealType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|exponential_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|exponential_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|exponential_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/exponential_distribution/dsc lambda}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|exponential_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|exponential_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|exponential_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|exponential_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|exponential_distribution}}
{{dsc end}}

===注解===
若 {{tt|RealType}} 为 {{c|float}}，则一些实现有时会返回无穷大。此为 {{lwg|2524}}。

===示例===
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());

    // 若粒子平均每秒衰变一次，
    // 则到下个衰变前要多少秒的时间？
    std::exponential_distribution&lt;&gt; d(1);
 
    std::map&lt;int, int&gt; hist;
    for (int n = 0; n != 10000; ++n)
        ++hist[2 * d(gen)];

    for (auto const&amp; [x, y] : hist)
        std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(1)
                  &lt;&lt; x / 2.0 &lt;&lt; '-' &lt;&lt; (x + 1) / 2.0 &lt;&lt; ' '
                  &lt;&lt; std::string(y / 200, '*') &lt;&lt; '\n';
}
|p=true
|output=
0.0-0.5 *******************
0.5-1.0 ***********
1.0-1.5 *******
1.5-2.0 ****
2.0-2.5 **
2.5-3.0 *
3.0-3.5
3.5-4.0
}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/ExponentialDistribution.html Weisstein, Eric W. “指数分布。”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}