{{cpp/title|rand}}
{{cpp/numeric/random/navbar}}
{{ddcl|header=cstdlib| 
int rand();
}}

返回来自范围 {{closed range|0|RAND_MAX}} 的伪随机整数值。

{{lc|std::srand()}} 播种 {{tt|rand()}} 所用的伪随机数生成器。
若在任何对 {{lc|std::srand()}} 的调用前使用了 {{tt|rand()}}，则 {{tt|rand()}} 表现如同它以 {{tt|srand(1)}} 播种。

每次以 {{lc|std::srand()}} 播种 {{tt|rand()}}，它必定在后续调用上产生相同的值数列。

标准库中的其他函数可调用 {{tt|rand}}。哪个函数这么做是实现定义的。

{{tt|rand()}} 是否线程安全是实现定义的。

===返回值===
{{c|0}} 与 {{lc|RAND_MAX}} 间的随机整数值。

===注解===
不保证生成的随机数列质量。
过去，一些 {{tt|rand()}} 在随机性、分布和产生的序列周期上有严重缺陷（在一个众所周知的例子中，调用之间最低位简单地在 {{c|1}} 与 {{c|0}} 间切换）。

对于严肃的随机数生成需求不推荐使用 {{tt|rand()}}。{{rev inl|since=c++11|推荐用 C++11 的[[cpp/numeric/random|随机数生成]]设施替换 {{tt|rand()}}。}}

===示例===
{{example
|下面的 {{tt|bounded_rand()}} 函数取自 [https://pcg-random.org/posts/bounded-rands.html#debiased-modulo-once-javas-method Debiased Modulo (Once)] 的版本。
|code=
#include &lt;cstdlib&gt;
#include &lt;ctime&gt;
#include &lt;initializer_list&gt;
#include &lt;iostream&gt;

unsigned bounded_rand(unsigned range)
{
    for (unsigned x, r;;)
        if (x = rand(), r = x % range, x - r &lt;= -range)
            return r;
}

int main() 
{
    std::srand(std::time({})); // 以当前时间为随机生成器的种子
    const int random_value = std::rand();
    std::cout &lt;&lt; "[0, " &lt;&lt; RAND_MAX &lt;&lt; "] 上的随机值: " &lt;&lt; random_value &lt;&lt; '\n';

    for (const unsigned sides : {2, 4, 6, 8})
    {
        std::cout &lt;&lt; "扔 " &lt;&lt; sides &lt;&lt; " 面骰子 8 次: ";
        for (int n = 8; n; --n)
            std::cout &lt;&lt; 1 + bounded_rand(sides) &lt;&lt; ' ';
        std::cout &lt;&lt; '\n';
    }
}
|p=true
|output=
[0, 2147483647] 上的随机值: 948298199
扔 2 面骰子 8 次: 2 2 1 2 1 1 2 2 
扔 4 面骰子 8 次: 1 3 4 2 1 3 3 1 
扔 6 面骰子 8 次: 3 2 1 6 6 4 4 2 
扔 8 面骰子 8 次: 4 5 6 6 3 6 1 2
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/dsc uniform_int_distribution}}
{{dsc inc|cpp/numeric/random/dsc srand}}
{{dsc inc|cpp/numeric/random/dsc RAND_MAX}}
{{dsc inc|cpp/experimental/dsc randint}}
{{dsc see c|c/numeric/random/rand}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}