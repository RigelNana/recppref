{{cpp/title|negative_binomial_distribution}}
{{cpp/numeric/random/negative_binomial_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class IntType = int &gt;
class negative_binomial_distribution;
}}

产生随机非负整数值 {{math|i}}，其分布按照离散概率函数：

:{{mathjax-or|1=\(P(i{{!}}k, p) = \binom{k + i - 1}{i} \cdot p^k \cdot (1 - p)^i\)|2=P(i{{!}}k,p) ={{mparen|(|)|k + i − 1|i}} · p{{su|p=k}} · (1 − p){{su|p=i}}}}

该值表示一系列独立的是/否试验在准确出现 {{math|k}} 次成功前的失败次数（每次成功概率为 {{math|p}}）。

{{tt|std::negative_binomial_distribution}} 满足{{named req|RandomNumberDistribution}}。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|IntType}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|IntType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|negative_binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|negative_binomial_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|negative_binomial_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/distribution/dsc params|negative_binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|negative_binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|negative_binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|negative_binomial_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|negative_binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|negative_binomial_distribution}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());
    // Pat 挨家挨户卖饼干
    // 在每家，有 75% 的几率卖出一盒
    // 试问她在卖出 5 盒前要卖多少次？
    std::negative_binomial_distribution&lt;&gt; d(5, 0.75);
 
    std::map&lt;int, int&gt; hist;
    for (int n = 0; n != 10000; ++n)
        ++hist[d(gen)];

    for (auto [x, y] : hist)
        std::cout &lt;&lt; std::hex &lt;&lt; x &lt;&lt; ' ' &lt;&lt; std::string(y / 100, '*') &lt;&lt; '\n';
}
|p=true
|output=
0 ***********************
1 *****************************
2 **********************
3 *************
4 ******
5 ***
6 *
7
8
9
a
b
}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/NegativeBinomialDistribution.html Weisstein, Eric W. “负二项分布。”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}