{{cpp/numeric/random/discrete_distribution/title|discrete_distribution}}
{{cpp/numeric/random/discrete_distribution/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|1=
discrete_distribution();
}}
{{dcl|num=2|since=c++11|1=
template&lt; class InputIt &gt;
discrete_distribution( InputIt first, InputIt last );
}}
{{dcl|num=3|since=c++11|1=
discrete_distribution( std::initializer_list&lt;double&gt; weights );
}}
{{dcl|num=4|since=c++11|1=
template&lt; class UnaryOperation &gt;
discrete_distribution( std::size_t count, double xmin, double xmax,
                       UnaryOperation unary_op );
}}
{{dcl|num=5|since=c++11|1=
explicit discrete_distribution( const param_type&amp; params );
}}
{{dcl end}}

构造新的分布对象。

@1@ 默认构造函数。构造拥有单个权重 {{math|p {{=}} {1}}} 的分布。此分布始终生成 {{c|0}}。

@2@ 构造拥有范围 {{range|first|last}} 中权重的分布。若 {{c|first {{==}} last}}，则效果同默认构造函数。

@3@ 构造拥有 {{c|weights}} 中权重的分布。相当于调用 {{c|discrete_distribution(weights.begin(), weights.end())}}。

@4@ 构造拥有以函数 {{c|unary_op}} 生成的 {{c|count}} 个权重的分布。每个权重等于 {{math|w{{su|b=i}} {{=}} unary_op(xmin + δ(i + 0.5))}}，其中 {{math|δ {{=}} {{mfrac|(xmax − xmin)|count}}}} and {{math|i ∈ {0, ..., count − 1}}}。{{c|xmin}} 与 {{c|xmax}} 必须使得 {{math|δ &gt; 0}}。若 {{c|count {{==}} 0}}，则效果同默认构造函数。

@5@ 以 {{c|params}} 为分布参数构造分布。

===参数===
{{par begin}}
{{par|first, last|定义用作权重的数的元素范围。 {{tt|InputIterator}} 所指的元素类型必须可转换为 {{c|double}}}}
{{par|weights|含各权重的 initializer_list}}
{{par op1|unary_op|rp=double|p1=double}}
{{par|params|分布参数集}}
{{par hreq}}
{{par req named|InputIt|InputIterator}}
{{par end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}