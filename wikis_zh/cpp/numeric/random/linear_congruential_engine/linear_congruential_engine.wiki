{{cpp/numeric/random/linear_congruential_engine/title|linear_congruential_engine}}
{{cpp/numeric/random/linear_congruential_engine/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|
linear_congruential_engine() : linear_congruential_engine(default_seed) {}
}}
{{dcl|num=2|since=c++11|
explicit linear_congruential_engine( result_type value );
}}
{{dcla|num=3|since=c++11|
template&lt; class SeedSeq &gt;
explicit linear_congruential_engine( SeedSeq&amp; seq );
}}
{{dcl|num=4|since=c++11|notes={{mark implicit}}|
linear_congruential_engine( const linear_congruential_engine&amp; other );
}}
{{dcl end}}

构造伪随机数引擎。

@1@ 默认构造函数。
* 如果默认构造的引擎具有 {{tt|std::minstd_rand0}} 类型，那么对它连续调用 10000 次产生的值是 {{c|1043618065}}。
* 如果默认构造的引擎具有 {{tt|std::minstd_rand}} 类型，那么对它连续调用 10000 次产生的值是 {{c|399268537}}。

@2@ 以种子值 {{c|value}} 构造引擎。引擎的初始{{rlp|/#生成器属性|状态}}通过以下方式确定：
* 如果 {{c|1=c % m == 0}} 和 {{c|1=value % m == 0}} 都是 {{c|true}}，那么状态是 {{c|1}}。
* 否则状态是 {{c|value % m}}。

@3@ 以种子序列 {{c|seq}} 构造引擎。给定 {{c|std::size_t(std::log2(m) / 32) + 1}} 为 {{c|k}}，引擎的初始{{rlp|/#生成器属性|状态}}通过以下方式确定：
# 创建一个长度是 {{c|k + 3}} 的虚设数组对象。
# 调用 {{c|seq.generate(a + 0, a + k + 3)}}。
# 设 {{c|S}} 为 {{mathjax-or|1=\(\scriptsize (\sum^{k-1}_{j=0} a_{j+3} \cdot 2^{32j}) \mod m \)|2=(∑{{su|p=k-1|b=j=0}} a{{su|b=j+3}}·2{{su|p=32j}}) mod m}}。
# 如果 {{c|1=c % m == 0}} 和 {{c|1=S == 0}} 都是 {{c|true}}，那么将引擎状态设为 {{c|1}}。否则将引擎状态设为 {{c|S}}。
@@ {{cpp/enable if| {{tt|SeedSeq}} 满足{{named req|SeedSequence}}的要求}}。

@4@ 复制构造函数。构造完成时 {{c|1=*this == other}} 是 {{c|true}}。

===参数===
{{par begin}}
{{par|value|用于内部状态初始化的种子值}}
{{par|seq|用于内部状态初始化的种子序列}}
{{par end}}

===复杂度===
@1,2@ 常数。
@3@ 与 {{tt|seq.generate}} 调用的复杂度相同。
@4@ 常数。

===异常===
@3@ 如果 {{tt|SeedSeq}} 不是 {{lc|std::seed_seq}}，那么就会抛出 {{tt|seq.generate}} 调用抛出的异常。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2181|std=C++11|before=即使 {{tt|seq.generate}} 调用抛出了异常，重载 {{vl|3}} 也不会抛出异常|after=会传播该异常}}
{{dr list item|paper=P0935R0|std=C++11|before=默认构造函数是显式的|after=改成隐式的}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/engine/dsc seed|linear_congruential_engine}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}