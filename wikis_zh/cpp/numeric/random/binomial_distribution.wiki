{{cpp/title|binomial_distribution}}
{{cpp/numeric/random/binomial_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class IntType = int &gt;
class binomial_distribution;
}}

生产随机非负整数值 {{math|i}}，分布依照离散概率函数：

:{{mathjax-or|1=\(P(i{{!}}t,p) = \binom{t}{i} \cdot p^i \cdot (1-p)^{t-i}\)|2=P(i{{!}}t,p) {{=}}{{mparen|(|)|t|i}} · p{{su|p=i}} · (1 − p){{su|p=t−i}}}}

获得的值是 {{math|t}} 次是/否实验序列中的成功次数，每次成功的概率为 {{math|p}}。

{{tt|std::binomial_distribution}} 满足{{named req|RandomNumberDistribution}}。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|IntType}}
{{par end}}

===模板类型===
{{dsc begin}}
{{dsc hitem |成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|IntType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|binomial_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|binomial_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/distribution/dsc params|binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|binomial_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|binomial_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|binomial_distribution}}
{{dsc end}}

===示例===
{{example
|每次试验成功概率准确为 0.5 的二项分布的点图，描绘与贾宪三角的关系（此情况下无、1、2、3 或全部 4 次试验成功的概率为 1:4:6:4:1）。
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());
    // 进行 4 次试验，平均 2 次中成功 1 次
    std::binomial_distribution&lt;&gt; d(4, 0.5);

    std::map&lt;int, int&gt; hist;
    for (int n = 0; n != 10000; ++n)
        ++hist[d(gen)];

    for (auto const&amp; [x, y] : hist)
        std::cout &lt;&lt; x &lt;&lt; ' ' &lt;&lt; std::string(y / 100, '*') &lt;&lt; '\n';
}
|p=true
|output=
0 ******
1 ************************
2 *************************************
3 *************************
4 ******
}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/BinomialDistribution.html Weisstein, Eric W. “二项分布。”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}