{{title |operator&lt;&lt;,&gt;&gt;&lt;small&gt;(std::mersenne_twister_engine)&lt;/small&gt;}}
{{cpp/numeric/random/mersenne_twister_engine/navbar}}
{{cpp/numeric/random/get_types|mersenne_twister_engine}}
{{dcl begin}}
{{dcl | num=1 | since=c++11 | 1=
template&lt; class CharT, class Traits &gt;
friend std::basic_ostream&lt;CharT,Traits&gt;&amp; 
    operator&lt;&lt;( std::basic_ostream&lt;CharT,Traits&gt;&amp; ost, 
                const mersenne_twister_engine&amp; e );
}}
{{dcl | num=2 | since=c++11 | 1=
template&lt; class CharT, class Traits &gt;
friend std::basic_istream&lt;CharT,Traits&gt;&amp; 
    operator&gt;&gt;( std::basic_istream&lt;CharT,Traits&gt;&amp; ist, 
                mersenne_twister_engine&amp; e );
}}
{{dcl end}}

@1@ 序列化伪随机数引擎 {{tt|e}} 的内部状态为一或多个空格分隔的十进制数序列，并插入之到流 {{tt|ost}} 。填充字符和格式化标志被忽略且无效。

@2@ 通过先前使用相同 {{tt|locale}} 的本地环境、相同的 {{tt|CharT}} 和 {{tt|Traits}} 的流对 {{tt|operator&lt;&lt;}} 进行调用创建的序列化表示，还原伪随机数引擎 {{tt|e}} 的内部状态。若不能反序列化输入，则保留 {{tt|e}} 不改变并在 {{tt|ist}} 上引发 {{tt|failbit}} 。

{{cpp/hidden friend|std::mersenne_twister_engine&lt;{{#var:types_short}}&gt;|plural=yes|tmpl=yes}}

若用 {{c|os &lt;&lt; x}} 写的文本表示，用 {{c|is &gt;&gt; y}} 还原到同类型的同一或不同对象 {{tt|y}} ，则 {{c|1=x==y}} 。

以设置 {{c|os.fmtflags}} 为 {{c|ios_base::dec}}|{{c|ios_base::left}} 并设置填充字符为空格符写文本表示。引擎内部状态的文本表示是一组空格分隔的十进制数。

===参数===
{{par begin}}
{{par | ost |要插入数据的输出流}}
{{par | ist |要提取数据的输入流}}
{{par | e |伪随机数引擎}}
{{par end}}

===返回值===
@1@ {{tt|ost}}
@2@ {{tt|ist}}

===复杂度===
{{todo}}

===异常===
@1@ {{cpp/impldef exception item}}
@2@ 设置了 {{tt|failbit}} 时可能抛出 {{lc|std::ios_base::failure}} 。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3519|std=C++11|before=插入与提取运算符的形式未指定|after=指定为隐藏友元}}
{{dr list end}}
{{langlinks|de|en|es|fr|it|ja|pt|ru}}