{{cpp/title|cauchy_distribution}}
{{cpp/numeric/random/cauchy_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class RealType = double &gt;
class cauchy_distribution;
}}

产生随机数，服从{{enwiki|Cauchy distribution|柯西分布}}（又称洛伦兹分布）：

:{{mathjax-or|1=\({\small f(x;a,b)={(b\pi{[1+{(\frac{x-a}{b})}^{2}]} })}^{-1}\)|2=f(x; a,b) = {{mparen|(|)|bπ {{mparen|[|]|1 + {{mparen|(|)|{{mfrac||x - a|b}}}}{{su|p=2}}}}}}{{su|p=-1}}}}

{{tt|std::cauchy_distribution}} 满足{{named req|RandomNumberDistribution}}的所有要求。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|RealType}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|RealType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|cauchy_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|cauchy_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|cauchy_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/distribution/dsc params|cauchy_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|cauchy_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|cauchy_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|cauchy_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|cauchy_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|cauchy_distribution}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;cmath&gt;
#include &lt;iomanip&gt; 
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;vector&gt;

{{cpp/numeric/draw_vbars}}

int main()
{
    std::random_device rd{};
    std::mt19937 gen{rd()};
 
    auto cauchy = [&amp;gen](const float x0, const float 𝛾)
    {
        std::cauchy_distribution&lt;float&gt; d{ x0 /* a */, 𝛾 /* b */};
 
        const int norm = 1'00'00;
        const float cutoff = 0.005f;

        std::map&lt;int, int&gt; hist{};
        for (int n = 0; n != norm; ++n)
            ++hist[std::round(d(gen))];

        std::vector&lt;float&gt; bars;
        std::vector&lt;int&gt; indices;
        for (auto const&amp; [n, p] : hist)
            if (float x = p * (1.0 / norm); cutoff &lt; x)
            {
                bars.push_back(x);
                indices.push_back(n);
            }

        std::cout &lt;&lt; "x₀ = " &lt;&lt; x0 &lt;&lt; ", 𝛾 = " &lt;&lt; 𝛾 &lt;&lt; ":\n";
        draw_vbars&lt;4,3&gt;(bars);
        for (int n : indices)
            std::cout &lt;&lt; std::setw(2) &lt;&lt; n &lt;&lt; "  ";
        std::cout &lt;&lt; "\n\n";
    };

    cauchy(/* x₀ = */ -2.0f, /* 𝛾 = */ 0.50f);
    cauchy(/* x₀ = */ +0.0f, /* 𝛾 = */ 1.25f);
}
|p=true
|output=&lt;nowiki/&gt;
x₀ = -2, 𝛾 = 0.5:
                    ███                     ┬ 0.5006
                    ███                     │
                ▂▂▂ ███ ▁▁▁                 │
▁▁▁ ▁▁▁ ▁▁▁ ▃▃▃ ███ ███ ███ ▂▂▂ ▁▁▁ ▁▁▁ ▁▁▁ ┴ 0.0076
-7  -6  -5  -4  -3  -2  -1   0   1   2   3

x₀ = 0, 𝛾 = 1.25:
                                ███                                 ┬ 0.2539
                            ▅▅▅ ███ ▃▃▃                             │
                        ▁▁▁ ███ ███ ███ ▁▁▁                         │
▁▁▁ ▁▁▁ ▁▁▁ ▁▁▁ ▃▃▃ ▅▅▅ ███ ███ ███ ███ ███ ▅▅▅ ▃▃▃ ▂▂▂ ▁▁▁ ▁▁▁ ▁▁▁ ┴ 0.0058
-8  -7  -6  -5  -4  -3  -2  -1   0   1   2   3   4   5   6   7   9

}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/CauchyDistribution.html Weisstein, Eric W. “柯西分布”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}