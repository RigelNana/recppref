{{cpp/numeric/random/seed_seq/title|param}}
{{cpp/numeric/random/seed_seq/navbar}}
{{dcl begin}}
{{dcl|since=c++11|1=
template&lt; class OutputIt &gt;
void param( OutputIt dest ) const;
}}
{{dcl end}}

将存储的种子复制到从 {{c|dest}} 开始的范围。等价于 {{box|{{c/core|std::copy(}}{{rlpsi|/#v}}{{sep}}{{c/core|.begin(),}}{{nbspt}}{{rlpsi|/#v}}{{sep}}{{c/core|.end(), dest);}}}}。

如果 {{tt|result_type}} 类型的值不[[cpp/iterator#类型与可写性|可写入]] {{c|dest}}，那么程序非良构。

如果 {{tt|OutputIt}} 不满足{{named req|OutputIterator}}的要求，那么行为未定义。

===参数===
{{par begin}}
{{par|dest|输出范围的起始迭代器}}
{{par end}}

===异常===
只会抛出在 {{c|dest}} 上的操作抛出的异常。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;random&gt;

int main()
{
    std::seed_seq s1 = {-1, 0, 1};
    s1.param(std::ostream_iterator&lt;int&gt;(std::cout, " "));
}
|output=
-1 0 1
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2180|std=C++11|before={{tt|seed_seq::param}} 不会抛出异常|after=它可以抛出异常}}
{{dr list end}}

{{langlinks|cs|de|en|es|fr|it|ja|ko|pl|pt|ru}}