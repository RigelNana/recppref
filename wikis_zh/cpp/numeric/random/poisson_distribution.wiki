{{cpp/title|poisson_distribution}}
{{cpp/numeric/random/poisson_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class IntType = int &gt;
class poisson_distribution;
}}

产生随机非负整数值 {{math|i}}，分布服从离散概率函数：

:{{mathjax-or|1=\(P(i {{!}} \mu) = \frac{e^{-\mu}\mu^i}{i!}\)|2=P(i{{!}}μ) = {{mfrac|e{{su|p=-μ}}·μ{{su|p=i}}|i!}}}}

若同一条件下（相同的时间/空间区间上）随机事件的期望''平均''发生次数为 {{math|μ}}，则获得的值是其准确发生 {{math|i}} 次的概率。

{{tt|std::poisson_distribution}} 满足{{named req|RandomNumberDistribution}}。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|IntType}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{tt|IntType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|poisson_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|poisson_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|poisson_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/poisson_distribution/dsc mean}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|poisson_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|poisson_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|poisson_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|poisson_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|poisson_distribution}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());

    // 若平均一分钟出现 4 次事件
    // 则在一分钟内出现 n 次的频率如何？
    std::poisson_distribution&lt;&gt; d(4);

    std::map&lt;int, int&gt; hist;
    for (int n = 0; n != 10000; ++n)
        ++hist[d(gen)];

    for (auto [x, y] : hist)
        std::cout &lt;&lt; std::hex &lt;&lt; x &lt;&lt; ' '
                  &lt;&lt; std::string(y / 100, '*') &lt;&lt; '\n';
}
|p=true
|output=
0 *
1 *******
2 **************
3 *******************
4 *******************
5 ***************
6 **********
7 *****
8 **
9 *
a
b
c
d
}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/PoissonDistribution.html Weisstein, Eric W. “泊松分布。”] 来自 MathWorld &amp;mdash; A Wolfram Web Resource。}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}