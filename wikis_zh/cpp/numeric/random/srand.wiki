{{cpp/title|srand}}
{{cpp/numeric/random/navbar}}
{{ddcl|header=cstdlib| 
void srand( unsigned seed );
}}

以值 {{tt|seed}} 播种 {{lc|std::rand()}} 所用的随机数生成器。

若在对 {{tt|srand()}} 的任何调用前使用了 {{lc|std::rand()}}，则 {{lc|std::rand()}} 表现为如同它被以 {{c|srand(1)}} 播种。

每次以同一 {{tt|seed}} 播种 {{lc|std::rand()}} 时，它必须产生相同的值数列。

{{tt|srand()}} 不保证为线程安全。

===参数===
{{par begin}}
{{par|seed|种子值}}
{{par end}}

===返回值===
（无）

===注解===
通常来说，应该只播种一次随机数生成器，在程序开始时，对 {{tt|rand()}} 的任何调用前进行。
不应重复播种，或每次冀愿生成新一批随机数时进行重播种。

标准实践是使用调用 {{c|std::time(0)}} 的结果为种子。
然而 {{lc|std::time}} 返回的是 {{c|std::time_t}} 值，而 {{c|std::time_t}} 不保证是整数类型。
不过，实践中各主要实现都把 {{c|std::time_t}} 定义为整数类型，且此亦为 POSIX 所要求。

===示例===
{{example
|code=
#include &lt;cstdlib&gt;
#include &lt;ctime&gt;
#include &lt;iostream&gt;

int main() 
{
    std::srand(std::time(0)); // 以当前时间为随机数生成器的种子
    std::cout &lt;&lt; "[0, " &lt;&lt; RAND_MAX &lt;&lt; "] 上的随机数值: " &lt;&lt; std::rand() &lt;&lt; '\n';
}
|p=true
|output=
[0, 2147483647] 上的随机数值: 1373858591
}}

===参阅===

{{dsc begin}}
{{dsc inc|cpp/numeric/random/dsc rand}}
{{dsc inc|cpp/numeric/random/dsc RAND_MAX}}
{{dsc inc|cpp/experimental/dsc reseed }}
{{dsc see c|c/numeric/random/srand}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}