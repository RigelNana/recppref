{{cpp/title|piecewise_constant_distribution}}
{{cpp/numeric/random/piecewise_constant_distribution/navbar}}
{{ddcl|header=random|since=c++11|1=
template&lt; class RealType = double &gt;
class piecewise_constant_distribution;
}}

{{tt|std::piecewise_constant_distribution}} 产生随机浮点数，在分别带有自身权重的 {{math|w{{su|b=i}}}} 的数个子区间 {{math|[b{{su|b=i}}, b{{su|b=i+1}})}} 中的每一个上均匀分布。区间边界集合与权重集合为此分布的参数。

任何 {{math|b{{su|b=i}}≤x&lt;b{{su|b=i+1}}}} 上的概率密度为 {{math|{{mfrac||w{{su|b=i}}|S (b{{su|b=i+1}} - b{{su|b=i}})}}}}，其中 {{math|S}} 为所有权重之和。

{{tt|std::piecewise_constant_distribution}} 满足{{named req|RandomNumberDistribution}}的所有要求。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|RealType}}
{{par end}}

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|result_type}} {{mark c++11}}|{{co|RealType}}}}
{{cpp/numeric/random/param_type}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc constructor|piecewise_constant_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc reset|piecewise_constant_distribution}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator()|piecewise_constant_distribution}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/piecewise_constant_distribution/dsc params}}
{{dsc inc|cpp/numeric/random/distribution/dsc param|piecewise_constant_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc min|piecewise_constant_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc max|piecewise_constant_distribution}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_cmp|piecewise_constant_distribution}}
{{dsc inc|cpp/numeric/random/distribution/dsc operator_ltltgtgt|piecewise_constant_distribution}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;random&gt;
#include &lt;string&gt;

int main()
{
    std::random_device rd;
    std::mt19937 gen(rd());
    // 50% 时间生成 0 与 1 间的随机数
    // 50% 时间生成 10 与 15 间的随机数
    std::vector&lt;double&gt; i {0, 1, 10, 15};
    std::vector&lt;double&gt; w {1, 0, 1};
    std::piecewise_constant_distribution&lt;&gt; d(i.begin(), i.end(), w.begin());

    std::map&lt;int, int&gt; hist;
    for (int n {}; n &lt; 1e4; ++n)
        ++hist[d(gen)];

    for (std::cout &lt;&lt; std::hex &lt;&lt; std::uppercase; auto [x, y] : hist)
        std::cout &lt;&lt; x &lt;&lt; ' ' &lt;&lt; std::string(y / 100, '*') &lt;&lt; '\n';
}
|p=true
|output=
0 **************************************************
A **********
B *********
C *********
D **********
E *********
}}

===引用===
{{ref std c++23}}
{{ref std|section=28.5.9.6.2|title=Class template piecewise_constant_distribution|id=rand.dist.samp.pconst|p=1421-1422}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=29.6.9.6.2|title=Class template piecewise_constant_distribution|id=rand.dist.samp.pconst|p=1207-1208}}
{{ref std end}}
{{ref std c++17}}
{{ref std|section=29.6.8.6.2|title=Class template piecewise_constant_distribution|id=rand.dist.samp.pconst|p=1098-1100}}
{{ref std end}}
{{ref std c++14}}
{{ref std|section=26.5.8.6.2|title=Class template piecewise_constant_distribution|id=rand.dist.samp.pconst|p=962-964}}
{{ref std end}}
{{ref std c++11}}
{{ref std|section=26.5.8.6.2|title=Class template piecewise_constant_distribution|id=rand.dist.samp.pconst|p=955-957}}
{{ref std end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}