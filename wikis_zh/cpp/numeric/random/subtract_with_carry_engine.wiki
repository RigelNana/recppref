{{cpp/title|subtract_with_carry_engine}}
{{cpp/numeric/random/subtract_with_carry_engine/navbar}}
{{dcl begin}}
{{dcl header|random}}
{{dcl|since=c++11|
template&lt;
    class UIntType,
    std::size_t w, std::size_t s, std::size_t r
&gt; class subtract_with_carry_engine;
}}
{{dcl end}}

{{tt|subtract_with_carry_engine}} 是使用{{enwiki|subtract with carry|带进位减法}}算法的随机数引擎。

===模板形参===
{{par begin}}
{{cpp/numeric/random/param_list|UIntType}}
{{par|w|状态序列按位计的字大小}}
{{par|s|短延迟}}
{{par|r|长延迟}}
{{par end}}

如果 {{c|w}} 不在 {{range|1|std::numeric_limits&lt;UIntType&gt;::digits|right=]}} 中，或者 {{c|s}} 不在 {{range|1|r}} 中，那么程序非良构。 

===生成器属性===
{{tt|subtract_with_carry_engine}} 的状态的{{rlp|/#随机数引擎|大小}}是 {{mathjax-or|\(\scriptsize O(r)\)|O(r)}}，它包含以下两个部分：
* 包含 {{c|r}} 个整数值的序列 {{c|X}}，其中每个值都在 {{range/core|{{c|0}}|{{box|{{math|{{tt|2}}{{su|p={{tt|w}}}}}}}}}} 中。
* 整数 {{c|c}}（它被称为''进位值''），它的值要么是 {{c|0}}，要么是 {{c|1}}。

在给定 {{mathjax-or|\(\scriptsize X_j\)|X{{su|b=j}}}} 表示 {{c|X}} 的第 {{mathjax-or|\(\scriptsize j\mod r\)|j mod r}} 个值（从0开始算起）的情况下，{{tt|subtract_with_carry_engine}} 的{{rlp|/#随机数引擎|变换算法}}（{{mathjax-or|\(\scriptsize TA(x_i)\)|TA(x{{su|b=i}})}}）定义如下：
# 设 {{c|Y}} 为 {{mathjax-or|\(\scriptsize X_{i-s}-X_{i-r}-c\)|X{{su|b=i-s}}-X{{su|b=i-r}}-c}}。
# 设 {{c|y}} 为 {{mathjax-or|\(\scriptsize Y\mod 2^w\)|Y mod 2{{su|p=w}}}}，并且将 {{mathjax-or|\(\scriptsize X_i\)|X{{su|b=i}}}} 设置为 {{c|y}}。
# 如果 {{c|Y}} 为负，那么将 {{c|c}} 设置为 {{c|1}}，否则将 {{c|c}} 设置为 {{c|0}}。

{{tt|subtract_with_carry_engine}} 的{{rlp|/#随机数引擎|生成算法}}是 {{mathjax-or|1=\(\scriptsize GA(x_i) = y\)|2=GA(x{{su|b=i}}) = y}}，其中 {{c|y}} 是变换算法第 2 步中产生的值。

===预定义特化===
下列特化定义了两种常用参数集的随机数引擎：
{{dsc begin}}
{{dsc header|random}}
{{dsc hitem|类型|定义}}
{{dsc inc|cpp/numeric/random/dsc ranlux24_base}}
{{dsc inc|cpp/numeric/random/dsc ranlux48_base}}
{{dsc end}}

===嵌套类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|result_type}}|{{tt|UIntType}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::size_t}}}} word_size|{{c|w}}}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::size_t}}}} short_lag|{{c|s}}}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::size_t}}}} long_lag|{{c|r}}}}
{{dsc mem sconst|nolink=true|{{dsc small|constexpr {{lc|std::uint_least32_t}}}} default_seed|{{c|19780503u}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc h2|构造与播种}}
{{dsc inc|cpp/numeric/random/engine/dsc constructor|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc seed|subtract_with_carry_engine}}

{{dsc h2|生成}}
{{dsc inc|cpp/numeric/random/engine/dsc operator()|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc discard|subtract_with_carry_engine}}

{{dsc h2|特征}}
{{dsc inc|cpp/numeric/random/engine/dsc min|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc max|subtract_with_carry_engine}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc inc|cpp/numeric/random/engine/dsc operator cmp|subtract_with_carry_engine}}
{{dsc inc|cpp/numeric/random/engine/dsc operator ltltgtgt|subtract_with_carry_engine}}
{{dsc end}}

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3809|std=C++11|before={{tt|default_seed}} 不一定能以 {{tt|result_type}} 表示|after=将它的类型改为 {{lc|std::uint_least32_t}}}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}