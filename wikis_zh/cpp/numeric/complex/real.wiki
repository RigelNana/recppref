{{cpp/numeric/complex/title|real}}
{{cpp/numeric/complex/navbar}}
{{dcl begin}}
{{dcl h|初等模板 {{c/core|std::complex&lt;T&gt;}}}}
{{dcl rev multi|num=1|until1=c++14|dcl1=
T real() const;
|since2=c++14|dcl2=
constexpr T real() const;
}}
{{dcl rev multi|num=2|until1=c++20|dcl1=
void real( T value );
|since2=c++20|dcl2=
constexpr void real( T value );
}}

{{dcl h|特化 {{c/core|std::complex&lt;float&gt;}}}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
float real() const;
|since2=c++11|dcl2=
constexpr float real() const;
}}
{{dcl rev multi|num=2|until1=c++20|dcl1=
void real( float value );
|since2=c++20|dcl2=
constexpr void real( float value );
}}

{{dcl h|特化 {{c/core|std::complex&lt;double&gt;}}}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
double real() const;
|since2=c++11|dcl2=
constexpr double real() const;
}}
{{dcl rev multi|num=2|until1=c++20|dcl1=
void real( double value );
|since2=c++20|dcl2=
constexpr void real( double value );
}}

{{dcl h|特化 {{c/core|std::complex&lt;long double&gt;}}}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
long double real() const;
|since2=c++11|dcl2=
constexpr long double real() const;
}}
{{dcl rev multi|num=2|until1=c++20|dcl1=
void real( long double value );
|since2=c++20|dcl2=
constexpr void real( long double value );
}}

{{dcl end}}

访问复数的实部。

@1@ 返回实部。
@2@ 设置实部为 {{c|value}}。

===参数===
{{par begin}}
{{par|value|要将实部设置的值}}
{{par end}}

===返回值===
@1@ {{c|*this}} 的实部。
@2@ （无）

===注解===
在 C++11 中 {{lc|std::complex}} 特化中的重载 {{v|1}} 没有指定 {{c/core|const}} 限定符。然而在 C++11 中，对非静态成员函数使用 {{ltt|cpp/language/constexpr}} 说明符就表示指定了 {{c/core|const}}，因此它的行为与指定了 {{c/core|const}} 一致。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=387|std=C++98|before=无法直接设置实部|after=可以通过新的 {{tt|real}} 重载设置}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc real2}}
{{dsc inc|cpp/numeric/complex/dsc imag}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}