{{cpp/title|atan{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++11|1=
template&lt; class T &gt; 
complex&lt;T&gt; atan( const complex&lt;T&gt;&amp; z );
}}

计算复数值 {{c|z}} 的复弧（反）正切。分支切割存在于虚轴上的 {{math|[−i, +i]}} 区间之外。

===参数===
{{par begin}}
{{par|z|复数值}}
{{par end}}

===返回值===
若不发生错误，则返回 {{c|z}} 的复弧（反）正切，值域为沿虚轴无界，沿实轴在区间 {{math|[−π/2; +π/2]}} 内的条带。

按照如同以 {{box|{{c/core|-i * }}{{tt|{{nbsp}}}}{{ltt|cpp/numeric/complex/atanh|std::atanh}}{{c/core|(i * z)}}}} 实现运算一般处理错误和特殊情况，其中 {{tt|i}} 为虚数单位。

===注解===
反正切（或弧正切）是多值函数而要求复平面上的分支切割。约定分支切割置于虚轴的线段 {{math|(-∞i,-i)}} 和 {{math|(+i,+∞i)}} 上。

反正切主值的数学定义是 {{math|atan z {{=}} -{{mfrac|1|2}} i [ln(1 - iz) - ln (1 + iz)]}}。

===示例===
{{example|
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z1(0.0, 2.0);
    std::cout &lt;&lt; "atan" &lt;&lt; z1 &lt;&lt; " = " &lt;&lt; std::atan(z1) &lt;&lt; '\n';

    std::complex&lt;double&gt; z2(-0.0, 2.0);
    std::cout &lt;&lt; "atan" &lt;&lt; z2 &lt;&lt; " (the other side of the cut) = "
              &lt;&lt; std::atan(z2) &lt;&lt; '\n';

    std::complex&lt;double&gt; z3(0.0, INFINITY);
    std::cout &lt;&lt; "2 * atan" &lt;&lt; z3 &lt;&lt; " = " &lt;&lt; 2.0 * std::atan(z3) &lt;&lt; '\n';
}
|output=
atan(0.000000,2.000000) = (1.570796,0.549306)
atan(-0.000000,2.000000) (the other side of the cut) = (-1.570796,0.549306)
2 * atan(0.000000,inf) = (3.141593,0.000000)
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc asin}}
{{dsc inc|cpp/numeric/complex/dsc acos}}
{{dsc inc|cpp/numeric/complex/dsc tan}}
{{dsc inc|cpp/numeric/math/dsc atan}}
{{dsc inc|cpp/numeric/valarray/dsc atan}}
{{dsc see c|c/numeric/complex/catan}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}