{{cpp/title|polar&lt;small&gt;(std::complex)&lt;/small&gt;}}
{{cpp/numeric/complex/navbar}}
{{dcl begin}}
{{dcl header|complex}}
{{dcl|1=
template&lt; class T &gt; 
std::complex&lt;T&gt; polar( const T&amp; r, const T&amp; theta = T() );
}}
{{dcl end}}

返回拥有模 {{c|r}} 和辐角 {{c|theta}} 的复数。

若 {{c|r}} 为负数或 NaN，或若 {{c|theta}} 为无穷大，则行为未定义。

===参数===
{{par begin}}
{{par|r|模}}
{{par|theta|辐角}}
{{par end}}

===返回值===
以 {{c|r}} 和 {{c|theta}} 确定的复数。

===注解===
{{c|std::polar(r, theta)}} 等价于一下任意表达式：
* {{c|r * std::exp(theta * 1i)}}
* {{c|r * (cos(theta) + sin(theta) * 1i)}}
* {{c|std::complex(r * cos(theta), r * sin(theta))}}。
使用 {{tt|polar}} 而非 {{tt|exp}} 可以在向量化循环中获得大约 '''4.5x''' 的提速。

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;numbers&gt;
using namespace std::complex_literals;

int main()
{
    constexpr auto π_2{std::numbers::pi / 2.0};
    constexpr auto mag{1.0};

    std::cout 
        &lt;&lt; std::fixed &lt;&lt; std::showpos &lt;&lt; std::setprecision(1)
        &lt;&lt; "   θ: │ polar:      │ exp:        │ complex:    │ trig:\n";
    for (int n{}; n != 4; ++n)
    {
        const auto θ{n * π_2};
        std::cout &lt;&lt; std::setw(4) &lt;&lt; 90 * n &lt;&lt; "° │ "
                  &lt;&lt; std::polar(mag, θ) &lt;&lt; " │ "
                  &lt;&lt; mag * std::exp(θ * 1.0i) &lt;&lt; " │ "
                  &lt;&lt; std::complex(mag * cos(θ), mag * sin(θ)) &lt;&lt; " │ "
                  &lt;&lt; mag * (cos(θ) + 1.0i * sin(θ)) &lt;&lt; '\n';
    }
}
|output=&lt;nowiki/&gt;
   θ: │ polar:      │ exp:        │ complex:    │ trig:
  +0° │ (+1.0,+0.0) │ (+1.0,+0.0) │ (+1.0,+0.0) │ (+1.0,+0.0)
 +90° │ (+0.0,+1.0) │ (+0.0,+1.0) │ (+0.0,+1.0) │ (+0.0,+1.0)
+180° │ (-1.0,+0.0) │ (-1.0,+0.0) │ (-1.0,+0.0) │ (-1.0,+0.0)
+270° │ (-0.0,-1.0) │ (-0.0,-1.0) │ (-0.0,-1.0) │ (-0.0,-1.0)
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|std=C++98|dr=2459|before=某些输入的行为不明|after=使之为未定义}}
{{dr list item|wg=lwg|std=C++98|dr=2870|before=参数 {{c|theta}} 的默认值不依赖于类型|after=使之为依赖}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc abs}}
{{dsc inc|cpp/numeric/complex/dsc arg}}
{{dsc inc|cpp/numeric/complex/dsc exp}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}