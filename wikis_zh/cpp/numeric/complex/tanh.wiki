{{cpp/title|tanh{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++11|1=
template&lt; class T &gt; 
complex&lt;T&gt; tanh( const complex&lt;T&gt;&amp; z );
}}

计算复数值 {{c|z}} 的复双曲正切。

===参数===
{{par begin}}
{{par|z|复数值}}
{{par end}}

===返回值===
若不发生错误，则返回 {{c|z}} 的复双曲正切。

===错误处理及特殊值===
报告的错误与 {{lc|math_errhandling}} 一致。

若实现支持 IEEE 浮点算术，则
* {{c|std::tanh(std::conj(z)) {{==}} std::conj(std::tanh(z))}}
* {{c|std::tanh(-z) {{==}} -std::tanh(z)}}
* 若 {{c|z}} 为 {{tt|(+0,+0)}}，则结果为 {{tt|(+0,+0)}}。
* 若 {{c|z}} 为 {{tt|(x,+∞)}}（对于任何&lt;ref&gt;由 [http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1892.htm#dr_471 C11 DR471]，这只对非零 x 成立。若 {{tt|z}} 为 {{tt|(0,∞)}}，则结果应为 {{tt|(0,NaN)}} 。&lt;/ref&gt;有限 x），结果为 {{tt|(NaN,NaN)}} 并引发 {{lc|FE_INVALID}}。
* 若 {{c|z}} 为 {{tt|(x,NaN)}}（对于任何&lt;ref&gt;由 [http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1892.htm#dr_471 C11 DR471]，这只对非零 x 成立。若 {{tt|z}} 为 {{tt|(0,NaN)}}，则结果应为 {{tt|(0,NaN)}} 。&lt;/ref&gt;有限 x），结果为 {{tt|(NaN,NaN)}} 并可能引发 {{lc|FE_INVALID}}。
* 若 {{c|z}} 为 {{tt|(+∞,y)}}（对于任何有限正 y），结果为 {{tt|(1,+0)}}。
* 若 {{c|z}} 为 {{tt|(+∞,+∞)}}，则结果为 {{tt|(1,±0)}}（虚部符号未指定）。
* 若 {{c|z}} 为 {{tt|(+∞,NaN)}}，则结果为 {{tt|(1,±0)}}（虚部符号未指定）。
* 若 {{c|z}} 为 {{tt|(NaN,+0)}}，则结果为 {{tt|(NaN,+0)}} 。
* 若 {{c|z}} 为 {{tt|(NaN,y)}}（对于任何非零 y），则结果为 {{tt|(NaN,NaN)}} 并可能引发 {{lc|FE_INVALID}}。
* 若 {{c|z}} 为 {{tt|(NaN,NaN)}}，则结果为 {{tt|(NaN,NaN)}}。
&lt;references/&gt;

===注解===
双曲正切的数学定义是 {{math|tanh z {{=}} {{mfrac|e{{su|p=z}}-e{{su|p=-z}}|e{{su|p=z}}+e{{su|p=-z}}}}}}。

双曲正切是复平面上的解析函数且无分支切割。它对于虚部是周期的，周期为 &amp;pi;i，而且沿虚轴有一阶极点，位于坐标 {{math|(0, π(1/2 + n))}}。然而无常用浮点表示能准确表示 π/2，故没有实参值能导致极点错误。

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z(1.0, 0.0); // 表现类似沿实轴的 tanh
    std::cout &lt;&lt; "tanh" &lt;&lt; z &lt;&lt; " = " &lt;&lt; std::tanh(z)
              &lt;&lt; " (tanh(1) = " &lt;&lt; std::tanh(1) &lt;&lt; ")\n";

    std::complex&lt;double&gt; z2(0.0, 1.0); // 表现类似沿虚轴的正切
    std::cout &lt;&lt; "tanh" &lt;&lt; z2 &lt;&lt; " = " &lt;&lt; std::tanh(z2)
              &lt;&lt; " ( tan(1) = " &lt;&lt; std::tan(1) &lt;&lt; ")\n";
}
|output=
tanh(1.000000,0.000000) = (0.761594,0.000000) (tanh(1) = 0.761594)
tanh(0.000000,1.000000) = (0.000000,1.557408) ( tan(1) = 1.557408)
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc sinh}}
{{dsc inc|cpp/numeric/complex/dsc cosh}}
{{dsc inc|cpp/numeric/complex/dsc atanh}}
{{dsc inc|cpp/numeric/math/dsc tanh}}
{{dsc inc|cpp/numeric/valarray/dsc tanh}}
{{dsc see c|c/numeric/complex/ctanh}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}