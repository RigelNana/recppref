{{cpp/title|tuple_size{{small|&lt;std::complex&gt;}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++26|
template&lt; class T &gt;
struct tuple_size&lt;std::complex&lt;T&gt;&gt;
    : std::integral_constant&lt;std::size_t, 2&gt; {};
}}

{{ltt|cpp/utility/tuple_size|std::tuple_size}} 针对 {{lc|std::complex}} 的部分特化提供了在编译时使用元组式语法获取一个 {{tt|complex}} 的组分数量的方法，其总是 {{c|2}}。为支持结构化绑定而提供它们。

{{cpp/types/integral_constant/inherit2|the constant value 2|std::size_t}}

===注解===
{{feature test macro|__cpp_lib_tuple_like|std=C++26|value=202311L|为 {{lc|std::complex}} 添加元组协议}}

===示例===
{{example
|code=
#include &lt;complex&gt;
 
static_assert(std::tuple_size_v&lt;std::complex&lt;float&gt;&gt; == 2);
 
static_assert([]
{
    using namespace std::literals;
    auto [re, im] = -1.5 + 2.5i;
    return re == -1.5 &amp;&amp; im == 2.5;
}());
 
static_assert([]
{
    using namespace std::literals;
    auto z = std::complex&lt;double&gt;{};
    auto&amp; [re, im] = z;
    re = 1.0;
    im = 2.0;
    return z == 1.0 + 2.0i;
}());
 
int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/language/dsc structured binding}}
{{dsc inc|cpp/utility/dsc tuple_size}}
{{dsc inc|cpp/numeric/complex/dsc tuple_element}}
{{dsc inc|cpp/numeric/complex/dsc get}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}