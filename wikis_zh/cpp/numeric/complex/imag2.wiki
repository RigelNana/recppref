{{cpp/title|imag{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{dcl begin}}
{{dcl header|complex}}
{{dcl rev multi|num=1|dcl1=
template&lt; class T &gt; 
T imag( const std::complex&lt;T&gt;&amp; z );
|since2=c++14|dcl2=
template&lt; class T &gt; 
constexpr T imag( const std::complex&lt;T&gt;&amp; z );
}}
{{dcl h|[[#注解|额外重载]] {{mark since c++11}}}}
{{dcl header|complex}}
{{dcl rev multi|num=A|dcl1=
float       imag( float f );
double      imag( double f );
long double imag( long double f );
|since2=c++14|dcl2=
constexpr float       imag( float f );
constexpr double      imag( double f );
constexpr long double imag( long double f );
|since3=c++23|dcl3=
template&lt; class FloatingPoint &gt;
FloatingPoint imag( FloatingPoint f );
}}
{{dcl rev multi|num=B|dcl1=
template&lt; class Integer &gt; 
double imag( Integer i );
|since2=c++14|dcl2=
template&lt; class Integer &gt; 
constexpr double imag( Integer i );
}}
{{dcl end}}

@1@ 返回复数 {{c|z}} 的虚部，即 {{c|z.imag()}}。

{{rrev|since=c++11|
@A,B@ 为所有整数和浮点类型提供额外重载，将它们当做拥有零虚部的复数。
}}

===参数===
{{par begin}}
{{par|z|复数值}}
{{par|f|浮点值}}
{{par|i|整数值}}
{{par end}}

===返回值===
@1@ {{c|z}} 的虚部。
@A@ {{c|decltype(f){}&lt;!----&gt;}}（零）。
@B@ {{c|0.0}}。

===注解===
{{cpp/numeric/complex/additional overload note|imag}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc imag}}
{{dsc inc|cpp/numeric/complex/dsc real2}}
{{dsc see c|c/numeric/complex/cimag}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}