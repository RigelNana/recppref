{{cpp/title|cosh{{small|(std::complex)}}}}
{{cpp/numeric/complex/navbar}}
{{ddcl|header=complex|since=c++11|1=
template&lt; class T &gt; 
complex&lt;T&gt; cosh( const complex&lt;T&gt;&amp; z );
}}

计算复数值 {{c|z}} 的复双曲余弦。 

===参数===
{{par begin}}
{{par|z|复数值}}
{{par end}}

===返回值===

若不发生错误，则返回 {{c|z}} 的复双曲余弦。

===错误处理及特殊值===
报告的错误与 {{lc|math_errhandling}} 一致。

若实现支持 IEEE 浮点算术，则，
* {{c|std::cosh(std::conj(z)) {{==}} std::conj(std::cosh(z))}}
* {{c|std::cosh(z) {{==}} std::cosh(-z)}}
* 若 {{c|z}} 为 {{tt|(+0,+0)}}，则结果为 {{tt|(1,+0)}}
* 若 {{c|z}} 为 {{tt|(+0,+∞)}}，则结果为 {{tt|(NaN,±0)}}（虚部符号未指定）并引发 {{lc|FE_INVALID}}
* 若 {{c|z}} 为 {{tt|(+0,NaN)}}，则结果为 {{tt|(NaN,±0)}} (（虚部符号未指定）
* 若 {{c|z}} 为 {{tt|(x,+∞)}}（对于任何有限非零 x），则结果为 {{tt|(NaN,NaN)}} 并引发 {{lc|FE_INVALID}}
* 若 {{c|z}} 为 {{tt|(x,NaN)}}（对于任何有限非零 x），则结果为 {{tt|(NaN,NaN)}} 并可能引发 {{lc|FE_INVALID}}
* 若 {{c|z}} 为 {{tt|(+∞,+0)}}，则结果为 {{tt|(+∞,+0)}}
* 若 {{c|z}} 为 {{tt|(+∞,y)}}（对于任何有限非零 y），则结果为 {{tt|+∞cis(y)}}
* 若 {{c|z}} 为 {{tt|(+∞,+∞)}}，则结果为 {{tt|(±∞,NaN)}}（实部符号未指定）并引发 {{lc|FE_INVALID}}
* 若 {{c|z}} 为 {{tt|(+∞,NaN)}}，则结果为 {{tt|(+∞,NaN)}}
* 若 {{c|z}} 为 {{tt|(NaN,+0)}}，则结果为 {{tt|(NaN,±0)}}（虚部符号未指定）
* 若 {{c|z}} 为 {{tt|(NaN,+y)}}（对于任何有限非零 y），则结果为 {{tt|(NaN,NaN)}} 并可能引发 {{lc|FE_INVALID}}
* 若 {{c|z}} 为 {{tt|(NaN,NaN)}}，则结果为 {{tt|(NaN,NaN)}}

其中 {{math|cis(y)}} 为 {{math|cos(y) + i sin(y)}}。

===注解===
双曲余弦的数学定义是 {{math|cosh z {{=}} {{mfrac|e{{su|p=z}}+e{{su|p=-z}}|2}}}}。

双曲余弦在复平面上是整函数，而无分支切割。它相对于虚部是周期的，周期为 2&amp;pi;i 。

===示例===
{{example|
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iostream&gt;

int main()
{   
    std::cout &lt;&lt; std::fixed;
    std::complex&lt;double&gt; z(1, 0); // 表现如沿实轴的实 cosh
    std::cout &lt;&lt; "cosh" &lt;&lt; z &lt;&lt; " = " &lt;&lt; std::cosh(z)
              &lt;&lt; " (cosh(1) = " &lt;&lt; std::cosh(1) &lt;&lt; ")\n";

    std::complex&lt;double&gt; z2(0, 1); // 表现如沿虚轴的实余弦
    std::cout &lt;&lt; "cosh" &lt;&lt; z2 &lt;&lt; " = " &lt;&lt; std::cosh(z2)
              &lt;&lt; " ( cos(1) = " &lt;&lt; std::cos(1) &lt;&lt; ")\n";
}  
|output=
cosh(1.000000,0.000000) = (1.543081,0.000000) (cosh(1) = 1.543081)
cosh(0.000000,1.000000) = (0.540302,0.000000) ( cos(1) = 0.540302)
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/complex/dsc sinh}}
{{dsc inc|cpp/numeric/complex/dsc tanh}}
{{dsc inc|cpp/numeric/complex/dsc acosh}}
{{dsc inc|cpp/numeric/math/dsc cosh}}
{{dsc inc|cpp/numeric/valarray/dsc cosh}}
{{dsc see c|c/numeric/complex/ccosh}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}