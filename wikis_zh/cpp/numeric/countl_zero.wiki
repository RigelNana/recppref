{{cpp/title|countl_zero}}
{{cpp/utility/bit/navbar}}
{{ddcl|header=bit|since=c++20|
template&lt; class T &gt;
constexpr int countl_zero( T x ) noexcept;
}}

返回 {{c|x}} 的值中从最高位（“左”）起连续的为 {{c|0}} 的位的数量。

{{cpp/enable_if| {{tt|T}} 为无符号整数类型（即 {{c/core|unsigned char}}、{{c/core|unsigned short}}、{{c/core|unsigned int}}、{{c/core|unsigned long}}、{{c/core|unsigned long long}} 或扩展无符号整数类型）}}。

===参数===
{{par begin}}
{{par|x|无符号整数类型的值}}
{{par end}}

===返回值===
{{c|x}} 的值中从最高位起连续的为 {{c|0}} 的位的数量。

===注解===
{{feature test macro|__cpp_lib_bitops|std=C++20|value=201907L|[[cpp/utility/bit|位运算]]}}

===示例===
{{example
|code=
#include &lt;bit&gt;
#include &lt;bitset&gt;
#include &lt;cstdint&gt;
#include &lt;iostream&gt;

int main()
{
    for (const std::uint8_t i : {0, 0b11111111, 0b11110000, 0b00011110})
        std::cout &lt;&lt; "countl_zero( " &lt;&lt; std::bitset&lt;8&gt;(i) &lt;&lt; " ) = "
                  &lt;&lt; std::countl_zero(i) &lt;&lt; '\n';
}
|output=
countl_zero( 00000000 ) = 8
countl_zero( 11111111 ) = 0
countl_zero( 11110000 ) = 0
countl_zero( 00011110 ) = 3
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/dsc countl_one}}
{{dsc inc|cpp/numeric/dsc countr_zero}}
{{dsc inc|cpp/numeric/dsc countr_one}}
{{dsc inc|cpp/numeric/dsc popcount}}
{{dsc inc|cpp/utility/bitset/dsc all_any_none}}
{{dsc see c|c/numeric/bit/stdc_leading_zeros}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}