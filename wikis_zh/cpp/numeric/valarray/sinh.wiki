{{cpp/title|sinh{{small|(std::valarray)}}}}
{{cpp/numeric/valarray/navbar}}
{{ddcl|header=valarray|1=
template&lt; class T &gt;
valarray&lt;T&gt; sinh( const valarray&lt;T&gt;&amp; va );
}}

对 {{c|va}} 中的每个元素，计算该元素的双曲正弦。

===参数===
{{par begin}}
{{par|va|要应用运算的值数组}}
{{par end}}

===返回值===
含 {{c|va}} 中每个值双曲正弦的值数组。

===注解===
{{cpp/numeric/valarray/notes unq|sinh}}

{{cpp/numeric/valarray/notes ret|sinh}}

===可能的实现===
{{cpp/numeric/valarray/impl|sinh}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;complex&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;valarray&gt;

template&lt;typename T&gt;
void show(char const* title, const std::valarray&lt;T&gt;&amp; va)
{
    std::cout &lt;&lt; title &lt;&lt; " : " &lt;&lt; std::right;
    for (T x : va)
        std::cout &lt;&lt; std::fixed &lt;&lt; x &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}

template&lt;typename T&gt;
void sinh_for(std::valarray&lt;T&gt; const&amp; z)
{
    // 双曲正弦为 sinh(z) = (eᶻ - e⁻ᶻ) / 2。

    const std::valarray&lt;T&gt; sinh_z{std::sinh(z)};
    const std::valarray&lt;T&gt; e_z{std::exp(z)};
    const std::valarray&lt;T&gt; e_neg_z{std::exp(-z)};
    const std::valarray&lt;T&gt; sinh_def{(e_z - e_neg_z) / 2.0f};

    show("n         ", z);
    show("sinh(n)   ", sinh_z);
    show("(eⁿ-e⁻ⁿ)/2", sinh_def);

    std::cout.put('\n');
}

int main()
{
    sinh_for(std::valarray&lt;float&gt;{-.2f, -.1f, 0.f, .1f, .2f, INFINITY});
    sinh_for(std::valarray&lt;std::complex&lt;double&gt;&gt;{&lt;!----&gt;{-.2,-.1}, {.2,.1}&lt;!----&gt;});
}
|output=
n          : -0.200000 -0.100000 0.000000 0.100000 0.200000 inf 
sinh(n)    : -0.201336 -0.100167 0.000000 0.100167 0.201336 inf 
(eⁿ-e⁻ⁿ)/2 : -0.201336 -0.100167 0.000000 0.100167 0.201336 inf 

n          : (-0.200000,-0.100000) (0.200000,0.100000) 
sinh(n)    : (-0.200330,-0.101837) (0.200330,0.101837) 
(eⁿ-e⁻ⁿ)/2 : (-0.200330,-0.101837) (0.200330,0.101837)
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/valarray/dsc cosh}}
{{dsc inc|cpp/numeric/valarray/dsc tanh}}
{{dsc inc|cpp/numeric/math/dsc sinh}}
{{dsc inc|cpp/numeric/complex/dsc sinh}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}