{{cpp/title|feraiseexcept}}
{{cpp/numeric/fenv/navbar}}
{{dcl begin}}
{{dcl header|cfenv}}
{{dcl|since=c++11|
int feraiseexcept( int excepts );
}}
{{dcl end}}

尝试引发所有列于 {{tt|excepts}}（[[cpp/numeric/fenv/FE_exceptions|浮点数异常宏]]的逐位或）的浮点数异常。若异常之一是 {{lc|FE_OVERFLOW}} 或 {{lc|FE_UNDERFLOW}}，则此函数还会再引发 {{lc|FE_INEXACT}}。引发异常所用的顺序是未指定的，但 {{lc|FE_OVERFLOW}} 和 {{lc|FE_UNDERFLOW}} 始终先于 {{lc|FE_INEXACT}} 引发。

===参数===
{{par begin}}
{{par|excepts|列出要引发的异常标志的位掩码}}
{{par end}}

===返回值===
若已引发所有列出的异常则为 {{c|0}}，否则为非零值。

===示例===
{{example
|code=
#include &lt;cfenv&gt;
#include &lt;iostream&gt;

// #pragma STDC FENV_ACCESS ON

int main()
{
    std::feclearexcept(FE_ALL_EXCEPT);
    const int r = std::feraiseexcept(FE_UNDERFLOW {{!}} FE_DIVBYZERO);
    std::cout &lt;&lt; "同时引发除以零和下溢出"
              &lt;&lt; (r ? "失败" : "成功") &lt;&lt; "，并导致\n";

    const int e = std::fetestexcept(FE_ALL_EXCEPT);
    if (e &amp; FE_DIVBYZERO)
        std::cout &lt;&lt; "除以零\n";
    if (e &amp; FE_INEXACT)
        std::cout &lt;&lt; "不精确值\n";
    if (e &amp; FE_INVALID)
        std::cout &lt;&lt; "无效值\n";
    if (e &amp; FE_UNDERFLOW)
        std::cout &lt;&lt; "下溢出\n";
    if (e &amp; FE_OVERFLOW)
        std::cout &lt;&lt; "上溢出\n";
}
|output=
同时引发除以零和下溢出成功，并导致
除以零
下溢出
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/fenv/dsc feclearexcept}}
{{dsc inc|cpp/numeric/fenv/dsc fetestexcept}}
{{dsc see c|c/numeric/fenv/feraiseexcept}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}