{{title|{{small|FE_DIVBYZERO, FE_INEXACT, FE_INVALID, FE_OVERFLOW, FE_UNDERFLOW, FE_ALL_EXCEPT}}}}
{{cpp/numeric/fenv/navbar}}
{{dcl begin}}
{{dcl header|cfenv}}
{{dcl|since=c++11|
#define FE_DIVBYZERO    /* 由实现定义的 2 的幂 */
}}
{{dcl|since=c++11|
#define FE_INEXACT      /* 由实现定义的 2 的幂 */
}}
{{dcl|since=c++11|
#define FE_INVALID      /* 由实现定义的 2 的幂 */
}}
{{dcl|since=c++11|
#define FE_OVERFLOW     /* 由实现定义的 2 的幂 */
}}
{{dcl|since=c++11|
#define FE_UNDERFLOW    /* 由实现定义的 2 的幂 */
}}
{{dcl|since=c++11|
#define FE_ALL_EXCEPT   FE_DIVBYZERO {{!}} FE_INEXACT {{!}} \
                        FE_INVALID {{!}} FE_OVERFLOW {{!}}  \
                        FE_UNDERFLOW
}}
{{dcl end}}

所有这些宏常量（除了 {{tt|FE_ALL_EXCEPT}}）都展开成值为 2 的相异次幂整数常量表达式，唯一地鉴别所有受支持浮点数异常。每个宏仅若受支持才得到定义。

宏常量 {{tt|FE_ALL_EXCEPT}} 展开成所有其他 {{tt|FE_*}} 的逐位或，且始终有定义，若实现不支持浮点数异常，则为零。

{{dsc begin}}
{{dsc hitem |常量|定义}}
{{dsc | {{tt|FE_DIVBYZERO}} |出现于之前浮点数运算的极点错误}}
{{dsc | {{tt|FE_INEXACT}}   |不准确结果：必须舍入以存储之前浮点数运算的结果}}
{{dsc | {{tt|FE_INVALID}}   |出现于之前浮点数运算的定义域错误}}
{{dsc | {{tt|FE_OVERFLOW}}  |之前浮点数运算的结果过大而无法表示}}
{{dsc | {{tt|FE_UNDERFLOW}} |之前浮点数运算的结果为有精度损失的非正规值}}
{{dsc | {{tt|FE_ALL_EXCEPT}} |所有受支持浮点数异常的逐位或}}
{{dsc end}}

实现可于 {{tt|&lt;cfenv&gt;}} 定义附加宏常量以鉴别附加浮点数异常。所有这种常量都以 {{tt|FE_}} 后随至少一个大写字母开始。

进一步的细节见 {{lc|math_errhandling}} 。

===示例===
{{include| cpp/numeric/fenv/example1}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/numeric/math/dsc math_errhandling}}
{{dsc see c | c/numeric/fenv/FE_exceptions |浮点数异常宏| nomono=true}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}