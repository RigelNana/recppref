{{cpp/title|bit_width}}
{{cpp/utility/bit/navbar}}
{{ddcl|since=c++20|header=bit|
template&lt; class T &gt;
constexpr int bit_width( T x ) noexcept;
}}

若 {{c|x}} 非零，则计算存储值 {{c|x}} 所需的位数，即 {{mathjax-or|1=\(1 + \lfloor \log_2(x) \rfloor\)|2=1 + floor(log{{su|b=2}}(x))}}。若 {{c|x}} 为零，则返回零。

{{cpp/enable_if| {{tt|T}} 为无符号整数类型（即 {{c/core|unsigned char}}、{{c/core|unsigned short}}、{{c/core|unsigned int}}、{{c/core|unsigned long}}、{{c/core|unsigned long long}} 或扩展无符号整数类型）}}。

===返回值===
若 {{c|x}} 为零则为零；否则为一加 {{c|x}} 的 2 为底的对数，舍弃任何小数部分。

===注解===
此函数等价于 {{c|return std::numeric_limits&lt;T&gt;::digits - std::countl_zero(x);}}。

{{feature test macro|__cpp_lib_int_pow2|std=C++20|value=202002L|[[cpp/utility/bit|{{math|2}} 的整数次幂运算]]}}

===示例===
{{example
|code=
#include &lt;bit&gt;
#include &lt;bitset&gt;
#include &lt;iostream&gt;

int main()
{
    for (unsigned x{}; x != 010; ++x)
        std::cout &lt;&lt; "bit_width( "
                  &lt;&lt; std::bitset&lt;4&gt;{x} &lt;&lt; " ) = "
                  &lt;&lt; std::bit_width(x) &lt;&lt; '\n';
}
|output=
bit_width( 0000 ) = 0
bit_width( 0001 ) = 1
bit_width( 0010 ) = 2
bit_width( 0011 ) = 2
bit_width( 0100 ) = 3
bit_width( 0101 ) = 3
bit_width( 0110 ) = 3
bit_width( 0111 ) = 3
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3656|std=C++20|before={{tt|bit_width}} 的返回类型与其函数参数类型相同|after=使返回类型为 {{c/core|int}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/dsc countl_zero}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}