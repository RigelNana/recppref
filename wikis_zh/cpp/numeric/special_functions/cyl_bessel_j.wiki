{{cpp/title|cyl_bessel_j|cyl_bessel_jf|cyl_bessel_jl}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       cyl_bessel_j ( float nu, float x );
double      cyl_bessel_j ( double nu, double x );
long double cyl_bessel_j ( long double nu, long double x );
|since2=c++23|dcl2=
/* 浮点数类型 */ cy_bessel_j( /* 浮点数类型 */ nu,
                                       /* 浮点数类型 */ x );
}}
{{dcl|num=2|since=c++17|
float       cyl_bessel_jf( float nu, float x );
}}
{{dcl|num=3|since=c++17|
long double cyl_bessel_jl( long double nu, long double x );
}}
{{dcl h|[[#注解|额外重载]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Arithmetic1, class Arithmetic2 &gt;
/* 公共浮点数类型 */
    cyl_bessel_j( Arithmetic1 nu, Arithmetic2 x );
}}
{{dcl end}}

@1-3@ 计算 {{c|nu}} 和 {{c|x}} 的{{enwiki|Bessel function#Bessel functions of the first kind: J.CE.B1|第一类柱贝塞尔函数}}。{{rev inl|since=c++23|标准库提供所有以无 cv 限定的浮点数类型作为形参 {{c|nu}} 和 {{c|x}} 的类型的 {{tt|std::cyl_bessel_j}} 重载。}}
@A@ 为算术类型的所有其他组合提供额外重载。

===参数===
{{par begin}}
{{par|nu|函数的阶数}}
{{par|x|函数的实参}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|nu}} 和 {{c|x}} 的第一类柱贝塞尔函数的值，即 {{math|1=J{{su|b=nu}}(x) = Σ{{su|p=∞|b=k=0}}{{mfrac|(-1){{su|p=k}}(x/2){{su|p=nu+2k}}|k!Γ(nu+k+1)}}}}（对于 {{math|x≥0}}）。

===错误处理===
可能报告 {{lc|math_errhandling}} 中指定的错误
* 如果实参是 NaN，那么返回 NaN 且不报告定义域错误
* 如果 {{math|1=nu&gt;=128}}，那么行为由实现定义

===注解===
{{cpp/numeric/special functions/older impl note}}

此函数的一种实现参考 [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/bessel/bessel_first.html boost.math]。

{{cpp/numeric/special functions/additional overload note|cyl_bessel_j}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    // 对 nu == 0 点检查
    double x = 1.2345;
    std::cout &lt;&lt; "J_0(" &lt;&lt; x &lt;&lt; ") = " &lt;&lt; std::cyl_bessel_j(0, x) &lt;&lt; '\n';
    
    // 对 J_0 展开级数
    double fct = 1;
    double sum = 0;
    for (int k = 0; k &lt; 6; fct *= ++k)
    {
        sum += std::pow(-1, k) * std::pow(x / 2, 2 * k) / std::pow(fct, 2);
        std::cout &lt;&lt; "sum = " &lt;&lt; sum &lt;&lt; '\n';
    }
}
|output=
J_0(1.2345) = 0.653792
sum = 1
sum = 0.619002
sum = 0.655292
sum = 0.653756
sum = 0.653793
sum = 0.653792
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/special functions/dsc cyl_bessel_i}}
{{dsc end}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/BesselFunctionoftheFirstKind.html Weisstein, Eric W. “第一类贝塞尔函数。”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|en|es|ja}}