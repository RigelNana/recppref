{{cpp/title|cyl_bessel_k|cyl_bessel_kf|cyl_bessel_kl}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       cyl_bessel_k ( float nu, float x );
double      cyl_bessel_k ( double nu, double x );
long double cyl_bessel_k ( long double nu, long double x );
|since2=c++23|dcl2=
/* 浮点数类型 */ cyl_bessel_k( /* 浮点数类型 */ nu,
                                        /* 浮点数类型 */ x );
}}
{{dcl|num=2|since=c++17|
float       cyl_bessel_kf( float nu, float x );
}}
{{dcl|num=3|since=c++17|
long double cyl_bessel_kl( long double nu, long double x );
}}
{{dcl h|[[#注解|额外重载]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Arithmetic1, class Arithmetic2 &gt;
/* 公共浮点数类型 */
    cyl_bessel_k( Arithmetic1 nu, Arithmetic2 x );
}}
{{dcl end}}

@1-3@ 计算 {{c|nu}} 和 {{c|x}} 的{{enwiki|Bessel function#Modified Bessel functions: I.CE.B1 .2C K.CE.B1|非常规修正柱贝塞尔函数}}（也称为第二类修正贝塞尔函数）。{{rev inl|since=c++23|标准库提供所有以无 cv 限定的浮点数类型作为形参 {{c|nu}} 和 {{c|x}} 的类型的 {{tt|std::cyl_bessel_k}} 重载。}}
@A@ 为算术类型的所有其他组合提供额外重载。

===参数===
{{par begin}}
{{par|nu|函数的阶数}}
{{par|x|函数的实参}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|nu}} 和 {{c|x}} 的非常规修正柱贝塞尔函数（第二类修正贝塞尔函数）的值，即对于 {{math|x≥0}} 及非整数 {{c|nu}} 的 {{math|1=K{{su|b=nu}}(x) = {{mfrac|π|2}}{{mfrac|I{{su|b=-nu}}(x)-I{{su|b=nu}}(x)|sin(nuπ)}}}}（其中 {{math|I{{su|b=nu}}(x)}} 是 {{c|std::cyl_bessel_i(nu, x)}}）；对整数 {{c|nu}} 使用极限。

===错误处理===
可能报告 {{lc|math_errhandling}} 中指定的错误
* 如果实参是 NaN，那么返回 NaN 且不报告定义域错误
* 如果 {{math|1=nu&gt;=128}}，那么行为由实现定义

===注解===
{{cpp/numeric/special functions/older impl note}}

此函数的一种实现亦参考 [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/bessel/mbessel.html boost.math]。

{{cpp/numeric/special functions/additional overload note|cyl_bessel_k}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;
#include &lt;numbers&gt;

int main()
{
    double pi = std::numbers::pi;
    const double x = 1.2345;
    
    // 对 nu == 0.5 点检查
    std::cout &lt;&lt; "K_.5(" &lt;&lt; x &lt;&lt; ") = " &lt;&lt; std::cyl_bessel_k(.5, x) &lt;&lt; '\n'
              &lt;&lt; "通过 I 计算 = "
              &lt;&lt; (pi / 2) * (std::cyl_bessel_i(-.5, x)
                 -std::cyl_bessel_i(.5, x)) / std::sin(.5 * pi) &lt;&lt; '\n';
}
|output=
K_.5(1.2345) = 0.32823
通过 I 计算 = 0.32823
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/special functions/dsc cyl_bessel_i}}
{{dsc inc|cpp/numeric/special functions/dsc cyl_bessel_j}}
{{dsc end}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/ModifiedBesselFunctionoftheSecondKind.html Weisstein, Eric W. “第二类修正贝塞尔函数”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|en|es|ja}}