{{cpp/title|cyl_bessel_i|cyl_bessel_if|cyl_bessel_il}}
{{cpp/numeric/special_functions/navbar}}
{{dcl begin}}
{{dcl header|cmath}}
{{dcl rev multi|num=1|since1=c++17|dcl1=
float       cyl_bessel_i ( float nu, float x );
double      cyl_bessel_i ( double nu, double x );
long double cyl_bessel_i ( long double nu, long double x );
|since2=c++23|dcl2=
/* 浮点数类型 */ cyl_bessel_i( /* 浮点数类型 */ nu,
                                        /* 浮点数类型 */ x );
}}
{{dcl|num=2|since=c++17|
float       cyl_bessel_if( float nu, float x );
}}
{{dcl|num=3|since=c++17|
long double cyl_bessel_il( long double nu, long double x );
}}
{{dcl h|[[#注解|额外重载]]}}
{{dcl header|cmath}}
{{dcl|num=A|since=c++17|
template&lt; class Arithmetic1, class Arithmetic2 &gt;
/* common-浮点数类型 */
    cyl_bessel_i( Arithmetic1 nu, Arithmetic2 x );
}}
{{dcl end}}

@1-3@ 计算 {{c|nu}} 和 {{c|x}} 的{{enwiki|Bessel function#Modified Bessel functions: I.CE.B1 .2C_K.CE.B1|常规修正贝塞尔函数}}。{{rev inl|since=c++23|标准库提供所有以无 cv 限定的浮点数类型作为形参 {{c|nu}} 和 {{c|x}} 的类型的 {{tt|std::cyl_bessel_i}} 重载。}}
@A@ 为算术类型的所有其他组合提供额外重载。

===参数===
{{par begin}}
{{par|nu|函数的阶数}}
{{par|x|函数的实参}}
{{par end}}

===返回值===
如果没有发生错误，那么返回 {{c|nu}} 和 {{c|x}} 的常规修正柱贝塞尔函数，即 {{math|1=I{{su|b=nu}}(x) = Σ{{su|p=∞|b=k=0}}{{mfrac|(x/2){{su|p=nu+2k}}|k!Γ(nu+k+1)}}}}（对于 {{math|x≥0}}）。

===错误处理===
可能报告 {{lc|math_errhandling}} 中指定的错误。
* 如果实参是 NaN，那么返回 NaN 且不报告定义域错误。
* 如果 {{math|nu≥128}}，那么行为由实现定义。

===注解===
{{cpp/numeric/special functions/older impl note}}

此函数的一种实现参考 [https://www.boost.org/doc/libs/release/libs/math/doc/html/math_toolkit/bessel/mbessel.html boost.math]。

{{cpp/numeric/special functions/additional overload note|cyl_bessel_i}}

===示例===
{{example
|code=
#include &lt;cmath&gt;
#include &lt;iostream&gt;

int main()
{
    // 对 nu == 0 点检查
    const double x = 1.2345;
    std::cout &lt;&lt; "I_0(" &lt;&lt; x &lt;&lt; ") = " &lt;&lt; std::cyl_bessel_i(0, x) &lt;&lt; '\n';
    
    // 对 I_0 的级数展开 
    double fct = 1;
    double sum = 0;
    for (int k = 0; k &lt; 5; fct *= ++k)
    {
        sum += std::pow(x / 2, 2 * k) / std::pow(fct, 2);
        std::cout &lt;&lt; "sum = " &lt;&lt; sum &lt;&lt; '\n';
    }        
}
|output=
I_0(1.2345) = 1.41886
sum = 1
sum = 1.381
sum = 1.41729
sum = 1.41882
sum = 1.41886
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/numeric/special functions/dsc cyl_bessel_j}}
{{dsc end}}

===外部链接===
{{eli|[https://mathworld.wolfram.com/ModifiedBesselFunctionoftheFirstKind.html Weisstein, Eric W. “第一类修正贝塞尔函数”]来自 MathWorld--A Wolfram Web Resource。}}

{{langlinks|en|es|ja}}