{{cpp/language/attributes/title|indeterminate|notes={{mark since c++26}}}}
{{cpp/language/attributes/navbar}}

指示变量或函数形参在没有初始化的情况下具有不确定值。

===语法===
{{sdsc begin}}
{{sdsc|
{{ttb|{{c/core|[[indeterminate]]}}}}
}}
{{sdsc end}}

===解释===
{{attr|indeterminate}} 可以应用到具有自动[[cpp/language/storage duration|存储期]]的块变量或[[cpp/language/function|函数声明]]中的形参声明。此属性指定具有自动存储期的对象的初始存储包含的各字节是[[cpp/language/default initialization#Indeterminate and erroneous values|不确定的]]而不是错误的。

如果函数形参有声明 {{attr|indeterminate}}，那么它必须在该函数的首个声明处声明。如果函数在某个翻译单元的首个声明中声明它的一个形参为 {{attr|indeterminate}}，而在另一个翻译单元的首个声明中没有声明相同形参为 {{attr|indeterminate}}，那么程序[[cpp/language/ub#解释|非良构，不要求诊断]]。

===注解===
{{attr/core|indeterminate}} 属性恢复 C++26 前隐式引入的未定义行为。它可能使得编译器认为读取不确定值的代码路径不可抵达。

===示例===
{{example
|code=
void f(int);

void g()
{
    int x [[indeterminate]]; // 不确定值
    int y;                   // 错误值
    
    f(x); // 未定义行为
    f(y); // 错误行为
}

struct T
{
    T() {}
    int x;
};

void h(T a [[indeterminate]], T b)
{
    f(a.x); // 在以下调用时有未定义行为
    f(b.x); // 在以下调用时有错误行为
}

h(T(), T());
}}

===引用===
{{ref std c++26}}
{{ref std|section=9.12.7|title=Indeterminate storage|id=dcl.attr.indet}}
{{ref std end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}