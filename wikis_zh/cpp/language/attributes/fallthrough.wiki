{{cpp/language/attributes/title|fallthrough|notes={{mark since c++17}}}}
{{cpp/language/attributes/navbar}}

指示从前一标号直落是有意的，而在发生直落时给出警告的编译器不应诊断它。

===语法===
{{sdsc begin}}
{{sdsc|1=
{{ttb|{{c/core|[[fallthrough]]}}}}
}}
{{sdsc end}}

===解释===
只能应用到[[cpp/language/statements#表达式语句|空语句]]以创建''直落语句''（fallthrough statement）：{{c|[[fallthrough]];}}。

直落语句只能用在 {{ltt|cpp/language/switch}} 语句中，其中待执行的下个语句是该 switch 语句的带 case 或 default 标号的语句。如果直落语句在循环中，那么下个（带标号）语句必须是该循环的同一迭代的一部分。

===示例===
{{example
|code=
void f(int n)
{
    void g(), h(), i();
    
    switch (n)
    {
        case 1:
        case 2:
            g();
            [[fallthrough]];
        case 3: // 直落时不警告
            h();
        case 4: // 编译器可在发生直落时警告
            if (n &lt; 3)
            {
                i();
                [[fallthrough]]; // OK
            }
            else
            {
                return;
            }
        case 5:
            while (false)
            {
                [[fallthrough]]; // 非良构：下一语句不是同一迭代的一部分
            }
        case 6:
            [[fallthrough]]; // 非良构：没有后继的 case 或 default 标号
    }
}
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=cwg|dr=2406|std=C++17|before={{c|[[fallthrough]]}} 可以在对应的 switch 语句中嵌套的循环中出现|after=已禁止}}
{{dr list end}}

===引用===
{{ref std c++23}}
{{ref std|section=9.12.6|title=Fallthrough attribute|id=dcl.attr.fallthrough}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=9.12.5|title=Fallthrough attribute|id=dcl.attr.fallthrough}}
{{ref std end}}
{{ref std c++17}}
{{ref std|section=10.6.5|title=Fallthrough attribute|id=dcl.attr.fallthrough}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc see c|c/language/attributes/fallthrough}}
{{dsc end}}

{{langlinks|en|es|ja}}