{{title|字母缩写}}
{{cpp/language/navbar}}

{| class="wikitable"
!缩写
!全名
!参阅
|-
|AAA
|Almost Always [[cpp/keyword/auto|Auto]]&lt;br /&gt;几乎始终 {{tt|auto}}
|[https://herbsutter.com/2013/06/13/gotw-94-special-edition-aaa-style-almost-always-auto GOTW #94]
|-
|ABC
|{{rlp|abstract class|Abstract Base Class}}&lt;br /&gt;抽象基类
|
|-
|ABI
|{{enwiki|Application Binary Interface}}&lt;br /&gt;应用程序二进制接口
|[https://itanium-cxx-abi.github.io/cxx-abi/abi.html Itanium C++ ABI]
|-
|ADL
|{{rlp|adl|Argument-Dependent Lookup}}&lt;br /&gt;实参依赖查找
|
|-
|ADT
|{{enwiki|Abstract Data Type}}&lt;br /&gt;抽象数据类型
|	
|-id="AFO"
| AFO
|[[cpp/algorithm/ranges#算法函数对象|Algorithm Function Objects]]&lt;br /&gt;算法函数对象
|[[#CPO|CPO]]
|
|-
|API
|{{enwiki|Application Programming Interface}}&lt;br /&gt;应用程序编程接口
|
|-
|BMI
|Binary Module Interface&lt;br /&gt;二进制模块接口
|{{rlp|modules|模块}}
|-
|CAS
|{{enwiki|Compare-And-Swap}}; [https://stackoverflow.com/questions/3279543/what-is-the-copy-and-swap-idiom Copy And Swap]&lt;br /&gt;比较并交换；复制并交换
|{{ltt|cpp/atomic/atomic/compare_exchange}}
|-
|CMI
|Compiled Module Interfaces&lt;br /&gt;已编译模块接口
|{{rlp|modules|模块}}
|-
|COW
|{{enwiki|Copy-On-Write}}&lt;br /&gt;写时复制
|
|-
|-id="CPO"
|CPO
|[[cpp/ranges/cpo|Customization Point Object]]&lt;br /&gt;定制点对象
|[https://eel.is/c++draft/customization.point.object#1 &amp;#91;customization.point.object&amp;#93;], {{named req|RangeAdaptorObject}}, {{named req|RangeAdaptorClosureObject}}，[[#AFO|AFO]]
|-
|CRTP
|{{rlp|crtp|Curiously Recurring Template Pattern}}&lt;br /&gt;奇特重现模板模式
|{{lc|std::enable_shared_from_this}}, {{lc|ranges::view_interface|std::ranges::view_interface}}
|-
|CTAD
|{{rlp|class template argument deduction|Class Template Argument Deduction}}&lt;br /&gt;类模板实参推导
|
|-
|CTRE
|'''C'''ompile-'''T'''ime '''R'''egular '''E'''xpressions&lt;br /&gt;编译时正则表达式
|[https://github.com/hanickadot/compile-time-regular-expressions CTRE 库]
|-
|CWG
|The '''C'''ore '''W'''orking '''G'''roup&lt;br /&gt;核心工作组
|[https://isocpp.org/std/the-committee WG21]
|-
|DCL
|{{enwiki|Double-checked locking|双重检查锁定}}
|[[cpp/thread|并发支持库]]
|-id="DIS"
|DIS
|Draft International Standard&lt;br /&gt;国际标准草案
|另见 {{ls|#FDIS}}
|-id="DR"
|DR
|Defect Report&lt;br /&gt;缺陷报告
|
|-
|EBO&lt;br/&gt;EBCO
|{{rlp|ebo|Empty Base (Class) Optimization}}&lt;br /&gt;空基类优化
|{{attr|no_unique_address}}, {{lc|std::allocator}}, {{lc|std::default_delete}}
|-
|EDG
|[https://www.edg.com/company Edison Design Group]&lt;br /&gt;爱迪生设计组
|
|-
|EH
|Exception Handling&lt;br /&gt;异常处理
|
|-
|ELF
|{{enwiki|Executable and linkable Format|'''E'''xecutable and '''L'''inkable '''F'''ormat}}&lt;br /&gt;可执行可连接格式
|
|-
|EWG
|The '''E'''volution '''W'''orking '''G'''roup&lt;br /&gt;（语言）演进工作组
|[https://isocpp.org/std/the-committee WG21]
|-
|EWGI
|The '''E'''volution '''W'''orking '''G'''roup '''I'''ncubator&lt;br /&gt;（语言）演进工作组孵化器
|[https://isocpp.org/std/the-committee WG21]
|-
|FAM
|{{enwiki|Flexible array member|Flexible Array Member}}&lt;br /&gt;柔性数组成员
|
|-id="FDIS"
|FDIS
|Final Draft International Standard&lt;br /&gt;国际标准最终草案
|另见 {{ls|#DIS}}
|-
|GCC
|{{enwiki|GNU|'''G'''NU}} '''C'''ompiler '''C'''ollection&lt;br /&gt;GNU 编译器集合
|
|-
|GMF
|Global Module Fragment&lt;br /&gt;全局模块片段
|{{rlp|modules|模块}}
|-
|HALO
|'''H'''eap '''A'''llocation e'''L'''ision '''O'''ptimization&lt;br /&gt;堆分配消除优化
|{{rlp|coroutines|协程}}, {{stddoc|p0981}}
|-
|ICE
|[[enwiki:Compilation error#Internal Compiler Errors|Internal Compiler Error]]; Integer Constant Expression&lt;br /&gt;内部编译器错误；整型常量表达式
|
|-
|IFNDR
|{{rlp|ndr|Ill-Formed, No Diagnostic Required}}&lt;br /&gt;非良构，不要求诊断
|
|-
|IIILE
|Immediately Invoked Initializing {{rlp|lambda|Lambda Expression}}&lt;br /&gt;立即调用的初始化 lambda 表达式
|
|-
|IPO
|{{enwiki|Interprocedural optimization|Inter-Procedural Optimization}}&lt;br /&gt;跨过程优化
|
|-
|IWYU
|'''I'''nclude '''W'''hat '''Y'''ou '''U'''se&lt;br /&gt;仅包含所用标头
|[https://include-what-you-use.org 基于 libclang 的工具]
|-
|LEWG
|The '''L'''ibrary '''E'''volution '''W'''orking '''G'''roup&lt;br /&gt;库演进工作组
|[https://isocpp.org/std/the-committee WG21]
|-
|LEWGI
|The '''L'''ibrary '''E'''volution '''W'''orking '''G'''roup '''I'''ncubator&lt;br /&gt;库演进工作组孵化器
|[https://isocpp.org/std/the-committee WG21]
|-
|LTO
|[[enwiki:Interprocedural optimization#WPO and LTO|Link-Time Optimization]]&lt;br /&gt;链接时优化
|
|-
|LWG
|The '''L'''ibrary '''W'''orking '''G'''roup&lt;br /&gt;库工作组
|[https://isocpp.org/std/the-committee WG21]
|-
|MDT
|Most Derived Type&lt;br /&gt;最终派生类型
|
|-id="MPSC"
|MPSC
|Multi-Producer Single-Consumer&lt;br /&gt;多生产者单消费者（如任务队列）
|{{lc|std::executor}}
|-
|MSVC
|'''M'''icro'''S'''oft '''V'''isual '''C'''++&lt;br /&gt;微软公司的 Visual C++ 编译器
|
|-
|NAD
|Not A Defect&lt;br /&gt;非缺陷
|另见 {{ls|#DR}}
|-
|NDR
|{{rlp|ndr|No Diagnostic Required}}&lt;br /&gt;不要求诊断
|
|-
|NRVO 
|{{rlp|copy elision|Named Return Value Optimization}}&lt;br /&gt;具名返回值优化
|
|-
|NSDMI
|{{rlp|data members|Non-Static Data Member Initialization}}&lt;br /&gt;非静态数据成员初始化
|
|-
|NTBS
|[[cpp/string/byte|Null-Terminated Byte Strings]]&lt;br /&gt;空终止字节字符串
|
|-
|NTTP 
|{{rlp|template parameters|Non-Type Template Parameter}}&lt;br /&gt;非类型模板形参
|
|-
|NUA
|No Unique Address&lt;br /&gt;无独占地址
|{{attr|no_unique_address}}
|-
|NVI
|'''N'''on-'''V'''irtual '''I'''nterface&lt;br /&gt;非虚接口
|
|-
|ODR
|{{rlp|definition|One Definition Rule}}&lt;br /&gt;单一定义规则
|
|-
|OOP
|{{enwiki|Object-Oriented Programming}}&lt;br /&gt;面向对象编程
|
|-
|PCH
|'''P'''re-'''C'''ompiled '''H'''eader&lt;br /&gt;预编译头文件
|[https://gcc.gnu.org/onlinedocs/gcc/Precompiled-Headers.html gcc 的 PCH 文档]
|-id="PDO"
|PDO
|Profile-Driven Optimization&lt;br /&gt;剖测驱动优化
|另见 {{ls|#PGO}}
|-id="PGO"
|PGO
|{{enwiki|Profile-guided Optimization|'''P'''rofile-'''G'''uided '''O'''ptimization}}&lt;br /&gt;剖测引导优化
|另见 {{ls|#PDO}}
|-
|PID
|Process IDentifier&lt;br /&gt;进程标识符
|{{ltf|cpp/thread/thread/get_id|std::thread::get_id}}, {{ltf|cpp/thread/jthread/get_id|std::jthread::get_id}}
|-
|PIMPL
|{{rlp|pimpl|Pointer to IMPLementation}}&lt;br /&gt;实现指针（手法）
|
|-
|PMF
|Private Module Fragment&lt;br /&gt;私有模块片段
|{{rlp|modules|模块}}
|-
|PMR
|'''P'''olymorphic '''M'''emory '''R'''esources&lt;br /&gt;多态内存资源
|{{header|memory_resource}}
|-
|POCCA
|[[cpp/memory/allocator_traits|Propagate on Container Copy Assignment]]&lt;br&gt;容器复制赋值时传播
|
|-
|POCMA
|[[cpp/memory/allocator_traits|Propagate on Container Move Assignment]]&lt;br&gt;容器移动赋值时传播
|
|-
|POCS
|[[cpp/memory/allocator_traits|Propagate on Container Swap]]&lt;br&gt;容器交换时传播
|
|-
|POD
|[[cpp/named req/PODType|Plain Old Data]] ({{named req|PODType}})
|{{named req|ScalarType}}, {{named req|TrivialType}}, {{named req|StandardLayoutType}}
|-
|QoI
|'''Q'''uality '''o'''f '''I'''mplementation&lt;br /&gt;实现质量
|
|-id="RAII"
|RAII
|{{rlp|raii|Resource Acquisition Is Initialization}}&lt;br /&gt;资源获取即初始化
|
|-
|RACO
|[[cpp/ranges#范围迭代器闭包对象|Range Adaptor Closure Object]]&lt;br&gt;范围迭代器闭包对象
|{{named req|RangeAdaptorClosureObject}}
|-
|RAO
|[[cpp/ranges#范围迭代器对象|Range Adaptor Object]]&lt;br&gt;范围迭代器对象
|{{named req|RangeAdaptorObject}}
|-
|RCU
|{{enwiki|Read-copy-update|Read-Copy-Update}}&lt;br /&gt;读-复制-更新
|{{header|rcu}}
|-
|RTTI
|{{rlp|types|RunTime Type Identification}}&lt;br /&gt;运行时类型鉴别
|{{lc|std::type_info}}
|-
|RVO 
|{{rlp|copy elision|Return Value Optimization}}&lt;br /&gt;返回值优化
|
|-id="SBO"
|SBO
|Small Buffer Optimization&lt;br /&gt;小缓冲区优化
|参见 {{ls|#SOO}}, {{ls|#SSO}}
|-
|SBRM
|'''S'''cope-'''B'''ound '''R'''esource '''M'''anagement&lt;br /&gt;作用域限定资源管理
|参见 {{ls|#RAII}}
|-
|SCARY
|'''S'''eemingly erroneous (appearing '''C'''onstrained by conflicting generic parameters), but '''A'''ctually work with the '''R'''ight implementation (unconstrained b'''Y''' the conflict due to minimized dependencies).&lt;br /&gt;看起来错误（表面上由冲突的泛型参数制约），但实际上在正确的实现中有效（由于最小化依赖而无需约束）。
|[https://www.stroustrup.com/SCARY.pdf stroustrup.com/SCARY.pdf]
|-
|SEH
|'''S'''tructured '''E'''xception '''H'''andling&lt;br /&gt;结构化异常处理
|{{enwiki|Microsoft-specific exception handling mechanisms#SEH|SEH}}
|-
|SFINAE
|{{rlp|sfinae|Substitution Failure Is Not An Error}}&lt;br /&gt;替换失败不是错误
|{{lc|std::enable_if}}, {{lc|std::void_t}}
|-
|SIMD
|{{enwiki|SIMD|Single Instruction Multiple Data}}&lt;br /&gt;单指令多数据
|[[cpp/numeric/simd|数据并行类型 (SIMD)]]
|-
|SIOF
|[https://isocpp.org/wiki/faq/ctors#static-init-order '''S'''tatic '''I'''nitialization '''O'''rder '''F'''iasco]&lt;br&gt;静态初始化次序惨败
|
|-
|SMF
|Special Member Function&lt;br /&gt;特殊成员函数
|
|-
|SOCCC
|[[cpp/memory/allocator_traits/select_on_container_copy_construction|Select On Container Copy Construction]]&lt;br&gt;容器复制构造时选择
|
|-id="SOO"
|SOO
|Small Object Optimization&lt;br /&gt;小对象优化
|{{lc|std::move_only_function}}, {{lc|std::function}}, {{lc|std::any}}。参见 {{ls|#SBO}}, {{ls|#SSO}}
|-id="SSO"
|SSO
|Small String Optimization&lt;br /&gt;小字符串优化
|{{lc|std::basic_string}}。参见 {{ls|#SBO}}, {{ls|#SOO}}
|-
|STL
|The '''S'''tandard '''T'''emplate '''L'''ibrary&lt;br /&gt;标准模板库
|
|-
|TCO
|'''T'''ail '''C'''all '''O'''ptimization&lt;br /&gt;尾调用优化
|
|-
|TLS
|Thread-Local Storage&lt;br /&gt;线程局部存储
|{{ltt|cpp/keyword/thread_local}}
|-
|TMP
|{{rlp|template metaprogramming|'''T'''emplate '''M'''eta '''P'''rogramming}}&lt;br /&gt;模板元编程
|{{header|type_traits}}
|-
|TU
|[[cpp/language/translation phases#阶段 8|Translation Unit]]&lt;br /&gt;翻译单元
|{{rlp|modules|Modules}}, {{rlp|tu_local|TU-local}}
|-
|UB
|{{rlp|ub|Undefined Behavior}}&lt;br /&gt;未定义行为
|
|-
|UDC
|[[cpp/language/cast operator|'''U'''ser-'''D'''efined '''C'''onversion]] operator&lt;br /&gt;用户定义转换运算符
|
|-
|UDL
|{{rlp|user literal|User-Defined Literals}}&lt;br /&gt;用户定义字面量
|
|-
|UFCS
|Universal Function Call Syntax&lt;br /&gt;统一函数调用语法
|[https://brevzin.github.io/c++/2019/04/13/ufcs-history “What is UFCS anyway?”]
|-
|VLA
|'''V'''ariable-'''L'''ength '''A'''rray&lt;br /&gt;变长数组
|[https://stackoverflow.com/questions/1887097/why-arent-variable-length-arrays-part-of-the-c-standard VLA 的 SO 帖子]
|-
|WPO
|[[enwiki:Interprocedural optimization#WPO and LTO|Whole-Program Optimization]]&lt;br /&gt;全程序优化
|
|}

===外部链接===
{{eli|[https://quuxplusone.github.io/blog/2019/08/02/the-tough-guide-to-cpp-acronyms/ “C++ 缩写词汇表” - Arthur O’Dwyer, 2019/08]}}

{{langlinks|en|es|ja|ru}}