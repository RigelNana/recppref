{{title|基本概念}}
{{cpp/language/basics/navbar}}

本节定义了描述 C++ 编程语言时所使用的一些专门的术语与概念。

C++ 程序是一个含有{{rlp|declarations|声明}}的文本文件（通常为头文件与源文件）序列。它们被{{rlp|translation phases|翻译}}成一个可执行程序，程序在 C++ 实现调用其{{rlp|main function|主 (main) 函数}}时被执行。

在 C++ 程序中，一些被称为[[cpp/keyword|关键词]]的词语有着特殊的含义。其它词语可以被用作{{rlp|identifiers|标识符}}。在翻译的过程中，[[cpp/comment|注释]]会被忽略。C++ 程序也包含{{rlp|expressions#字面量|字面量}}，其中的字符的值由{{rlp|charset|字符集与编码}}指定。程序中的某些特定字符必须通过{{rlp|escape|转义序列}}表示。

C++ 程序中的{{i|实体}}包括值、{{rlp|object|对象}}、{{rlp|reference|引用}}{{rev inl|since=c++17|、{{rlp|structured binding|结构化绑定}}}}{{rev inl|since=c++26|、{{rlp|function#后条件断言|结果绑定}}}}、{{rlp|functions|函数}}、{{rlp|enum|枚举项}}、{{rlp|type|类型}}、类成员、{{rlp|templates|模板}}、{{rlp|template specialization|模板特化}}{{rev inl|since=c++11|、{{rlp|pack|包}}}}和{{rlp|namespace|命名空间}}。预处理器[[cpp/preprocessor/replace|宏]]不是 C++ 实体。

{{rlp|declarations|声明}}可以引入实体，将它们与{{rlps|identifiers#名字}}关联起来，并定义其属性。能够定义使用一个实体所需的所有属性的声明是{{rlp|definition|定义}}。对任何被 {{rlps|definition#ODR 使用}}的非内联函数或变量，程序中必须只有一个定义。

函数的定义通常包括一系列的{{rlp|statements|语句}}，其中一部分会包含{{rlp|expressions|表达式}}。表达式指定了程序需要进行的运算。

程序中遇到的名字通过{{rlp|lookup|名字查找}}与引入它们的声明关联起来。每个名字都只在称为其{{rlp|scope|作用域}}的程序部分中有效。有些名字有{{rlp|storage duration|链接}}，这使得它们即使出现在不同的作用域或翻译单元时也代表相同的实体。

C++ 中的每一个对象、引用、函数和表达式都会关联一个{{rlp|type|类型}}，可以是{{rlp|types|基础类型}}，复合类型，或{{rlp|classes|用户定义类型}}，以及完整或{{rlp|type#不完整类型|不完整}}类型等。

声明的不为{{rlp|data members|非静态数据成员}}的对象和引用是''变量''。

===参阅===
{{dsc begin}}
{{dsc see c|c/language/basic concepts|基本概念|nomono=true}}
{{dsc end}}

{{langlinks|en|es|ja|ko|ru}}