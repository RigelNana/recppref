{{title|{{tt|do}}-{{tt|while}} 循环}}
{{cpp/language/statements/navbar}}
有条件地重复执行某条语句（至少一次）。

===语法===
{{sdsc begin}}
{{sdsc|{{spar optional|属性}} {{ttb|do}} {{spar|语句}} {{ttb|while (}} {{spar|表达式}} {{ttb|);}}}}
{{sdsc end}}

{{par begin}}
{{par|{{spar|属性}}|{{mark since c++11}} 任意数量的{{rlp|attributes|属性}}}}
{{par|{{spar|表达式}}|{{rlp|expressions|表达式}}}}
{{par|{{spar|语句}}|任意{{rlp|statements|语句}}（典型情况下是复合语句）}}
{{par end}}

===解释===
当控制抵达 {{c/core|do}} 语句时，会无条件执行它的{{spar|语句}}。

每次{{spar sep|语句}}执行完成时，就会求值{{spar sep|表达式}}并将它按语境转换到 {{c/core|bool}}。如果结果是 {{c|true}}，那么就会重新执行{{spar|语句}}。

如果需要在{{spar sep|语句}}中结束循环，那么可以使用 {{rlp|break|{{c/core|break}} 语句}}作为终止语句。

如果需要在{{spar sep|语句}}中结束当前迭代，那么可以使用 {{rlp|continue|{{c/core|continue}} 语句}}作为快捷方式。

===注解===
{{cpp/language/process guarantee note}}

===关键词===
{{ltt|cpp/keyword/do}},
{{ltt|cpp/keyword/while}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    int j = 2;
    do // 循环体是复合语句
    {
        j += 2;
        std::cout &lt;&lt; j &lt;&lt; " ";
    }
    while (j &lt; 9);
    std::cout &lt;&lt; '\n';
    
    // 使用 do-while 循环的常见情形
    std::string s = "aba";
    std::sort(s.begin(), s.end());
    
    do std::cout &lt;&lt; s &lt;&lt; '\n'; // 循环体是表达式语句
    while (std::next_permutation(s.begin(), s.end()));
}
|output=
4 6 8 10
aab
aba
baa
}}

===参阅===
{{dsc begin}}
{{dsc see c|c/language/do|do-while}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}