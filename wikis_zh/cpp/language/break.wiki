{{title|{{tt|break}} 语句}}
{{cpp/language/statements/navbar}}
导致外围的 {{rlp|for}}、{{rlp|range-for|范围 for}}、{{rlp|while}} 或 {{rlp|do|do-while}} 循环或 {{rlp|switch|switch 语句}}终止。

在用条件表达式和条件语句终止循环显得笨拙时使用。

===语法===
{{sdsc begin}}
{{sdsc|{{spar optional|属性}} {{ttb|break}} {{ttb|;}}}}
{{sdsc end}}

{{par begin}}
{{par|{{spar|属性}}|{{mark since c++11}} 任意数量的 {{rlp|attributes|属性}}}}
{{par end}}

===解释===
仅可出现于循环体（{{rlpt|while}}、{{rlpt|do|do-while}}、{{rlpt|for}}）的 {{spar|语句}} 之中，或出现于 {{rlpt|switch}} 的 {{spar|语句}} 之中。
此语句之后，控制将被转移到紧跟其外围循环或 switch 的下一语句。与退出任何代码块一样，在执行跟随外围循环之后的第一行代码之前，所有在外围复合语句或循环/switch 的 {{spar|条件}} 中声明的具有自动存储期的变量，按照它们构造的逆序销毁。

===注解===
break 语句不能用于跳出多重嵌套循环。这种情况可以使用 {{rlp|goto|goto 语句}}。
break使用时，仅能打破/跳出当前循环

===关键词===
{{ltt|cpp/keyword/break}}

===示例===
{{example 
|code=
#include &lt;iostream&gt;

int main()
{
    int i = 2;
    switch (i)
    {
        case 1: std::cout &lt;&lt; "1";   // &lt;---- 可能会有警告：直落
        case 2: std::cout &lt;&lt; "2";   // 从此 case 标号开始执行（+警告）
        case 3: std::cout &lt;&lt; "3";   // &lt;---- 可能会有警告：直落
        case 4:                     // &lt;---- 可能会有警告：直落
        case 5: std::cout &lt;&lt; "45";  //
                break;              // 终止后续语句的执行（跳出此switch）
        case 6: std::cout &lt;&lt; "6";
    }

    std::cout &lt;&lt; '\n';
 
    for (char c = 'a'; c &lt; 'c'; c++)
    {
        for (int i = 0; i &lt; 5; i++)      // break 只会影响此循环
        {                                //
            if (i == 2)                  //
                break;                   // break跳出当前for
            std::cout &lt;&lt; c &lt;&lt; i &lt;&lt; ' ';  //
        }
    }
    std::cout &lt;&lt; '\n';
}
|p=true
|output=
2345
a0 a1 b0 b1
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/language/attributes/dsc fallthrough}}
{{dsc see c|c/language/break}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}