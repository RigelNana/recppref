{{title|{{tt|asm}} 声明}}
{{cpp/language/declarations/navbar}}
''汇编（asm）声明'' 给予在 C++ 程序中嵌入汇编语言源代码的能力。此声明{{rev inl|since=c++11|受条件性支持且}}由实现定义，意思是它{{rev inl|since=c++11|可以不存在，而且即使实现有所提供，它也}}并不拥有固定的含义。

===语法===
{{sdsc begin}}
{{sdsc|notes={{mark until c++26}}|
{{spar optional|属性}} {{ttb|asm (}} {{spar|字符串字面量}} {{ttb|)}} {{ttb|;}}
}}
{{sdsc|notes={{mark since c++26}}|
{{spar optional|属性}} {{ttb|asm (}} {{spar|平衡记号序列}} {{ttb|)}} {{ttb|;}}
}}
{{sdsc end}}

{{par begin}}
{{par|{{spar|属性}}|{{mark since c++11}} 任意数量的{{rlp|attributes|属性}}}}
{{par|{{spar|字符串字面量}}|与{{rlp|string literal|字符串字面量}}相同，包括原始字符串字面量}}
{{par|{{spar|平衡记号序列}}|记号的序列，其中圆括号、方括号和花括号平衡出现；{{spar|平衡记号序列}}上的任何约束和其含义均由实现定义}}
{{par end}}

===解释===
{{spar sep|平衡记号序列}}通常是以汇编语言编写的短程序，该程序会在执行这条声明时执行。不同的 C++ 编译器的汇编声明规则有巨大差异，和与周围的 C++ 代码之间交互的约定也不同。

与其他{{rlp|declarations|块声明}}一样，该声明可出现于块（函数体或其他复合语句）内，并且与所有其他声明一样，此声明也可以在块外出现。

{{todo|写一下 GCC 扩展汇编语法的注解，它现在已被 Intel, IBM, Sun (v12), 等编译器支持}}

===注解===
{{feature test macro|value=201907L|std=C++20|__cpp_constexpr|{{tt|constexpr}} 函数中的平凡{{rlp|default initialization|默认初始化}}和[[#Top|汇编声明]]}}

===关键词===
{{ltt|cpp/keyword/asm}}

===示例===
{{example|这里演示 GCC/Clang 等编译器提供的两种内联汇编语法。此程序只在 x86-64 上的 Linux 下正确工作。
|code=
#include &lt;iostream&gt;

extern "C" int func(int x);
// func 的定义以汇编语言书写
// 原始字符串字面量可以很有用
asm(R"(
.globl func
    .type func, @function
    func:
    .cfi_startproc
    movl %edi, %eax /* x 在 RDI 中，见 x86-64 调用约定 */
    addl $1, %eax
    ret
    .cfi_endproc
)");

int main()
{
    int n = func(0110);
    // 之前是非标准的内联汇编，但被 P2361R6 认可
    asm ("leal (%0,%0,4),%0"
         : "=r" (n)
         : "0" (n));
    std::cout &lt;&lt; "73*5 = " &lt;&lt; n &lt;&lt; std::endl; // 冲洗缓冲区是有意的

    // 标准内联汇编
    asm ("movq $60, %rax\n" // Linux 上的“退出”的系统调用序号
         "movq $2,  %rdi\n" // 此程序返回 2
         "syscall");
}
|output=
73*5 = 365
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=cwg|dr=195|std=C++98|before=需要支持所有的 asm 声明|after=只需要条件性支持}}
{{dr list item|wg=cwg|dr=2262|std=C++11|before=不能将属性应用到 asm 声明|after=可以应用}}
{{dr list end}}

===引用===
{{ref std c++26}}
{{ref std|section=9.10|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++23}}
{{ref std|section=9.10|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=9.10|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++17}}
{{ref std|section=10.4|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++14}}
{{ref std|section=7.4|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++11}}
{{ref std|section=7.4|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++03}}
{{ref std|section=7.4|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}
{{ref std c++98}}
{{ref std|section=7.4|title=The {{tt|asm}} declaration|id=dcl.asm}}
{{ref std end}}

===参阅===
* {{ls|cpp/links#C++ ABI}}
{{dsc begin}}
{{dsc see c|c/language/asm|内联汇编|nomono=true}}
{{dsc end}}

===外部链接===
{{elink begin}}
{{elink|1=[https://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html GCC 内联汇编 HOWTO]}}
{{elink|1=&lt;!--注意：不是 https--&gt;[http://locklessinc.com/articles/gcc_asm/ GCC 内联汇编] &amp;mdash; Locklessinc.com}}
{{elink|1=[https://www.ibm.com/docs/en/xl-c-and-cpp-aix/16.1?topic=compatibility-inline-assembly-statements IBM XL C/C++ 内联汇编]}}
{{elink|1=[https://www.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top/compiler-reference/intrinsics/data-align-mem-alloc-intrins-and-inline-asmbly/inline-assembly.html Intel C++ 内联汇编]}}
{{elink|1=[https://learn.microsoft.com/en-us/cpp/assembler/inline/inline-assembler Visual Studio 内联汇编器]}}
{{elink|1=[https://web.archive.org/web/20160528215011/https://blogs.oracle.com/x86be/entry/gcc_style_asm_inlining_support Sun Studio 12 汇编语句]}}
{{elink|1=[https://web.archive.org/web/20151009200102/https://h21007.www2.hp.com/portal/site/dspp/menuitem.863c3e4cbcdc3f3515b49c108973a801?ciid=4308e2f5bde02110e2f5bde02110275d6e10RCRD 基于 Itanium 的 HP-UX 的内联汇编]}}
{{elink|{{enwiki|X86 calling conventions|X86 调用约定}} &amp;mdash; Wikipedia}}
{{elink end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}