{{title|算法库}}
{{cpp/algorithm/navbar}}

算法库提供大量用途的函数（例如查找、排序、计数、操作），它们在元素范围上操作。注意，[[cpp/iterator/#范围|范围]]定义为 {{range|first|last}}，其中 {{c|last}} 指代要查询或修改的最后元素的''后一个''{{sep}}元素。

{{anchor|受约束算法}}
==={{rl|ranges|受约束算法}} {{mark since c++20}}===
C++20 在命名空间 {{tt|std::ranges}} 中提供大多数算法的[[cpp/language/constraints|受约束]]版本，在这些算法中，[[cpp/iterator/#范围|范围]]既可以由[[cpp/iterator/input_or_output_iterator|迭代器]]-[[cpp/iterator/sentinel_for|哨位]]对，也可以由单个 {{lconcept|range}} 实参指定，还支持投影和成员指针可调用对象。另外，还更改了大多数算法的{{ls|cpp/algorithm/ranges#返回类型}}，以返回算法执行过程中计算的所有潜在有用信息。
{{source|1=
std::vector&lt;int&gt; v{7, 1, 4, 0, -1};
std::ranges::sort(v); // 受约束算法
}}

{{anchor|执行策略}}
===执行策略 {{mark since c++17}}===
大多数算法拥有接受执行策略的重载。标准库的算法支持几种[[cpp/algorithm/execution_policy_tag_t|执行策略]]，库中提供了相应的执行策略类型和对象。用户可以通过以对应类型的[[cpp/algorithm/execution_policy_tag|执行策略对象]]为参数调用并行算法，静态地选择执行策略。

标准库实现（但不是用户）可以定义额外的执行策略作为扩展。以实现定义类型的执行策略对象调用并行算法的语义是由实现定义的。

允许算法的并行版本（除了 {{lc|std::for_each}} 与 {{lc|std::for_each_n}}）从范围进行任意的元素复制，只要 {{c|std::is_trivially_copy_constructible_v&lt;T&gt;}} 与 {{c|std::is_trivially_destructible_v&lt;T&gt;}} 都是 {{c|true}}，其中 {{tt|T}} 是元素的类型。

{{dsc begin}}
{{dsc header|execution}}
{{dsc namespace|std::execution}}
{{dsc inc|cpp/algorithm/dsc execution_policy_tag_t}}
{{dsc inc|cpp/algorithm/dsc execution_policy_tag}}
{{dsc namespace|std}}
{{dsc inc|cpp/algorithm/dsc is_execution_policy}}
{{dsc end}}
{{ftm begin|std=1|comment=1}}
{{ftm|__cpp_lib_parallel_algorithm|并行算法|std=C++17|value=201603L}}
{{ftm|__cpp_lib_execution|rowspan=2|执行策略|std=C++17|value=201603L}}
{{ftm|-|{{lc|std::execution::unsequenced_policy}}|std=C++20|value=201902L}}
{{ftm end}}

===不修改序列的操作===
====批量操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc for_each}}
{{dsc inc|cpp/algorithm/ranges/dsc for_each}}
{{dsc inc|cpp/algorithm/dsc for_each_n}}
{{dsc inc|cpp/algorithm/ranges/dsc for_each_n}}
{{dsc end}}

====搜索操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc all_any_none_of}}
{{dsc inc|cpp/algorithm/ranges/dsc all_any_none_of}}
{{dsc inc|cpp/algorithm/ranges/dsc contains}}
{{dsc inc|cpp/algorithm/dsc find}}
{{dsc inc|cpp/algorithm/ranges/dsc find}}
{{dsc inc|cpp/algorithm/ranges/dsc find_last}}
{{dsc inc|cpp/algorithm/dsc find_end}}
{{dsc inc|cpp/algorithm/ranges/dsc find_end}}
{{dsc inc|cpp/algorithm/dsc find_first_of}}
{{dsc inc|cpp/algorithm/ranges/dsc find_first_of}}
{{dsc inc|cpp/algorithm/dsc adjacent_find}}
{{dsc inc|cpp/algorithm/ranges/dsc adjacent_find}}
{{dsc inc|cpp/algorithm/dsc count}}
{{dsc inc|cpp/algorithm/ranges/dsc count}}
{{dsc inc|cpp/algorithm/dsc mismatch}}
{{dsc inc|cpp/algorithm/ranges/dsc mismatch}}
{{dsc inc|cpp/algorithm/dsc equal}}
{{dsc inc|cpp/algorithm/ranges/dsc equal}}
{{dsc inc|cpp/algorithm/dsc search}}
{{dsc inc|cpp/algorithm/ranges/dsc search}}
{{dsc inc|cpp/algorithm/dsc search_n}}
{{dsc inc|cpp/algorithm/ranges/dsc search_n}}
{{dsc inc|cpp/algorithm/ranges/dsc starts_with}}
{{dsc inc|cpp/algorithm/ranges/dsc ends_with}}
{{dsc end}}

{{anchor|折叠操作}}
====折叠操作 {{mark since c++23}}====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_first}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_right}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_right_last}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_with_iter}}
{{dsc inc|cpp/algorithm/ranges/dsc fold_left_first_with_iter}}
{{dsc end}}

===修改序列的操作===
====复制操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc copy}}
{{dsc inc|cpp/algorithm/ranges/dsc copy}}
{{dsc inc|cpp/algorithm/dsc copy_n}}
{{dsc inc|cpp/algorithm/ranges/dsc copy_n}}
{{dsc inc|cpp/algorithm/dsc copy_backward}}
{{dsc inc|cpp/algorithm/ranges/dsc copy_backward}}
{{dsc inc|cpp/algorithm/dsc move}}
{{dsc inc|cpp/algorithm/ranges/dsc move}}
{{dsc inc|cpp/algorithm/dsc move_backward}}
{{dsc inc|cpp/algorithm/ranges/dsc move_backward}}
{{dsc end}}

====交换操作====
{{dsc begin}}
{{dsc header|algorithm|{{nbspt|3}}{{mark until c++11}}}}
{{dsc header|utility|{{nbspt|5}}{{mark since c++11}}}}
{{dsc header|string_view}}
{{dsc inc|cpp/algorithm/dsc swap}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc swap_ranges}}
{{dsc inc|cpp/algorithm/ranges/dsc swap_ranges}}
{{dsc inc|cpp/algorithm/dsc iter_swap}}
{{dsc end}}

====变换操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc transform}}
{{dsc inc|cpp/algorithm/ranges/dsc transform}}
{{dsc inc|cpp/algorithm/dsc replace}}
{{dsc inc|cpp/algorithm/ranges/dsc replace}}
{{dsc inc|cpp/algorithm/dsc replace_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc replace_copy}}
{{dsc end}}

====生成操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc fill}}
{{dsc inc|cpp/algorithm/ranges/dsc fill}}
{{dsc inc|cpp/algorithm/dsc fill_n}}
{{dsc inc|cpp/algorithm/ranges/dsc fill_n}}
{{dsc inc|cpp/algorithm/dsc generate}}
{{dsc inc|cpp/algorithm/ranges/dsc generate}}
{{dsc inc|cpp/algorithm/dsc generate_n}}
{{dsc inc|cpp/algorithm/ranges/dsc generate_n}}
{{dsc end}}

====移除操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc remove}}
{{dsc inc|cpp/algorithm/ranges/dsc remove}}
{{dsc inc|cpp/algorithm/dsc remove_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc remove_copy}}
{{dsc inc|cpp/algorithm/dsc unique}}
{{dsc inc|cpp/algorithm/ranges/dsc unique}}
{{dsc inc|cpp/algorithm/dsc unique_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc unique_copy}}
{{dsc end}}

====顺序变更操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc reverse}}
{{dsc inc|cpp/algorithm/ranges/dsc reverse}}
{{dsc inc|cpp/algorithm/dsc reverse_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc reverse_copy}}
{{dsc inc|cpp/algorithm/dsc rotate}}
{{dsc inc|cpp/algorithm/ranges/dsc rotate}}
{{dsc inc|cpp/algorithm/dsc rotate_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc rotate_copy}}
{{dsc inc|cpp/algorithm/dsc shift}}
{{dsc inc|cpp/algorithm/ranges/dsc shift}}
{{dsc inc|cpp/algorithm/dsc random_shuffle}}
{{dsc inc|cpp/algorithm/ranges/dsc shuffle}}
{{dsc end}}

====采样操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc sample}}
{{dsc inc|cpp/algorithm/ranges/dsc sample}}
{{dsc end}}

===排序和相关操作===
====要求====
部分算法要求由实参表示的序列“已排序”或“已划分”。未满足要求时行为未定义。

{{rev begin}}
{{rev|until=c++20|
序列在满足以下条件时''已按比较器 {{c|comp}} 排序''：对于指向序列中的每个迭代器 {{c|iter}} 和每个非负整数 {{c|n}}，如果 {{c|iter + n}}&lt;ref name="plus"&gt;在这里 {{c|iter + n}} 只表示 “{{c|iter}} 自增 {{c|n}} 次后的结果”，而 {{c|iter}} 本身不需要是随机访问迭代器。&lt;/ref&gt; 是一个指向序列中的某个元素的{{rlp|iterator#可解性与有效性|有效迭代器}}，那么 {{c|1=comp(*(iter + n), *iter) == false}}&lt;ref name="plus" /&gt;。
}}
{{rev|since=c++20|
序列在满足以下条件时''已按比较器 {{c|comp}} 和投影 {{c|proj}} 排序''：对于指向序列中的每个迭代器 {{c|iter}} 和每个非负整数 {{c|n}}，如果 {{c|iter + n}}&lt;ref name="plus" /&gt; 是一个指向序列中的某个元素的有效迭代器，那么 {{c multi|bool(std::invoke(comp, std::invoke(proj, *(iter + n)),|                       std::invoke(proj, *iter)))}}&lt;ref name="plus" /&gt; 是 {{c|false}}。

序列在满足以下条件时''已按比较器 {{c|comp}} 排序''：该序列已按比较器 {{c|comp}} 和投影 {{c|std::identity{}&lt;!----&gt;}}（即投影到自身）排序。
}}
{{rev end}}

序列 {{range|start|finish}} 在满足以下条件时''已按表达式 {{c|f(e)}} 划分''：存在一个整数 {{c|n}}，使得对于 {{range|0|std::distance(start, finish)}} 中的所有整数 {{c|i}}，{{c|f(*(start + i))}}&lt;ref name="plus" /&gt; 当且仅当 {{c|i &lt; n}} 时是 {{c|true}}。

&lt;references/&gt;

====划分操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc is_partitioned}}
{{dsc inc|cpp/algorithm/ranges/dsc is_partitioned}}
{{dsc inc|cpp/algorithm/dsc partition}}
{{dsc inc|cpp/algorithm/ranges/dsc partition}}
{{dsc inc|cpp/algorithm/dsc partition_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc partition_copy}}
{{dsc inc|cpp/algorithm/dsc stable_partition}}
{{dsc inc|cpp/algorithm/ranges/dsc stable_partition}}
{{dsc inc|cpp/algorithm/dsc partition_point}}
{{dsc inc|cpp/algorithm/ranges/dsc partition_point}}
{{dsc end}}

====排序操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc sort}}
{{dsc inc|cpp/algorithm/ranges/dsc sort}}
{{dsc inc|cpp/algorithm/dsc stable_sort}}
{{dsc inc|cpp/algorithm/ranges/dsc stable_sort}}
{{dsc inc|cpp/algorithm/dsc partial_sort}}
{{dsc inc|cpp/algorithm/ranges/dsc partial_sort}}
{{dsc inc|cpp/algorithm/dsc partial_sort_copy}}
{{dsc inc|cpp/algorithm/ranges/dsc partial_sort_copy}}
{{dsc inc|cpp/algorithm/dsc is_sorted}}
{{dsc inc|cpp/algorithm/ranges/dsc is_sorted}}
{{dsc inc|cpp/algorithm/dsc is_sorted_until}}
{{dsc inc|cpp/algorithm/ranges/dsc is_sorted_until}}
{{dsc inc|cpp/algorithm/dsc nth_element}}
{{dsc inc|cpp/algorithm/ranges/dsc nth_element}}
{{dsc end}}

====二分搜索操作（在已划分范围上）====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc lower_bound}}
{{dsc inc|cpp/algorithm/ranges/dsc lower_bound}}
{{dsc inc|cpp/algorithm/dsc upper_bound}}
{{dsc inc|cpp/algorithm/ranges/dsc upper_bound}}
{{dsc inc|cpp/algorithm/dsc equal_range}}
{{dsc inc|cpp/algorithm/ranges/dsc equal_range}}
{{dsc inc|cpp/algorithm/dsc binary_search}}
{{dsc inc|cpp/algorithm/ranges/dsc binary_search}}
{{dsc end}}

====集合操作（在已排序范围上）====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc includes}}
{{dsc inc|cpp/algorithm/ranges/dsc includes}}
{{dsc inc|cpp/algorithm/dsc set_union}}
{{dsc inc|cpp/algorithm/ranges/dsc set_union}}
{{dsc inc|cpp/algorithm/dsc set_intersection}}
{{dsc inc|cpp/algorithm/ranges/dsc set_intersection}}
{{dsc inc|cpp/algorithm/dsc set_difference}}
{{dsc inc|cpp/algorithm/ranges/dsc set_difference}}
{{dsc inc|cpp/algorithm/dsc set_symmetric_difference}}
{{dsc inc|cpp/algorithm/ranges/dsc set_symmetric_difference}}
{{dsc end}}

====归并操作（在已排序范围上）====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc merge}}
{{dsc inc|cpp/algorithm/ranges/dsc merge}}
{{dsc inc|cpp/algorithm/dsc inplace_merge}}
{{dsc inc|cpp/algorithm/ranges/dsc inplace_merge}}
{{dsc end}}

====堆操作====
{{rev begin}}
{{rev|until=c++20|
随机访问[[cpp/iterator#范围|范围]] {{range|first|last}} 在满足以下条件时是一个''关于比较器 {{c|comp}} 的堆''：对于 {{open range|0|last - first}} 中的所有整数 {{c|i}}，{{c|bool(comp(first[(i - 1) / 2], first[i]))}} 都是 {{c|false}}。
}}
{{rev|since=c++20|
随机访问[[cpp/iterator#范围|范围]] {{range|first|last}} 在满足以下条件时是一个''关于比较器 {{c|comp}} 和投影 {{c|proj}} 的堆''：对于 {{open range|0|last - first}} 中的所有整数 {{c|i}}，{{c multi|bool(std::invoke(comp, std::invoke(proj, first[(i - 1) / 2]),|                       std::invoke(proj, first[i]))}} 都是 {{c|false}}。

随机访问[[cpp/iterator#范围|范围]] {{range|first|last}} 在满足以下条件时是一个''关于比较器 {{c|comp}} 的堆''：该范围是一个关于 {{c|comp}} 和 {{c|std::identity{}&lt;!----&gt;}}（即投影到自身）的堆。
}}
{{rev end}}

可以通过 {{lc|std::make_heap}}{{rev inl|since=c++20| 和 {{lc|ranges::make_heap}}}} 创建堆。

关于堆的更多性质，可以参考{{enwiki|Binary heap|最大堆}}。


{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc push_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc push_heap}}
{{dsc inc|cpp/algorithm/dsc pop_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc pop_heap}}
{{dsc inc|cpp/algorithm/dsc make_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc make_heap}}
{{dsc inc|cpp/algorithm/dsc sort_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc sort_heap}}
{{dsc inc|cpp/algorithm/dsc is_heap}}
{{dsc inc|cpp/algorithm/ranges/dsc is_heap}}
{{dsc inc|cpp/algorithm/dsc is_heap_until}}
{{dsc inc|cpp/algorithm/ranges/dsc is_heap_until}}
{{dsc end}}

====最小/最大操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc max}}
{{dsc inc|cpp/algorithm/ranges/dsc max}}
{{dsc inc|cpp/algorithm/dsc max_element}}
{{dsc inc|cpp/algorithm/ranges/dsc max_element}}
{{dsc inc|cpp/algorithm/dsc min}}
{{dsc inc|cpp/algorithm/ranges/dsc min}}
{{dsc inc|cpp/algorithm/dsc min_element}}
{{dsc inc|cpp/algorithm/ranges/dsc min_element}}
{{dsc inc|cpp/algorithm/dsc minmax}}
{{dsc inc|cpp/algorithm/ranges/dsc minmax}}
{{dsc inc|cpp/algorithm/dsc minmax_element}}
{{dsc inc|cpp/algorithm/ranges/dsc minmax_element}}
{{dsc inc|cpp/algorithm/dsc clamp}}
{{dsc inc|cpp/algorithm/ranges/dsc clamp}}
{{dsc end}}

====字典序比较操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc lexicographical_compare}}
{{dsc inc|cpp/algorithm/ranges/dsc lexicographical_compare}}
{{dsc inc|cpp/algorithm/dsc lexicographical_compare_three_way}}
{{dsc end}}

====排列操作====
{{dsc begin}}
{{dsc header|algorithm}}
{{dsc inc|cpp/algorithm/dsc next_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc next_permutation}}
{{dsc inc|cpp/algorithm/dsc prev_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc prev_permutation}}
{{dsc inc|cpp/algorithm/dsc is_permutation}}
{{dsc inc|cpp/algorithm/ranges/dsc is_permutation}}
{{dsc end}}

===数值运算===
{{dsc begin}}
{{dsc header|numeric}}
{{dsc inc|cpp/algorithm/dsc iota}}
{{dsc inc|cpp/algorithm/ranges/dsc iota}}
{{dsc inc|cpp/algorithm/dsc accumulate}}
{{dsc inc|cpp/algorithm/dsc inner_product}}
{{dsc inc|cpp/algorithm/dsc adjacent_difference}}
{{dsc inc|cpp/algorithm/dsc partial_sum}}
{{dsc inc|cpp/algorithm/dsc reduce}}
{{dsc inc|cpp/algorithm/dsc exclusive_scan}}
{{dsc inc|cpp/algorithm/dsc inclusive_scan}}
{{dsc inc|cpp/algorithm/dsc transform_reduce}}
{{dsc inc|cpp/algorithm/dsc transform_exclusive_scan}}
{{dsc inc|cpp/algorithm/dsc transform_inclusive_scan}}
{{dsc end}}

===在未初始化内存上的操作===
{{dsc begin}}
{{dsc header|memory}}
{{dsc inc|cpp/memory/dsc uninitialized_copy}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_copy}}
{{dsc inc|cpp/memory/dsc uninitialized_copy_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_copy_n}}
{{dsc inc|cpp/memory/dsc uninitialized_fill}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_fill}}
{{dsc inc|cpp/memory/dsc uninitialized_fill_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_fill_n}}
{{dsc inc|cpp/memory/dsc uninitialized_move}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_move}}
{{dsc inc|cpp/memory/dsc uninitialized_move_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_move_n}}
{{dsc inc|cpp/memory/dsc uninitialized_default_construct}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_default_construct}}
{{dsc inc|cpp/memory/dsc uninitialized_default_construct_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_default_construct_n}}
{{dsc inc|cpp/memory/dsc uninitialized_value_construct}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_value_construct}}
{{dsc inc|cpp/memory/dsc uninitialized_value_construct_n}}
{{dsc inc|cpp/memory/ranges/dsc uninitialized_value_construct_n}}
{{dsc inc|cpp/memory/dsc destroy}}
{{dsc inc|cpp/memory/ranges/dsc destroy}}
{{dsc inc|cpp/memory/dsc destroy_n}}
{{dsc inc|cpp/memory/ranges/dsc destroy_n}}
{{dsc inc|cpp/memory/dsc destroy_at}}
{{dsc inc|cpp/memory/ranges/dsc destroy_at}}
{{dsc inc|cpp/memory/dsc construct_at}}
{{dsc inc|cpp/memory/ranges/dsc construct_at}}
{{dsc end}}

{{anchor|随机数生成}}
===随机数生成 {{mark since c++26}}===
{{dsc begin}}
{{dsc header|random}}
{{dsc inc|cpp/algorithm/ranges/dsc generate_random}}
{{dsc end}}

===注解===
{{ftm begin|sort=yes}}
{{ftm|std=C++23|value=202207L|__cpp_lib_algorithm_iterator_requirements|对非范围算法使用范围迭代器}}
{{ftm|std=C++17|value=201603L|__cpp_lib_clamp|{{lc|std::clamp}}}}
{{ftm|std=C++20|value=201806L|__cpp_lib_constexpr_algorithms|rowspan="2"|constexpr 算法}}
{{ftm|std=C++26|value=202306L|-|constexpr 稳定排序}}
{{ftm|std=C++26|value=202403L|__cpp_lib_algorithm_default_value_type|算法的[[cpp/language/list initialization|列表初始化]]}}
{{ftm|std=C++26|value=202311L|__cpp_lib_freestanding_algorithm|{{header|algorithm}} 中的独立设施}}
{{ftm|std=C++14|value=201304L|__cpp_lib_robust_nonmodifying_seq_ops|使不修改序列的操作更健壮（{{lc|std::mismatch}}、{{lc|std::equal}} 和 {{lc|std::is_permutation}} 的两个范围重载）}}
{{ftm|std=C++17|value=201603L|__cpp_lib_sample|{{lc|std::sample}}}}
{{ftm|std=C++20|value=201806L|__cpp_lib_shift|{{lc|std::shift_left}} 与 {{lc|std::shift_right}}}}
{{ftm end}}

===C 库===
{{dsc begin}}
{{dsc header|cstdlib}}
{{dsc inc|cpp/algorithm/dsc qsort}}
{{dsc inc|cpp/algorithm/dsc bsearch}}
{{dsc end}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=193|std=C++98|before=堆要求 {{c|*first}} 是最大的元素|after=可以有等于 {{c|*first}} 的元素}}
{{dr list item|wg=lwg|dr=2150|std=C++98|before=已排序序列的定义不正确|after=已改正}}
{{dr list item|wg=lwg|dr=2166|std=C++98|before=对堆的要求与{{enwiki|Binary heap|最大堆}}的定义不够接近|after=改进要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc see c|c/algorithm|算法|nomono=true}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}