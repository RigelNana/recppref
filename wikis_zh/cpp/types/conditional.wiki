{{cpp/title|conditional}}
{{cpp/meta/navbar}}
{{dcl begin}}
{{dcl header | type_traits}}
{{dcl | since=c++11 | 1=
template&lt; bool B, class T, class F &gt;
struct conditional;
}}
{{dcl end}}

提供成员 typedef {{tt|type}}，若 {{tt|B}} 在编译时为 {{c|true}} 则定义为 {{tt|T}}，或若 {{tt|B}} 为 {{c|false}} 则定义为 {{tt|F}}。

{{cpp/types/nospec}}

===成员类型===
{{dsc begin}}
{{dsc hitem | 成员类型 | 定义}}
{{dsc | {{tt|type}} | 若 {{c|1=B == true}} 则为 {{tt|T}}，若 {{c|1=B == false}} 则为 {{tt|F}}}}
{{dsc end}}

===辅助类型===
{{dcl begin}}
{{dcl | since=c++14 | 1=
template&lt; bool B, class T, class F &gt;
using conditional_t = typename conditional&lt;B,T,F&gt;::type;
}}
{{dcl end}}

===可能的实现===
{{eq fun
 | 1=
template&lt;bool B, class T, class F&gt;
struct conditional { using type = T; };

template&lt;class T, class F&gt;
struct conditional&lt;false, T, F&gt; { using type = F; };
}}

===示例===
{{example
 | code=
#include &lt;iostream&gt;
#include &lt;type_traits&gt;
#include &lt;typeinfo&gt;

int main() 
{
    using Type1 = std::conditional&lt;true, int, double&gt;::type;
    using Type2 = std::conditional&lt;false, int, double&gt;::type;
    using Type3 = std::conditional&lt;sizeof(int) &gt;= sizeof(double), int, double&gt;::type;
   
    std::cout &lt;&lt; typeid(Type1).name() &lt;&lt; '\n';
    std::cout &lt;&lt; typeid(Type2).name() &lt;&lt; '\n';
    std::cout &lt;&lt; typeid(Type3).name() &lt;&lt; '\n';
}
 | p=true
 | output=
int
double
double
}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/types/dsc enable_if}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}