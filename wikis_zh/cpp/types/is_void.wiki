{{cpp/types/traits/is|1=is_void
|description= 
检查 {{tt|T}} 是否为 {{c/core|void}} 类型。如果 {{tt|T}} 是类型 {{c/core|void}}、{{c/core|const void}}、{{c/core|volatile void}} 或 {{c/core|const volatile void}}，那么提供的成员常量 {{c|value}} 等于 {{c|true}}。否则，{{c|value}} 等于 {{c|false}}。
|inherit_desc={{tt|T}} 为 {{c/core|void}} 类型（可有 cv 限定）
}}

===可能的实现===
{{eq fun|
template&lt;class T&gt;
struct is_void : std::is_same&lt;void, typename std::remove_cv&lt;T&gt;::type&gt; {};
}}

===示例===
{{example
|code=
#include &lt;type_traits&gt;

void foo();

static_assert
(
    std::is_void_v&lt;void&gt; == true and
    std::is_void_v&lt;const void&gt; == true and
    std::is_void_v&lt;volatile void&gt; == true and
    std::is_void_v&lt;void*&gt; == false and
    std::is_void_v&lt;int&gt; == false and
    std::is_void_v&lt;decltype(foo)&gt; == false and
    std::is_void_v&lt;std::is_void&lt;void&gt;&gt; == false
);

int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_pointer}}
{{dsc inc|cpp/types/dsc is_enum}}
{{dsc inc|cpp/types/dsc is_union}}
{{dsc inc|cpp/types/dsc is_class}}
{{dsc inc|cpp/types/dsc is_function}}
{{dsc inc|cpp/types/dsc is_object}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}