{{cpp/types/type_index/title|1=operator==,!=,&lt;,&lt;=,&gt;,&gt;=,&lt;=&gt;}}
{{cpp/types/type_index/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|1=
bool operator==( const type_index&amp; rhs ) const noexcept;
}}
{{dcl|num=2|since=c++11|until=c++20|1=
bool operator!=( const type_index&amp; rhs ) const noexcept;
}}
{{dcl|num=3|since=c++11|1=
bool operator&lt;( const type_index&amp; rhs ) const noexcept;
}}
{{dcl|num=4|since=c++11|1=
bool operator&lt;=( const type_index&amp; rhs ) const noexcept;
}}
{{dcl|num=5|since=c++11|1=
bool operator&gt;( const type_index&amp; rhs ) const noexcept;
}}
{{dcl|num=6|since=c++11|1=
bool operator&gt;=( const type_index&amp; rhs ) const noexcept;
}}
{{dcl|num=7|since=c++20|1=
std::strong_ordering operator&lt;=&gt;( const type_index&amp; rhs ) const noexcept;
}}
{{dcl end}}

比较底层 {{lc|std::type_info}} 对象。

@1,2@ 检查底层的 {{lc|std::type_info}} 对象是否代表同一类型。

@3-7@ 按实现定义顺序的定义，比较底层 {{lc|std::type_info}} 对象。比较由 {{l2tt|cpp/types/type_info/before}} 执行。

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

===参数===
{{par begin}}
{{par|rhs|要比较的另一 {{tt|type_index}} 对象}}
{{par end}} 

===返回值===
@1@ 若底层 {{lc|std::type_info}} 对象表示同一类型则为 {{c|true}}，否则为 {{c|false}}。

@2@ 若底层 {{lc|std::type_info}} 对象不表示同一类型则为 {{c|true}}，否则为 {{c|false}}。

@3-6@ 若底层 {{lc|std::type_info}} 所表示的类型按对应顺序排列，则为 {{c|true}}，否则为 {{c|false}}。

@7@ 若底层 {{lc|std::type_info}} 对象表示同一类型则为 {{c|std::strong_ordering::equal}}，否则若 {{c|*this}} 的底层 {{lc|std::type_info}} 对象在实现定义顺序中前趋 {{tt|rhs}} 的则为 {{c|std::strong_ordering::less}}，否则为 {{c|std::strong_ordering::greater}}。

{{langlinks|de|en|es|fr|it|ja|pt|ru}}