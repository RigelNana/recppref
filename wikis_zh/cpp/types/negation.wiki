{{cpp/title|negation}}
{{cpp/meta/navbar}}
{{dcl begin}}
{{dcl header|type_traits}}
{{dcl|since=c++17|1=
template&lt; class B &gt;
struct negation;
}}
{{dcl end}}

构建类型特征 {{tt|B}} 的[[enwiki:Negation|逻辑反]]。

类型 {{c|std::negation&lt;B&gt;}} 是基特征为 {{c|std::bool_constant&lt;!bool(B::value)&gt;}} 的{{named req|UnaryTypeTrait}}。

{{cpp/types/nospec|pv}}

===模板形参===
{{par begin}}
{{par|B|使得表达式 {{c|bool(B::value)}} 为合法常量表达式的任何类型}}
{{par end}}

===辅助变量模板===
{{ddcl|since=c++17|1=
template&lt; class B &gt;
constexpr bool negation_v = negation&lt;B&gt;::value;
}}

{{cpp/types/integral_constant/inherit|{{tt|B}} 拥有在隐式转换为 {{tt|bool}} 时等于 {{c|false}} 的 {{tt|::value}}}}

===可能的实现===
{{eq fun
|1=
template&lt;class B&gt;
struct negation : std::bool_constant&lt;!bool(B::value)&gt; { };
}}

===注解===
{{feature test macro|__cpp_lib_logical_traits|std=C++17|value=201510L|[[cpp/meta#特征上的运算|逻辑运算符类型特征]]}}

===示例===
{{example
|code=
#include &lt;type_traits&gt;

static_assert(
    std::is_same&lt;
        std::bool_constant&lt;false&gt;,
        typename std::negation&lt;std::bool_constant&lt;true&gt;&gt;::type&gt;::value,
    "");
static_assert(
    std::is_same&lt;
        std::bool_constant&lt;true&gt;,
        typename std::negation&lt;std::bool_constant&lt;false&gt;&gt;::type&gt;::value,
    "");

static_assert(std::negation_v&lt;std::bool_constant&lt;true&gt;&gt; == false);
static_assert(std::negation_v&lt;std::bool_constant&lt;false&gt;&gt; == true);

int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc conjunction}}
{{dsc inc|cpp/types/dsc disjunction}}
{{dsc inc|cpp/types/dsc integral_constant}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}