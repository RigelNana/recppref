{{cpp/types/traits/is|1=is_floating_point
|description=
检查 {{tt|T}} 是否为浮点数类型。如果 {{tt|T}} 为类型 {{c/core|float}}、{{c/core|double}}、{{c/core|long double}}{{rev inl|since=c++23|，或者任何扩展浮点数类型（{{c/core|std::float16_t}}、{{c/core|std::float32_t}}、{{c/core|std::float64_t}}、{{c/core|std::float128_t}} 或 {{c/core|std::bfloat16_t}}）}}，包括任何 cv 限定变体，那么提供的成员常量 {{c|value}} 等于 {{c|true}}。否则，{{c|value}} 等于 {{c|false}}。
|inherit_desc={{tt|T}} 为（可能 cv 限定的）浮点数类型
}}

===可能的实现===
{{eq fun
|1=
template&lt;class T&gt;
struct is_floating_point
     : std::integral_constant&lt;
         bool,
         // 注：标准浮点数类型
         std::is_same&lt;float, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;double, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;long double, typename std::remove_cv&lt;T&gt;::type&gt;::value
         // 注：扩展浮点数类型（C++23，若支持）
         {{!!}} std::is_same&lt;std::float16_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::float32_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::float64_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::float128_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
         {{!!}} std::is_same&lt;std::bfloat16_t, typename std::remove_cv&lt;T&gt;::type&gt;::value
     &gt; {};
}}

===示例===
{{example
|code=
#include &lt;type_traits&gt;

class A {};
static_assert(!std::is_floating_point_v&lt;A&gt;);

static_assert(std::is_floating_point_v&lt;float&gt;);
static_assert(!std::is_floating_point_v&lt;float&amp;&gt;);
static_assert(std::is_floating_point_v&lt;double&gt;);
static_assert(!std::is_floating_point_v&lt;double&amp;&gt;);
static_assert(!std::is_floating_point_v&lt;int&gt;);

int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/numeric_limits/dsc is_iec559}}
{{dsc inc|cpp/types/dsc is_integral}}
{{dsc inc|cpp/types/dsc is_arithmetic}}
{{dsc inc|cpp/concepts/dsc floating_point}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}