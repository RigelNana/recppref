{{cpp/title|decay}}
{{cpp/meta/navbar}}
{{ddcl|header=type_traits|since=c++11|
template&lt; class T &gt;
struct decay;
}}

进行等价于按值传递[[cpp/language/function#形参列表|函数实参]]时进行的类型转换。正式而言：

* 如果 {{tt|T}} 是“{{tt|U}} 的数组”或到它的引用，那么成员 typedef {{tt|type}} 是 {{tt|U*}}。

* 否则，如果 {{tt|T}} 是函数类型 {{tt|F}} 或到它的引用，那么成员 typedef {{tt|type}} 是 {{c/core|std::add_pointer&lt;F&gt;::type}}。

* 否则，成员 typedef {{tt|type}} 是 {{c/core|std::remove_cv&lt;std::remove_reference&lt;T&gt;::type&gt;::type}}。

{{cpp/types/nospec}}

===成员类型===
{{dsc begin}}
{{dsc hitem|名称|定义}}
{{dsc|{{tt|type}}|对 {{tt|T}} 应用退化类型转换的结果}}
{{dsc end}}

===辅助类型===
{{ddcl|since=c++14|1=
template&lt; class T &gt;
using decay_t = typename decay&lt;T&gt;::type;
}}

===可能的实现===
{{eq fun|1=
template&lt;class T&gt;
struct decay
{
private:
    typedef typename std::remove_reference&lt;T&gt;::type U;
public:
    typedef typename std::conditional&lt; 
        std::is_array&lt;U&gt;::value,
        typename std::add_pointer&lt;typename std::remove_extent&lt;U&gt;::type&gt;::type,
        typename std::conditional&lt; 
            std::is_function&lt;U&gt;::value,
            typename std::add_pointer&lt;U&gt;::type,
            typename std::remove_cv&lt;U&gt;::type
        &gt;::type
    &gt;::type type;
};
}}

===示例===
{{example
|code=
#include &lt;type_traits&gt;

template&lt;typename T, typename U&gt;
constexpr bool is_decay_equ = std::is_same_v&lt;std::decay_t&lt;T&gt;, U&gt;;

static_assert
(
    is_decay_equ&lt;int, int&gt; &amp;&amp;
    ! is_decay_equ&lt;int, float&gt; &amp;&amp;
    is_decay_equ&lt;int&amp;, int&gt; &amp;&amp;
    is_decay_equ&lt;int&amp;&amp;, int&gt; &amp;&amp;
    is_decay_equ&lt;const int&amp;, int&gt; &amp;&amp;
    is_decay_equ&lt;int[2], int*&gt; &amp;&amp;
    ! is_decay_equ&lt;int[4][2], int*&gt; &amp;&amp;
    ! is_decay_equ&lt;int[4][2], int**&gt; &amp;&amp;
    is_decay_equ&lt;int[4][2], int(*)[2]&gt; &amp;&amp;
    is_decay_equ&lt;int(int), int(*)(int)&gt;
);

int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc remove_cvref}}
{{dsc|[[cpp/language/implicit conversion|隐式转换]]|数组到指针、函数到指针、左值到右值转换}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}