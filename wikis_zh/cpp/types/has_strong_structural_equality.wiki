{{cpp/types/traits/is| 1=has_strong_structural_equality
| std=c++20
| description=若 {{tt|T}} 拥有[[cpp/language/template parameters#非类型模板形参|强结构相等性]]，则提供等于 {{c|true}} 的成员常量 {{tt|value}} 。对于任何其他类型 {{tt|value}} 为 {{c|false}} 。
| inherit_desc= {{tt|T}} 拥有强结构相等性
}}

===注解===
此类型特征可用于检查一个类型能否用作非类型模板形参。

===示例===
{{example|code=
#include &lt;type_traits&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;iostream&gt;

template&lt;std::size_t N&gt;
struct fixed_string {
    constexpr fixed_string(const char (&amp;s)[N + 1])
    {
        std::copy_n(s, N + 1, m_data);
    }
    bool operator==(const fixed_string&amp;) const = default;

    char m_data[N + 1];
};

template&lt;std::size_t N&gt;
struct broken_fixed_string {
    constexpr broken_fixed_string(const char (&amp;s)[N + 1])
    {
        std::copy_n(s, N + 1, m_data);
    }
    bool operator==(const broken_fixed_string &amp;rhs) const
    {
        return std::memcmp(m_data, rhs.m_data, N + 1) == 0;
    }

    char m_data[N + 1];
};

int main()
{
    std::cout
        &lt;&lt; std::boolalpha
        &lt;&lt; std::has_strong_structural_equality_v&lt;fixed_string&lt;42&gt;&gt; &lt;&lt; '\n'
        &lt;&lt; std::has_strong_structural_equality_v&lt;broken_fixed_string&lt;42&gt;&gt; &lt;&lt; '\n';
}
| output=
true
false
}}

===参阅===
{{dsc begin}}
{{dsc end}}

{{langlinks|en|ja}}