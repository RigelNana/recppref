{{cpp/types/numeric_limits/title|has_denorm_loss}}
{{cpp/types/numeric_limits/navbar}}
{{dcl begin}}
{{dcl rev begin}}
{{dcl | until=c++11 |
static const bool has_denorm_loss;
}}
{{dcl | since=c++11 | deprecated=c++23 |
static constexpr bool has_denorm_loss;
}}
{{dcl rev end}}
{{dcl end}}

{{c|std::numeric_limits&lt;T&gt;::has_denorm_loss}} 的值对于所有将在创建非正规数时的精度的损失检测为非正规化损失而非不准确结果（见后述）的浮点数类型 {{tt|T}} 都是 {{c|true}}。

===标准特化===
{{dsc begin}}
{{dsc hitem | {{tt|T}} | {{c|std::numeric_limits&lt;T&gt;::has_denorm_loss}} 的值}}
{{dsc | {{c/core|/* 未特化 */}}     | {{c|false}} }}
{{dsc | {{c/core|bool}}              | {{c|false}} }}
{{dsc | {{c/core|char}}              | {{c|false}} }}
{{dsc | {{c/core|signed char}}       | {{c|false}} }}
{{dsc | {{c/core|unsigned char}}     | {{c|false}} }}
{{dsc | {{c/core|wchar_t}}           | {{c|false}} }}
{{dsc | {{c/core|char8_t}} {{mark since c++20}}  | {{c|false}} }}
{{dsc | {{c/core|char16_t}} {{mark since c++11}} | {{c|false}} }}
{{dsc | {{c/core|char32_t}} {{mark since c++11}} | {{c|false}} }}
{{dsc | {{c/core|short}}             | {{c|false}} }}
{{dsc | {{c/core|unsigned short}}    | {{c|false}} }}
{{dsc | {{c/core|int}}               | {{c|false}} }}
{{dsc | {{c/core|unsigned int}}      | {{c|false}} }}
{{dsc | {{c/core|long}}              | {{c|false}} }}
{{dsc | {{c/core|unsigned long}}     | {{c|false}} }}
{{dsc | {{c/core|long long}} {{mark since c++11}}          | {{c|false}} }}
{{dsc | {{c/core|unsigned long long}} {{mark since c++11}} | {{c|false}} }}
{{dsc | {{c/core|float}}             | 由实现定义 }}
{{dsc | {{c/core|double}}            | 由实现定义 }}
{{dsc | {{c/core|long double}}       | 由实现定义 }}
{{dsc end}}

===注解===
遵从标准的非正规数的 IEEE 754 浮点数实现要求在出现关联到创建这种数的精度损失时检测它，而且可以以两种不同的方式进行：
# 非正规化损失：产生的结果与在假定指数范围无界的情况下计算出的结果不同。
# 不准确结果：产生的结果与在假定指数范围和精度均无界的情况下计算出的结果不同。

不存在非正规化损失机制的实现（精度损失在舍入后检测为不准确结果），而此选项在 IEEE 标准 754 的 2008 修订版被移除。

libstdc++、libc++、libCstd 及 stlport4 为所有浮点数类型定义此常量为 {{c|false}}。Microsoft Visual Studio 为所有浮点数类型定义它为 {{c|true}}。

与任何浮点数计算一样，精度损失可能会引发 {{lc|FE_INEXACT}}。

===示例===
{{example
|code=
|output=
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/numeric_limits/dsc tinyness_before}}
{{dsc inc|cpp/types/numeric_limits/dsc has_denorm}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}