{{cpp/types/traits/is|1=is_reference
|description=
如果 {{tt|T}} 是引用类型（左值引用或右值引用），那么提供的成员常量 {{tt|value}} 等于 {{c|true}}。对于其它任何类型，{{tt|value}} 等于 {{c|false}}。
|inherit_desc={{tt|T}} 是引用类型
}}

===可能的实现===
{{eq fun
|1=
template&lt;class T&gt; struct is_reference : std::false_type {};
template&lt;class T&gt; struct is_reference&lt;T&amp;&gt; : std::true_type {};
template&lt;class T&gt; struct is_reference&lt;T&amp;&amp;&gt; : std::true_type {};
}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;type_traits&gt;

class A {};

int main() 
{
#   define REF(x) &lt;&lt; #x " ?: " &lt;&lt; x &lt;&lt; '\n'
    std::cout &lt;&lt; std::boolalpha
    REF(std::is_reference_v&lt;A&gt;)
    REF(std::is_reference_v&lt;A&amp;&gt;)
    REF(std::is_reference_v&lt;A&amp;&amp;&gt;)
    REF(std::is_reference_v&lt;long&gt;)
    REF(std::is_reference_v&lt;long&amp;&gt;)
    REF(std::is_reference_v&lt;long&amp;&amp;&gt;)
    REF(std::is_reference_v&lt;double*&gt;)
    REF(std::is_reference_v&lt;double*&amp;&gt;)
    REF(std::is_reference_v&lt;double*&amp;&amp;&gt;);
#   undef REF
}
|output=
std::is_reference_v&lt;A&gt; ?: false
std::is_reference_v&lt;A&amp;&gt; ?: true
std::is_reference_v&lt;A&amp;&amp;&gt; ?: true
std::is_reference_v&lt;long&gt; ?: false
std::is_reference_v&lt;long&amp;&gt; ?: true
std::is_reference_v&lt;long&amp;&amp;&gt; ?: true
std::is_reference_v&lt;double*&gt; ?: false
std::is_reference_v&lt;double*&amp;&gt; ?: true
std::is_reference_v&lt;double*&amp;&amp;&gt; ?: true
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_lvalue_reference}}
{{dsc inc|cpp/types/dsc is_rvalue_reference}}

{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}