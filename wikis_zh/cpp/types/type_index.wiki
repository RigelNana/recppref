{{cpp/title|type_index}}
{{cpp/types/type_index/navbar}}

{{dcl begin}}
{{dcl header|typeindex}}
{{dcl|since=c++11|
class type_index;
}}
{{dcl end}}

{{tt|type_index}} 类是一个围绕 {{lc|std::type_info}} 的包装类，它可用作关联容器与无序关联容器的索引。它与 {{tt|type_info}} 对象的关系通过一个指针维系，故而 {{tt|type_index}} 为{{named req|CopyConstructible}}且为{{named req|CopyAssignable}}。

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/types/type_index/dsc constructor}}
{{dsc mem dtor|nolink=true|notes={{mark implicit}}|销毁 {{tt|type_index}} 对象}}
{{dsc mem fun|operator{{=}}|nolink=true|notes={{mark implicit}}|对 {{tt|type_index}} 对象赋值}}
{{dsc inc|cpp/types/type_index/dsc operator_cmp}}
{{dsc inc|cpp/types/type_index/dsc hash_code}}
{{dsc inc|cpp/types/type_index/dsc name}}
{{dsc end}}

===辅助类===
{{dsc begin}}
{{dsc inc|cpp/types/type_index/dsc hash}}
{{dsc end}}

===示例===
{{example
|下面的程序是一个有效的类型-值映射的示例。
|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;
#include &lt;string&gt;
#include &lt;typeindex&gt;
#include &lt;typeinfo&gt;
#include &lt;unordered_map&gt;

struct A
{
    virtual ~A() {}
};

struct B : A {};
struct C : A {};

int main()
{
    std::unordered_map&lt;std::type_index, std::string&gt; type_names;

    type_names[std::type_index(typeid(int))] = "int";
    type_names[std::type_index(typeid(double))] = "double";
    type_names[std::type_index(typeid(A))] = "A";
    type_names[std::type_index(typeid(B))] = "B";
    type_names[std::type_index(typeid(C))] = "C";

    int i;
    double d;
    A a;

    // 注意我们正在存储指向类型 A 的指针
    std::unique_ptr&lt;A&gt; b(new B);
    std::unique_ptr&lt;A&gt; c(new C);

    std::cout &lt;&lt; "i 是 " &lt;&lt; type_names[std::type_index(typeid(i))] &lt;&lt; '\n';
    std::cout &lt;&lt; "d 是 " &lt;&lt; type_names[std::type_index(typeid(d))] &lt;&lt; '\n';
    std::cout &lt;&lt; "a 是 " &lt;&lt; type_names[std::type_index(typeid(a))] &lt;&lt; '\n';
    std::cout &lt;&lt; "*b 是 " &lt;&lt; type_names[std::type_index(typeid(*b))] &lt;&lt; '\n';
    std::cout &lt;&lt; "*c 是 " &lt;&lt; type_names[std::type_index(typeid(*c))] &lt;&lt; '\n';
}
|output=
i 是 int
d 是 double
a 是 A
*b 是 B
*c 是 C
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc type_info}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}