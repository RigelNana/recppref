{{cpp/types/traits/is|1=is_member_pointer
|description=
如果 {{tt|T}} 为指向非静态成员对象或非静态成员函数的指针，那么提供的成员常量 {{c|value}} 等于 {{c|true}}。对于其它任何类型，{{c|value}} 等于 {{c|false}}。
|inherit_desc={{tt|T}} 为成员指针类型
}}

===可能的实现===
{{eq fun
|1=
template&lt;class T&gt;
struct is_member_pointer_helper : std::false_type {};

template&lt;class T, class U&gt;
struct is_member_pointer_helper&lt;T U::*&gt; : std::true_type {};

template&lt;class T&gt;
struct is_member_pointer : is_member_pointer_helper&lt;typename std::remove_cv&lt;T&gt;::type&gt; {};
}}

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;type_traits&gt;

static_assert(!std::is_member_pointer_v&lt;int*&gt;);

struct S
{
    int i{42};
    int foo() { return 0xF00; }
};
using mem_int_ptr_t = int S::*;
using mem_fun_ptr_t = int (S::*)();
static_assert(std::is_member_pointer_v&lt;mem_int_ptr_t&gt;);
static_assert(std::is_member_pointer_v&lt;mem_fun_ptr_t&gt;);

int main()
{
    S s;

    mem_int_ptr_t pm = &amp;S::i;
    assert(s.i == s.*pm);

    mem_fun_ptr_t pmf = &amp;S::foo;
    assert((s.*pmf)() == s.foo());
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_pointer}}
{{dsc inc|cpp/types/dsc is_member_object_pointer}}
{{dsc inc|cpp/types/dsc is_member_function_pointer}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}