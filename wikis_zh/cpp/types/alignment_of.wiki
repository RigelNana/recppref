{{cpp/title|alignment_of}}
{{cpp/meta/navbar}}
{{ddcl|header=type_traits|since=c++11|
template&lt; class T &gt;
struct alignment_of;
}}

提供成员常量 {{c|value}}，它等于类型 {{tt|T}} 的[[cpp/language/object#对齐|对齐要求]]，如同用 {{ltt|cpp/language/alignof}} 表达式获得。若 {{tt|T}} 是数组类型，则返回元素类型的对齐要求。若 {{tt|T}} 是引用类型，则返回被引用类型的对齐要求。

若 {{c|alignof(T)}} 不是合法表达式，则行为未定义。

{{cpp/types/nospec|v}}

=== 辅助变量模板 ===
{{ddcl|since=c++17|1=
template&lt; class T &gt;
constexpr std::size_t alignment_of_v = alignment_of&lt;T&gt;::value;
}}
{{cpp/types/integral_constant/inherit2|{{c|alignof(T)}}|std::size_t}}

===可能的实现===
{{eq fun
|1=
template&lt;class T&gt;
struct alignment_of : std::integral_constant&lt;std::size_t, alignof(T)&gt; {};
}}

===注解===
此类型特征早于 {{ltt|cpp/language/alignof}} 关键词出现，该关键词能用于较简明地获得相同值。

===示例===
{{example
|code=
#include &lt;cstdint&gt;
#include &lt;iostream&gt;
#include &lt;type_traits&gt;
 
class A {};
struct B
{
    std::int8_t p;
    std::int16_t q;
};
 
int main() 
{
    std::cout &lt;&lt; std::alignment_of&lt;A&gt;::value &lt;&lt; ' ';
    std::cout &lt;&lt; std::alignment_of&lt;B&gt;::value &lt;&lt; ' ';
    std::cout &lt;&lt; std::alignment_of&lt;int&gt;() &lt;&lt; '\n'; // 另一种语法
    std::cout &lt;&lt; std::alignment_of_v&lt;double&gt; &lt;&lt; '\n'; // c++17 另一种语法
}
|p=true
|output=
1 2 4 8
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/language/dsc alignof}}
{{dsc inc|cpp/language/dsc alignas}}
{{dsc inc|cpp/types/dsc aligned_storage}}
{{dsc inc|cpp/types/dsc aligned_union}}
{{dsc inc|cpp/types/dsc max_align_t}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}