{{cpp/title|bad_cast}}
{{cpp/types/navbar}}
{{ddcl|header=typeinfo|
class bad_cast : public std::exception;
}}

此类型的异常，在 {{ltt|cpp/language/dynamic_cast}} 对引用类型的运行时检查失败（例如因为类型并非以继承关联）时抛出，以及若请求的刻面不存在于本地环境时从 {{lc|std::use_facet}} 抛出。

{{inheritance diagram/std-bad_cast}}

===成员函数===
{{cpp/error/exception/member of derived|bad_cast}}

{{cpp/error/exception/inherit}}

===注解===
{{feature test macro|__cpp_lib_constexpr_exceptions|value=202411L|std=C++26|{{c/core|constexpr}} 的异常类型}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;typeinfo&gt;

struct Foo { virtual ~Foo() {} };
struct Bar { virtual ~Bar() { std::cout &lt;&lt; "~Bar\n"; } };
struct Pub : Bar { ~Pub() override { std::cout &lt;&lt; "~Pub\n"; } };

int main()
{
    Pub pub;
    try
    {
        [[maybe_unused]]
        Bar&amp; r1 = dynamic_cast&lt;Bar&amp;&gt;(pub); // OK, 向上转型
 
        [[maybe_unused]]
        Foo&amp; r2 = dynamic_cast&lt;Foo&amp;&gt;(pub); // 抛出
    }
    catch (const std::bad_cast&amp; e)
    {
        std::cout &lt;&lt; "e.what(): " &lt;&lt; e.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
e.what(): std::bad_cast
~Pub
~Bar
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}