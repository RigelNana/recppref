{{cpp/types/traits/is|1=is_unbounded_array
|std=c++20
|description= 
检查 {{tt|T}} 是否为{{ls|cpp/language/array#未知边界数组}}。如果 {{tt|T}} 是未知边界的数组类型，那么提供的成员常量 {{c|value}} 等于 {{c|true}}。否则，{{c|value}} 等于 {{c|false}}。
|inherit_desc={{tt|T}} 是未知边界的数组类型
}}

===可能的实现===
{{eq fun
|1=
template&lt;class T&gt;
struct is_unbounded_array: std::false_type {};

template&lt;class T&gt;
struct is_unbounded_array&lt;T[]&gt; : std::true_type {};
}}

===注解===
{{feature test macro|__cpp_lib_bounded_array_traits|{{lc|std::is_bounded_array}}, {{tt|std::is_unbounded_array}}|value=201902L|std=C++20}}

===示例===
{{example
|code=
#include &lt;type_traits&gt;

class A {};

static_assert
(""
    &amp;&amp; std::is_unbounded_array_v&lt;A&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;A[]&gt; == true
    &amp;&amp; std::is_unbounded_array_v&lt;A[3]&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;float&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;int&gt; == false
    &amp;&amp; std::is_unbounded_array_v&lt;int[]&gt; == true
    &amp;&amp; std::is_unbounded_array_v&lt;int[3]&gt; == false
);

int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_array}}
{{dsc inc|cpp/types/dsc is_bounded_array}}
{{dsc inc|cpp/types/dsc extent}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}