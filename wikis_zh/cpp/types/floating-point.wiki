{{title|定宽浮点数类型 {{mark since c++23}}}}
{{cpp/types/navbar}}

如果实现支持以下任何 {{enwiki|IEEE 754|ISO 60559}} 类型作为扩展浮点数类型，那么：
* 对应的宏会被定义为 {{c|1}} 以指定支持它
* 对应的[[cpp/language/floating literal|浮点数字面量]]后缀会可用
* 会提供对应的类型别名

{|class="wikitable" style="text-align:center; font-size:85%; max-width:90em;"
|-
|rowspan=2|'''类型名称'''&lt;br&gt;{{nbsp}}在标头 {{header|stdfloat}} 定义
!rowspan=2 style="width: 15%"|字面量后缀
!rowspan=2|预定义宏
!rowspan=2|C 语言类型
!colspan=4|类型属性
|-
|用于存储的位数
|表示精度的位数
|表示指数的位数
|最大指数
|-
! {{lc|float16_t}}
|{{c|f16}} 或 {{c|F16}}
|{{c|__STDCPP_FLOAT16_T__}}
|{{tt|_Float16}}
|16
|11
|5
|15
|-
! {{lc|float32_t}}
|{{c|f32}} 或 {{c|F32}}
|{{c|__STDCPP_FLOAT32_T__}}
|{{tt|_Float32}}
|32
|24
|8
|127
|-
! {{lc|float64_t}}
|{{c|f64}} 或 {{c|F64}}
|{{c|__STDCPP_FLOAT64_T__}}
|{{tt|_Float64}}
|64
|53
|11
|1023
|-
! {{lc|float128_t}}
|{{c|f128}} 或 {{c|F128}}
|{{c|__STDCPP_FLOAT128_T__}}
|{{tt|_Float128}}
|128
|113
|15
|16383
|-
! {{lc|bfloat16_t}}
|{{c|bf16}} 或 {{c|BF16}}
|{{c|__STDCPP_BFLOAT16_T__}}
|（无）
|16
|8
|8
|127
|}

===注解===
类型 {{tt|std::bfloat16_t}} 被称为 {{enwiki|Bfloat16 floating-point format|Brain 浮点数}}。

与可以是[[cpp/language/types#标准整数类型|标准整数类型]]别名的[[cpp/types/integer|定宽整数类型]]不同，定宽浮点数类型必然是扩展浮点数类型（而非 {{c/core|float}} / {{c/core|double}} / {{c/core|long double}}）的别名，因此不是标准浮点数类型的简单替代品。

===示例===
{{example|
|code=
#include &lt;stdfloat&gt;

#if __STDCPP_FLOAT64_T__ != 1
    #error "要求 64 位浮点数类型"
#endif

int main()
{
    std::float64_t f = 0.1f64;
}
|p=true
|output=
}}

===引用===
{{ref std c++23}}
{{ref std|section=6.8.3|title=Optional extended floating-point types|id=basic.extended.fp}}
{{ref std end}}

===参阅===
* [[cpp/language/types|基础类型]]

{{langlinks|de|en|es|fr|it|ja|pt|ru}}