{{cpp/types/traits/is|1=is_abstract
|description=
如果 {{tt|T}} 是[[cpp/language/abstract class|抽象类]]（即声明或继承至少一个纯虚函数的非联合类类型），那么提供的成员常量 {{tt|value}} 等于 {{c|true}}。对于其它任何类型，{{tt|value}} 等于 {{c|false}}。

如果 {{tt|T}} 是不完整的非联合类类型，那么行为未定义。
|inherit_desc={{nbsp}}{{tt|T}} 是[[cpp/language/abstract_class|抽象类]]类型
}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;type_traits&gt;

struct A { int m; };
static_assert(std::is_abstract_v&lt;A&gt; == false);

struct B { virtual void foo(); };
static_assert(std::is_abstract_v&lt;B&gt; == false);

struct C { virtual void foo() = 0; };
static_assert(std::is_abstract_v&lt;C&gt; == true);

struct D : C {};
static_assert(std::is_abstract_v&lt;D&gt; == true);

int main() {}
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2015|std=C++11|before=在 {{tt|T}} 是不完整的联合体类型时行为未定义|after=此时基特征是 {{lc|std::false_type}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_class}}
{{dsc inc|cpp/types/dsc is_polymorphic}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}