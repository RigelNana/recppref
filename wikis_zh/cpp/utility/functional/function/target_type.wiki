{{cpp/utility/functional/function/title | target_type}}
{{cpp/utility/functional/function/navbar}}
{{ddcl|since=c++11|
const std::type_info&amp; target_type() const noexcept;
}}

返回存储的函数的类型。

===参数===
（无）

===返回值===
若存储的函数拥有 {{tt|T}} 类型，则为 {{c|typeid(T)}}，否则为 {{c|typeid(void)}}。

===示例===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;

int f(int a) { return -a; }
void g(double) {}
int main()
{
    // fn1 与 fn2 拥有相同类型，但其目标不如此
    std::function&lt;int(int)&gt; fn1(f),
                            fn2([](int a) {return -a;});
    std::cout &lt;&lt; fn1.target_type().name() &lt;&lt; '\n'
              &lt;&lt; fn2.target_type().name() &lt;&lt; '\n';
    
    // C++17 起推导指引（CTAD）可用
    std::cout &lt;&lt; std::function{g}.target_type().name() &lt;&lt; '\n';
}
|p=true
|output=
PFiiE
Z4mainEUliE_
PFvdE
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/function/dsc target}}
{{dsc inc|cpp/types/dsc type_info}}
{{dsc|'''{{ltt|cpp/language/typeid|typeid}}'''|查询类型信息，返回表现该类型的 {{tt|std::type_info}} 对象&lt;br&gt;{{small|{{mark|运算符}}}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}