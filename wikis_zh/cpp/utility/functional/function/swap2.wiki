{{cpp/title|swap&lt;small&gt;(std::function)&lt;/small&gt;}}
{{cpp/utility/functional/function/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|since=c++11|
template&lt; class R, class... Args &gt;
void swap( std::function&lt;R(Args...)&gt;&amp; lhs, std::function&lt;R(Args...)&gt;&amp; rhs ) noexcept;
}}
{{dcl end}}

为 {{lc|std::function}} 重载 {{lc|std::swap}} 算法。交换 {{c|lhs}} 与 {{c|rhs}} 的状态。相当于调用 {{c|lhs.swap(rhs)}}。

===参数===
{{par begin}}
{{par|lhs, rhs|要交换状态的多态函数包装器}}
{{par end}}

===返回值===
（无）

===示例===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;

void foo(const char* str, int x)
{
    std::cout &lt;&lt; "foo(\"" &lt;&lt; str &lt;&lt; "\", " &lt;&lt; x &lt;&lt; ")\n";
}

void bar(const char* str, int x)
{
    std::cout &lt;&lt; "bar(\"" &lt;&lt; str &lt;&lt; "\", " &lt;&lt; x &lt;&lt; ")\n";
}

int main()
{
    std::function&lt;void(const char*, int)&gt; f1{foo};
    std::function&lt;void(const char*, int)&gt; f2{bar};

    f1("f1", 1);
    f2("f2", 2);

    std::cout &lt;&lt; "std::swap(f1, f2);\n";
    std::swap(f1, f2);

    f1("f1", 1);
    f2("f2", 2);
}
|output=
foo("f1", 1)
bar("f2", 2)
std::swap(f1, f2);
bar("f1", 1)
foo("f2", 2)
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2062|std=C++11|before=未要求 {{tt|swap}} 对 {{tt|function}} 的重载为 noexcept|after=已要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/function/dsc swap}}
{{dsc inc|cpp/utility/functional/move_only_function/dsc swap2}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}