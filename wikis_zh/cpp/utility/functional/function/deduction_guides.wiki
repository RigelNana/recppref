{{title|{{tt|std::function}} 的推导指引}}
{{cpp/utility/functional/function/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl | num=1 | since=c++17 |
template&lt; class R, class... ArgTypes &gt; 
function( R(*)(ArgTypes...) ) -&gt; function&lt;R(ArgTypes...)&gt;;
}}
{{dcl | num=2 | since=c++17 |
template&lt;class F&gt;
function( F ) -&gt; function&lt;/* 见下文 */&gt;;
}}
{{dcl | num=3 | since=c++23 |
template&lt; class F &gt;
function( F ) -&gt; function&lt;/* 见下文 */&gt;;
}}
{{dcl | num=4 | since=c++23 |
template&lt; class F &gt;
function( F ) -&gt; function&lt;/* 见下文 */&gt;;
}}
{{dcl end}}
@1@ 为 {{lc|std::function}} 提供此[[cpp/language/class template argument deduction|推导指引]]以允许从函数推导。
@2@ {{cpp/enable_if| {{c|&amp;F::operator()}} 在作为不求值操作数时良构且 {{c|decltype(&amp;F::operator())}} 形式为 {{c|R(G::*)(A...)}}（可选地有 cv 限定，可选地有 noexcept，可选地有左值引用限定）}}。推导类型为 {{c|std::function&lt;R(A...)&gt;}}。
@3@ {{cpp/enable_if| {{c|&amp;F::operator()}} 在作为不求值操作数时良构且 {{c|F::operator()}} 是类型形式为 {{c|R(G, A...)}} 或 {{c|R(G, A...) noexcept}} 的[[cpp/language/member_functions#显式对象形参|显式对象形参函数]]}}。推导的类型为 {{c|std::function&lt;R(A...)&gt;}}。
@4@ {{cpp/enable_if| {{c|&amp;F::operator()}} 在作为不求值操作数时良构且 {{c|F::operator()}} 是类型形式为 {{c|R(A...)}} 或 {{c|R(A...) noexcept}} 的[[cpp/language/static#静态成员函数|静态成员函数]]}}。推导的类型为 {{c|std::function&lt;R(A...)&gt;}}。

===注解===
这些推导指引不允许从带[[cpp/language/variadic_arguments|省略号形参]]的函数推导，而类型中的 {{c|...}} 始终被当做[[cpp/language/parameter_pack#包展开|包展开]]。

这些推导指引所推导的类型可能在之后的标准版本中更改（特别是若在之后的版本中添加 {{c|noexcept}} 支持到 {{lc|std::function}} 则这可能发生）。

===示例===
{{example|code=
#include &lt;functional&gt;
int func(double) { return 0; }
int main() {
  std::function f{func}; // 指引 #1 推导 function&lt;int(double)&gt;
  int i = 5;
  std::function g = [&amp;](double) { return i; }; // 指引 #2 推导 function&lt;int(double)&gt;
}
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3238|std=C++17|before={{v|2}} 的行为在 {{c|F::operator()}} 为 &amp;&amp; 限定时不明确|after=明确为从重载决议排除}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}