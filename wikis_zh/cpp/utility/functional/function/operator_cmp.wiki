{{title|operator{{==}},!{{=}}&lt;small&gt;(std::function)&lt;/small&gt;}}
{{cpp/utility/functional/function/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|since=c++11|num=1|1=
template&lt; class R, class... ArgTypes &gt;
bool operator==( const std::function&lt;R(ArgTypes...)&gt;&amp; f,
                 std::nullptr_t ) noexcept;
}}
{{dcl|since=c++11|until=c++20|num=2|1=
template&lt; class R, class... ArgTypes &gt;
bool operator==( std::nullptr_t,
                 const std::function&lt;R(ArgTypes...)&gt;&amp; f ) noexcept;
}}
{{dcl|since=c++11|until=c++20|num=3|1=
template&lt; class R, class... ArgTypes &gt;
bool operator!=( const std::function&lt;R(ArgTypes...)&gt;&amp; f,
                 std::nullptr_t ) noexcept;
}}
{{dcl|since=c++11|until=c++20|num=4|1=
template&lt; class R, class... ArgTypes &gt;
bool operator!=( std::nullptr_t,
                 const std::function&lt;R(ArgTypes...)&gt;&amp; f ) noexcept;
}}
{{dcl end}}

比较 {{tt|std::function}} 与空指针。空 {{tt|function}}（即无可调用目标的 {{tt|function}}）比较相等，非空 {{tt|function}} 比较不相等。

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

===参数===
{{par begin}}
{{par|f|要比较的 {{tt|std::function}}}}
{{par end}}

===返回值===
@1,2@ {{c|!f}}
@3,4@ {{c|(bool) f}}

===示例===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;

using SomeVoidFunc = std::function&lt;void(int)&gt;;

class C
{
public:
    C(SomeVoidFunc void_func = nullptr) : void_func_(void_func)
    {
        if (void_func_ == nullptr) // 与 nullptr 的专用比较
            void_func_ = std::bind(&amp;C::default_func, this, std::placeholders::_1);
        void_func_(7);
    }

    void default_func(int i) { std::cout &lt;&lt; i &lt;&lt; '\n'; };

private:
    SomeVoidFunc void_func_;
};

void user_func(int i)
{
    std::cout &lt;&lt; (i + 1) &lt;&lt; '\n';
}

int main()
{
    C c1;
    C c2(user_func);
}
|output=
7
8
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/move_only_function/dsc operator{{==}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}