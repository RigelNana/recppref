{{cpp/title|not_equal_to}}
{{cpp/utility/functional/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl rev begin}}
{{dcl|until=c++14|
template&lt; class T &gt;
struct not_equal_to;
}}
{{dcl|since=c++14|
template&lt; class T {{=}} void &gt;
struct not_equal_to;
}}
{{dcl rev end}}
{{dcl end}}

进行比较的函数对象。除非特化，调用类型 {{tt|T}} 上的 {{c|operator!{{=}}}}。

===特化===
{{rev begin}}
{{rev|since=c++14|
标准库提供 {{tt|std::not_equal_to}} 在不指定 {{tt|T}} 时的特化，令形参类型和返回类型留待推导。
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc not_equal_to_void}}
{{dsc end}}
}}
{{rev end}}

{{cpp/utility/functional/member types|result=bool|arg1=T|arg2=T}}

===成员函数===
{{dsc begin}}
{{dsc mem fun|operator()|nolink=true|检查实参是否''不相等''}}
{{dsc end}}

{{member|{{small|std::not_equal_to::}}operator()|2=
{{dcl begin}}
{{dcla|constexpr=c++14|1=
bool operator()( const T&amp; lhs, const T&amp; rhs ) const;
}}
{{dcl end}}

检查 {{c|lhs}} 是否''不等于'' {{c|rhs}}。

===参数===
{{par begin}}
{{par|lhs, rhs|要比较的值}}
{{par end}}

===返回值===
若 {{c|1=lhs != rhs}} 则为 {{c|true}}，否则为 {{c|false}}。

{{cpp/impldef exception}}

===可能的实现===
{{eq fun|1=
constexpr bool operator()(const T&amp; lhs, const T&amp; rhs) const 
{
    return lhs != rhs;
}
}}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/algorithm/dsc equal}}
{{dsc inc|cpp/utility/functional/dsc less}}
{{dsc inc|cpp/utility/functional/ranges/dsc {{SUBPAGENAMEE}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}