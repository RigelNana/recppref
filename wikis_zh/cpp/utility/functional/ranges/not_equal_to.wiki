{{cpp/ranges/title|not_equal_to}}
{{cpp/utility/functional/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|since=c++20|
struct not_equal_to;
}}
{{dcl end}}

进行比较的函数对象。从实参推导函数调用运算符的形参类型（但非返回类型）。

===嵌套类型===
{{dsc begin}}
{{dsc hitem|嵌套类型|定义}}
{{dsc|{{tt|is_transparent}}|[[cpp/utility/functional#透明函数对象|未指定]]}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem fun|operator()|nolink=true|检查实参是否''不相等''}}
{{dsc end}}

{{member|1={{small|std::ranges::not_equal_to::}}operator()|2=
{{ddcl|
template&lt; class T, class U &gt;
constexpr bool operator()(T&amp;&amp; t, U&amp;&amp; u) const;
}}

等价于 {{c|return !ranges::equal_to{}(std::forward&lt;T&gt;(t), std::forward&lt;U&gt;(u));}}。

{{cpp/enable if|满足 {{c|std::equality_comparable_with&lt;T, U&gt;}} }}。
}}

===注解===
与 {{lc|std::not_equal_to}} 不同，{{tt|std::ranges::not_equal_to}} 要求 {{tt|1===}} 与 {{tt|1=!=}} 都合法（经由 {{lconcept|equality_comparable_with}} 约束），并且完全以 {{lc|std::ranges::equal_to}} 定义。

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3530|std=C++20|before=在比较指针时放松了语法检查|after=仅放松语义要求}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc not_equal_to}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}