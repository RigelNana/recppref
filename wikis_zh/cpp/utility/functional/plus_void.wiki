{{cpp/title|plus&lt;void&gt;}}
{{cpp/utility/functional/navbar}}
{{ddcl|header=functional|since=c++14|
template&lt;&gt;
class plus&lt;void&gt;;
}}

{{c/core|std::plus&lt;void&gt;}} 是会推导形参类型和返回类型的 {{lc|std::plus}} 特化。

===成员类型===
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|is_transparent}}|[[cpp/utility/functional#透明函数对象|未指定]]}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/plus_void/dsc operator()}}
{{dsc end}}

{{member|{{small|std::plus&lt;void&gt;::}}operator()|2=
{{ddcl|1=
template&lt; class T, class U &gt;
constexpr auto operator()( T&amp;&amp; lhs, U&amp;&amp; rhs ) const
    -&gt; decltype(std::forward&lt;T&gt;(lhs) + std::forward&lt;U&gt;(rhs));
}}

返回 {{c|lhs}} 与 {{c|rhs}} 的和。

===参数===
{{par begin}}
{{par|lhs, rhs|要求和的值}}
{{par end}}

===返回值===
{{c|std::forward&lt;T&gt;(lhs) + std::forward&lt;U&gt;(rhs)}}。
}}

===示例===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;

int main()
{
    auto string_plus = std::plus&lt;void&gt;{}; // 可以省略 “void”
    std::string a = "Hello ";
    const char* b = "world";
    std::cout &lt;&lt; string_plus(a, b) &lt;&lt; '\n';
}
|output=
Hello world
}}

{{langlinks|en|es|ja}}