{{cpp/utility/functional/copyable_function/title|operator{{=}}}}
{{cpp/utility/functional/copyable_function/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++26|1=
copyable_function&amp; operator=( const copyable_function&amp; other );
}}
{{dcl|num=2|since=c++26|1=
copyable_function&amp; operator=( copyable_function&amp;&amp; other );
}}
{{dcl|num=3|since=c++26|1=
copyable_function&amp; operator=( std::nullptr_t ) noexcept;
}}
{{dcl|num=4|since=c++26|1=
template&lt; class F &gt;
copyable_function&amp; operator=( F&amp;&amp; f );
}}
{{dcl end}}

赋值新目标给 {{tt|std::copyable_function}} 或销毁其目标。

@1@ 赋值 {{tt|other}} 的目标的副本给 {{c|*this}}，如同执行 {{c|auto(other).swap(*this)}}。

@2@ 移动 {{tt|other}} 的目标给 {{c|*this}}，或者若 {{tt|other}} 为空时销毁 {{c|*this}} 的目标（如果有），执行 {{c|auto(std::move(other)).swap(*this)}}。移动复制之后 {{tt|other}} 处于有效状态并具有未指明的值。

@3@ 若存在当前目标则销毁之。调用后 {{c|*this}} 为空。

@4@ 将 {{c|*this}} 的目标设为可调用体 {{tt|f}}，或者若 {{tt|f}} 为空指针值、空成员指针值或空 {{tt|std::copyable_function}} 时销毁当前目标，如同执行 {{c|copyable_function(std::forward&lt;F&gt;(f)).swap(*this);}}。{{cpp/enable_if|{{tt|F}} 的 {{tt|copyable_function}} 参与重载解析}}。如果所选中的构造函数调用非良构或具有未定义行为，则程序非良构或具有未定义行为。

===参数===
{{par begin}}
{{par|other|要复制或移动目标的另一 {{tt|std::copyable_function}} 对象}}
{{par|f|用以初始化新目标的可调用对象}}
{{par end}}

===返回值===
{{c|*this}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/function/dsc operator{{=}}}}
{{dsc inc|cpp/utility/functional/move_only_function/dsc operator{{=}}}}
{{dsc begin}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}