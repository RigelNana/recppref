{{cpp/title|not_equal_to&lt;void&gt;}}
{{cpp/utility/functional/navbar}}
{{ddcl|header=functional|since=c++14|
template&lt;&gt;
class not_equal_to&lt;void&gt;;
}}

{{c/core|std::not_equal_to&lt;void&gt;}} 是会推导形参类型和返回类型的 {{lc|std::not_equal_to}} 特化。

===嵌套类型===
{{dsc begin}}
{{dsc hitem|嵌套类型|定义}}
{{dsc|{{tt|is_transparent}}|[[cpp/utility/functional#透明函数对象|未指定]]}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem fun|cpp/utility/functional/not_equal_to_void|title=operator()|inlinemem=true|测试两个实参是否不比较相等}}
{{dsc end}}

{{member|{{small|std::not_equal_to&lt;void&gt;::}}operator()|2=
{{ddcl|1=
template&lt; class T, class U&gt;
constexpr auto operator()( T&amp;&amp; lhs, U&amp;&amp; rhs ) const
  -&gt; decltype(std::forward&lt;T&gt;(lhs) != std::forward&lt;U&gt;(rhs));
}}

返回 {{c|lhs}} 与 {{c|rhs}} 间不相等比较的结果。

===参数===
{{par begin}}
{{par|lhs, rhs|要比较的值}}
{{par end}}

===返回值===
{{c|1=std::forward&lt;T&gt;(lhs) != std::forward&lt;U&gt;(rhs)}}。
}}

===示例===
{{example
|code=
#include &lt;functional&gt;

int main()
{
    constexpr int p = 0, q = 8;
    std::not_equal_to&lt;&gt; not_equal{};
    static_assert(!not_equal(p, p));
    static_assert(not_equal(p, q));
}
}}

{{langlinks|en|es|ja|ru}}