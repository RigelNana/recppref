{{cpp/title|function_ref}}
{{cpp/utility/functional/function_ref/navbar}}
{{dcl begin}}
{{dcl header|functional}}
{{dcl|num=1|since=c++26|
template&lt; class... &gt;
class function_ref; // 未定义
}}
{{dcl|num=2|since=c++26|
template&lt; class R, class... Args &gt;
class function_ref&lt;R(Args...)&gt;;
template&lt; class R, class... Args &gt;
class function_ref&lt;R(Args...) noexcept&gt;;
template&lt; class R, class... Args &gt;
class function_ref&lt;R(Args...) const&gt;;
template&lt; class R, class... Args &gt;
class function_ref&lt;R(Args...) const noexcept&gt;;
}}
{{dcl end}}

类模板 {{tt|std::function_ref}} 是一种无所有权函数包装器。{{tt|std::function_ref}} 对象可以存储并调用到{{named req|Callable}}''目标''的引用 - 函数、[[cpp/language/lambda|lambda 表达式]]、[[cpp/utility/functional/bind|绑定表达式]] 或其他函数对象，但不能是成员函数指针或成员对象指针。{{c/core|std::nontype}} 可以用于传递函数指针、成员函数指针和成员对象指针来构造 {{tt|std::function_ref}}。

{{tt|std::function_ref}} 支持在其模板形参中提供的（不含 {{c/core|volatile}} 的）[[cpp/language/member functions#有 cv 限定的成员函数|cv 限定符]]和 [[cpp/language/noexcept spec|noexcept 说明符]]的每种可能组合。

{{tt|std::function_ref}} 的每个特化都是满足 {{lconcept|copyable}} 的{{named req|TriviallyCopyable}}类型。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem type|BoundEntityType|private=yes|未指明的{{named req|TriviallyCopyable}}类型，它满足 {{lconcept|copyable}} 并能够存储一个对象指针值或函数指针值}}
{{dsc expos mem type|FunctionPointerType|private=yes|{{box/core|{{c/core|R(*)(}}{{tti|BoundEntityType}}{{sep}}{{c/core|, Args&amp;&amp;...) noexcept(}}{{spar|noex}}{{sep}}{{c/core|)}}}}
其中 {{spar|noex}} 当作为 {{tt|std::function_ref}} 的模板形参的一部分的函数签名中出现 {{c/core|noexcept}} 时为 {{c/core|true}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem obj|spec={{tti|BoundEntityType}}|bound-entity|id=bound-entity|绑定实体对象}}
{{dsc expos mem obj|spec={{tti|FunctionPointerType}}|thunk-ptr|id=thunk-ptr|存储的函数指针}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/function_ref/dsc constructor}}
{{dsc inc|cpp/utility/functional/function_ref/dsc operator{{=}}}}
{{dsc inc|cpp/utility/functional/function_ref/dsc operator()}}
{{dsc end}}

==={{rl|deduction guides|推导指引}}===

===注解===
{{feature test macro|__cpp_lib_function_ref|std=C++26|value=202306L|{{tt|std::function_ref}}}}

===示例===
{{todo|example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/functional/dsc function}}
{{dsc inc|cpp/utility/functional/dsc copyable_function}}
{{dsc inc|cpp/utility/functional/dsc move_only_function}}
{{dsc inc|cpp/utility/dsc nontype}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}