{{cpp/title|''range-default-formatter''{{small|&lt;std::range_format::set&gt;}}}}
{{cpp/utility/format/ranges_formatter/navbar}}
{{ddcl|header=format|since=c++23|notes={{mark expos}}|
template&lt; ranges::input_range R, class CharT &gt;
struct /*range-default-formatter*/&lt;range_format::set, R, CharT&gt;;
}}

用于范围类型的类模板 {{c/core|/*range-default-formatter*/}} 进行了特化，用于当 {{c|std::format_kind&lt;R&gt;}} 为 {{c|std::range_format::set}} 时将范围作为键的集合进行格式化。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem type|private=yes|maybe-const-set|{{box/core|{{lsi|cpp/utility/format#fmt-maybe-const}}{{c/core|&lt;R, CharT&gt;}}}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem obj|private=yes|underlying_|{{box/core|{{c/core|std::range_formatter&lt;std::remove_cvref_t&lt;}}&lt;br&gt;{{nbspt|5}}{{c/core|ranges::range_reference_t&lt;}}{{tti|maybe-const-set}}{{c/core|&gt;&gt;, CharT&gt;}}}}
类型的底层格式化器}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|nolink=true|构造 {{tti|range-default-formatter}}}}
{{dsc mem fun|parse|nolink=true|按照 {{spar|范围格式说明}} 的说明解析格式说明符}}
{{dsc mem fun|format|nolink=true|按照 {{spar|范围格式说明}} 写入范围的格式化输出}}
{{dsc end}}

{{member|1={{small|std::''range-default-formatter''&lt;std::range_format::set&gt;::}}''range-default-formatter''|2=
{{ddcl|1=
constexpr /*range-default-formatter*/();
}}

等价于调用 {{c|underlying_.set_brackets(STATICALLY_WIDEN&lt;CharT&gt;("{"), STATICALLY_WIDEN&lt;CharT&gt;("}"))}}

其中 {{c|STATICALLY_WIDEN&lt;CharT&gt;("...")}} 当 {{tt|CharT}} 为 {{c/core|char}} 时为 {{c|"..."}}，而当 {{tt|CharT}} 为 {{c/core|wchar_t}} 时为 {{c|L"..."}}。
}}

{{member|1={{small|std::''range-default-formatter''&lt;std::range_format::set&gt;::}}parse|2=
{{ddcl|1=
template&lt; class ParseContext &gt;
constexpr auto parse( ParseContext&amp; ctx ) -&gt; ParseContext::iterator;
}}

等价于 {{c|return underlying_.parse(ctx);}}。

返回 ''[[cpp/utility/format/range_formatter#范围格式说明|范围格式说明]]'' 的尾后迭代器。
}}

{{member|1={{small|std::''range-default-formatter''&lt;std::range_format::set&gt;::}}format|2=
{{ddcl|1=
template&lt; class FormatContext &gt;
auto format( maybe-const-set&amp; r, FormatContext&amp; ctx ) const -&gt; FormatContext::iterator;
}}

等价于 {{c|return underlying_.format(r, ctx);}}。

返回输出范围的尾后迭代器。
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/format/dsc formatter}}
{{dsc inc|cpp/utility/format/dsc range_formatter}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}