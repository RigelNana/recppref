{{cpp/title|''range-default-formatter''{{small|&lt;std::range_format::string&gt;}}|''range-default-formatter''{{small|&lt;std::range_format::debug_string&gt;}}}}
{{cpp/utility/format/ranges_formatter/navbar}}
{{ddcl|header=format|since=c++23|notes={{mark expos}}|1=
template&lt; std::range_format K, ranges::input_range R, class CharT &gt;
    requires (K == std::range_format::string {{!!}} K == std::range_format::debug_string)
struct /*range-default-formatter*/&lt;K, R, CharT&gt;;
}}

用于范围类型的类模板 {{c/core|/*range-default-formatter*/}} 进行了特化，用于当 {{c|std::format_kind&lt;R&gt;}} 为 {{c|std::range_format::string}} 或 {{c|std::range_format::debug_string}} 时将范围作为字符串或经转义字符串进行格式化。

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|定义}}
{{dsc expos mem obj|private=yes|underlying_|{{c/core|std::formatter&lt;std::basic_string&lt;CharT&gt;, CharT&gt;}} 类型的底层格式化器}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|nolink=true|notes={{mark implicit}}|构造 {{tti|range-default-formatter}}}}
{{dsc mem fun|parse|nolink=true|按照 ''[[cpp/utility/format/range_formatter#范围格式说明|范围格式说明]]'' 的说明解析格式说明符}}
{{dsc mem fun|format|nolink=true|按照 ''[[cpp/utility/format/range_formatter#范围格式说明|范围格式说明]]'' 写入范围的格式化输出}}
{{dsc end}}

{{member|1={{small|std::''range-default-formatter''&lt;std::range_format::string&gt;::}}parse&lt;br&gt;{{small|std::''range-default-formatter''&lt;std::range_format::debug_string&gt;::}}parse|2=
{{ddcl|1=
template&lt; class ParseContext &gt;
constexpr auto parse( ParseContext&amp; ctx ) -&gt; ParseContext::iterator;
}}

等价于：

{{c multi|
auto i {{=}} underlying_.parse(ctx);|
if constexpr (K {{==}} std::range_format::debug_string)|
    underlying_.set_debug_format();|
return i;
}}

返回 ''[[cpp/utility/format/range_formatter#范围格式说明|范围格式说明]]'' 的尾后迭代器。
}}

{{member|1={{small|std::''range-default-formatter''&lt;std::range_format::string&gt;::}}format&lt;br&gt;{{small|std::''range-default-formatter''&lt;std::range_format::debug_string&gt;::}}format|2=
{{ddcl|1=
template&lt; class FormatContext &gt;
auto format( /* 见下文 */&amp; r, FormatContext&amp; ctx ) const -&gt; FormatContext::iterator;
}}

如果 {{c|ranges::input_range&lt;const R&gt;}} 为 {{c|true}}，则 {{c|r}} 的类型为 {{c/core|const R&amp;}}。否则其类型为 {{c/core|R&amp;}}。

令 {{c|s}} 为一个 {{c|std::basic_string&lt;CharT&gt;}}，如同以 {{c|std::basic_string&lt;CharT&gt;(std::from_range, r)}} 构造 {{c|s}} 使得 {{c|ranges::equal(s, r)}} 为 {{c|true}}。

等价于 {{c|return underlying_.format(s, ctx);}}。

返回输出范围的尾后迭代器。
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/format/dsc formatter}}
{{dsc inc|cpp/utility/format/dsc range_formatter}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}