{{cpp/title|vformat_to}}
{{cpp/utility/format/navbar}}

{{dcl begin}}
{{dcl header|format}}
{{dcl|num=1|since=c++20|1=
template&lt; class OutputIt &gt;
OutputIt vformat_to( OutputIt out, std::string_view fmt, std::format_args args );
}}
{{dcl|num=2|since=c++20|1=
template&lt; class OutputIt &gt;
OutputIt vformat_to( OutputIt out, std::wstring_view fmt, std::wformat_args args );
}}
{{dcl|num=3|since=c++20|1=
template&lt; class OutputIt &gt;
OutputIt vformat_to( OutputIt out, const std::locale&amp; loc,
                     std::string_view fmt, std::format_args args );
}}
{{dcl|num=4|since=c++20|1=
template&lt; class OutputIt &gt;
OutputIt vformat_to( OutputIt out, const std::locale&amp; loc,
                     std::wstring_view fmt, std::wformat_args args );
}}
{{dcl end}}

按照格式字符串 {{c|fmt}} 格式化 {{c|args}} 所持有的实参，并写结果到输出迭代器 {{c|out}}。{{c|loc}} 若存在，则用于本地环境特定的格式化。

令 {{tt|CharT}} 为 {{c/core|decltype(fmt)::char_type}}（对重载 {{v|1,3}} 为 {{c/core|char}}，对重载 {{c/core|wchar_t}} 为 {{v|2,4}}）。

{{cpp/enable if|plural=true|
{{tt|OutputIt}} 满足概念 {{c/core|std::output_iterator&lt;const CharT&amp;&gt;}} }}。
{{cpp/precondition|
{{tt|OutputIt}} 必须实现（满足其语义要求）概念 {{c/core|std::output_iterator&lt;const CharT&amp;&gt;}}，且对于 {{tt|Args}} 中的任何 {{tt|Ti}}，{{c|std::formatter&lt;Ti, CharT&gt;}} 都必须满足{{named req|Formatter}}要求，}}

===参数===
{{par begin}}
{{par|out|指向输出缓冲区的迭代器}}
{{par|fmt|{{include|cpp/utility/format/format string}}}}
{{par|args...|要格式化的实参}}
{{par|loc|用于本地环境特定的格式化的 {{lc|std::locale}}}}
{{par end}}

===返回值===
输出范围末尾后一位置的迭代器。

===异常===
若 {{c|fmt}} 对于提供的参数不是合法的格式字符串则抛出 {{lc|std::format_error}}。并且会传播格式化器或迭代器操作所抛的任何异常。

===示例===
{{example
|code=
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|paper=P2216R3|std=C++20|before={{c|args}} 的类型在 {{tt|OutputIt}} 上参数化|after=不参数化}}
{{dr list end}}

===参阅===

{{langlinks|en|es|ja|ru}}