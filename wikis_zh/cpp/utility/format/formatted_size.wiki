{{cpp/title|formatted_size}}
{{cpp/utility/format/navbar}}

{{dcl begin}}
{{dcl header|format}}
{{dcl|num=1|since=c++20|1=
template&lt; class... Args &gt;
std::size_t formatted_size( std::format_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcl|num=2|since=c++20|1=
template&lt; class... Args &gt;
std::size_t formatted_size( std::wformat_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcl|num=3|since=c++20|1=
template&lt; class... Args &gt;
std::size_t formatted_size( const std::locale&amp; loc,
                            std::format_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcl|num=4|since=c++20|1=
template&lt; class... Args &gt;
std::size_t formatted_size( const std::locale&amp; loc,
                            std::wformat_string&lt;Args...&gt; fmt, Args&amp;&amp;... args );
}}
{{dcl end}}

确定按照格式字符串 {{c|fmt}} 格式化 {{c|args}} 得到的有格式字符串的总字符数。{{c|loc}} 若存在则用于本地环境特定的格式化。

若对于 {{tt|Args}} 中的任何 {{tt|Ti}}，{{c|std::formatter&lt;Ti, CharT&gt;}} 不满足{{named req|Formatter}}的要求，则其行为未定义。

===参数===
{{par begin}}
{{par|fmt|{{include|cpp/utility/format/format string|const}}}}
{{par|args...|要格式化的实参}}
{{par|loc|用于本地环境特定的格式化的 {{lc|std::locale}}}}
{{par end}}

===返回值===
有格式字符串中的总字符数。

===异常===
传播格式化器所抛的任何异常。

===示例===
{{example
|code=
#include &lt;format&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string_view&gt;
#include &lt;vector&gt;

int main()
{
    using namespace std::literals::string_view_literals;

    constexpr auto fmt_str { "Hubble's H{0} {1} {2:*^4} miles/sec/mpc."sv };
    constexpr auto sub_zero{"\N{SUBSCRIPT ZERO}"sv}; // "₀" 或 {0342, 130, 128}
    constexpr auto aprox_equ{"\N{APPROXIMATELY EQUAL TO}"sv}; // "≅" 或 {0342, 137, 133}
    constexpr int Ho { 42 }; // H₀

    const auto min_buffer_size{std::formatted_size(fmt_str, sub_zero, aprox_equ, Ho)};
    std::cout &lt;&lt; "最小缓冲区大小 = " &lt;&lt; min_buffer_size &lt;&lt; '\n';

    // 以 std::vector 为动态缓冲区。缓冲区不包含尾随 '\0' 。
    std::vector&lt;char&gt; buffer(min_buffer_size); 

    std::format_to_n(buffer.data(), buffer.size(), fmt_str, sub_zero, aprox_equ, Ho);
    std::cout &lt;&lt; "缓冲区: "
              &lt;&lt; std::quoted(std::string_view{buffer.data(), min_buffer_size})
              &lt;&lt; '\n';

    // 添加尾随 '\0' 后直接打印缓冲区。
    buffer.push_back('\0');
    std::cout &lt;&lt; "缓冲区: " &lt;&lt; std::quoted(buffer.data()) &lt;&lt; '\n';
}
|output=
最小缓冲区大小 = 37
缓冲区: "Hubble's H₀ ≅ *42* miles/sec/mpc."
缓冲区: "Hubble's H₀ ≅ *42* miles/sec/mpc."
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|paper=P2216R3|std=C++20|before=对非法格式字符串抛出 {{lc|std::format_error}} |after=非法格式字符串导致编译时错误}}
{{dr list item|paper=P2418R2|std=C++20|before=无法格式化既非 const 可用也不可复制的对象（如生成器式对象）|after=允许格式化这些对象}}
{{dr_p2508}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/format/dsc format_to}}
{{dsc inc|cpp/utility/format/dsc format_to_n}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}