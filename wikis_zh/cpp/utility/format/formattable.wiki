{{cpp/title|formattable}}
{{cpp/utility/format/navbar}}

{{dcl begin}}
{{dcl header|format}}
{{dcl|num=1|since=c++23|1=
template&lt; class T, class CharT &gt;
concept formattable = /* formattable_with */&lt;
  std::remove_reference_t&lt;T&gt;,
  std::basic_format_context&lt;/* fmt_iter_for */&lt;CharT&gt;, CharT&gt;
&gt;;
}}
{{dcl h|辅助模板}}
{{dcl|num=2|notes={{mark expos}}|1=
template&lt; class CharT &gt;
using /* fmt_iter_for */ = /* 未指明 */;
}}
{{dcl|num=3|notes={{mark expos}}|1=
template&lt; class T, class Context, 
          class Formatter =
              typename Context::template
                  formatter_type&lt;std::remove_const_t&lt;T&gt;&gt; &gt;
concept /* formattable_with */ = 
  std::semiregular&lt;Formatter&gt; &amp;&amp;
  requires (Formatter&amp; f, const Formatter&amp; cf, T&amp;&amp; t, Context fc, 
            std::basic_format_parse_context&lt;
                typename Context::char_type
            &gt; pc) {
    { f.parse(pc) } -&gt; std::same_as&lt;typename decltype(pc)::iterator&gt;;
    { cf.format(t, fc) } -&gt; std::same_as&lt;typename Context::iterator&gt;;
  };
}}
{{dcl end}}

概念 {{tt|formattable}} 指定 {{c/core|std::formatter&lt;std::remove_cvref_t&lt;T&gt;, CharT&gt;}} 满足{{named req|BasicFormatter}}和（当 {{c/core|std::remove_reference_t&lt;T&gt;}} 有 const 限定时）{{named req|Formatter}}的要求。

仅用于阐释的别名模板 {{c/core|/* fmt_iter_for */}} 产生满足 {{c/core|std::output_iterator&lt;const CharT&amp;&gt;}} 的未指明类型。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3925|std=C++23|before=未提供 {{lc|std::basic_format_context}} 的第二模板实参|after=已提供}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/format/dsc formatter}}
{{dsc named req|cpp/named req/BasicFormatter|针对给定格式化参数类型和字符类型抽象格式化操作|notes={{mark c++20}}}}
{{dsc named req|cpp/named req/Formatter|定义[[cpp/utility/format|格式化库]]使用的函数|notes={{mark c++20}}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}