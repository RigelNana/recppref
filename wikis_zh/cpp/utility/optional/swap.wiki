{{cpp/utility/optional/title|swap}}
{{cpp/utility/optional/navbar}}
{{ddcl|since=c++17|notes={{mark constexpr since c++20}}&lt;!-- P2231R1 --&gt;|
void swap( optional&amp; other ) noexcept(/* 见下文 */);
}}

与 {{c|other}} 交换内容。

* 若 {{c|*this}} 和 {{c|other}} 均不含值，则函数无效果。

* 若 {{c|*this}} 与 {{c|other}} 仅有一个含值（称此对象为 {{tt|in}}，另一者为 {{tt|un}}），则从 {{c|std::move(*in)}} [[cpp/language/direct_initialization|直接初始化]] {{tt|un}} 所含值，随后如同通过 {{c|in-&gt;T::~T()}} 析构 {{tt|in}} 所含值。此调用后，{{tt|in}} 不含值；{{tt|un}} 含值。

* 若 {{c|*this}} 与 {{c|other}} 均含值，则通过调用 {{c|std::swap(**this, *other)}} 交换所含值。

除非 {{tt|T}} {{named req|Swappable}} 且 {{c|std::is_move_constructible_v&lt;T&gt;}} 是 {{c|true}}，否则程序非良构。

===参数===
{{par begin}}
{{par|other|要与之交换内容的 {{tt|optional}} 对象}}
{{par end}}

===返回值===
（无）

===异常===
{{noexcept|std::is_nothrow_move_constructible_v&lt;T&gt; &amp;&amp;
         std::is_nothrow_swappable_v&lt;T&gt;}}

在抛异常的情况下，{{c|*this}} 和 {{c|other}} 所含值的状态由 {{tt|T}} 的 {{tt|swap}} 或 {{tt|T}} 的移动构造函数的异常安全保证决定，取决于调用的是哪个。对于 {{c|*this}} 和 {{c|other}}，若对象含值，则令它继续含值，反之亦然。

===注解===
{{ftm begin}}
{{ftm|std=C++20|dr=20|value=202106L|__cpp_lib_optional|完全 {{c/core|constexpr}}}}
{{ftm end}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;optional&gt;
#include &lt;string&gt;

int main()
{
    std::optional&lt;std::string&gt; opt1("First example text");
    std::optional&lt;std::string&gt; opt2("2nd text");

    enum Swap { Before, After };
    auto print_opts = [&amp;](Swap e)
    {
        std::cout &lt;&lt; (e == Before ? "交换前:\n" : "交换后:\n");
        std::cout &lt;&lt; "opt1 含有 '" &lt;&lt; opt1.value_or("") &lt;&lt; "'\n";
        std::cout &lt;&lt; "opt2 含有 '" &lt;&lt; opt2.value_or("") &lt;&lt; "'\n";
        std::cout &lt;&lt; (e == Before ? "---SWAP---\n": "\n");
    };

    print_opts(Before);
    opt1.swap(opt2);
    print_opts(After);

    // 在仅一者含值时交换
    opt1 = "Lorem ipsum dolor sit amet, consectetur tincidunt.";
    opt2.reset();

    print_opts(Before);
    opt1.swap(opt2);
    print_opts(After);
}
|output=
交换前:
opt1 含有 'First example text'
opt2 含有 '2nd text'
---SWAP---
交换后:
opt1 含有 '2nd text'
opt2 含有 'First example text'

交换前:
opt1 含有 'Lorem ipsum dolor sit amet, consectetur tincidunt.'
opt2 含有 ''
---SWAP---
交换后:
opt1 含有 ''
opt2 含有 'Lorem ipsum dolor sit amet, consectetur tincidunt.'
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|paper=P2231R1|std=C++20|before={{tt|swap}} 不是 {{c/core|constexpr}} 而要求的操作在 C++20 中能为 {{c/core|constexpr}}|after=使之为 {{c/core|constexpr}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/optional/dsc swap2}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}