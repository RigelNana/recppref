{{cpp/utility/optional/title|value_or}}
{{cpp/utility/optional/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++17|1=
template&lt; class U = std::remove_cv_t&lt;T&gt; &gt; 
constexpr T value_or( U&amp;&amp; default_value ) const&amp;;
}}
{{dcl|num=2|since=c++17|1=
template&lt; class U = std::remove_cv_t&lt;T&gt; &gt; 
constexpr T value_or( U&amp;&amp; default_value ) &amp;&amp;;
}}
{{dcl end}}

如果 {{c|*this}} 含值，那么返回包含的值，否则返回 {{c|default_value}}。

@1@ 如果 {{c|std::is_copy_constructible_v&lt;T&gt; &amp;&amp; std::is_convertible_v&lt;U&amp;&amp;, T&gt;}} 是 {{c|false}}，那么程序非良构。

@2@ 如果 {{c|std::is_move_constructible_v&lt;T&gt; &amp;&amp; std::is_convertible_v&lt;U&amp;&amp;, T&gt;}} 是 {{c|false}}，那么程序非良构。

===参数===
{{par begin}}
{{par|default_value|{{c|*this}} 不含值时返回的值}}
{{par end}}

===返回值===
@1@ {{c|has_value() ? **this : static_cast&lt;T&gt;(std::forward&lt;U&gt;(default_value));}}

@2@ {{c|has_value() ? std::move(**this) : static_cast&lt;T&gt;(std::forward&lt;U&gt;(default_value))}}

===示例===
{{example
|code=
#include &lt;cstdlib&gt;
#include &lt;iostream&gt;
#include &lt;optional&gt;

std::optional&lt;const char*&gt; maybe_getenv(const char* n)
{
    if (const char* x = std::getenv(n))
        return x;
    else
        return {};
}

int main()
{
    std::cout &lt;&lt; maybe_getenv("SHELL").value_or("(none)") &lt;&lt; '\n';
    std::cout &lt;&lt; maybe_getenv("MYPWD").value_or("(none)") &lt;&lt; '\n';
}
|p=true
|output=
/usr/bin/zsh
(none)
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3886|std=C++17|before={{tt|U}} 没有默认模板实参|after=已指定}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/optional/dsc value}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}