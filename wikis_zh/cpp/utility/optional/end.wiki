{{cpp/utility/optional/title|end}}
{{cpp/utility/optional/navbar}}
{{dcl begin}}
{{dcl|since=c++26|
constexpr iterator end() noexcept;
}}
{{dcl|since=c++26|
constexpr const_iterator end() const noexcept;
}}
{{dcl end}}

返回尾后迭代器。等价于 {{c|return begin() + has_value()}}。

{{image|range-begin-end.svg}}

===返回值===
尾后迭代器

===复杂度===
常数。

===注解===
{{feature test macro|std=C++26|value=202406L|__cpp_lib_optional_range_support|{{lc|std::optional}} 的范围支持}}

===示例===
{{example|code=
#include &lt;optional&gt;
#include &lt;print&gt;

int main()
{
    constexpr std::optional&lt;int&gt; none{std::nullopt}; // optional @1
    constexpr std::optional&lt;int&gt; some{42};           // optional @2

    static_assert(none.begin() == none.end());
    static_assert(some.begin() != some.end());

    // 支持范围 for 循环
    for (int i : none)
        std::println("optional @1 的值为{}", i);

    for (int i : some)
        std::println("optional @2 的值为 {}", i);
}
|output=
optional @2 的值为 42
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/optional/dsc begin}}
{{dsc end}}

{{langlinks|en|es|ja}}