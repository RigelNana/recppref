{{cpp/title|make_optional}}
{{cpp/utility/optional/navbar}}
{{dcl begin}}
{{dcl header|optional}}
{{dcl|num=1|since=c++17|1=
template&lt; class T &gt;
constexpr std::optional&lt;std::decay_t&lt;T&gt;&gt; make_optional( T&amp;&amp; value );
}}
{{dcla|num=2|since=c++17|1=
template&lt; class T, class... Args &gt;
constexpr std::optional&lt;T&gt; make_optional( Args&amp;&amp;... args );
}}
{{dcl|num=3|since=c++17|1=
template&lt; class T, class U, class... Args &gt;
constexpr std::optional&lt;T&gt; make_optional( std::initializer_list&lt;U&gt; il,
                                          Args&amp;&amp;... args );
}}
{{dcl end}}

@1@ 从 {{c|value}} 创建 {{tt|optional}} 对象。相当于调用 {{c|std::optional&lt;std::decay_t&lt;T&gt;&gt;(std::forward&lt;T&gt;(value))}}。
@2@ 从 {{c|args...}} 创建原位构造的 {{tt|optional}} 对象。等价于 {{c|return std::optional&lt;T&gt;(std::in_place, std::forward&lt;Args&gt;(args)...);}}。&lt;br&gt;{{cpp/enable_if| {{c|std::is_constructible_v&lt;T, Args...&gt;}} 为 {{c|true}} }}。
@3@ 从 {{c|il}} 和 {{c|args...}} 创建原位构造的 {{tt|optional}} 对象。等价于 {{c|return std::optional&lt;T&gt;(std::in_place, il, std::forward&lt;Args&gt;(args)...);}}。&lt;br&gt;{{cpp/enable_if| {{c|std::is_constructible_v&lt;T, std::initializer_list&lt;U&gt;&amp;, Args...&gt;}} 为 {{c|true}} }}。

===参数===
{{par begin}}
{{par|value|构造 {{tt|optional}} 对象所用的值}}
{{par|il, args|传递给 {{tt|T}} 构造函数的实参}}
{{par end}}

===返回值===
构造的 {{tt|optional}} 对象。

===异常===
抛出 {{tt|T}} 的构造函数所抛的任何异常。

===注解===
因为受保证的复制消除，对于重载 {{vl|2,3}} {{tt|T}} 不需要可移动。

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;optional&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

int main()
{
    auto op1 = std::make_optional&lt;std::vector&lt;char&gt;&gt;({'a','b','c'});
    std::cout &lt;&lt; "op1: ";
    for (char c : op1.value())
        std::cout &lt;&lt; c &lt;&lt; ',';
    auto op2 = std::make_optional&lt;std::vector&lt;int&gt;&gt;(5, 2);
    std::cout &lt;&lt; "\nop2: ";
    for (int i : *op2)
        std::cout &lt;&lt; i &lt;&lt; ',';
    std::string str{"hello world"};
    auto op3 = std::make_optional&lt;std::string&gt;(std::move(str));
    std::cout &lt;&lt; "\nop3: " &lt;&lt; quoted(op3.value_or("empty value")) &lt;&lt; '\n';
    std::cout &lt;&lt; "str: " &lt;&lt; std::quoted(str) &lt;&lt; '\n';
}
|p=true
|output=
op1: a,b,c,
op2: 2,2,2,2,2,
op3: "hello world"
str: ""
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/optional/dsc constructor}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}