{{cpp/title|piecewise_construct|piecewise_construct_t}}
{{cpp/utility/pair/navbar}}
{{dcl begin}}
{{dcl header|utility}}
{{dcl|num=1|since=c++11|1=
struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
}}
{{dcl|num=2|since=c++11|notes={{mark|C++17 起 inline}}|
constexpr std::piecewise_construct_t piecewise_construct{};
}}
{{dcl end}}

@1@ {{tt|std::piecewise_construct_t}} 是一个空类标签类型，用于区分接受两个元组实参的不同函数。
@2@ 常量 {{tt|std::piecewise_construct}} 是 {{v|1}} 的实例。

不使用 {{tt|std::piecewise_construct_t}} 的重载假定每个元组实参都成为对偶的元素。使用 {{tt|std::piecewise_construct_t}} 的重载假定每个元组实参被用于逐段构造指定类型的新对象，它们将成为对偶的元素。

===标准库===
下列标准库类型和函数将它用作区分标签：
{{dsc begin}}
{{dsc inc|cpp/utility/dsc pair}}
{{dsc inc|cpp/memory/dsc uses_allocator_construction_args}}
{{dsc inc|cpp/ranges/dsc repeat_view}}
{{dsc end}}

===示例===
{{include|cpp/utility/example_piecewise_construct}}

===参阅===
{{dsc begin}}
{{dsc mem ctor|cpp/utility/pair/pair|构造新的 pair}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}