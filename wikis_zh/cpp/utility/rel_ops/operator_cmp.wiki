{{cpp/utility/rel_ops/title|1=operator!=,&gt;,&lt;=,&gt;=}}
{{cpp/utility/navbar}}
{{dcl begin}}
{{dcl header|utility}}
{{dcla|num=1|deprecated=c++20|1=
template&lt; class T &gt;
bool operator!=( const T&amp; lhs, const T&amp; rhs );
}}
{{dcla|num=2|deprecated=c++20|1=
template&lt; class T &gt;
bool operator&gt;( const T&amp; lhs, const T&amp; rhs );
}}

{{dcla|num=3|deprecated=c++20|1=
template&lt; class T &gt;
bool operator&lt;=( const T&amp; lhs, const T&amp; rhs );
}}
{{dcla|num=4|deprecated=c++20|1=
template&lt; class T &gt;
bool operator&gt;=( const T&amp; lhs, const T&amp; rhs );
}}
{{dcl end}}

给定用户为 {{tt|T}} 类型的对象定义的 {{c|1=operator==}} 和 {{c|1=operator&lt;}}，实现其他比较运算符的通常语义。

@1@ 用 {{c|1=operator==}} 实现 {{c|1=operator!=}}。
@2@ 用 {{c|1=operator&lt;}} 实现 {{c|1=operator&gt;}}。
@3@ 用 {{c|1=operator&lt;}} 实现 {{c|1=operator&lt;=}}。
@4@ 用 {{c|1=operator&lt;}} 实现 {{c|1=operator&gt;=}}。

===参数===
{{par begin}}
{{par|lhs|左侧实参}}
{{par|rhs|右侧实参}}
{{par end}}

===返回值===
@1@ 若 {{c|lhs}} ''不等于'' {{c|rhs}} 则返回 {{c|true}}。
@2@ 若 {{c|lhs}} ''大于'' {{c|rhs}} 则返回 {{c|true}}。
@3@ 若 {{c|lhs}} ''小于或等于'' {{c|rhs}} 则返回 {{c|true}}。
@4@ 若 {{c|lhs}} ''大于或等于'' {{c|rhs}} 则返回 {{c|true}}。

===可能的实现===
{{eq impl
|title1=(1) {{tt|1=operator!=}}|ver1=1|1=
namespace rel_ops
{
    template&lt;class T&gt;
    bool operator!=(const T&amp; lhs, const T&amp; rhs)
    {
        return !(lhs == rhs);
    }
}
|title2=(2) {{tt|1=operator&gt;}}|ver2=2|2=
namespace rel_ops
{
    template&lt;class T&gt;
    bool operator&gt;(const T&amp; lhs, const T&amp; rhs)
    {
        return rhs &lt; lhs;
    }
}
|title3=(3) {{tt|1=operator&lt;=}}|ver3=3|3=
namespace rel_ops
{
    template&lt;class T&gt;
    bool operator&lt;=(const T&amp; lhs, const T&amp; rhs)
    {
        return !(rhs &lt; lhs);
    }
}
|title4=(4) {{tt|1=operator&gt;=}}|ver4=4|4=
namespace rel_ops
{
    template&lt;class T&gt;
    bool operator&gt;=(const T&amp; lhs, const T&amp; rhs)
    {
        return !(lhs &lt; rhs);
    }
}
}}

===注解===
[https://www.boost.org/doc/libs/release/libs/utility/operators.htm Boost.operators] 提供更为通用的 {{tt|std::rel_ops}} 替代品。

C++20 起，{{tt|std::rel_ops}} 由于让位给 {{ltt|cpp/language/default_comparisons|2=operator&lt;=&gt;}} 而被弃用。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;utility&gt;

struct Foo
{
    int n;
};

bool operator==(const Foo&amp; lhs, const Foo&amp; rhs)
{
    return lhs.n == rhs.n;
}

bool operator&lt;(const Foo&amp; lhs, const Foo&amp; rhs)
{
    return lhs.n &lt; rhs.n;
}

int main()
{
    Foo f1 = {1};
    Foo f2 = {2};
    using namespace std::rel_ops;

    std::cout &lt;&lt; std::boolalpha
              &lt;&lt; "{1} != {2} : " &lt;&lt; (f1 != f2) &lt;&lt; '\n'
              &lt;&lt; "{1} &gt;  {2} : " &lt;&lt; (f1 &gt;  f2) &lt;&lt; '\n'
              &lt;&lt; "{1} &lt;= {2} : " &lt;&lt; (f1 &lt;= f2) &lt;&lt; '\n'
              &lt;&lt; "{1} &gt;= {2} : " &lt;&lt; (f1 &gt;= f2) &lt;&lt; '\n';
}
|output=
{1} != {2} : true
{1} &gt;  {2} : false
{1} &lt;= {2} : true
{1} &gt;= {2} : false
}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}