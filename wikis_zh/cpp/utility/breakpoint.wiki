{{cpp/title|breakpoint}}
{{cpp/error/navbar}}
{{ddcl|header=debugging|since=c++26|
void breakpoint() noexcept;
}}

无条件断点：尝试暂时停止程序的执行，并将控制权转移到调试器，而无论是否可以检测到调试器的存在。该函数的行为由实现定义。

===注解===
该功能的目的是在不导致程序退出的情况下，允许对调试器无法提供的断点进行运行时控制。例如，在检测到不常见的非关键条件时断点，允许对复杂的运行时敏感条件进行编程控制，在用户输入时中断以检查交互式程序中的上下文，而无需切换到调试器应用程序等。

该函数将许多类似的现有功能标准化：LLVM 的 [https://clang.llvm.org/docs/LanguageExtensions.html#builtin-debugtrap {{tt|__builtin_debugtrap}}]，Win32 API 的 [https://learn.microsoft.com/en-us/cpp/intrinsics/debugbreak {{tt|__debugbreak}}]，[https://www.boost.org/doc/libs/release/libs/test/doc/html/index.html boost.test] 的 [https://github.com/boostorg/test/blob/develop/include/boost/test/impl/debug.ipp#L716 debugger_break]，{{c|assert(false)}}，针对 x86 目标的 {{c|_asm { int 3 }&lt;!----&gt;}}（MSVC）和 {{c|asm("int3")}}（GCC/clang），[[#外部链接|等等]]。

{{ftm begin}}
{{ftm|__cpp_lib_debugging|调试支持库|value=202311L|std=C++26|rowspan=2}}
{{ftm|-|可替换的 {{tt|std::is_debugger_present}}|value=202403L|std=C++26}}
{{ftm end}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc is_debugger_present}}
{{dsc inc|cpp/utility/dsc breakpoint_if_debugging}}
{{dsc end}}

===外部链接===
{{elink begin}}
{{elink|armKEIL: [https://developer.arm.com/documentation/dui0375/g/Compiler-specific-Features/--breakpoint-intrinsic {{tt|__breakpoint}} intrinsic]}}
{{elink|Portable Snippets: [https://github.com/nemequ/portable-snippets/tree/master/debug-trap Debugging assertions and traps]}}
{{elink|EASTL: [https://github.com/electronicarts/EASTL/blob/3.18.00/include/EASTL/internal/config.h#L613 {{tt|EASTL_DEBUG_BREAK}}]}}
{{elink|Catch2: [https://github.com/catchorg/Catch2/blob/v3.0.0-preview4/src/catch2/internal/catch_debugger.hpp {{tt|CATCH_TRAP}} and {{tt|CATCH_BREAK_INTO_DEBUGGER}}]}}
{{elink|Unreal Engine: [https://docs.unrealengine.com/5.0/en-US/API/Runtime/Core/GenericPlatform/FGenericPlatformMisc/DebugBreak/ {{tt|DebugBreak}}]}}
{{elink|JUCE: [https://github.com/juce-framework/JUCE/blob/6.1.5/modules/juce_core/system/juce_PlatformDefs.h#L63 {{tt|JUCE_BREAK_IN_DEBUGGER}}]}}
{{elink|Dear ImGui: [https://github.com/ocornut/imgui/blob/v1.86/imgui_internal.h#L257 {{tt|IM_DEBUG_BREAK}}]}}
{{elink|AWS C Common: [https://github.com/awslabs/aws-c-common/blob/v0.6.19/include/aws/common/system_info.h#L55 {{tt|aws_debug_break}}]}}
{{elink end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}