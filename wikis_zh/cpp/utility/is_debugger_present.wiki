{{cpp/title|is_debugger_present}}
{{cpp/error/navbar}}
{{ddcl|header=debugging|since=c++26|
bool is_debugger_present() noexcept;
}}

尝试确定程序运行时是否有调试器的存在。

此函数[[cpp/language/replacement function|可替换]]。

===返回值===
默认版本返回一个由实现定义的值，它通常表示程序是否正在调试器的控制下运行。

===注解===
该函数用意在于允许打印额外的输出以协助诊断问题、执行额外测试代码、显示有助于调试的额外用户界面，等等。

{{ftm begin}}
{{ftm|__cpp_lib_debugging|调试支持库|value=202311L|std=C++26|rowspan=2}}
{{ftm|-|可替换的 {{tt|std::is_debugger_present}}|value=202403L|std=C++26}}
{{ftm end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc breakpoint}}
{{dsc inc|cpp/utility/dsc breakpoint_if_debugging}}
{{dsc end}}

===外部链接===
{{tt|is_debugger_present}} 标准化了许多类似的现存设施，例如：
{{elink begin}}
{{elink|[https://github.com/boostorg/test/blob/develop/include/boost/test/impl/debug.ipp#L647 [https://www.boost.org/doc/libs/release/libs/test/doc/html/index.html boost.test] 的 {{tt|under_debugger}}]}}
{{elink|[https://learn.microsoft.com/en-us/windows/win32/api/debugapi/nf-debugapi-isdebuggerpresent Windows API 的 {{tt|IsDebuggerPresent()}}]}}
{{elink|[https://github.com/catchorg/Catch2/blob/devel/src/catch2/internal/catch_debugger.cpp [https://github.com/catchorg/Catch2 Catch2] 的 {{tt|isDebuggerActive}}]}}
{{elink|[https://docs.unrealengine.com/5.0/en-US/API/Runtime/Core/GenericPlatform/FGenericPlatformMisc/IsDebuggerPresent/ [https://www.unrealengine.com/ Unreal Engine] 的 {{tt|IsDebuggerPresent}}]}}
{{elink end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}