{{cpp/utility/bitset/title|operator[]}}
{{cpp/utility/bitset/navbar}}
{{dcl begin}}
{{dcla|num=1|constexpr=c++11|
bool operator[]( std::size_t pos ) const;
}}
{{dcla|num=2|constexpr=c++23|
reference operator[]( std::size_t pos );
}}
{{dcl end}}

访问位于位置 {{c|pos}} 的位。
@1@ 返回位的值。
@2@ 返回允许修改位的值的 {{lc|std::bitset::reference}} 对象。

{{p}}
{{cpp/hardened ub if|since=c++26| {{c|pos &lt; size()}} 是 {{c|false}}}}

===参数===
{{par begin}}
{{par|pos|要返回的位的位置}}
{{par end}}

===返回值===
@1@ 所请求位的值。

@2@ {{lc|std::bitset::reference}} 类型的对象，允许对所请求的位写入。

===异常===
不会抛出异常。

===示例===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;cstddef&gt;
#include &lt;iostream&gt;

int main()
{
    std::bitset&lt;8&gt; b1{0b00101010}; // 42 的二进制字面量
    
    for (std::size_t i = 0; i &lt; b1.size(); ++i)
        std::cout &lt;&lt; "b1[" &lt;&lt; i &lt;&lt; "]：" &lt;&lt; b1[i] &lt;&lt; '\n';
    b1[0] = true; // 通过 bitset::reference 修改第一个位
    
    std::cout &lt;&lt; "设置位 0 后，b1 持有 " &lt;&lt; b1 &lt;&lt; '\n';
}
|output=
b1[0]：0
b1[1]：1
b1[2]：0
b1[3]：1
b1[4]：0
b1[5]：1
b1[6]：0
b1[7]：0
设置位 0 后，b1 持有 00101011
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=11|std=C++98|before=1. C++ 标准里缺失了此函数的描述&lt;br&gt;2. 只有非 const 重载|after=1. 补充相应描述&lt;br&gt;2. 添加 const 重载}}
{{dr list item|wg=lwg|dr=907|std=C++98|before=读取位于位置 {{c|pos}} 的位的行为与 {{rlpf|test|args=pos}} 等价，但 {{tt|test()}} 可以抛出异常|after=避免提到 {{tt|test()}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc test}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}