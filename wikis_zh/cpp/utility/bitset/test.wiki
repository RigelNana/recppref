{{cpp/utility/bitset/title|test}}
{{cpp/utility/bitset/navbar}}
{{ddcla|constexpr=c++23|
bool test( std::size_t pos ) const;
}}

返回位于位置 {{c|pos}} 的位（从 0 计数）的值。

与 {{lc|operator[]}} 不同，它会进行边界检查。

===参数===
{{par begin}}
{{par|pos|要返回的位的位置（从 0 计数）}}
{{par end}}

===返回值===
在位于位置 {{c|pos}} 的位被设置时返回 {{c|true}}，否则返回 {{c|false}}。

===异常===
在 {{c|pos}} 未对应有效位位置时抛出 {{lc|std::out_of_range}}。

===示例===
{{example
|code=
#include &lt;bit&gt;
#include &lt;bitset&gt;
#include &lt;cassert&gt;
#include &lt;iostream&gt;
#include &lt;stdexcept&gt;

int main()
{
    std::bitset&lt;10&gt; b1("1111010000");
    
    std::size_t idx = 0;
    while (idx &lt; b1.size() &amp;&amp; !b1.test(idx))
        ++idx;
    
    assert(static_cast&lt;int&gt;(idx) == std::countr_zero(b1.to_ulong()));
    
    if (idx &lt; b1.size())
        std::cout &lt;&lt; "第一个设置的位的索引是 " &lt;&lt; idx &lt;&lt; '\n';
    else
        std::cout &lt;&lt; "没有设置任何位\n";
    
    try
    {
        std::bitset&lt;0B10'1001'1010&gt; bad;
        if (bad.test(bad.size()))
            std::cout &lt;&lt; "不符合预期!\n";
    }
    catch (std::out_of_range const&amp; ex)
    {
        std::cout &lt;&lt; "异常: " &lt;&lt; ex.what() &lt;&lt; '\n';
    }
}
|p=true
|output=
第一个设置的位的索引是 4
异常: bitset::test: __position (which is 666) &gt;= _Nb (which is 666)
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2250|std=C++98|before={{c|pos}} 未对应有效位位置时的行为未定义|after=此时始终会抛出异常}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc operator at}}
{{dsc inc|cpp/numeric/dsc popcount}}
{{dsc inc|cpp/numeric/dsc has_single_bit}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}