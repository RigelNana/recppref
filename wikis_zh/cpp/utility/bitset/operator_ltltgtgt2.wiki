{{title|1=operator&lt;&lt;,&gt;&gt;&lt;small&gt;(std::bitset)&lt;/small&gt;}}
{{cpp/utility/bitset/navbar}}
{{dcl begin}}
{{dcl header|bitset}}
{{dcl|num=1|1=
template&lt; class CharT, class Traits, std::size_t N &gt;
std::basic_ostream&lt;CharT, Traits&gt;&amp;
    operator&lt;&lt;( std::basic_ostream&lt;CharT, Traits&gt;&amp; os, const std::bitset&lt;N&gt;&amp; x );
}}
{{dcl|num=2|1=
template&lt; class CharT, class Traits, std::size_t N &gt;
std::basic_istream&lt;CharT, Traits&gt;&amp;
    operator&gt;&gt;( std::basic_istream&lt;CharT, Traits&gt;&amp; is, std::bitset&lt;N&gt;&amp; x );
}}
{{dcl end}}

从字符流插入或提取 {{tt|bitset}}。

@1@ 将 {{tt|bitset}} {{c|x}} 写入字符流 {{c|os}}，如同首先用 {{lc|to_string()}} 将它转换到 {{c/core|std::basic_string&lt;CharT, Traits&gt;}}，再用 {{ltt|cpp/string/basic_string/operator ltltgtgt|operator&lt;&lt;}}（它是字符串的{{named req|FormattedOutputFunction}}）将它写入 {{c|os}}。&lt;br&gt;&lt;!--
--&gt;用于表示一和零的字符通过以 {{c|'1'}} 和 {{c|'0'}} 为实参调用 {{c|std::use_facet&lt;std::ctype&lt;CharT&gt;(os.getloc()).widen()}} 从当前浸染的本地环境获得。

@2@ 表现为{{named req|FormattedInputFunction}}。构造并检查哨兵对象，这可能会跳过前导空白符，之后从 {{c|is}} 提取最多 {{c|N}} 个字符，并将字符存储到 {{tt|bitset}} {{c|x}}。&lt;br&gt;&lt;!--

--&gt;提取字符直到以下任一情况发生：
* 已读取 {{c|N}} 个字符
* {{c|is}} 中遇到了文件尾
* 下个字符不是 {{c|is.widen('0')}} 或 {{c|is.widen('1')}}
如果 {{c|N &gt; 0}} 且没有提取任何字符，那么就会调用 {{c|is.setstate(ios_base::failbit)}}。

===参数===
{{par begin}}
{{par|os|要写入的字符流}}
{{par|is|要读取的字符流}}
{{par|x|要读取或写入的 {{tt|bitset}}}}
{{par end}}

===返回值===
@1@ {{c|os}}
@2@ {{c|is}}

===示例===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;

int main()
{
    std::string bit_string = "001101";
    std::istringstream bit_stream(bit_string);
    
    std::bitset&lt;3&gt; b1;
    bit_stream &gt;&gt; b1; // 读取 "001"，流仍保有 "101"
    std::cout &lt;&lt; b1 &lt;&lt; '\n';
    
    std::bitset&lt;8&gt; b2;
    bit_stream &gt;&gt; b2; // 读取 "101"，产出 8 位集为 "00000101"
    std::cout &lt;&lt; b2 &lt;&lt; '\n';
}
|output=
001
00000101
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=303|std=C++98|before=从 {{c|is}} 提取到的是单字节字符，但 {{tt|CharT}} 不一定是单字节的|after=提取 {{tt|CharT}}，并与加宽的 {{c|'0'}} 和 {{c|'1'}} 进行比较}}
{{dr list item|wg=lwg|dr=396|std=C++98|before=通过 {{c/core|operator&lt;&lt;}} 写入的内容与本地环境无关|after=写入加宽的 {{c|'0'}} 和 {{c|'1'}}}}
{{dr list item|wg=lwg|dr=3199|std=C++98|before=提取 {{tt|std::bitset&lt;0&gt;}} 时始终会设置 {{tt|failbit}}|after=此时不会设置 {{tt|failbit}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc operator_ltltgtgt}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}