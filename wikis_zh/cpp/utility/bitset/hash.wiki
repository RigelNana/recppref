{{cpp/title|hash{{small|&lt;std::bitset&gt;}}}}
{{cpp/utility/bitset/navbar}}
{{ddcl|header=bitset|since=c++11|1=
template&lt; std::size_t N &gt;
struct hash&lt;std::bitset&lt;N&gt;&gt;;
}}

{{lc|std::hash}} 对 {{c|std::bitset&lt;N&gt;}} 的模板特化允许用户获得 {{c|std::bitset&lt;N&gt;}} 类型的对象的散列。

===示例===
{{example
|下列代码展示用于数个 {{tt|bitset}} 上的散列函数的一种可能输出：
|code=
#include &lt;bitset&gt;
#include &lt;functional&gt;
#include &lt;iostream&gt;
 
int main()
{
    std::bitset&lt;4&gt; b1{0}, b2{42};
    std::bitset&lt;8&gt; b3{0}, b4{42};

    std::hash&lt;std::bitset&lt;4&gt;&gt; hash_fn4;
    std::hash&lt;std::bitset&lt;8&gt;&gt; hash_fn8;
    using bin64 = std::bitset&lt;64&gt;;

    std::cout &lt;&lt; std::hex
              &lt;&lt; bin64{hash_fn4(b1)} &lt;&lt; " = " &lt;&lt; hash_fn4(b1) &lt;&lt; '\n'
              &lt;&lt; bin64{hash_fn4(b2)} &lt;&lt; " = " &lt;&lt; hash_fn4(b2) &lt;&lt; '\n'
              &lt;&lt; bin64{hash_fn8(b3)} &lt;&lt; " = " &lt;&lt; hash_fn8(b3) &lt;&lt; '\n'
              &lt;&lt; bin64{hash_fn8(b4)} &lt;&lt; " = " &lt;&lt; hash_fn8(b4) &lt;&lt; '\n';
}
|p=true
|output=
0110110100001001111011100010011011010101100001100011011000011001 = 6d09ee26d5863619
1111111101011100010110100000111000111110100000111011100011110000 = ff5c5a0e3e83b8f0
0110110100001001111011100010011011010101100001100011011000011001 = 6d09ee26d5863619
0101110000011100011110011010111011100110010000110100110001001101 = 5c1c79aee6434c4d
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}