{{cpp/utility/bitset/title|to_ullong}}
{{cpp/utility/bitset/navbar}}
{{ddcl|since=c++11|notes={{mark constexpr since c++23}}|
unsigned long long to_ullong() const
}}

转换 {{tt|bitset}} 的内容为 {{c|unsigned long long}} 整数。

{{tt|bitset}} 的首位对应数值的最低有效位，而尾位对应最高有效位。

===参数===
（无）

===返回值===
转换出的整数

===异常===
若值不能以 {{c|unsigned long long}} 表示则为 {{lc|std::overflow_error}}。

===示例===
{{example
|code=
#include &lt;bitset&gt;
#include &lt;iostream&gt;
#include &lt;limits&gt;

int main()
{
    std::bitset&lt;std::numeric_limits&lt;unsigned long long&gt;::digits&gt; b
    (
        0x123456789abcdef0LL
    );

    std::cout &lt;&lt; b &lt;&lt; "  " &lt;&lt; std::hex &lt;&lt; b.to_ullong() &lt;&lt; '\n';
    b.flip();
    std::cout &lt;&lt; b &lt;&lt; "  " &lt;&lt; b.to_ullong() &lt;&lt; '\n';

    std::bitset&lt;std::numeric_limits&lt;unsigned long long&gt;::digits + 1&gt; q{0};
    try
    {
        (~q).to_ullong(); // 抛出异常
    }
    catch (const std::overflow_error&amp; ex)
    {
        std::cout &lt;&lt; "ex: " &lt;&lt; ex.what() &lt;&lt; '\n';
    }
}
|output=
0001001000110100010101100111100010011010101111001101111011110000  123456789abcdef0
1110110111001011101010011000011101100101010000110010000100001111  edcba9876543210f
ex: _Base_bitset::_M_do_to_ullong
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/bitset/dsc to_string}}
{{dsc inc|cpp/utility/bitset/dsc to_ulong}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}