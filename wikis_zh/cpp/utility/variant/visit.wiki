{{cpp/utility/variant/title|visit}}
{{cpp/utility/variant/navbar}}
{{dcl begin}}
{{dcl|since=c++26|num=1|
template&lt; class Self, class Visitor &gt;
constexpr decltype(auto) visit( this Self&amp;&amp; self, Visitor&amp;&amp; vis );
}}
{{dcl|since=c++26|num=2|
template&lt; class R, class Self, class Visitor &gt;
constexpr R visit( this Self&amp;&amp; self, Visitor&amp;&amp; vis );
}}
{{dcl end}}

向 {{c|self}} 保有的变体应用探访器 {{c|vis}}（可以变体中类型的任何组合的调用的{{named req|Callable}}）。

给定类型 {{c|V}} 为 {{c|decltype(std::forward_like&lt;Self&gt;(std::declval&lt;variant&gt;()))}}，等价的调用是：
@1@ {{c|return std::visit(std::forward&lt;Visitor&gt;(vis), (V) self);}}。
@2@ {{c|return std::visit&lt;R&gt;(std::forward&lt;Visitor&gt;(vis), (V) self);}}。

===参数===
{{par begin}}
{{par|vis|接受变体中每种可能可选项的{{named req|Callable}}}}
{{par|self|要传递给探访器的变体}}
{{par end}}

===返回值===
@1@ {{c|std::visit}} 调用的结果。
@2@ 当 {{tt|R}} 为（可能有 cv 限定的）{{c/core|void}} 时无返回值；否则为调用 {{c|std::visit&lt;R&gt;}} 的结果。

===异常===
仅在调用 {{c|std::visit}} 有抛出时抛出。

===注解===
{{feature test macro|__cpp_lib_variant|std=C++26|value=202306L|成员 {{tt|visit}}}}

===示例===
{{example
|code=
#include &lt;print&gt;
#include &lt;string&gt;
#include &lt;string_view&gt;
#include &lt;variant&gt;
 
struct Base {};
struct Derived : Base {};

// 探访器的辅助类型
template&lt;class... Ts&gt;
struct overloads : Ts... { using Ts::operator()...; };

// 要探访的变体
using var_t = std::variant&lt;int, std::string, Derived&gt;;

int main()
{
    const auto visitor = overloads
    {
        [](int i){ std::print("int = {}\n", i); },
        [](std::string_view s){ std::println("string = “{}”", s); },
        [](const Base&amp;){ std::println("base"); }
    };

    const var_t var1 = 42, var2 = "abc", var3 = Derived();

#if (__cpp_lib_variant &gt;= 202306L)
    var1.visit(visitor);
    var2.visit(visitor);
    var3.visit(visitor);
#else
    std::visit(visitor, var1);
    std::visit(visitor, var2);
    std::visit(visitor, var3);
#endif
}
|output=
int = 42
string = “abc”
base
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/variant/dsc visit2}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}