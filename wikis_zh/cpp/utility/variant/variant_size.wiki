{{cpp/title|variant_size|variant_size_v}}
{{cpp/utility/variant/navbar}}
{{dcl begin}}
{{dcl header|variant}}
{{dcl|since=c++17|num=1|
template&lt; class T &gt;
struct variant_size; /* 无定义 */
}}
{{dcl|since=c++17|num=2|
template&lt; class... Types &gt;
struct variant_size&lt;std::variant&lt;Types...&gt;&gt;
    : std::integral_constant&lt;std::size_t, sizeof...(Types)&gt; {};
}}
{{dcl|since=c++17|num=3|
template&lt; class T &gt;
class variant_size&lt;const T&gt;;
}}
{{dcl|since=c++17|num=4|deprecated=c++20|
template&lt; class T &gt;
class variant_size&lt;volatile T&gt;;
}}
{{dcl|since=c++17|num=5|deprecated=c++20|
template&lt; class T &gt;
class variant_size&lt;const volatile T&gt;;
}}
{{dcl end}}

提供对可有 cv 限定的变体中的可选项数量的访问，作为编译时常量表达式。 

正式地，
@2@ 满足基特征为 {{c/core|std::integral_constant&lt;std::size_t, sizeof...(Types)&gt;}} 的{{named req|UnaryTypeTrait}}的要求
@3@ 满足基特征为 {{c/core|std::integral_constant&lt;std::size_t, variant_size&lt;T&gt;&gt;}} 的{{named req|UnaryTypeTrait}}的要求

===辅助变量模板===
{{ddcl|since=c++17|1=
template &lt;class T&gt;
constexpr std::size_t variant_size_v = std::variant_size&lt;T&gt;::value;
}}

{{cpp/types/integral_constant/inherit2|{{tt|sizeof...(Types)}}|std::size_t}}

===注解===
{{tt|std::variant_size}} 的所有特化都满足以某个 {{tt|N}} 的 {{c/core|std::integral_constant&lt;std::size_t, N&gt;}} 为''基特征''的{{named req|UnaryTypeTrait}}。

===示例===
{{example
|code=
#include &lt;any&gt;
#include &lt;variant&gt;

static_assert(std::variant_size_v&lt;std::variant&lt;&gt;&gt; == 0);
static_assert(std::variant_size_v&lt;std::variant&lt;int&gt;&gt; == 1);
static_assert(std::variant_size_v&lt;std::variant&lt;int, int&gt;&gt; == 2);
static_assert(std::variant_size_v&lt;std::variant&lt;int, int, int&gt;&gt; == 3);
static_assert(std::variant_size_v&lt;std::variant&lt;int, float, double&gt;&gt; == 3);
static_assert(std::variant_size_v&lt;std::variant&lt;std::monostate, void&gt;&gt; == 2);
static_assert(std::variant_size_v&lt;std::variant&lt;const int, const float&gt;&gt; == 2);
static_assert(std::variant_size_v&lt;std::variant&lt;std::variant&lt;std::any&gt;&gt;&gt; == 1);

int main() {}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/variant/dsc variant_alternative}}
{{dsc inc|cpp/utility/tuple/dsc tuple_size}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}