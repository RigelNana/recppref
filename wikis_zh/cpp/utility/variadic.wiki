{{title|可变参数函数}}
{{cpp/utility/variadic/navbar}}

可变参数函数是接收[[cpp/language/variadic_arguments|可变数量实参]]的函数（例如 {{lc|std::printf}}）。

为声明可变参数函数，省略号要出现在形参列表后，例如 {{c|int printf(const char* format, ...);}}，可以前附可选的逗号。语法上的额外细节、自动实参转换及替代方案见[[cpp/language/variadic_arguments|变长实参]]。

为从函数体内访问可变参数，标准库提供下列库设施：

{{dsc begin}}
{{dsc header|cstdarg}}
{{dsc inc|cpp/utility/variadic/dsc va_start}}
{{dsc inc|cpp/utility/variadic/dsc va_arg}}
{{dsc inc|cpp/utility/variadic/dsc va_copy}}
{{dsc inc|cpp/utility/variadic/dsc va_end}}
{{dsc inc|cpp/utility/variadic/dsc va_list}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;cstdarg&gt;
#include &lt;iostream&gt;

void simple_printf(const char* fmt...) // C 风格 "const char* fmt, ..." 亦合法
{
    va_list args;
    va_start(args, fmt);

    while (*fmt != '\0')
    {
        if (*fmt == 'd')
        {
            int i = va_arg(args, int);
            std::cout &lt;&lt; i &lt;&lt; '\n';
        }
        else if (*fmt == 'c')
        {
            // 注意自动转换到整数类型
            int c = va_arg(args, int);
            std::cout &lt;&lt; static_cast&lt;char&gt;(c) &lt;&lt; '\n';
        }
        else if (*fmt == 'f')
        {
            double d = va_arg(args, double);
            std::cout &lt;&lt; d &lt;&lt; '\n';
        }
        ++fmt;
    }

    va_end(args);
}

int main()
{
    simple_printf("dcff", 3, 'a', 1.999, 42.5); 
}
|output=
3
a
1.999
42.5
}}

===参阅===
{{dsc begin}}
{{dsc see c|c/variadic|可变参数函数|nomono=true}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}