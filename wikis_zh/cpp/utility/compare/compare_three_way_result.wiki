{{cpp/title|compare_three_way_result}}
{{cpp/utility/navbar}}
{{dcl begin}}
{{dcl header|compare}}
{{dcl|since=c++20|1=
template&lt; class T, class U = T &gt;
struct compare_three_way_result;
}}
{{dcl end}}

令 {{tt|t}} 与 {{tt|u}} 分别代表 {{c|const std::remove_reference_t&lt;T&gt;}} 与 {{c|const std::remove_reference_t&lt;U&gt;}} 类型的左值，若表达式 {{c|1=t &lt;=&gt; u}} 良构，则提供等于 {{c|1=decltype(t &lt;=&gt; u)}} 的成员 typedef {{tt|type}}，否则无成员 {{tt|type}}。

{{cpp/types/nospec}}

===成员类型===
{{dsc begin}}
{{dsc hitem|名字|定义}}
{{dsc|{{tt|type}}|{{c|1=operator&lt;=&gt;}} 在 {{tt|T}} 与 {{tt|U}} 的 const 限定左值上的结果类型}}
{{dsc end}}

===辅助类型===
{{ddcl|since=c++20|1=
template&lt; class T, class U = T &gt;
using compare_three_way_result_t = compare_three_way_result&lt;T, U&gt;::type;
}}

===可能的实现===
{{eq fun
|1=
// 由 Casey Carter 推荐
// 参阅：https://github.com/microsoft/STL/pull/385#discussion_r357894054
template&lt;class T, class U = T&gt;
using compare_three_way_result_t = decltype(
    std::declval&lt;const std::remove_reference_t&lt;T&gt;&amp;&gt;() &lt;=&gt;
    std::declval&lt;const std::remove_reference_t&lt;U&gt;&amp;&gt;()
);

template&lt;class T, class U = T&gt;
struct compare_three_way_result {};

template&lt;class T, class U&gt;
    requires requires { typename compare_three_way_result_t&lt;T, U&gt;; }
struct compare_three_way_result&lt;T, U&gt;
{
    using type = compare_three_way_result_t&lt;T, U&gt;;
};
}}

===示例===
{{example
|code=
#include &lt;compare&gt;
#include &lt;iostream&gt;
#include &lt;type_traits&gt;

template&lt;class Ord&gt;
void print_cmp_type()
{
    if constexpr (std::is_same_v&lt;Ord, std::strong_ordering&gt;)
        std::cout &lt;&lt; "强序\n";
    else if constexpr (std::is_same_v&lt;Ord, std::weak_ordering&gt;)
        std::cout &lt;&lt; "弱序\n";
    else if constexpr (std::is_same_v&lt;Ord, std::partial_ordering&gt;)
        std::cout &lt;&lt; "部分序\n";
    else
        std::cout &lt;&lt; "非法的比较结果类型\n";
}

int main()
{
    print_cmp_type&lt;std::compare_three_way_result_t&lt;int&gt;&gt;();
    print_cmp_type&lt;std::compare_three_way_result_t&lt;double&gt;&gt;();
}
|output=
强序
部分序
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/compare/dsc partial_ordering}}
{{dsc inc|cpp/utility/compare/dsc weak_ordering}}
{{dsc inc|cpp/utility/compare/dsc strong_ordering}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}