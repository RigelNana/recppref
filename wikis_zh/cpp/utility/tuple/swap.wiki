{{cpp/utility/tuple/title|swap}}
{{cpp/utility/tuple/navbar}}
{{dcl begin}}
{{dcl header|tuple}}
{{dcl|num=1|since=c++11|notes={{mark constexpr since c++20}}|
void swap( tuple&amp; other ) noexcept(/* 见下文 */);
}}
{{dcl|num=2|since=c++23|
constexpr void swap( const tuple&amp; other ) noexcept(/* 见下文 */) const;
}}
{{dcl end}}

对 {{c|*this}} 中的每个元素与 {{c|other}} 中的对应元素调用 {{tt|swap}}（可以是 {{lc|std::swap}}，或通过 [[cpp/language/adl|ADL]] 找到的）。

{{rrev multi
|rev1=
若任何选择的 {{tt|swap}} 函数调用非良构，或不交换两个 {{tt|tuple}} 的元素，则行为未定义。
|since2=c++23|rev2=
若任何选择的 {{tt|swap}} 函数调用不交换两个 {{tt|tuple}} 的元素，则行为未定义。

@1@ 若 {{c|(std::is_swappable_v&lt;Types&gt; &amp;&amp; ...)}} 非 {{c|true}} 则程序非良构。
@2@ 若 {{c|(std::is_swappable_v&lt;const Types&gt; &amp;&amp; ...)}} 非 {{c|true}} 则程序非良构。
}}

===参数===
{{par begin}}
{{par|other|要交换值的元组}}
{{par end}} 

===返回值===
（无）

===异常===
{{rrev multi|until1=c++17
|rev1=
{{noexcept|
    noexcept(swap(std::declval&lt;T0&amp;&gt;&gt;(), std::declval&lt;T0&amp;&gt;())) &amp;&amp;
    noexcept(swap(std::declval&lt;T1&amp;&gt;&gt;(), std::declval&lt;T1&amp;&gt;())) &amp;&amp;
    noexcept(swap(std::declval&lt;T2&amp;&gt;&gt;(), std::declval&lt;T2&amp;&gt;())) &amp;&amp;
    ...
}}
上述表达式中，以 C++17 {{lc|std::is_nothrow_swappable}} 特征所用的相同方式查找标识符 {{tt|swap}}。&lt;!-- LWG 2456 --&gt;
|rev2=
@1@ {{noexcept|(std::is_nothrow_swappable_v&lt;Types&gt; &amp;&amp; ...)}}
@2@ {{noexcept|(std::is_nothrow_swappable_v&lt;const Types&gt; &amp;&amp; ...)}}
}}

===示例===
{{example_std_tuple_swap}}

===缺陷报告===
{{dr list begin}}
{{dr list item|std=C++11|wg=lwg|dr=2456|before={{tt|noexcept}} 规定曾为非良构|after=使之有效}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/utility/tuple/dsc swap2}}
{{dsc inc | cpp/utility/pair/dsc swap}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}