{{cpp/utility/expected/title|operator-&gt;|operator*}}
{{cpp/utility/expected/navbar}}

{{dcl begin}}
{{dcl h|主模板}}
{{dcl|num=1|since=c++23|
constexpr const T* operator-&gt;() const noexcept;
}}
{{dcl|num=2|since=c++23|
constexpr T* operator-&gt;() noexcept;
}}
{{dcl|num=3|since=c++23|
constexpr const T&amp; operator*() const&amp; noexcept;
}}
{{dcl|num=4|since=c++23|
constexpr T&amp; operator*() &amp; noexcept;
}}
{{dcl|num=5|since=c++23|
constexpr const T&amp;&amp; operator*() const&amp;&amp; noexcept;
}}
{{dcl|num=6|since=c++23|
constexpr T&amp;&amp; operator*() &amp;&amp; noexcept;
}}
{{dcl h|{{c/core|void}} 部分特化}}
{{dcl|num=7|since=c++23|
constexpr void operator*() const noexcept;
}}
{{dcl end}}

访问 {{c|*this}} 含有的预期值。

@1,2@ 返回指向预期值的指针。

@3-6@ 返回到预期值的引用。

@7@ 没有返回值。

{{p}}
{{cpp/hardened ub if|since=c++26| {{lc|has_value()}} 是 {{c|false}}}}

===返回值===
@1,2@ {{box|{{c/core|std::addressof(}}{{rlpsi|/#val}}{{sep}}{{c/core|)}}}}

@3,4@ {{box|{{rlpsi|/#val}}}}

@5,6@ {{box|{{c/core|std::}}{{ltt|cpp/utility/move}}{{c/core|(}}{{rlpsi|/#val}}{{sep}}{{c/core|)}}}}

===注解===
这些运算符不会检查 {{tt|expected}} 是否表示预期值，用户可以使用 {{rlpf|operator bool|has_value}} 或 {{rlpf|operator bool}} 手动检查。或者，需要访问检查时也可以使用 {{rlpf|value}} 或 {{rlpf|value_or}}。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;expected&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

int main()
{
    using namespace std::string_literals;
    
    std::expected&lt;int, std::string&gt; ex1 = 6;
    assert(*ex1 == 6);
    
    *ex1 = 9;
    assert(*ex1 == 9);

    // *ex1 = "error"s; // 错误，ex1 包含 int 类型的预期值
    ex1 = std::unexpected("error"s);
    // *ex1 = 13; // UB, ex1 包含非预期值
    assert(ex1.value_or(42) == 42);
    
    std::expected&lt;std::string, bool&gt; ex2 = "Moon"s;
    std::cout &lt;&lt; "ex2：" &lt;&lt; std::quoted(*ex2) &lt;&lt; "，大小：" &lt;&lt; ex2-&gt;size() &lt;&lt; '\n';
    
    // 你可以通过在 std::expected 的右值上调用 operator* 来“拿走”预期值
    
    auto taken = *std::move(ex2);
    std::cout &lt;&lt; "拿走了 " &lt;&lt; std::quoted(taken) &lt;&lt; "\n"
                 "ex2：" &lt;&lt; std::quoted(*ex2) &lt;&lt; "，大小：" &lt;&lt; ex2-&gt;size() &lt;&lt; '\n';
}
|p=true
|output=
ex2："Moon"，大小：4
拿走了 "Moon"
ex2：""，大小：0
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/expected/dsc value}}
{{dsc inc|cpp/utility/expected/dsc value_or}}
{{dsc inc|cpp/utility/expected/dsc operator bool}}
{{dsc inc|cpp/utility/expected/dsc error}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}