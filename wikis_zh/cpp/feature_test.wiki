{{title|功能特性测试 {{mark c++20}}}}
{{cpp/feature test/navbar}}

标准中为 C++11 和之后引入的 C++ 语言和程序库的功能特性定义了一组[[cpp/preprocessor/replace|预处理器宏]]。标准有意使之成为检测这些功能特性是否存在的一种简单且可移植的方式。

===属性===
{{sdsc begin}}
{{sdsc|{{ttb|__has_cpp_attribute(}} {{spar|属性记号}} {{ttb|)}}}}
{{sdsc end}}

检查是否支持（宏展开后）{{spar sep|属性记号}}指名的[[cpp/language/attributes|属性]]。

对于每个标准属性，{{tt|__has_cpp_attribute}} 会展开成下表中的对应值（它是该属性被添加到工作草案中时的年份和月份）还是 {{c|0}} 由实现定义。它只会在此标准属性能够使得实现的行为遵循推荐要求时（包括发布诊断信息和改变类布局等各类行为）展开成下表中的对应值。

厂商特定的属性会以某个非零值确定。

可以在 {{ltt|cpp/preprocessor/conditional|#if}} 和 {{ltt|cpp/preprocessor/conditional|#elif}} 的表达式中展开 {{tt|__has_cpp_attribute}}。{{ltt|cpp/preprocessor/conditional|#ifdef}}、{{ltt|cpp/preprocessor/conditional|#ifndef}}{{rev inl|since=c++23|、{{ltt|cpp/preprocessor/conditional|#elifdef}}、{{ltt|cpp/preprocessor/conditional|#elifndef}}}} 和 {{ltt|cpp/preprocessor/conditional|defined}} 把它当做已定义的宏，但不能在别处使用它。

{|class="wikitable sortable"
|-{{#vardefine:counter|0}}
!{{spar|属性记号}}
!属性
!&lt;abbr title="采纳此条功能特性的年/月。各个值下面的超链接指向编译器支持页面中该功能特性的条目。"&gt;值&lt;/abbr&gt;
!&lt;abbr title="引入该特性的标准"&gt;标准&lt;/abbr&gt;
!标准文件

{{ftm_row
|assume
|{{attr|assume}}
|202207L|link=23#assume
|23
|P1774R8
}}

{{ftm_row
|carries_dependency
|{{attr|carries_dependency}}
|200809L|link=11#carries_dependency
|11|until=26
|N2556 N2643 P3475R2
}}

{{ftm_row
|deprecated
|{{attr|deprecated}}
|201309L|link=14#deprecated
|14
|N3760
}}

{{ftm_row
|fallthrough
|{{attr|fallthrough}}
|201603L|link=17#fallthrough
|17
|P0188R1
}}

{{ftm_row
|indeterminate
|{{attr|indeterminate}}
|202403L|link=26#indeterminate
|26
|P2795R5
}}

{{ftm_row
|likely
|{{attr|likely}}
|201803L|link=20#likely
|20
|P0479R5
}}

{{ftm_row
|maybe_unused
|{{attr|maybe_unused}}
|201603L|link=17#maybe_unused
|17
|P0212R1
}}

{{ftm_row
|no_unique_address
|{{attr|no_unique_address}}
|201803L|link=20#no_unique_address
|20
|P0840R2
}}

{{ftm_row
|nodiscard|ftm_span="2"
|{{attr|nodiscard}}
|201603L|link=17#nodiscard
|17
|P0189R1
}}

{{ftm_row
|
|给出理由的 {{attr|nodiscard}}
|201907L|link=20#nodiscard
|20
|P1301R4
}}

{{ftm_row
|noreturn
|{{attr|noreturn}}
|200809L|link=11#noreturn
|11
|N2761
}}

{{ftm_row
|unlikely
|{{attr|likely|unlikely}}
|201803L|link=20#likely&lt;!--[[likely]] &amp; [[unlikely]] are described in one entry--&gt;
|20
|P0479R5
}}
|-
!colspan="5"|属性总数：{{#var:counter}}
|}

===语言功能特性===
下列宏可以用来检测当前实现是否实现了某个语言功能特性。它们会在每个翻译单元[[cpp/preprocessor/replace#预定义宏|预定义]]。

每个宏都会展开成对应于相应功能特性被包含到工作草案时的年份与月份的整数字面量。当功能特性发生了显著变更时，宏会相应地更新。

{{include editlink|cpp/utility/lang feature macros}}

{{cpp/utility/lang feature macros}}

===标准库功能特性===
下列宏可以用来检测当前实现是否实现了某个标准库功能特性。和语言功能特性测试宏不同，它们不会被预定义，而是由标头 {{header|version}} 提供。

对于每个标准库功能特性宏，它也会由提供了与该宏相关的标准库组件的标头提供。完整表单列表请参阅[[cpp/utility/feature test|库功能特性测试宏]]。

每个宏都展开成它对应的功能特性被包含于工作草案时的年份与月份的相应整数字面量。当功能特性发生了显著变更时，宏会相应地更新。

{{include editlink|cpp/utility/lib feature macros}}

{{cpp/utility/lib feature macros}}

===示例===
====正常使用====
{{example|code=
#ifdef __has_include                           // 检查 __has_include 是否存在
#  if __has_include(&lt;optional&gt;)                // 检查标准库
#    include &lt;optional&gt;
#  elif __has_include(&lt;experimental/optional&gt;) // 检查实验版本
#    include &lt;experimental/optional&gt;
#  elif __has_include(&lt;boost/optional.hpp&gt;)    // 尝试外部库
#    include &lt;boost/optional.hpp&gt;
#  else                                        // 完全找不到
#     error "Missing &lt;optional&gt;"
#  endif
#endif

#ifdef __has_cpp_attribute                      // 检查 __has_cpp_attribute 是否存在
#  if __has_cpp_attribute(deprecated)           // 检查一个属性
#    define DEPRECATED(msg) [[deprecated(msg)]]
#  endif
#endif
#ifndef DEPRECATED
#    define DEPRECATED(msg)
#endif

DEPRECATED("foo() has been deprecated") void foo();

#if __cpp_constexpr &gt;= 201304                   // 检查功能特性的指定版本
#  define CONSTEXPR constexpr
#else
#  define CONSTEXPR inline
#endif

CONSTEXPR int bar(unsigned i)
{
#ifdef __cpp_binary_literals                    // 检查功能特性是否存在
    unsigned mask1 = 0b11000000;
    unsigned mask2 = 0b00000111;
#else
    unsigned mask1 = 0xA0;
    unsigned mask2 = 0x07;
#endif
    if (i &amp; mask1)
        return 1;
    if (i &amp; mask2)
        return 2;
    return 0;
}

int main() {}
}}

====编译器功能特性输出====
{{include editlink|cpp/compiler_support/dump}}

&lt;!--{{cot|Compiler Features Dump Example}}--&gt;
{{cpp/compiler_support/dump}}
&lt;!--{{cob}}--&gt;

===缺陷报告===
{{dr list begin}}
{{dr list item|paper=P2552R3|std=C++20|before={{tt|__has_cpp_attribute}} 对于标准属性必须展开成非零值|after=可以展开成 {{c|0}}}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc|[[cpp/utility/feature test|'''库功能特性测试宏''']] {{mark c++20}}|在标头 {{header|version}} 定义}}
{{dsc|'''[[cpp/preprocessor/replace#预定义宏|预定义宏符号]]'''}}
{{dsc|'''[[cpp/symbol index/macro|宏符号索引]]'''}}
{{dsc end}}

===外部链接===
{{elink begin}}
{{elink|[https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations 特性测试推荐的官方文档]}}
{{elink|[https://github.com/makelinux/examples/blob/develop/cpp/features.cpp 试出编译器特性的源码]}}
{{elink end}}

{{langlinks|en|es|ja|ru}}