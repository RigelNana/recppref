{{title|字符串库}}
{{cpp/string/navbar}}

===字符===
在 C++ 标准库中，''字符''{{sep}}是在按顺序处理时可以表示文本的对象。

此术语不限于[[cpp/language/type|字符类型]]的对象，也包括提供了字符串库和以下库中指定的定义的类型可以表示的任意值：
* [[cpp/locale|本地化库]]
* [[cpp/io|输入/输出库]]
{{rrev|since=c++11|
* [[cpp/regex|正则表达式库]]
}}

在字符串库{{rev inl|since=c++11|和正则表达式库}}中，字符只能具有''字符式类型''，即满足{{rev inl|until=c++20|{{named req|PODType}}}}{{rev inl|since=c++20|since=c++26|{{named req|TrivialType}}和{{named req|StandardLayoutType}}}}{{rev inl|since=c++26|{{named req|TriviallyCopyable}}和{{named req|StandardLayoutType}}}}的要求的非数组类型。

{{rrev|since=c++26|
对于任何字符式类型 {{tt|T}}，{{c|std::is_trivially_default_constructible_v&lt;T&gt;}} 都是 {{c|true}}。
}}

因此在在字符串库{{rev inl|since=c++11|和正则表达式库}}中，字符也会以''字符式对象''{{sep}}指代。

某些标准库组件接受''字符容器类型''。它们也用于表示单独的字符。这种类型被用作 {{lc|std::char_traits}} 或者使用了 {{lc|std::char_traits}} 的类模板的模板实参之一。

===库组件===
C++ 字符串库包含以下组件：

====字符特征====
许多与字符相关的类模板（例如 {{lc|std::basic_string}}）需要一套相关的类型和函数以完成对它们语义的定义。这种模板所需的这些类型和函数会以它们的 {{tt|Traits}} 模板形参中的一组成员 {{c/core|typedef}} 名和函数的形式提供。
能够完成那些语义的类是{{named req|CharTraits}}。

字符串库提供了类模板 {{lc|std::char_traits}}，它为 {{lc|std::basic_string}} {{rev inl|since=c++17|和 {{lc|std::basic_string_view}} }}定义类型和函数。

标准定义下列特化，它们都满足{{named req|CharTraits}}：
{{dcl begin}}
{{dcl header|string}}
{{dcl|template&lt;&gt; class char_traits&lt;char&gt;;}}
{{dcl|template&lt;&gt; class char_traits&lt;wchar_t&gt;;}}
{{dcl|template&lt;&gt; class char_traits&lt;char8_t&gt;;|since=c++20}}
{{dcl|template&lt;&gt; class char_traits&lt;char16_t&gt;;|since=c++11}}
{{dcl|template&lt;&gt; class char_traits&lt;char32_t&gt;;|since=c++11}}
{{dcl end}}

当为 {{lc|std::basic_string}} {{rev inl|since=c++17|和 {{lc|std::basic_string_view}} }}使用用户定义的字符容器类型时，也需要提供对应的字符特征类（它可以是 {{lc|std::char_traits}} 的特化）。

{{anchor|字符串类}}
====字符串类（{{lc|std::string}} 等）====
类模板 {{lc|std::basic_string}} 通用化字符序列如何操作及存储。字符串创建、操作及析构全部由一组便利的类方法与相关函数所处理。

标准提供 {{lc|std::basic_string}} 对常用类型的数种特化：
{{dsc begin}}
{{dsc header|string}}
{{dsc hitem|类型|定义}}
{{dsc|{{ttb|std::string}}|{{c/core|std::basic_string&lt;char&gt;}}}}
{{dsc|{{ttb|std::wstring}}|{{c/core|std::basic_string&lt;wchar_t&gt;}}}}
{{dsc|{{ttb|std::u8string}} {{mark since c++20}}|{{c/core|std::basic_string&lt;char8_t&gt;}}}}
{{dsc|{{ttb|std::u16string}} {{mark since c++11}}|{{c/core|std::basic_string&lt;char16_t&gt;}}}}
{{dsc|{{ttb|std::u32string}} {{mark since c++11}}|{{c/core|std::basic_string&lt;char32_t&gt;}}}}
{{dsc end}}

{{anchor|字符串视图类}}
====字符串视图类（{{lc|std::string_view}} 等） {{mark since c++17}}====
类模板 {{lc|std::basic_string_view}} 提供一个轻量对象，它使用的接口与 {{lc|std::basic_string}} 的接口类似，提供对字符串一部分的只读访问。

标准提供 {{lc|std::basic_string_view}} 对常用类型的数种特化：
{{dsc begin}}
{{dsc header|string_view}}
{{dsc hitem|类型|定义}}
{{dsc|{{ttb|std::string_view}}|{{c/core|std::basic_string_view&lt;char&gt;}}}}
{{dsc|{{ttb|std::wstring_view}}|{{c/core|std::basic_string_view&lt;wchar_t&gt;}}}}
{{dsc|{{ttb|std::u8string_view}} {{mark since c++20}}|{{c/core|std::basic_string_view&lt;char8_t&gt;}}}}
{{dsc|{{ttb|std::u16string_view}}|{{c/core|std::basic_string_view&lt;char16_t&gt;}}}}
{{dsc|{{ttb|std::u32string_view}}|{{c/core|std::basic_string_view&lt;char32_t&gt;}}}}
{{dsc end}}

===相关库===
[[cpp/text|文本处理库]]提供对本地化，字符串转换（例如 {{ltt std|cpp/locale/toupper}}），字符分类函数（例如 {{ltt std|cpp/locale/isspace}}），以及文本编码识别（{{ltt std|cpp/locale/text_encoding}}）的支持。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=1170|std=C++98|before=类字符类型可以是数组类型|after=已禁止}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc see c|c/string|字符串库|nomono=true}}
{{dsc end}}

{{langlinks|ar|de|en|es|fr|it|ja|pt|ru}}