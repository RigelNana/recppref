{{cpp/title|ostream_iterator}}
{{cpp/iterator/ostream_iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl rev begin}}
{{dcl|until=c++17|1=
template&lt; class T,
          class CharT = char,
          class Traits = std::char_traits&lt;CharT&gt; &gt;
class ostream_iterator
    : public std::iterator&lt;std::output_iterator_tag, void, void, void, void&gt;
}}
{{dcl|since=c++17|1=
template&lt; class T,
          class CharT = char,
          class Traits = std::char_traits&lt;CharT&gt; &gt;
class ostream_iterator;
}}
{{dcl end}}

{{tt|std::ostream_iterator}} 是单趟{{named req|OutputIterator|输出迭代器}}，用 {{tt|operator&lt;&lt;}} 写入相继的 {{tt|T}} 类型的对象到为之创建迭代器的 {{lc|std::basic_ostream}} 对象。每次写操作后写入可选的分隔字符串。写操作在赋值给迭代器时（无论是否解引用）进行。自增 {{tt|std::ostream_iterator}} 是无操作。

典型实现中，{{tt|std::ostream_iterator}} 仅有的数据成员是指向关联 {{tt|std::basic_ostream}} 的指针和指向分隔字符串首字符的指针。

写入字符时，{{lc|std::ostreambuf_iterator}} 更有效率，因为它避免对每个字符构造并析构一次 sentry 对象的开销。

{{cpp/iterator/iterator/inherit|std::output_iterator_tag|void|void|void|void|ext=
{{dsc|{{tt|char_type}}|{{tt|CharT}}}}
{{dsc|{{tt|traits_type}}|{{tt|Traits}}}}
{{dsc|{{tt|ostream_type}}|{{c/core|std::basic_ostream&lt;CharT, Traits&gt;}}}}
}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/iterator/ostream_iterator/dsc constructor}}
{{dsc inc|cpp/iterator/ostream_iterator/dsc destructor}}
{{dsc inc|cpp/iterator/ostream_iterator/dsc operator{{=}}}}
{{dsc inc|cpp/iterator/ostream_iterator/dsc operator*}}
{{dsc inc|cpp/iterator/ostream_iterator/dsc operator_arith}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;numeric&gt;
#include &lt;sstream&gt;

int main()
{
    std::istringstream str("0.11 0.22 0.33 0.44");

    std::partial_sum(std::istream_iterator&lt;double&gt;(str),
                     std::istream_iterator&lt;double&gt;(),
                     std::ostream_iterator&lt;double&gt;(std::cout, ", "));
    std::cout &lt;&lt; '\n';
}
|output=
0.11, 0.33, 0.66, 1.1,
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc ostreambuf_iterator}}
{{dsc inc|cpp/iterator/dsc istream_iterator}}
{{dsc tclass|cpp/experimental/ostream_joiner|title=std::experimental::ostream_joiner|写入相继元素到输出流的输出迭代器，以分割器分隔相邻元素|notes={{mark since libfund_ts_2 }}}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}