{{cpp/iterator/move_iterator/title|move_iterator}}
{{cpp/iterator/move_iterator/navbar}}
{{dcl begin}}
{{dcla|num=1|constexpr=c++17|
move_iterator();
}}
{{dcla|num=2|constexpr=c++17|
explicit move_iterator( iterator_type x );
}}
{{dcla|num=3|constexpr=c++17|
template&lt; class U &gt;
move_iterator( const move_iterator&lt;U&gt;&amp; other );
}}
{{dcl end}}

构造新的 {{tt|move_iterator}}。

{|class="wikitable" style="text-align: center;"
!{{nbsp|2}}重载{{nbsp|2}}
!style="font-weight: normal;"|{{rlpsi|/#current}}
|-
|{{v|1}}
|[[cpp/language/value initialization|值初始化]]
|-
|{{v|2}}
|{{nbsp}}以 {{rev inl|until=c++20|{{c|x}}}}{{rev inl|since=c++20|{{c|std::move(x)}}}} 初始化{{nbsp}}
|-
|{{v|3}}
|以 {{box|{{c/core|other.}}{{rlpsi|/#current}}}} 初始化
|}

@3@ 转换构造函数。
{{rev begin}}
{{rev|until=c++20|
如果 {{tt|U}} 不可转换到 {{tt|Iter}}，那么程序非良构。
}}
{{rev|since=c++20|
{{cpp/enable if| {{c|std::is_same_v&lt;U, Iter&gt;}} 是 {{c|false}} 且 {{c|std::convertible_to&lt;const U&amp;, Iter&gt;}} 得到实现}}。
}}
{{rev end}}

===参数===
{{par begin}}
{{par|x|要适配的迭代器}}
{{par|other|要复制的迭代器适配器}}
{{par end}}

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3435|std=C++20|before=重载 {{vl|3}} 没有被约束|after=添加约束}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator{{=}}|move_iterator}}
{{dsc inc|cpp/iterator/dsc make_move_iterator}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}