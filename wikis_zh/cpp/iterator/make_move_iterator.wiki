{{cpp/title|make_move_iterator}}
{{cpp/iterator/navbar}}
{{ddcla|header=iterator|since=c++11|constexpr=c++17|
template&lt; class Iter &gt;
std::move_iterator&lt;Iter&gt; make_move_iterator( Iter i );
}}

{{tt|make_move_iterator}} 是便利函数模板，对给定迭代器 {{c|i}} 构造 {{lc|std::move_iterator}}，其类型从实参类型推导。

===参数===
{{par begin}}
{{par|i|转换成移动迭代器的输入迭代器}}
{{par end}}

===返回值===
{{c|std::move_iterator&lt;Iter&gt;(std::move(i))}}

===示例===
{{example
|code=
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;list&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

auto print = [](const auto rem, const auto&amp; seq)
{
    for (std::cout &lt;&lt; rem; const auto&amp; str : seq)
        std::cout &lt;&lt; std::quoted(str) &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
};

int main()
{
    std::list&lt;std::string&gt; s{"one", "two", "three"};
    
    std::vector&lt;std::string&gt; v1(s.begin(), s.end()); // 复制
    
    std::vector&lt;std::string&gt; v2(std::make_move_iterator(s.begin()),
                                std::make_move_iterator(s.end())); // 移动
    
    print("v1 现在持有：", v1);
    print("v2 现在持有：", v2);
    print("原来的列表现在持有：", s);
}
|p=true
|output=
v1 现在持有："one" "two" "three" 
v2 现在持有："one" "two" "three" 
原来的列表现在持有："" "" "" 
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2061|std=C++11|before={{tt|make_move_iterator}} 不会将数组参数转换成指针|after=会转换}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc move_iterator}}
{{dsc inc|cpp/utility/dsc move}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}