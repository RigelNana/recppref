{{cpp/iterator/basic_const_iterator/title|1=operator==,&lt;,&lt;=,&gt;,&gt;=,&lt;=&gt;}}
{{cpp/iterator/basic_const_iterator/navbar}}
{{dcl begin}}
{{dcl h|相等性比较}}
{{dcla|num=1|since=c++23|1=
template&lt; std::sentinel_for&lt;Iter&gt; S &gt;
constexpr bool operator==( const S&amp; s ) const;
}}
{{dcl h|两个 {{tt|basic_const_iterator}} 之间的关系比较}}
{{dcl|num=2|since=c++23|1=
constexpr bool operator&lt;( const basic_const_iterator&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt;;
}}
{{dcl|num=3|since=c++23|1=
constexpr bool operator&gt;( const basic_const_iterator&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt;;
}}
{{dcl|num=4|since=c++23|1=
constexpr bool operator&lt;=( const basic_const_iterator&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt;;
}}
{{dcl|num=5|since=c++23|1=
constexpr bool operator&gt;=( const basic_const_iterator&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt;;
}}
{{dcl|num=6|since=c++23|1=
constexpr auto operator&lt;=&gt;( const basic_const_iterator&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt; &amp;&amp; std::three_way_comparable&lt;Iter&gt;;
}}
{{dcl h|{{tt|basic_const_iterator}} 和另一类型之间的关系比较}}
{{dcl|num=7|since=c++23|1=
template&lt; /*different-from*/&lt;basic_const_iterator&gt; I &gt;
constexpr bool operator&lt;( const I&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt; &amp;&amp; std::totally_ordered_with&lt;Iter, I&gt;;
}}
{{dcl|num=8|since=c++23|1=
template&lt; /*different-from*/&lt;basic_const_iterator&gt; I &gt;
constexpr bool operator&gt;( const I&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt; &amp;&amp; std::totally_ordered_with&lt;Iter, I&gt;;
}}
{{dcl|num=9|since=c++23|1=
template&lt; /*different-from*/&lt;basic_const_iterator&gt; I &gt;
constexpr bool operator&lt;=( const I&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt; &amp;&amp; std::totally_ordered_with&lt;Iter, I&gt;;
}}
{{dcl|num=10|since=c++23|1=
template&lt; /*different-from*/&lt;basic_const_iterator&gt; I &gt;
constexpr bool operator&gt;=( const I&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt; &amp;&amp; std::totally_ordered_with&lt;Iter, I&gt;;
}}
{{dcl|num=11|since=c++23|1=
template&lt; /*different-from*/&lt;basic_const_iterator&gt; I &gt;
constexpr auto operator&lt;=&gt;( const I&amp; y ) const
    requires std::random_access_iterator&lt;Iter&gt; &amp;&amp;
        std::totally_ordered_with&lt;Iter, I&gt; &amp;&amp;
        std::three_way_comparable_with&lt;Iter, I&gt;;
}}
{{dcl end}}

比较 {{tt|basic_const_iterator}} 和另一个值。

{{cpp/note synthesized eq}}

当 {{c|std::same_as&lt;I, basic_const_iterator&lt;Iter&gt;&gt;}} 为 false 时 {{c|I}} 满足 {{c|/*different-from*/&lt;basic_const_iterator&gt;}}。

===参数===
{{par begin}}
{{par|s|{{tt|Iter}} 的哨位}}
{{par|y|要与之比较的值}}
{{par end}}

===返回值===
@1@ {{c|1=base() == s}}
@2@ {{c|1=base() &lt; y.base()}}
@3@ {{c|1=base() &gt; y.base()}}
@4@ {{c|1=base() &lt;= y.base()}}
@5@ {{c|1=base() &gt;= y.base()}}
@6@ {{c|1=base() &lt;=&gt; y.base()}}
@7@ {{c|1=base() &lt; y}}
@8@ {{c|1=base() &gt; y}}
@9@ {{c|1=base() &lt;= y}}
@10@ {{c|1=base() &gt;= y}}
@11@ {{c|1=base() &lt;=&gt; y}}

===注解===
当 {{tt|Iter}} 实现了 {{c|sentinel_for&lt;Iter&gt;}} 时，重载 {{vl|1}} 可用于比较两个 {{tt|basic_const_iterator&lt;Iter&gt;}} 值。

===示例===
{{example
|code=
|output=
}}

===参阅===
{{dsc begin}}
{{dsc todo}}
{{dsc end}}