{{cpp/title|insert_iterator}}
{{cpp/iterator/insert_iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl rev begin}}
{{dcl|until=c++17|1=
template&lt; class Container &gt;
class insert_iterator : public std::iterator&lt;std::output_iterator_tag,
                                             void, void, void, void&gt;
}}
{{dcl|since=c++17|1=
template&lt; class Container &gt;
class insert_iterator;
}}
{{dcl rev end}}
{{dcl end}}

{{tt|std::insert_iterator}} 是一种{{named req|OutputIterator}}，在所提供的迭代器所指向的位置，向为之构造的容器插入元素。每当赋值给迭代器时（无论是否解引用），就调用容器的 {{tt|insert()}} 成员函数。自增 {{tt|std::insert_iterator}} 是无操作。

{{cpp/iterator/iterator/inherit|std::output_iterator_tag|void|void|void|void|ext=
{{dsc|{{tt|container_type}}|{{tt|Container}}}}
}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/iterator/inserter/dsc constructor|insert_iterator}}
{{dsc inc|cpp/iterator/inserter/dsc operator{{=}}|insert_iterator}}
{{dsc inc|cpp/iterator/inserter/dsc operator*|insert_iterator}}
{{dsc inc|cpp/iterator/inserter/dsc operator_arith|insert_iterator}}
{{dsc end}}

===成员对象===
{{dsc begin}}
{{dsc hitem|成员名|定义}}
{{dsc|{{tt|container}} {{mark prot mem obj}}|{{tt|Container*}} 类型的指针}}
{{dsc|{{tt|iter}} {{mark prot mem obj}}|{{rev inl|until=c++20|{{tt|Container::iterator}}}}{{rev inl|since=c++20|{{tt|ranges::iterator_t&lt;Container&gt;}}}} 类型的迭代器}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;list&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;int&gt; v{1, 2, 3, 4, 5};
    std::list&lt;int&gt; l{-1, -2, -3};
    std::copy(v.begin(), v.end(), // 可用 std::inserter 简化
              std::insert_iterator&lt;std::list&lt;int&gt;&gt;(l, std::next(l.begin()))); 
    for (int n : l)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
-1 1 2 3 4 5 -2 -3 
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc inserter}}
{{dsc inc|cpp/iterator/dsc back_insert_iterator}}
{{dsc inc|cpp/iterator/dsc front_insert_iterator}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}