{{cpp/ranges/title|iter_swap}}
{{cpp/iterator/navbar}}

{{dcl begin}}
{{dcl header|iterator}}
{{dcl|notes={{mark custpt}}|since=c++20|1=
namespace ranges {
    inline namespace /* 未指明 */ {
        inline constexpr /* 未指明 */
            iter_swap = /* 未指明 */;
    }
}
}}
{{dcl h|调用签名}}
{{dcl|since=c++20|1=
template&lt; class I1, class I2 &gt;
constexpr void iter_swap( I1&amp;&amp; i1, I2&amp;&amp; i2 ) noexcept(/* 见下文 */);
}}
{{dcl h|辅助函数}}
{{dcl|notes={{mark expos}}|1=
template&lt; class X, class Y &gt;
constexpr std::iter_value_t&lt;X&gt;
    iter-exchange-move( X&amp;&amp; x, Y&amp;&amp; y )
    noexcept(noexcept(std::iter_value_t&lt;X&gt;(std::ranges::iter_move(x))) &amp;&amp;
             noexcept(*x = std::ranges::iter_move(y)));
}}
{{dcl end}}

交换两个迭代器所代表的值。

仅用于阐述的辅助函数 {{tti|iter-exchange-move}} 的效果等价于：
{{source|1=
std::iter_value_t&lt;X&gt; old(std::ranges::iter_move(x));
*x = std::ranges::iter_move(y);
return old;
}}

{{c|ranges::iter_swap(i1, i2)}} [[cpp/language/expressions#表达式等价|表达式等价]]于：
# {{c|(void)iter_swap(i1, i2)}}，如果 {{c|i1}} 或 {{c|i2}} 具有类或枚举类型且该表达式良构，其中 {{tt|iter_swap}} 的[[cpp/language/overload resolution|重载决议]]会包含额外候选 {{c|1=void iter_swap(auto, auto) = delete;}}&lt;ref&gt;这会阻止调用未受约束的 {{lc|std::iter_swap}}。&lt;/ref&gt;，且不含 {{tt|std::ranges::iter_swap}} 自身。
#* 如果选择的重载没有交换 {{c|i1}} 与 {{c|i2}} 所代表的值，那么程序非良构，不要求诊断。
# 否则是 {{c|ranges::swap(*i1, *i2)}}，如果 {{tt|I1}} 和 {{tt|I2}} 都实现 {{lconcept|indirectly_readable}} 且 {{c|std::iter_reference_t&lt;I1&gt;}} 和 {{c|std::iter_reference_t&lt;I2&gt;}} 都实现 {{lconcept|swappable_with}}。
# 否则是 {{box|{{c/core|1=(void)(*i1 =}}{{nbspt}}{{tti|iter-exchange-move}}{{c/core|(i2, i1))}}}}，如果 {{c|std::indirectly_move_storable&lt;I1, I2&gt;}} 和 {{c|std::indirectly_move_storable&lt;I2, I1&gt;}} 都得到实现，但 {{c|i1}} 只会求值一次。
# 否则，{{c|ranges::iter_swap(i1, i2)}} 非良构，这在出现于模板实例化的立即语境时能够导致[[cpp/language/sfinae|替换失败]]。
&lt;references/&gt;

{{cpp/ranges/cpo}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc iter_swap|reverse_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc iter_swap|move_iterator}}
{{dsc inc|cpp/algorithm/dsc iter_swap}}
{{dsc end}}

{{langlinks|en|es|ja}}