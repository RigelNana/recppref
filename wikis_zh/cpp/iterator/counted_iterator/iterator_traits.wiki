{{cpp/title|iterator_traits&lt;small&gt;&lt;std::counted_iterator&gt;&lt;/small&gt;}}
{{cpp/iterator/counted_iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl|since=c++20|1=
template&lt; std::input_iterator I &gt;
    requires /* 见下文 */
struct iterator_traits&lt;std::counted_iterator&lt;I&gt;&gt; : std::iterator_traits&lt;I&gt; {
    using pointer = std::conditional_t&lt;std::contiguous_iterator&lt;I&gt;,
                                       std::add_pointer_t&lt;std::iter_reference_t&lt;I&gt;&gt;,
                                       void&gt;;
};
}}
{{dcl end}}

从定制（从标准部分特化或程序定义特化生成）的 {{c|std::iterator_traits&lt;I&gt;}} 继承属性，调整成员类型 {{tt|pointer}}，其中 {{tt|I}} 实现 {{lconcept|input_iterator}}。

值得注意的是，其 {{tt|iterator_concept}}（若存在）和 {{tt|iterator_category}}（若存在）从 {{c|std::iterator_traits&lt;I&gt;}} 继承。

当且仅当 {{c|std::iterator_traits&lt;I&gt;}} 不从主模板生成时，requires 子句中的条件为 {{c|true}}。

===注解===
{{wg21|P2259R1}} 前，即使 {{c|std::iterator_traits&lt;I&gt;}} 从主模板生成也使用此特化。结果在针对迭代器概念（例如 {{lconcept|forward_iterator}}）测试 {{c|std::counted_iterator&lt;I&gt;}} 时，{{c|/*ITER_CONCEPT*/}} 的确定过程不考虑 {{tt|I::iterator_concept}}，从而 {{c|std::counted_iterator&lt;I&gt;}} 有时错误地表现为它无法实现该概念。此错误行为在 10.4 前的 libstdc++ 与 VS 2022 17.0 Preview 3 前的 MSVC STL 中实现。

标准库为指针类型、{{lc|std::counted_iterator}} 及 {{lc|std::common_iterator}} 提供了 {{lc|std::iterator_traits}} 的部分特化。

===示例===
{{example
|code=
#include &lt;iterator&gt;
#include &lt;list&gt;
#include &lt;type_traits&gt;
#include &lt;vector&gt;

int main()
{
    std::vector v{1, 2, 3, 4};
    std::list l{1, 2, 3, 4};
    std::counted_iterator iv{v.begin(), 3};
    std::counted_iterator il{l.begin(), 3};
    static_assert(std::is_same&lt;int*, std::iterator_traits&lt;decltype(iv)&gt;::pointer&gt;());
    static_assert(std::is_same&lt;void, std::iterator_traits&lt;decltype(il)&gt;::pointer&gt;());
}
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|paper=P2259R1|std=C++20|before=无 requires 子句&lt;br&gt;无条件定义 {{tt|pointer}} 为 {{c|void}}|after=添加约束}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{cpp/iterator/dsc iterator_traits}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}