{{title|1=operator==&lt;small&gt;(std::counted_iterator&amp;lt;I&amp;gt;, std::default_sentinel_t)&lt;/small&gt;}}
{{cpp/iterator/counted_iterator/navbar}}
{{ddcl|since=c++20|1=
friend constexpr bool operator==(
    const counted_iterator&amp; x, std::default_sentinel_t );
}}

检查底层''长度''（即到末尾的距离）是否等于 {{c|0}}。

{{cpp/hidden friend|std::counted_iterator&amp;lt;I&gt;|tmpl=yes}}

{{cpp/note synthesized eq}}

===参数===
{{par begin}}
{{par|x|迭代器适配器}}
{{par end}}

===返回值===
若 {{c|x.count()}} 等于 {{c|0}} 则为 {{c|true}}，否则为 {{c|false}}。

===示例===
{{example
|code=
#include &lt;initializer_list&gt;
#include &lt;iterator&gt;

int main()
{
    static constexpr auto v = {1, 2, 3, 4};
    constexpr std::counted_iterator&lt;std::initializer_list&lt;int&gt;::iterator&gt;
        it1{v.begin(), 3},
        it2{v.begin(), 0};
    static_assert(it1 != std::default_sentinel);
    static_assert(it2 == std::default_sentinel);
    static_assert(std::default_sentinel != it1);
    static_assert(std::default_sentinel == it2);
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator_cmp|counted_iterator}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}