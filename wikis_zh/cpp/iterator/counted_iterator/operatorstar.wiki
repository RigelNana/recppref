{{cpp/iterator/counted_iterator/title|operator*,-&gt;}}
{{cpp/iterator/counted_iterator/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|1=
constexpr decltype(auto) operator*();
}}
{{dcl|num=2|since=c++20|1=
constexpr decltype(auto) operator*() const
    requires /*dereferenceable*/&lt;const I&gt;;
}}
{{dcl|num=3|since=c++20|1=
constexpr auto operator-&gt;() const noexcept
    requires std::contiguous_iterator&lt;I&gt;;
}}
{{dcl end}}

@1,2@ 返回到当前元素的引用。若 {{c|1=this-&gt;count() &lt;= 0}} 则行为未定义。函数体等价于 {{c|return *current;}}。

@3@ 返回指向当前元素的指针。函数体等价于 {{c|1=return std::to_address(current);}}。

===参数===
（无）

===返回值===
指向当前元素的引用或指针。

===示例===
{{example
|code=
#include &lt;complex&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
using std::operator""i;

int main()
{
    const auto il = {1.i, 2.i, 3.i, 4.i, 5.i};

    for (std::counted_iterator i{il.begin() + 1, 3}; i != std::default_sentinel; ++i)
        std::cout &lt;&lt; *i &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';

    for (std::counted_iterator i{il.begin() + 1, 3}; i != std::default_sentinel; ++i)
        std::cout &lt;&lt; i-&gt;imag() &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
(0,2) (0,3) (0,4)
2 3 4
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator_at|counted_iterator}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}