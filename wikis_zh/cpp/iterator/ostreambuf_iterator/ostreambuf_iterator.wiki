{{cpp/iterator/ostreambuf_iterator/title|ostreambuf_iterator}}
{{cpp/iterator/ostreambuf_iterator/navbar}}
{{dcl begin}}
{{dcl rev multi|num=1|until1=c++11|dcl1=
ostreambuf_iterator( streambuf_type* buffer ) throw();
|dcl2=
ostreambuf_iterator( streambuf_type* buffer ) noexcept;
}}
{{dcl rev multi|num=2|until1=c++11|dcl1=
ostreambuf_iterator( ostream_type&amp; stream ) throw();
|dcl2=
ostreambuf_iterator( ostream_type&amp; stream ) noexcept;
}}
{{dcl end}}

@1@ 构造迭代器，将私有的 {{tt|streambuf_type*}} 成员设为 {{c|buffer}} 并将 {{ltf|cpp/iterator/ostreambuf_iterator/failed}} 标志设为 {{c|false}}。{{c|buffer}} 是空指针时行为未定义。

@2@ 同 {{c|ostreambuf_iterator(stream.rdbuf())}}。

===参数===
{{par begin}}
{{par|stream|拥有的 {{tt|rdbuf()}} 会被此迭代器访问的输出流}}
{{par|buffer|此迭代器要访问的输出流缓冲}}
{{par end}}

===示例===
{{example
| 
|code=
#include &lt;fstream&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;

int main()
{
    const char* file = "test.txt";
    {
        std::basic_filebuf&lt;char&gt; f;
        f.open(file, std::ios::out);
        std::ostreambuf_iterator&lt;char&gt; out1(&amp;f);
        *out1 = 'a'; // 通过迭代器写入文件
    }

    // 从文件读回
    char a;
    std::cout &lt;&lt; ((std::ifstream{file} &gt;&gt; a), a) &lt;&lt; std::endl;

    std::ostreambuf_iterator&lt;wchar_t&gt; out2{std::wcout};
    *out2 = L'b';
}
|output=
a
b
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=112|std=C++98|before=要求"实参不能为空"应用到了重载 (2)|after=改为应用到重载 (1)}}
{{dr list item|paper=P2325R3|std=C++20|before=因为 C++20 迭代器必须是 {{lconcept|default_initializable}} 的而提供了默认构造函数|after=与该要求一同移除}}
{{dr list end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}