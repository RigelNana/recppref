{{cpp/iterator/istream_iterator/title|operator++, operator++{{small|(int)}}}}
{{cpp/iterator/istream_iterator/navbar}}
{{dcl begin}}
{{dcl|num=1|
istream_iterator&amp; operator++();
}}
{{dcl|num=2|1=
istream_iterator operator++( int );
}}
{{dcl end}}

从底层流（通过它的 {{ltt|cpp/io/basic_istream/operator gtgt|operator&gt;&gt;}}）读取值并将它存储到迭代器对象中。如果读取失败（底层流的 {{ltf|cpp/io/basic_ios/fail}} 返回 {{c|true}}），那么迭代器就会变成流尾迭代器。

迭代器是流尾迭代器时行为未定义。

===参数===
（无）

===返回值===
@1@ {{c|*this}}

@2@ 保有未更改的值的 {{tt|istream_iterator}}。

{{cpp/impldef exception}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=260|std=C++98|before={{c/core|operator++(int)}} 的返回类型是 {{tt|istream_iterator&amp;}}|after=改成 {{tt|istream_iterator}}}}
{{dr list item|wg=lwg|dr=788|std=C++98|before=读取是否失败会根据底层流的 {{c/core|operator void*}} 来判断，&lt;br&gt;但是 {{lwg|468}} 的解决方案已经将它移除|after=改用 {{ltf|cpp/io/basic_ios/fail}}}}
{{dr list item|wg=lwg|dr=838|std=C++98|before=不明确是否可以自增流尾迭代器|after=行为未定义}}
{{dr list end}}

{{langlinks|en|ja}}