{{cpp/iterator/istreambuf_iterator/title|istreambuf_iterator}}
{{cpp/iterator/istreambuf_iterator/navbar}}
{{dcl begin}}
{{dcl rev multi|num=1
|until1=c++11|dcl1=
istreambuf_iterator() throw();
|dcl2=
constexpr istreambuf_iterator() noexcept;
}}
{{dcl|num=2|since=c++20|1=
constexpr istreambuf_iterator( std::default_sentinel_t ) noexcept;
}}
{{dcl rev multi|num=3
|until1=c++11|dcl1=
istreambuf_iterator( std::basic_istream&lt;CharT,Traits&gt;&amp; is ) throw();
|dcl2=
istreambuf_iterator( std::basic_istream&lt;CharT,Traits&gt;&amp; is ) noexcept;
}}
{{dcl rev multi|num=4
|until1=c++11|dcl1=
istreambuf_iterator( std::basic_streambuf&lt;CharT,Traits&gt;* s ) throw();
|dcl2=
istreambuf_iterator( std::basic_streambuf&lt;CharT,Traits&gt;* s ) noexcept;
}}
{{dcl rev multi|num=5
|until1=c++11|dcl1=
istreambuf_iterator( const /* proxy */&amp; p ) throw();
|dcl2=
istreambuf_iterator( const /* proxy */&amp; p ) noexcept;
}}
{{dcl|since=c++11|num=6|1=
istreambuf_iterator( const istreambuf_iterator&amp; ) noexcept = default;
}}
{{dcl end}}

@1,2@ 构造流尾迭代器。

@3@ 初始化迭代器并存储 {{c|is.rdbuf()}} 的值于数据成员。若 {{c|is.rdbuf()}} 为空，则构造流尾迭代器。

@4@ 初始化迭代器并存储 {{c|s}} 的值于数据成员。若 {{c|s}} 为空，则构造流尾迭代器。

@5@ 相当于以 {{c|p}} 所保有的 {{tt|streambuf_type*}} 指针调用 {{v|3}}。

@6@ 复制构造函数为平凡且为显式预置。

{{rrev|until=c++11|
复制构造函数实际上被隐式声明，且不保证为平凡。
}}

===参数===
{{par begin}}
{{par|is|获得流缓冲来源的输出流}}
{{par|s|用以初始化迭代器的流缓冲}}
{{par|p|实现定义的代理类型的对象}}
{{par end}}

{{langlinks|en|es|ja|ru}}