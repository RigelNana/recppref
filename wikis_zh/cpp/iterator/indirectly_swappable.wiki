{{cpp/title|indirectly_swappable}}
{{cpp/iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl|since=c++20|1=
template&lt; class I1, class I2 = I1 &gt;
concept indirectly_swappable =
    std::indirectly_readable&lt;I1&gt; &amp;&amp;
    std::indirectly_readable&lt;I2&gt; &amp;&amp;
    requires( const I1 i1, const I2 i2 )
    {
        ranges::iter_swap(i1, i1);
        ranges::iter_swap(i1, i2);
        ranges::iter_swap(i2, i1);
        ranges::iter_swap(i2, i2);
    };
}}
{{dcl end}}

概念 {{tt|indirectly_swappable}} 指定对于各自实现 {{c|std::indirectly_readable}} 的两个类型间的关系，其中能交换其所引用的类型。

===语义要求===
{{tt|I1}} 与 {{tt|I2}} 实现 {{tt|indirectly_swappable}} 的条件为，其所蕴含的概念均得到实现。

{{cpp/concepts/equality preservation}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc indirectly_readable}}
{{dsc inc|cpp/iterator/ranges/dsc iter_swap}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}