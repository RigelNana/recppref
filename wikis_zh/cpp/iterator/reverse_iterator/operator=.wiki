{{cpp/iterator/reverse_iterator/title|operator{{=}}}}
{{cpp/iterator/reverse_iterator/navbar}}
{{ddcla|constexpr=c++17|1=
template&lt; class U &gt; 
reverse_iterator&amp; operator=( const reverse_iterator&lt;U&gt;&amp; other );
}}

将 {{box|{{c/core|other.}}{{rlpst|/#current}}}} 赋给 {{rlpst|/#current}}。

{{rrev|since=c++20|
{{cpp/enable if| {{c|std::is_same_v&lt;U, Iter&gt;}} 是 {{c|false}} 且 {{c|std::convertible_to&lt;const U&amp;, Iter&gt;}} 和 {{c|std::assignable_from&lt;Iter&amp;, const U&amp;&gt;}} 均得到实现}}。
}}

===参数===
{{par begin}}
{{par|other|要赋值的迭代器适配器}}
{{par end}}

===返回值===
{{c|*this}}

===示例===
{{example|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;

int main()
{
    const int a1[]{0, 1, 2};
    int a2[]{0, 1, 2, 3};
    short a3[]{40, 41, 42};
    
    std::reverse_iterator&lt;const int*&gt; it1{std::crbegin(a1)};
    it1 = std::reverse_iterator&lt;int*&gt;{std::rbegin(a2)};   // OK
//  it1 = std::reverse_iterator&lt;short*&gt;{std::rbegin(a3)}; // 编译错误：指针类型不兼容
    
    std::reverse_iterator&lt;const short*&gt; it2{nullptr};
    it2 = std::rbegin(a3); // OK
//  it2 = std::begin(a3);  // 编译错误：没有可行的 operator= 重载
    std::cout &lt;&lt; *it2 &lt;&lt; '\n';
}
|output=42
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=280|std=C++98|before=不允许异质赋值|after=允许异质赋值}}
{{dr list item|wg=lwg|dr=3435|std=c++20|before=转换赋值运算符未受约束|after=已约束}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc constructor|reverse_iterator}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}