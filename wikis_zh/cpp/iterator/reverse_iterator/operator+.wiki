{{title|1=operator+{{petty|(std::reverse_iterator)}}}}
{{cpp/iterator/reverse_iterator/navbar}}
{{dcl begin}}
{{dcl header|iterator}}
{{dcl rev begin}}
{{dcla|constexpr=c++17|until=c++23|
template&lt; class Iter &gt; 
reverse_iterator&lt;Iter&gt; operator+
    ( typename reverse_iterator&lt;Iter&gt;::difference_type n,
      const reverse_iterator&lt;Iter&gt;&amp; it );
}}
{{dcl|since=c++23|
template&lt; class Iter &gt; 
constexpr reverse_iterator&lt;Iter&gt; operator+
    ( std::iter_difference_t&lt;Iter&gt; n, const reverse_iterator&lt;Iter&gt;&amp; it );
}}
{{dcl end}}

返回增加了 {{c|n}} 的迭代器 {{c|it}}。底层迭代器实际上减少了 {{c|n}}。

===参数===
{{par begin}}
{{par|n|迭代器所要增加的位置数}}
{{par|it|要增加的迭代器适配器}}
{{par end}}

===返回值===
{{c|reverse_iterator&lt;Iter&gt;(it.base() - n)}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;list&gt;
#include &lt;vector&gt;

int main()
{
    {
        std::vector v{0, 1, 2, 3};
        std::reverse_iterator&lt;std::vector&lt;int&gt;::iterator&gt;
            ri1{std::reverse_iterator{v.rbegin()}&lt;!----&gt;};
        std::cout &lt;&lt; *ri1 &lt;&lt; ' '; // 3
        std::reverse_iterator&lt;std::vector&lt;int&gt;::iterator&gt; ri2{2 + ri1};
        std::cout &lt;&lt; *ri2 &lt;&lt; ' '; // 1
    }
    
    {
        std::list l{5, 6, 7, 8};
        std::reverse_iterator&lt;std::list&lt;int&gt;::iterator&gt;
            ri1{std::reverse_iterator{l.rbegin()}&lt;!----&gt;};
        std::cout &lt;&lt; *ri1 &lt;&lt; '\n'; // 8
    //  auto ri2{2 + ri1}; // 错误：底层迭代器未实现随机访问迭代器
    }
}
|output=
3 1 8
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/adaptor/dsc operator arith|reverse_iterator}}
{{dsc inc|cpp/iterator/adaptor/dsc operator-|reverse_iterator}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}