{{title|输入/输出库}}
{{cpp/io/navbar}}

C++ 包含如下的输入/输出库：[[enwiki:Object-oriented_programming|OOP-风格的]]，[[#基于流的输入/输出|基于流的输入/输出]]库{{rev inl|since=c++23|，[[#打印函数 (C++23 起)|基于打印的函数族]]}}，以及[[#C 风格输入/输出|C 风格输入/输出]]函数的标准集合。

===基于流的输入/输出===
基于流的输入/输出库围绕抽象的输入/输出设备组织。这些抽象设备允许相同代码处理对文件、内存流或随即进行任意操作（例如压缩）的自定义适配器设备的输入/输出。

大多数这些类均被模板化，故它们能被适配到任何标准字符类型。已为最常用的基本字符类型（{{c/core|char}} 和 {{c/core|wchar_t}}）提供了分离的 typedef。这些类以下列层次组织：

{{inheritance diagram/std-io-complete}}

{{dsc begin}}
{{dsc h2|抽象}}
{{dsc header|ios}}
{{dsc inc|cpp/io/dsc ios_base}}
{{dsc inc|cpp/io/dsc basic_ios}}
{{dsc header|streambuf}}
{{dsc inc|cpp/io/dsc basic_streambuf}}
{{dsc header|ostream}}
{{dsc inc|cpp/io/dsc basic_ostream}}
{{dsc header|istream}}
{{dsc inc|cpp/io/dsc basic_istream}}
{{dsc inc|cpp/io/dsc basic_iostream}}
{{dsc h2|文件输入/输出实现}}
{{dsc header|fstream}}
{{dsc inc|cpp/io/dsc basic_filebuf}}
{{dsc inc|cpp/io/dsc basic_ifstream}}
{{dsc inc|cpp/io/dsc basic_ofstream}}
{{dsc inc|cpp/io/dsc basic_fstream}}
{{dsc h2|字符串输入/输出实现}}
{{dsc header|sstream}}
{{dsc inc|cpp/io/dsc basic_stringbuf}}
{{dsc inc|cpp/io/dsc basic_istringstream}}
{{dsc inc|cpp/io/dsc basic_ostringstream}}
{{dsc inc|cpp/io/dsc basic_stringstream}}
{{dsc h2|数组输入/输出实现}}
{{dsc header|spanstream}}
{{dsc inc|cpp/io/dsc basic_spanbuf}}
{{dsc inc|cpp/io/dsc basic_ispanstream}}
{{dsc inc|cpp/io/dsc basic_ospanstream}}
{{dsc inc|cpp/io/dsc basic_spanstream}}
{{dsc header|strstream}}
{{dsc inc|cpp/io/dsc strstreambuf}}
{{dsc inc|cpp/io/dsc istrstream}}
{{dsc inc|cpp/io/dsc ostrstream}}
{{dsc inc|cpp/io/dsc strstream}}
{{dsc h2|同步的输出 {{mark since c++20}}}}
{{dsc header|syncstream}}
{{dsc inc|cpp/io/dsc basic_syncbuf}}
{{dsc inc|cpp/io/dsc basic_osyncstream}}
{{dsc end}}

====typedef====
在 {{tt|std}} 命名空间为常用字符类型提供了下列 typedef：
{{dsc begin}}
{{dsc hitem|类型|定义}}
{{dsc header|ios}}
{{dsc|{{lc|std::ios}}|{{co|std::basic_ios&lt;char&gt;}}}}
{{dsc|{{lc|std::wios}}|{{co|std::basic_ios&lt;wchar_t&gt;}}}}
{{dsc header|streambuf}}
{{dsc|{{lc|std::streambuf}}|{{co|std::basic_streambuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wstreambuf}}|{{co|std::basic_streambuf&lt;wchar_t&gt;}}}}
{{dsc header|istream}}
{{dsc|{{lc|std::istream}}|{{co|std::basic_istream&lt;char&gt;}}}}
{{dsc|{{lc|std::wistream}}|{{co|std::basic_istream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::iostream}}|{{co|std::basic_iostream&lt;char&gt;}}}}
{{dsc|{{lc|std::wiostream}}|{{co|std::basic_iostream&lt;wchar_t&gt;}}}}
{{dsc header|ostream}}
{{dsc|{{lc|std::ostream}}|{{co|std::basic_ostream&lt;char&gt;}}}}
{{dsc|{{lc|std::wostream}}|{{co|std::basic_ostream&lt;wchar_t&gt;}}}}
{{dsc header|fstream}}
{{dsc|{{lc|std::filebuf}}|{{co|std::basic_filebuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wfilebuf}}|{{co|std::basic_filebuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ifstream}}|{{co|std::basic_ifstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wifstream}}|{{co|std::basic_ifstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ofstream}}|{{co|std::basic_ofstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wofstream}}|{{co|std::basic_ofstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::fstream}}|{{co|std::basic_fstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wfstream}}|{{co|std::basic_fstream&lt;wchar_t&gt;}}}}
{{dsc header|sstream}}
{{dsc|{{lc|std::stringbuf}}|{{co|std::basic_stringbuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wstringbuf}}|{{co|std::basic_stringbuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::istringstream}}|{{co|std::basic_istringstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wistringstream}}|{{co|std::basic_istringstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ostringstream}}|{{co|std::basic_ostringstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wostringstream}}|{{co|std::basic_ostringstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::stringstream}}|{{co|std::basic_stringstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wstringstream}}|{{co|std::basic_stringstream&lt;wchar_t&gt;}}}}
{{dsc header|spanstream}}
{{dsc|{{lc|std::spanbuf}} {{mark c++23}}|{{co|std::basic_spanbuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wspanbuf}} {{mark c++23}}|{{co|std::basic_spanbuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ispanstream}} {{mark c++23}}|{{co|std::basic_ispanstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wispanstream}} {{mark c++23}}|{{co|std::basic_ispanstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::ospanstream}} {{mark c++23}}|{{co|std::basic_ospanstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wospanstream}} {{mark c++23}}|{{co|std::basic_ospanstream&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::spanstream}} {{mark c++23}}|{{co|std::basic_spanstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wspanstream}} {{mark c++23}}|{{co|std::basic_spanstream&lt;wchar_t&gt;}}}}
{{dsc header|syncstream}}
{{dsc|{{lc|std::syncbuf}} {{mark c++20}}|{{co|std::basic_syncbuf&lt;char&gt;}}}}
{{dsc|{{lc|std::wsyncbuf}} {{mark c++20}}|{{co|std::basic_syncbuf&lt;wchar_t&gt;}}}}
{{dsc|{{lc|std::osyncstream}} {{mark c++20}}|{{co|std::basic_osyncstream&lt;char&gt;}}}}
{{dsc|{{lc|std::wosyncstream}} {{mark c++20}}|{{co|std::basic_osyncstream&lt;wchar_t&gt;}}}}
{{dsc end}}

====预定义标准流对象====
{{dsc begin}}
{{dsc header|iostream}}
{{dsc inc|cpp/io/dsc cin}}
{{dsc inc|cpp/io/dsc cout}}
{{dsc inc|cpp/io/dsc cerr}}
{{dsc inc|cpp/io/dsc clog}}
{{dsc end}}

{{anchor|输入/输出操纵符}}
===={{rl|manip|输入/输出操纵符}}====
基于流的输入/输出库用{{rl|manip|输入/输出操纵符}}（例如 {{lc|std::boolalpha}}、{{lc|std::hex}} 等）控制流的行为。

====类型====
定义下列辅助类型：
{{dsc begin}}
{{dsc header|ios}}
{{dsc inc|cpp/io/dsc streamoff}}
{{dsc inc|cpp/io/dsc streamsize}}
{{dsc inc|cpp/io/dsc fpos}}
{{dsc end}}

提供下列 {{c/core|std::fpos&lt;std::mbstate_t&gt;}} 的 typedef 名：
{{dsc begin}}
{{dsc header|iosfwd}}
{{dsc hitem|类型|定义}}
{{dsc|{{tt|std::streampos}}|{{c/core|std::fpos&lt;std::char_traits&lt;char&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::wstreampos}}|{{c/core|std::fpos&lt;std::char_traits&lt;wchar_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u8streampos}} {{mark c++20}}|{{c/core|std::fpos&lt;std::char_traits&lt;char8_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u16streampos}} {{mark c++11}}|{{c/core|std::fpos&lt;std::char_traits&lt;char16_t&gt;::state_type&gt;}}}}
{{dsc|{{tt|std::u32streampos}} {{mark c++11}}|{{c/core|std::fpos&lt;std::char_traits&lt;char32_t&gt;::state_type&gt;}}}}
{{dsc end}}

{{anchor|错误类别接口}}
====错误类别接口 {{mark since c++11}}====
{{dsc begin}}
{{dsc header|ios}}
{{dsc inc|cpp/io/dsc io_errc}}
{{dsc inc|cpp/io/dsc iostream_category}}
{{dsc end}}

{{anchor|打印函数}}
===打印函数 {{mark since c++23}}===
对 Unicode 编码的格式化文本提供输入输出支持的 print 族函数。这些函数拥有 {{lc|std::format}} 带来的性能优势，默认情况下与本地环境无关；减少使用全局状态，同时避免 {{c|operator&lt;&lt;}} 调用和申请临时的 {{lc|std::string}} 对象，一般情况下比 [[#基于流的输入/输出|iostreams]] 和 [[#C 风格输入/输出|stdio]] 更高效。

标准库提供了如下 print 族函数：
{{dsc begin}}
{{dsc header|print}}
{{dsc inc|cpp/io/dsc print}}
{{dsc inc|cpp/io/dsc println}}
{{dsc inc|cpp/io/dsc vprint_unicode}}
{{dsc inc|cpp/io/dsc vprint_nonunicode}}
{{dsc sep}}
{{dsc header|ostream}}
{{dsc inc|cpp/io/basic_ostream/dsc print}}
{{dsc inc|cpp/io/basic_ostream/dsc println}}
{{dsc end}}

==={{rl|c|C 风格输入/输出}}===
C++ 也包含了 {{rl|c|C 所定义的输入/输出函数}}，如 {{lc|std::fopen}}、{{lc|std::getc}} 等。

===参阅===
{{dsc begin}}
{{dsc|[[cpp/filesystem|文件系统库]] {{mark since c++17}}}}
{{dsc end}}

{{langlinks|ar|de|en|es|fr|it|ja|pl|pt|ru}}