===各编译器厂商的兼容性检查单文档===

====GCC {{small|(更新于 2025-01)}}====
* [https://gcc.gnu.org/projects/cxx-status.html#cxx11 C++11 核心语言支持状况]（4.8.1 起完成，除了无编译器实现并于 C++23 移除的 {{stddoc|n2670}}）
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2011 C++11 库支持状况]（5.1 起完成）
* [https://gcc.gnu.org/projects/cxx-status.html#cxx14 C++14 核心语言支持状况]（5.1 起完成）
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2014 C++14 库支持状况]（5.1 起完成）
* [https://gcc.gnu.org/projects/cxx-status.html#cxx17 C++17 核心语言支持状况]（7.1 起完成）
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017 C++17 库支持状况]（12.0 起完成）
* [https://gcc.gnu.org/projects/cxx-status.html#cxx20 C++20 核心语言支持状况]（11.0 起除模块部分完成）
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020 C++20 库支持状况]（14.0 起完成）
* [https://gcc.gnu.org/projects/cxx-status.html#cxx23 C++23 核心语言支持状况]
* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2023 C++23 库支持状况]
* [https://gcc.gnu.org/projects/cxx-status.html#cxx26 C++26 核心语言支持状况]
&lt;!--* [https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2026 C++26 库支持状况]--&gt;
* [https://gcc.gnu.org/projects/cxx-status.html#tses 技术规范支持状况]
* [https://gcc.gnu.org/projects/cxx-dr-status.html 核心语言缺陷报告状况]

====Clang {{small|(更新于 2025-01)}}====
* [https://github.com/orgs/llvm/projects/31 libc++ 实时遵从状态]
* [https://clang.llvm.org/cxx_status.html#cxx11 C++11 核心语言支持状况]（3.3 起完成）
* C++11 库支持状况（[https://github.com/llvm-mirror/libcxx/commit/5fec82dc0db3623546038e4a86baa44f749e554f#diff-c330060c0d4b6fb493c2be0ff80a3f7e 2012-07-29] 起完成）
* [https://clang.llvm.org/cxx_status.html#cxx14 C++14 核心语言支持状况]（3.4 起完成）
* [https://releases.llvm.org/16.0.0/projects/libcxx/docs/Status/Cxx14.html C++14 库支持状况]（3.5 起完成）
* [https://clang.llvm.org/cxx_status.html#cxx17 C++17 核心语言支持状况]（5.0 起完成）
* [https://libcxx.llvm.org/Status/Cxx17.html C++17 库支持状况]
* [https://clang.llvm.org/cxx_status.html#cxx20 C++20 核心语言支持状况]
* [https://libcxx.llvm.org/Status/Cxx20.html C++20 库支持状况]
* [https://clang.llvm.org/cxx_status.html#cxx23 C++23 核心语言支持状况]
* [https://libcxx.llvm.org/Status/Cxx23.html C++23 库支持状况]
* [https://clang.llvm.org/cxx_status.html#cxx26 C++26 核心语言支持状况]
* [https://libcxx.llvm.org/Status/Cxx2c.html C++26 库支持状况]
* [https://clang.llvm.org/cxx_status.html#ts 技术规范支持状况]
* [https://clang.llvm.org/cxx_dr_status.html 核心语言缺陷报告状况]

====Apple Clang {{small|(更新于 2025-01)}}====
* [https://en.wikipedia.org/wiki/Xcode#Toolchain_versions 维基百科上的 Xcode 工具链版本]
* [https://developer.apple.com/xcode/cpp/ Xcode C++ 语言与 C++ 标准库支持]
* [https://developer.apple.com/documentation/xcode_release_notes Xcode 发行注记]
* [https://developer.apple.com/documentation/xcode-release-notes/xcode-16-release-notes Xcode 16 的 C++20/23/26 支持状态]

====Microsoft Visual Studio {{small|(更新于 2025-02)}}====
* [https://docs.microsoft.com/en-us/cpp/overview/visual-cpp-language-conformance Microsoft C/C++ 语言遵从性（Visual Studio 2015 起）]
* [https://github.com/microsoft/STL/wiki/Changelog STL 更新日志（Visual Studio 2019 16.5 起）]
* 未列在上述资料中的功能特性参考
** [https://learn.microsoft.com/en-us/previous-versions/hh567368(v=vs.140) 支持的 C++11/14/17 特性（现代 C++）]，包含 C++11 核心语言功能特性
** [https://learn.microsoft.com/en-us/cpp/porting/visual-cpp-what-s-new-2003-through-2015 Visual C++ 2003 到 2015 的更新内容]，包含 C++11 的 N1913
** [https://devblogs.microsoft.com/cppblog/c1417-features-and-stl-fixes-in-vs-15-preview-5/ VS “15” 预览版 5 中 C++14/17 功能特性和 STL 修正]，包含 C++14 的 LWG2112、LWG2246、LWG2285 和 C++17 的 LWG2296
** [https://devblogs.microsoft.com/cppblog/stl-features-and-fixes-in-vs-2017-15-8/ VS 2017 15.8 中的 STL 功能特性和修正]，包含 C++17 的 LWG2911
** [https://learn.microsoft.com/en-us/cpp/overview/cpp-conformance-improvements Visual Studio 2022 中的 C++ 一致性改进、行为变更和漏洞修复]，包含 C++23 的 P2334R1
** [https://developercommunity.visualstudio.com/t/CWG-2518-not-yet-implemented---static_as/10554332 CWG 2518 未实现 - 未实例化模板中的 static_assert 报错]，包含 C++23 的 CWG2518
** [https://devblogs.microsoft.com/cppblog/msvc-compiler-language-updates-in-visual-studio-2022-version-17-12/ Visual Studio 2022 版本 17.12 中 MSVC 编译器的语言更新]，包含 C++23 的 P2128R6
** [https://devblogs.microsoft.com/cppblog/msvc-compiler-updates-in-visual-studio-2022-version-17-13/ Visual Studio 2022 17.13 中 MSVC 的 C++ 语言更新]，包含 C++23 的 P0330R8、P0847R7、P2242R3

====Intel C++ {{small|(更新于 2023-01)}}====
* [https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler C++11 核心语言支持状况]（15.0 起完全支持）
* [https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler C++14 核心语言支持状况]（17.0 起功能完整，N3664 是一项优化）
* [https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler C++17 核心语言支持状况]（不完全支持）
* [https://www.intel.com/content/www/us/en/developer/articles/technical/c20-features-supported-by-intel-cpp-compiler.html C++20 核心语言支持状况]（不完全支持）
* [https://software.intel.com/en-us/articles/intel-c-compiler-190-for-linux-release-notes-for-intel-parallel-studio-xe-2019#cpp17 Intel 19.0 beta 的 C++17 特性]
* Intel 不提供 C++ 标准库的实现，除了
** [https://software.intel.com/en-us/get-started-with-pstl 并行 STL]（C++17 带执行策略支持的标准库算法的实现）
* [https://charm.cs.illinois.edu/redmine/issues/1560#note-6 Intel 与 GCC 的 libstdc++ 各版本间的兼容性]

====EDG {{small|(更新于 2025-01)}}====
* [https://www.edg.com/features.html C++11 核心语言支持状况]
* [https://www.edg.com/cpp14_features.html C++14 核心语言支持状况]
* [https://www.edg.com/cpp17_features.html C++17 核心语言支持状况]
* [https://www.edg.com/cpp20_features.html C++20 核心语言支持状况]
* [https://www.edg.com/cpp23_features.html C++23 核心语言支持状况]
* [https://www.edg.com/cpp26_features.html C++26 核心语言支持状况]
* EDG 不提供 C++ 标准库的实现

====Oracle C++ {{small|(更新于 2017-07)}}====
* 版本号为编译器版本而非 Oracle Studio 版本
* [http://docs.oracle.com/cd/E37069_01/html/E37071/gncix.html C++11 核心语言支持状况]
** [https://docs.oracle.com/cd/E60778_01/html/E60742/gkeza.html#scrolltoc 5.14 中已经加入所缺少的 C++11 支持（页面中有错误，仍然声称是 5.13）]
* [https://docs.oracle.com/cd/E60778_01/html/E60742/gncix.html#scrolltoc 5.14 中加入的 C++14 功能特性]
** 5.15 中添加了完整 C++14 支持。
* Oracle 提供对标准库的四种不同实现：
** libCstd（RogueWave 标准库版本 2），早于 C++98
** stlport4（STLport 标准库版本 4.5.3），早于 C++03
** stdcxx4（Apache 标准库版本 4），早于 C++11
** libstdc++（GCC 运行时库，根据不同发布版本对 C++11 和 C++14 有所支持）

====IBM XL C++ {{small|(更新于 2018-05)}}====
* IBM XL C++ for Linux
** [https://www.ibm.com/support/knowledgecenter/en/SSXVZZ_16.1.0/com.ibm.xlcpp161.lelinux.doc/language_ref/standard_features.html 核心语言支持状况]：13.1.6 起 C++11 完整，16.1.0 中部分 C++14
** IBM 在 Linux 上不提供 C++ 标准库实现（使用 GNU libstdc++）
* IBM XL C++ for AIX
** [https://www.ibm.com/support/knowledgecenter/en/SSGH3R_13.1.3/com.ibm.xlcpp1313.aix.doc/language_ref/cpp0x_exts.html 核心语言支持状况]：13.1.3 中部分支持 C++11。
** IBM 为 AIX 提供[http://www-01.ibm.com/support/knowledgecenter/SSGH3R_13.1.0/com.ibm.xlcpp131.aix.doc/standlib/header_files.html?lang=en 一个 Dinkumware 库的版本]，带 C++ TR1 的完整支持，包括 &lt;regex&gt;，但不支持 C++11
** [https://www.ibm.com/support/pages/ibm-xl-cc-compilers-features IBM XL C/C++ 编译器特性]

====HP aCC====
* [http://h20565.www2.hpe.com/hpsc/doc/public/display?sp4ts.oid=4145774&amp;docLocale=en_US&amp;docId=emr_na-c04221956 HP aC++ A.06.28 发行注记 (包括 C++11 核心语言功能特性)]
* HP 提供了 RogueWave STL 2.0 对 C++98 标准库的实现的一个版本

====Digital Mars C++====
* [http://www.digitalmars.com/ctg/CPP0x-Language-Implementation.html C++11 核心语言支持状况]

====Embarcadero C++====
* [http://docwiki.embarcadero.com/RADStudio/Berlin/en/C%2B%2B11_Language_Features_Compliance_Status 语言功能特性遵从状况] (RAD Studio 10.1 Berlin)，包括老式编译器与 Clang 增强编译器（基于 Clang 3.3）所支持的 C++11 功能特性
* [http://docwiki.embarcadero.com/RADStudio/Rio/en/Modern_C%2B%2B_Language_Features_Compliance_Status 语言功能特性遵从状况] (RAD Studio 10.3 Rio)，包括老式编译器所支持的 C++11 功能特性，和 Clang 增强编译器（基于 Clang 5.0）所支持的 C++11、C++14 及 C++17 功能特性

====Cray {{small|(更新于 2023-02)}}====
* [http://docs.cray.com/books/S-2179-84/S-2179-84.pdf Cray C 与 C++ 参考手册 (8.4)] 声称 8.4 版支持除 alignas 外的全部 C++14
* [https://pubs.cray.com/content/S-2179/8.6/cray-c-and-c++-reference-manual-s-2179-86/cray-c-and-c++-dialect-use#concept_kgd_fcr_3s Cray C 与 C++ 参考手册 (8.6)] 对于版本 8.6，声称支持全部 C++14
* [https://pubs.cray.com/pdf-attachments/attachment?pubId=00761211-DC&amp;attachmentId=pub_00761211-DC.pdf Cray C 与 C++ 参考手册 (9.1)] 对于版本 9.1 未声称 C++14 后的支持
* [https://support.hpe.com/hpesc/public/docDisplay?docLocale=en_US&amp;docId=a00123566en_us HPE Cray Clang C 与 C++ 速查参考 (14.0) (S-2179)] 自 11 起的版本（至少到 14）均基于 Clang，一般预期其具有相应的语言支持。涉及“不常见的”代码生成或链接行为的功能特性，诸如协程或模块，可能会有所缺落，因为编译器还要支持针对 GPU 和类似的其他首先设备生成代码。

====Portland Group (PGI) {{small|(更新于 2019-01)}}====
* [https://www.pgroup.com/doc/pgirn161.pdf 2016 版发行注记] 声称支持 C++14，但不支持“推广的 constexpr 以及 constexpr 成员函数和隐含的 const、变量模板、澄清内存分配（分配的合并）”
* [https://www.pgroup.com/resources/docs/18.1/pdf/pgirn181-x86.pdf 2018 版发行注记]
* [https://www.pgroup.com/resources/docs/19.1/x86/pgi-ref-guide/index.htm PGI 19.1 参考手册]
* PGI 不提供 C++ 标准库的实现

====Nvidia Cuda nvcc {{small|(更新于 2023-01-12)}}====
* [https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#c-cplusplus-language-support CUDA CUDA C 编程手册 (v11.2.1)]
* nvcc 版本 11.0 及之后的版本支持所有 C++17 语言功能特性，一些受到的限制在[https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cpp17 此处]描述
* nvcc 版本 12.0 及之后的版本支持所有 C++20 语言功能特性，一些受到的限制在[https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cpp20 此处]描述
* NVCC 不提供 C++ 标准库的实现

====Texas Instruments {{small|(更新于 2018-05)}}====
* [http://www.ti.com/lit/ug/slau132r/slau132r.pdf cl430 版本 v18.1.0] 声称支持 C++14

====Analog Devices {{small|(更新于 2018-05)}}====
* [http://www.analog.com/media/en/dsp-documentation/software-manuals/cces-SharcCompiler-manual.pdf CrossCore Embedded Studio 2.8.0 for SHARC] 声称支持C++11