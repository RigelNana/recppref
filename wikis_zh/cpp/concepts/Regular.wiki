{{cpp/title|regular}}
{{cpp/concepts/navbar}}
{{ddcl|header=concepts|since=c++20|1=
template &lt;class T&gt;
concept regular = std::semiregular&lt;T&gt; &amp;&amp; std::equality_comparable&lt;T&gt;;
}}

{{tt|regular}} 概念指定类型为''正则''，即它可复制、可默认构造且可比较相等。它被表现与如 {{c/core|int}} 的内建类型类似，且能以 {{tt|1===}} 进行比较的类型所满足。

===示例===
{{example
|code=
#include &lt;concepts&gt;
#include &lt;iostream&gt;

template&lt;std::regular T&gt;
struct Single
{
    T value;
    friend bool operator==(const Single&amp;, const Single&amp;) = default;
};

int main()
{
    Single&lt;int&gt; myInt1{4};
    Single&lt;int&gt; myInt2;
    myInt2 = myInt1;

    if (myInt1 == myInt2)
        std::cout &lt;&lt; "Equal\n";

    std::cout &lt;&lt; myInt1.value &lt;&lt; ' ' &lt;&lt; myInt2.value &lt;&lt; '\n';
}
|output=
Equal
4 4
}}

===引用===
{{ref std c++23}}
{{ref std|section=18.6|title=Object concepts|id=concepts.object}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=18.6|title=Object concepts|id=concepts.object}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/concepts/dsc semiregular}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}