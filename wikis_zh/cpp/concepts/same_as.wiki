{{cpp/title|same_as}}
{{cpp/concepts/navbar}}
{{ddcl|header=concepts|since=c++20|1=
template &lt; class T, class U &gt;
concept same_as = /* 见下文 */;
}}

概念 {{tt|same_as&lt;T, U&gt;}} 当且仅当 {{tt|T}} 与 {{tt|U}} 代表同一类型才得到满足。

{{c|std::same_as&lt;T, U&gt;}} [[cpp/language/constraints#约束的部分排序|蕴含]] {{c|std::same_as&lt;U, T&gt;}}，反之亦然。

===可能的实现===
{{eq fun|1=
namespace detail
{
    template&lt; class T, class U &gt;
    concept SameHelper = std::is_same_v&lt;T, U&gt;;
}

template&lt; class T, class U &gt;
concept same_as = detail::SameHelper&lt;T, U&gt; &amp;&amp; detail::SameHelper&lt;U, T&gt;;
}}

{{example
|code=
#include &lt;concepts&gt;
#include &lt;iostream&gt;

template&lt;typename T, typename ... U&gt;
concept either = (std::same_as&lt;T, U&gt; {{!!}} ...);

template&lt;typename T&gt;
concept is_printable = std::integral&lt;T&gt; {{!!}} std::floating_point&lt;T&gt; {{!!}}
    either&lt;std::remove_cvref_t&lt;std::remove_pointer_t&lt;std::decay_t&lt;T&gt;&gt;&gt;, char, wchar_t&gt;;

void println(is_printable auto const ... arguments)
{
    (std::wcout &lt;&lt; ... &lt;&lt; arguments) &lt;&lt; '\n';
}

int main()
{
    println("例: ", 3.14, " : ", 42, " : [", 'a', L'-', L"Z]");
}
|output=
例: 3.14 : 42 : [a-Z]
}}

===引用===
{{ref std c++23}}
{{ref std|section=18.4.2|title=Concept {{tt|same_as}}|id=concept.same}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=18.4.2|title=Concept {{tt|same_as}}|id=concept.same}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_same}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}