{{title|''boolean-testable''}}
{{cpp/concepts/navbar}}
{{dcl begin}}
{{dcla|anchor=no|num=1|since=c++20|expos=yes|1=
template&lt; class B &gt;
concept __boolean_testable_impl = std::convertible_to&lt;B, bool&gt;;
}}
{{dcla|anchor=no|num=2|since=c++20|expos=yes|1=
template&lt; class B &gt;
concept boolean-testable =
    __boolean_testable_impl&lt;B&gt; &amp;&amp;
    requires (B&amp;&amp; b) {
        { !std::forward&lt;B&gt;(b) } -&gt; __boolean_testable_impl;
    };
}}
{{dcl end}}

仅用于阐释的概念 {{tti|boolean-testable}} 指定可转换成 {{c/core|bool}} 的表达式，且逻辑运算符对其拥有通常行为（包括{{enwiki|Short-circuit evaluation|短路}}），即使是对于两个不同的 {{tti|boolean-testable}} 类型亦是如此。

正式而言，为满足仅用于阐释的概念 {{tti|__boolean_testable_impl}}，类型必须不定义任何成员 {{c/core|operator&amp;&amp;}} 与 {{c/core|operator{{!!}}}}，而且无可行的非成员 {{c/core|operator&amp;&amp;}} 及 {{c/core|operator{{!!}}}} 可对[[cpp/language/adl|实参依赖查找]]可见。另外给定使 {{c|decltype((e))}} 为 {{tt|B}} 的表达式 {{tt|e}}，{{tti|boolean-testable}} 仅若 {{c|1=bool(e) == !bool(!e)}} 才得以实现。

{{cpp/concepts/equality preservation}}

===注解===
{{tti|boolean-testable}} 类型的例子包括 {{c/core|bool}}、{{lc|std::true_type}}、{{c/core|std::bitset&lt;N&gt;::}}{{ltt|cpp/utility/bitset/reference}} 和 {{c/core|int*}}。

===引用===
{{ref std c++23}}
{{ref std|section=18.5.2|title=Boolean testability|id=concept.booleantestable}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=18.5.2|title=Boolean testability|id=concept.booleantestable}}
{{ref std end}}

{{langlinks|en|es|ja}}