{{cpp/title|common_reference_with}}
{{cpp/concepts/navbar}}
{{ddcl|header=concepts|since=c++20|1=
template&lt; class T, class U &gt;
concept common_reference_with =
    std::same_as&lt;std::common_reference_t&lt;T, U&gt;, std::common_reference_t&lt;U, T&gt;&gt; &amp;&amp;
    std::convertible_to&lt;T, std::common_reference_t&lt;T, U&gt;&gt; &amp;&amp;
    std::convertible_to&lt;U, std::common_reference_t&lt;T, U&gt;&gt;;
}}
概念 {{co|std::common_reference_with&lt;T, U&gt;}} 指定两个类型 {{tt|T}} 与 {{tt|U}} 共享一种二者均能转换到的''公共引用类型''（以 {{lc|std::common_reference_t}} 计算）。

===语义要求===
T 与 U 实现 {{tt|common_reference_with&lt;T, U&gt;}}，仅当给定[[cpp/concepts#相等性保持|保持相等性]]的表达式 {{tt|t1}}、{{tt|t2}}、{{tt|u1}} 及 {{tt|u2}}，且它们满足 {{c|decltype((t1))}} 与 {{c|decltype((t2))}} 均为 {{tt|T}} 而 {{c|decltype((u1))}} 与 {{c|decltype((u2))}} 均为 {{tt|U}}，且满足以下条件：
* 当且仅当 {{tt|t1}} 等于 {{tt|t2}} 时 {{c|std::common_reference_t&lt;T, U&gt;(t1)}} 等于 {{c|std::common_reference_t&lt;T, U&gt;(t2)}}；且
* 当且仅当 {{tt|u1}} 等于 {{tt|u2}} 时 {{c|std::common_reference_t&lt;T, U&gt;(u1)}} 等于 {{c|std::common_reference_t&lt;T, U&gt;(u2)}}。

换言之，到公共引用类型的转换必须[[cpp/concepts#相等性保持|保持相等性]]。

===引用===
{{ref std c++23}}
{{ref std|section=18.4.5|title=Concept {{tt|common_reference_with}}|id=concept.commonref}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=18.4.5|title=Concept {{tt|common_reference_with}}|id=concept.commonref}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc common_reference}}
{{dsc inc|cpp/concepts/dsc common_with}}
{{dsc inc|cpp/types/dsc common_type}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}