{{cpp/title|move_constructible}}
{{cpp/concepts/navbar}}
{{ddcl|header=concepts|since=c++20|1=
template&lt; class T &gt;
concept move_constructible = std::constructible_from&lt;T, T&gt; &amp;&amp; std::convertible_to&lt;T, T&gt;;
}}

概念 {{tt|move_constructible}} 若符合这些条件则得到满足：{{tt|T}} 为引用类型，或者它是对象类型，并且在直接和复制初始化语境中，都能以通常语义从该类型的右值构造该类型的对象。

===语义要求===
若 {{tt|T}} 是对象类型，则 {{tt|move_constructible&lt;T&gt;}} 仅若符合下列条件才得到实现。给定
* {{tt|rv}}，{{tt|T}} 类型的右值，和
* {{tt|u2}}，等于 {{tt|rv}} 的 {{tt|T}} 类型的不同对象，
下列均为真：
* 在定义 {{c|T u {{=}} rv;}} 后，{{tt|u}} 等于 {{tt|u2}}；
* {{tt|T(rv)}} 等于 {{tt|u2}}；且
* 若 {{tt|T}} 无 const 限定，则 {{tt|rv}} 的结果状态（在上述任一条中求值的定义/表达式后）合法但未指定；否则不更改它。

===引用===
{{ref std c++23}}
{{ref std|section=18.4.13|title=Concept {{tt|move_constructible}}|id=concept.moveconstructible}}
{{ref std end}}
{{ref std c++20}}
{{ref std|section=18.4.13|title=Concept {{tt|move_constructible}}|id=concept.moveconstructible}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/types/dsc is_move_constructible}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}