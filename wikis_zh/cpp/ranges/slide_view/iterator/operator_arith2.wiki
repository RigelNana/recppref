{{title|operator+,-{{small|(ranges::slide_view::''iterator'')}}}}
{{cpp/ranges/slide_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i,
                                         difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/ operator+( difference_type n,
                                         const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /*iterator*/ operator-( const /*iterator*/&amp; i,
                                         difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            const /*iterator*/&amp; j )
    requires std::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;, 
                                     ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

进行迭代器算术。

@1,2@ 等价于：{{c|1=auto r = i; r += n; return r;}}。

@3@ 等价于：{{c|1=auto r = i; r -= n; return r;}}。

@4@ 令 {{rlpi|/#数据成员|current_}} 与 {{rlpi|/#数据成员|last_ele_}} 分别为指向滑窗首部与尾部的底层迭代器。
* 若 {{tti|last_ele_}} 存在则等价于 {{c|1=return x.last_ele_ - y.last_ele_;}}。
* 否则等价于 {{c|1=return x.current_ - y.current_;}}。

{{cpp/hidden friend|{{tt|slide_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|i, j|迭代器}}
{{par|n|相对于当前位置的位移}}
{{par end}}

===返回值===
@1,2@ 增加后的迭代器
@3@ 减少后的迭代器
@4@ 给定迭代器之间的距离

===示例===
{{example
|code=
|output=
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|slide_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}