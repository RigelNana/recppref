{{cpp/ranges/slide_view/iterator/title|''iterator''}}
{{cpp/ranges/slide_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/();
}}
{{dcl|num=2|since=c++23|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
        std::convertible_to&lt;ranges::iterator_t&lt;V&gt;, ranges::iterator_t&lt;Base&gt;&gt;
}}
{{dcl|num=3|notes={{mark expos}}|1=
private:
constexpr /*iterator*/( ranges::iterator_t&lt;Base&gt; current,
                        ranges::range_difference_t&lt;Base&gt; n )
    requires (!/*slide-caches-first*/&lt;Base&gt;);
}}
{{dcl|num=4|notes={{mark expos}}|1=
private:
constexpr /*iterator*/( ranges::iterator_t&lt;Base&gt; current,
                        ranges::iterator_t&lt;Base&gt; last_ele,
                        ranges::range_difference_t&lt;Base&gt; n )
    requires /*slide-caches-first*/&lt;Base&gt;;
}}
{{dcl end}}

构造迭代器。

@1@ 默认构造函数。[[cpp/language/value_initialization|值初始化]]各底层数据成员：
* 以 {{c|ranges::iterator_t&lt;Base&gt;()}} 初始化 {{rlpi|/#数据成员|current_}}，
* 以 {{c|ranges::iterator_t&lt;Base&gt;()}} 初始化 {{rlpi|/#数据成员|last_ele_}}（注意该成员可能不出现），
* 以 {{c|0}} 初始化 {{rlpi|/#数据成员|n_}}。

@2@ 从 {{c|/*iterator*/&lt;false&gt;}} 转换为 {{c|/*iterator*/&lt;true&gt;}}。初始化各底层数据成员：
* 以 {{box|{{c/core|std::}}{{ltt|cpp/utility/move}}{{c/core|(i.current_)}}}} 初始化 {{rlpi|/#数据成员|current_}}，
* 以 {{c|i.n_}} 初始化 {{rlpi|/#数据成员|n_}}。
注意 {{c|/*iterator*/&lt;true&gt;}} 只有在 {{rlpi|/#成员类型|Base}} 实现 {{c|/*slide-caches-nothing*/}} 时才成立，因为此时不存在 {{rlpi|/#数据成员|last_ele_}}。

@3@ 被用作构造 {{lc|ranges::slide_view::begin}} 与 {{lc|ranges::slide_view::end}} 的私有构造函数。此构造函数不能被用户访问，初始化各底层数据成员：
* 以 {{c|current}} 初始化 {{rlpi|/#数据成员|current_}}。
* 以 {{c|n}} 初始化 {{rlpi|/#数据成员|n_}}。
注意此重载仅在 {{rlpi|/#数据成员|last_ele_}} 不存在时出现。

@4@ 被 {{lc|ranges::slide_view::begin}} 和 {{lc|ranges::slide_view::end}} 使用的私有构造函数。此构造函数不能被用户访问，初始化各底层数据成员： 
* 以 {{c|current}} 初始化 {{rlpi|/#数据成员|current_}}，
* 以 {{c|last_ele}} 初始化 {{rlpi|/#数据成员|last_ele_}}（注意此数据成员的存在是 {{c|/*slide-caches-first*/&lt;Base&gt;}} 的要求），
* 以 {{c|n}} 初始化 {{rlpi|/#数据成员|n_}}。

===参数===
{{par begin}}
{{par|i|{{c|/*iterator*/&lt;false&gt;}}}}
{{par|current|指向 {{tt|slide_view}} 当前元素的迭代器}}
{{par|last_ele|指向 {{tt|slide_view}} 最后一个元素的迭代器}}
{{par|n|{{tt|slide_view}} 的滑窗宽度}}
{{par end}}

===示例===
{{example
|code=
|output=
}}

{{langlinks|de|en|es|ja|ru}}