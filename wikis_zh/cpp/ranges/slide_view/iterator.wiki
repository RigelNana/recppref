{{cpp/ranges/slide_view/title|''iterator''}}
{{cpp/ranges/slide_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
template&lt; bool Const &gt;
class /*iterator*/
}}

当底层视图 {{tt|V}} 为 {{lconcept|common_range}} 式，为 {{rlpt|begin|slide_view::begin}} 与 {{rlpt|end|slide_view::end}} 的返回类型。

const 限定的重载返回类型 {{c|/*iterator*/&lt;true&gt;}}，非 const 限定重载返回类型 {{c|/*iterator*/&lt;false&gt;}}。
     
===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc expos mem type|Base|private=yes|如果 {{tt|Const}} 为 {{c|true}} 则为 {{c|const V}}，否则为 {{c|V}}。}}
{{dsc|{{tt|iterator_category}}|{{c|std::input_iterator_tag}}}}
{{dsc|{{tt|iterator_concept}}|
* 如果 {{tti|Base}} 实现 {{lconcept|random_access_range}} 则为 {{c|std::random_access_iterator_tag}}。
* 如果 {{tti|Base}} 实现 {{lconcept|bidirectional_range}} 则为 {{c|std::bidirectional_iterator_tag}}。
* 否则为 {{c|std::forward_iterator_tag}}。}}
{{dsc|{{tt|value_type}}|{{c|decltype(views::counted(current_, n_))}}}}
{{dsc|{{tt|difference_type}}|{{c|ranges::range_difference_t&lt;Base&gt;}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名称|定义}}
{{dsc expos mem obj|current_|private=yes|{{c|ranges::iterator_t&lt;Base&gt;}}，持有指向 {{rlpt|/|slide_view}} 当前窗口的第一个底层元素的迭代器}}
{{dsc expos mem obj|last_ele_|private=yes|maybe=yes|{{c|ranges::iterator_t&lt;Base&gt;}}，持有指向 {{rlpt|/|slide_view}} 窗口刚刚滑过去的底层元素的迭代器。仅当 [[#成员类型|{{tti|Base}}]] 实现 {{c|/*slide-caches-first*/}} 时出现。}}
{{dsc expos mem obj|n_|private=yes|{{c|ranges::range_difference_t&lt;Base&gt;}}保有 {{rlpt|/|slide_view}} 的窗口宽度。}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|cpp/ranges/slide_view/iterator/iterator|构造一个迭代器}}
{{dsc mem fun|cpp/ranges/slide_view/iterator/operator*|访问元素}}
{{dsc mem fun|cpp/ranges/slide_view/iterator/operator_at|title=operator[]|按索引访问元素}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|slide_view}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc fun|cpp/ranges/slide_view/iterator/operator_cmp|title=operator==&lt;br&gt;operator&lt;&lt;br&gt;operator&gt;&lt;br&gt;operator&lt;=&lt;br&gt;operator&gt;=&lt;br&gt;operator&lt;=&gt;|比较底层迭代器|notes={{mark c++23}}}}
{{dsc fun|cpp/ranges/slide_view/iterator/operator_arith2|title=operator+&lt;br&gt;operator-|进行迭代器算数|notes={{mark c++23}}}}
{{dsc end}}

===示例===
{{example}}

===引用===
{{ref std c++23}}
{{ref std|title=Class template {{tt|slide_view::iterator}}|id=range.slide.iterator|section=26.7.29.3}}
{{ref std end}}

===参阅===
{{dsc begin}}
&lt;!--
{{dsc inc|cpp/ranges/slide_view/dsc sentinel}}
--&gt;
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}