{{cpp/ranges/view title|as_rvalue}}
{{cpp/ranges/navbar}}
{{dcl begin}}
{{dcl header|ranges}}
{{dcl|num=1|since=c++23|1=
template&lt; ranges::view V &gt;
    requires ranges::input_range&lt;V&gt;
class as_rvalue_view
    : public ranges::view_interface&lt;as_rvalue_view&lt;V&gt;&gt;
}}
{{dcl|num=2|since=c++23|1=
namespace views {
    inline constexpr /* 未指明 */ as_rvalue = /* 未指明 */;
}
}}
{{dcl h|调用签名}}
{{dcl|since=c++23|1=
template&lt; ranges::viewable_range R &gt;
    requires /* 见下文 */
constexpr ranges::view auto as_rvalue( R&amp;&amp; r );
}}
{{dcl end}}

@1@ 范围适配器，用于表示底层 {{lconcept|view}} 的视图，其元素为右值。

@2@ {{named req|RangeAdaptorObject}}。令 {{c|e}} 是一个子表达式，并令 {{tt|T}} 是 {{c|decltype((e))}}。那么表达式 {{c|views::as_rvalue(e)}} [[cpp/language/expressions#Expression-equivalence|表达式等价]]于：
* {{c|views::all(e)}}，如果它是良构的表达式、 {{tt|T}} 实现 {{lconcept|input_range}} 且 {{c|std::same_as&lt;ranges::range_rvalue_reference_t&lt;T&gt;, ranges::range_reference_t&lt;T&gt;&gt;}} 是 {{c|true}}；
* 否则是 {{c|as_rvalue_view{e}&lt;!----&gt;}}。

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|说明}}
{{dsc expos mem obj|base_|id=base|private=yes|spec={{tt|V}}|底层视图}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|{{PAGENAME}}#ctor|构造一个 {{tt|as_rvalue_view}}}}
{{dsc mem fun|{{PAGENAME}}#base|title=base|返回底层视图 {{tt|V}}}}
{{dsc mem fun|{{PAGENAME}}#begin|title=begin|返回 {{tt|as_rvalue_view}} 的首迭代器}}
{{dsc mem fun|{{PAGENAME}}#end|title=end|返回 {{tt|as_rvalue_view}} 的尾迭代器}}
{{dsc mem fun|{{PAGENAME}}#size|title=size|若视图有界则返回其大小}}
{{dsc mem fun|{{PAGENAME}}#reserve_hint|title=reserve_hint|返回底层 {{rlpt|approximately_sized_range}} 的估计大小|notes={{mark c++26}}}}
{{cpp/ranges/view_interface/inherit|embedded=yes|size=yes|data=invalid}}
{{dsc end}}

{{anchor|ctor}}
{{member|{{small|std::ranges::as_rvalue_view::}}as_rvalue_view|
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
as_rvalue_view() requires std::default_initializable&lt;V&gt; = default;
}}
{{dcl|num=2|since=c++23|
constexpr explicit as_rvalue_view( V base );
}}
{{dcl end}}

@1@ 使用默认成员初始化式（{{c|1=== V()}}）对 {{lsi|#base_}} 进行值初始化。
@2@ 使用 {{c|std::move(base)}} 初始化 {{lsi|#base_}}。

===参数===
{{par begin}}
{{par|base|视图}}
{{par end}}
}}

{{anchor|base}}
{{member|{{small|std::ranges::as_rvalue_view::}}base|
{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr V base() const&amp; requires std::copy_constructible&lt;V&gt;;
}}
{{dcl|num=2|since=c++23|
constexpr V base() &amp;&amp;;
}}
{{dcl end}}

返回底层视图。
@1@ 从底层视图复制构造结果。等价于 {{box|{{c/core|return}}{{nbspt}}{{lsi|#base_}}{{sep}}{{c/core|;}}}}。
@2@ 从底层视图移动构造结果。等价于 {{box|{{c/core|return std::move(}}{{lsi|#base_}}{{sep}}{{c/core|);}}}}。
}}

{{anchor|begin}}
{{member|{{small|std::ranges::as_rvalue_view::}}begin|
{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto begin() requires (!/*simple-view*/&lt;V&gt;);
}}
{{dcl|num=2|since=c++23|
constexpr auto begin() const requires ranges::range&lt;const V&gt;;
}}
{{dcl end}}

返回 {{box|{{c/core|std::move_iterator(ranges::begin(}}{{lsi|#base_}}{{sep}}{{c/core|))}}}}。
}}

{{anchor|end}}
{{member|{{small|std::ranges::as_rvalue_view::}}end|
{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto end() requires (!/*simple-view*/&lt;V&gt;);
}}
{{dcl|num=2|since=c++23|
constexpr auto end() const requires ranges::range&lt;const V&gt;;
}}
{{dcl end}}

如果 {{v|1}} 或 {{v|2}} {{c/core|const V}} 实现 {{lconcept|common_range}}，则返回 {{box|{{c/core|std::move_iterator(ranges::end(}}{{lsi|#base_}}{{sep}}{{c/core|))}}}}。

否则返回 {{box|{{c/core|std::move_sentinel(ranges::end(}}{{lsi|#base_}}{{sep}}{{c/core|))}}}}。
}}

{{anchor|size}}
{{member|{{small|std::ranges::as_rvalue_view::}}size|
{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto size() requires ranges::sized_range&lt;V&gt;;
}}
{{dcl|num=2|since=c++23|
constexpr auto size() const requires ranges::sized_range&lt;const V&gt;;
}}
{{dcl end}}

如果视图有界，则返回视图的大小。等价于 {{box|{{c/core|return ranges::size(}}{{lsi|#base_}}{{sep}}{{c/core|);}}}}。
}}

{{anchor|reserve_hint}}
{{member|{{small|std::ranges::as_rvalue_view::}}reserve_hint|
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr auto reserve_hint()
    requires ranges::approximately_sized_range&lt;V&gt;;
}}
{{dcl|num=2|since=c++26|
constexpr auto reserve_hint() const
    requires ranges::approximately_sized_range&lt;const V&gt;;
}}
{{dcl end}}

返回 {{box|{{c/core|ranges::reserve_hint(}}{{lsi|#base_}}{{sep}}{{c/core|)}}}}。
}}

===推导指引===
{{ddcl|since=c++23|
template&lt; class R &gt;
as_rvalue_view( R&amp;&amp; ) -&gt; as_rvalue_view&lt;views::all_t&lt;R&gt;&gt;;
}}

===辅助模板===
{{ddcl|since=c++23|1=
template&lt; class T &gt;
constexpr bool enable_borrowed_range&lt;std::ranges::as_rvalue_view&lt;T&gt;&gt; =
    ranges::enable_borrowed_range&lt;T&gt;;
}}
{{lc|ranges::enable_borrowed_range}} 的特化使得 {{tt|as_rvalue_view}} 在底层视图满足 {{lconcept|borrowed_range}} 时，也满足 {{lconcept|borrowed_range}}。

===注解===
{{ftm begin|sort=yes}}
{{ftm|__cpp_lib_ranges_as_rvalue|{{tt|std::ranges::as_rvalue_view}}|value=202207L|std=C++23}}
{{ftm|__cpp_lib_ranges_reserve_hint|std=C++26|value=202502L|{{lc|ranges::approximately_sized_range}} 与 {{lst|#reserve_hint}}}}
{{ftm end}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;std::string&gt; words =
        {"Quick", "red", "\N{FOX FACE}", "jumped", "over", "a", "pterodactyl"};
    std::vector&lt;std::string&gt; new_words;

    std::ranges::copy(
        words {{!}} std::views::as_rvalue,
        std::back_inserter(new_words)); // 从 words 移动字符串到 new_words

    auto quoted = std::views::transform([](auto&amp;&amp; s) { return "“" + s + "”"; });

    std::cout &lt;&lt; "旧单词: ";
    for (auto&amp;&amp; word : words {{!}} std::views::as_rvalue {{!}} quoted)
        std::cout &lt;&lt; word &lt;&lt; ' ';

    std::cout &lt;&lt; "\n新单词: ";
    for (auto&amp;&amp; word : new_words {{!}} std::views::as_rvalue {{!}} quoted)
        std::cout &lt;&lt; word &lt;&lt; ' ';
}
|p=true
|output=
旧单词: “” “” “” “” “” “” “” 
新单词: “Quick” “red” “🦊” “jumped” “over” “a” “pterodactyl”
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=4083|std=C++23|before={{tt|views::as_rvalue}} 曾接受非输入范围|after=使之拒绝}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc move_iterator}}
{{dsc inc|cpp/iterator/dsc move_sentinel}}
{{dsc inc|cpp/ranges/dsc as_const_view}}
{{dsc end}}

{{langlinks|de|es|ja|ru|en}}