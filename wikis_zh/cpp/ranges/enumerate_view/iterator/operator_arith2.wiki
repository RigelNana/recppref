{{title|operator+,-{{small|(ranges::enumerate_view::''iterator'')}}}}
{{cpp/ranges/enumerate_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /* iterator */
    operator+( const /* iterator */&amp; i, difference_type n )
    requires ranges::random_access_range&lt;/* Base */&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /* iterator */
    operator+( difference_type n, const /* iterator */&amp; i )
    requires ranges::random_access_range&lt;/* Base */&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /* iterator */
    operator-( const /* iterator */&amp; i, difference_type n )
    requires ranges::random_access_range&lt;/* Base */&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type
    operator-( const /* iterator */&amp; i, const /* iterator */&amp; j ) noexcept;
}}
{{dcl end}}

实行{{rlp|/|迭代器}}算术或计算两个迭代器之间的距离。

{{rlpi|/#数据成员|pos_}} 是底层索引，{{rlpi|/#成员类型|Base}} 是底层视图的（可能 const 限定的）类型。

等价于：
@1@ {{c|1=auto temp = i; temp += n; return temp;}}
@2@ {{c|1=return i + n;}}
@3@ {{c|1=auto temp = i; temp -= n; return temp;}}
@4@ {{c|1=return i.pos_ - j.pos_;}}

{{cpp/hidden friend|{{tt|enumerate_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|i, j|迭代器}}
{{par|n|相对当前位置的偏移}}
{{par end}}

===返回值===
@1,2@ 推进了的迭代器
@3@ 回退了的迭代器
@4@ 两个迭代器之间的距离

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3912|std=C++23|before=重载 {{v|4}} 不是 {{c/core|noexcept}} 的|after=它是 {{c/core|noexcept}} 的}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|enumerate_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}