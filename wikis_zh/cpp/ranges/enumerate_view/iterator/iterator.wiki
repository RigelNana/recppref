{{cpp/ranges/enumerate_view/iterator/title|''iterator''}}
{{cpp/ranges/enumerate_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/()
    requires std::default_initializable&lt;ranges::iterator_t&lt;Base&gt;&gt; = default;
}}
{{dcl|num=2|since=c++23|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
        std::convertible_to&lt;ranges::iterator_t&lt;V&gt;, ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=3|notes={{mark expos}}|1=
private:
constexpr explicit /*iterator*/( ranges::iterator_t&lt;Base&gt; current,
                                 difference_type pos);
}}
{{dcl end}}

构造迭代器。

@1@ 默认构造函数。以 {{c|ranges::iterator_t&lt;Base&gt;()}} [[cpp/language/value_initialization|值初始化]]底层迭代器 {{rlpi|/#数据成员|current_}} 并以 {{c|0}} 初始化底层索引 {{rlpi|/#数据成员|pos_}}。

@2@ 从 {{c|/*iterator*/&lt;false&gt;}} 转换为 {{c|/*iterator*/&lt;true&gt;}}。初始化 {{rlpi|/#数据成员|current_}} 为 {{box|{{c/core|std::}}{{ltt|cpp/utility/move}}{{c/core|(i.current_)}}}}、{{rlpi|/#Data members|pos_}} 为 {{box|{{tt|i.}}{{rlpi|/#数据成员|pos_}}}}。

@3@ 用于 {{ltt|cpp/ranges/enumerate_view/begin|enumerate_view::begin}} 和 {{ltt|cpp/ranges/enumerate_view/end|enumerate_view::end}} 的私有构造函数。用户不可访问此构造函数。初始化 {{rlpi|/#Data members|current_}} 为 {{c|std::move(current)}}、{{rlpi|/#Data members|pos_}} 为 {{c|pos}}。

===参数===
{{par begin}}
{{par|i|一个 {{c|/*iterator*/&lt;false&gt;}}}}
{{par end}}

===示例===
{{example
|code=
|output=
}}

{{langlinks|de|en|es|ja|ru}}