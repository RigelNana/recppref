{{cpp/ranges/enumerate_view/title|size}}
{{cpp/ranges/enumerate_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
constexpr auto size() requires ranges::sized_range&lt;V&gt;;
}}
{{dcl|num=2|since=c++23|1=
constexpr auto size() const requires ranges::sized_range&lt;const V&gt;;
}}
{{dcl end}}

返回元素数量。等价于 {{c|return ranges::size(base_);}}，其中 {{rlpi|/#数据成员|base_}} 表示底层视图。

===参数===
(无)

===返回值===
元素数量。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;forward_list&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;

int main()
{
    constexpr static auto v1 = {1, 2, 3, 4, 5};
    constexpr auto ev1{v1 {{!}} std::views::enumerate};
    static_assert(ev1.size() == 5);
    static_assert(std::ranges::sized_range&lt;decltype(v1)&gt;);

    auto v2 = std::forward_list{1, 2, 3, 4, 5};
    auto ev2 {v2 {{!}} std::views::enumerate};
    static_assert(not std::ranges::sized_range&lt;decltype(v2)&gt;)
    // auto size = ev2.size(); // 错误: v2 不是有大小范围
    assert(std::ranges::distance(v2) == 5); // OK, distance 不要求有大小范围
                                            // 但此处复杂度是 O(N)
                                           
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc size}}
{{dsc inc|cpp/ranges/dsc ssize}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}