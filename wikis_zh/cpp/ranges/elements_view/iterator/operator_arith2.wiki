{{title|operator+,-{{small|(ranges::elements_view::''iterator'')}}}}
{{cpp/ranges/elements_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i, difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++20|1=
friend constexpr /*iterator*/ operator+( difference_type n, const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++20|1=
friend constexpr /*iterator*/ operator-( const /*iterator*/&amp; i, difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++20|1=
friend constexpr difference_type operator-( const /*iterator*/&amp; x,
                                            const /*iterator*/&amp; y )
    requires std::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;, ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

@1,2@ 返回增加 {{c|n}} 的迭代器 {{c|i}}。
@3@ 返回减少 {{c|n}} 的迭代器 {{c|i}}。
@4@ 返回 {{c|x}} 与 {{c|y}} 之间的距离。

{{cpp/hidden friend|{{tt|elements_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|i, x, y|迭代器}}
{{par|n|相对于当前位置的位置}}
{{par end}}

===返回值===
@1,2@ {{c|1=[&amp;]{ auto j = i; j += n; return j; }()}}
@3@ {{c|1=[&amp;]{ auto j = i; j -= n; return j; }()}}
@4@ {{c|x.base() - y.base()}}

===示例===
{{example}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3483|std=C++20|before={{tt|elements_view::iterator}} 的差被过度约束|after=放松要求}}
{{dr list end}}

{{langlinks|de|en|es|ja|ru}}