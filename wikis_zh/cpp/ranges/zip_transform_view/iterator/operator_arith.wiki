{{cpp/ranges/zip_transform_view/iterator/title|1=operator++,--,+=,-=}}
{{cpp/ranges/zip_transform_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr /*iterator*/&amp; operator++();
}}
{{dcl|num=2|since=c++23|
constexpr void operator++( int );
}}
{{dcl|num=3|since=c++23|
constexpr /*iterator*/ operator++( int )
    requires ranges::forward_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
constexpr /*iterator*/&amp; operator--()
    requires ranges::bidirectional_range&lt;Base&gt;;
}}
{{dcl|num=5|since=c++23|
constexpr /*iterator*/ operator--( int )
    requires ranges::bidirectional_range&lt;Base&gt;;
}}
{{dcl|num=6|since=c++23|1=
constexpr /*iterator*/&amp; operator+=( difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=7|since=c++23|1=
constexpr /*iterator*/&amp; operator-=( difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl end}}

增加或减少{{rlp|/|迭代器}}。

令 {{rlpi|/#数据成员|inner_}} 为底层迭代器，并令 {{rlpi|/#成员类型|Base}} 为仅用于阐释的成员类型。

等价于：
@1@ {{c|++inner_; return *this;}}
@2@ {{c|++*this;}}
@3@ {{c|1=auto tmp = *this; ++*this; return tmp;}}
@4@ {{c|--inner_; return *this;}}
@5@ {{c|1=auto tmp = *this; --*this; return tmp;}}
@6@ {{c|1=inner_ += n; return *this;}}
@7@ {{c|1=inner_ -= n; return *this;}}

===参数===
{{par begin}}
{{par|n|相对于当前位置的位置}}
{{par end}}

===返回值===
@1,4,6,7@ {{c|*this}}
@2@ （无）
@3,5@ {{c|*this}} 改动前做出的副本

===示例===
{{example
|code=
|output=
}}

===参阅===
{{dsc begin}}&lt;!--
{{dsc inc|cpp/ranges/adaptor/iterator/dsc_operator_arith2|zip_transform_view}}--&gt;
{{dsc end}}

{{langlinks|de|en|es|fr|ja|ru}}