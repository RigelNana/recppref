{{cpp/ranges/view title|to_input}}
{{cpp/ranges/to_input_view/navbar}}
{{dcl begin}}
{{dcl header|ranges}}
{{dcl|num=1|since=c++26|1=
template&lt; ranges::input_range V &gt;
    requires ranges::view&lt;V&gt;
class to_input_view
    : public ranges::view_interface&lt;to_input_view&lt;V&gt;&gt;
}}
{{dcl|num=2|since=c++26|1=
namespace views {
    inline constexpr /* 未指明 */ to_input = /* 未指明 */;
}
}}
{{dcl h|调用签名}}
{{dcl|since=c++26|1=
template&lt; ranges::viewable_range R &gt;
    requires /* 见下文 */
constexpr ranges::view auto to_input( R&amp;&amp; r );
}}
{{dcl end}}

@1@ 范围适配器，将一个底层 {{lconcept|view}} 表示为一个仅为 {{lconcept|input_range}} 且不是 {{lconcept|common_range}} 的视图。

@2@ {{named req|RangeAdaptorObject}}。令 {{c|e}} 为子表达式，并令 {{c|T}} 为 {{c|decltype(e)}}。那么表达式 {{c|views::to_input(e)}} [[cpp/language/expressions#表达式等价|表达式等价]]于：
* {{c|views::all(e)}}，如果它是良构表达式并且以下条件都为 {{c|true}}：
** {{tt|T}} 实现 {{lconcept|input_range}}，
** {{tt|T}} 不满足 {{lconcept|common_range}}，以及
** {{tt|T}} 不满足 {{lconcept|forward_range}}。
* 否则为 {{c|to_input_view{e}&lt;!-- --&gt;}}。

结果是，{{tt|to_input_view}} 从不实现任何比 {{lconcept|input_range}} 更强的范围概念。特别是，它不实现以下任何概念：
* {{lconcept|forward_range}}
* {{lconcept|bidirectional_range}}
* {{lconcept|random_access_range}}
* {{lconcept|contiguous_range}}
此外，{{tt|to_input_view}} 也不实现 {{lconcept|common_range}}。然而，当其底层视图 {{tt|V}} 实现 {{lconcept|borrowed_range}}、{{lconcept|constant_range}} 和 {{lconcept|sized_range}} 时，它也实现相应的概念。

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|描述}}
{{dsc expos mem obj|base_|id=base|private=yes|spec={{tt|V}}|底层视图}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|{{PAGENAME}}#ctor|构造 {{tt|to_input_view}}}}
{{dsc mem fun|{{PAGENAME}}#base|title=base_fun|返回底层（适配的）视图的副本}}
{{dsc mem fun|{{PAGENAME}}#begin|title=begin|返回指向起始的迭代器}}
{{dsc mem fun|{{PAGENAME}}#end|title=end|返回指向末尾的迭代器或哨位}}
{{dsc mem fun|{{PAGENAME}}#size|title=size|返回元素数。仅当底层（适配的）范围满足 {{lconcept|sized_range}} 时才提供。}}
{{cpp/ranges/view_interface/inherit|embedded=yes|size=yes}}
{{dsc end}}

{{anchor|ctor}}
{{member|{{small|std::ranges::to_input_view::}}to_input_view|
{{dcl begin}}
{{dcl|num=1|since=c++26|1=
to_input_view() requires std::default_initializable&lt;V&gt; = default;
}}
{{dcl|num=2|since=c++26|
constexpr explicit to_input_view( V base );
}}
{{dcl end}}

@1@ 以默认成员初始化器（{{c|1== V()}}）值初始化 {{tti|base_}}。
@2@ 以 {{c|std::move(base)}} 初始化 {{tti|base_}}。

===参数===
{{par begin}}
{{par|base|一个视图}}
{{par end}}
}}

{{anchor|base_fun}}
{{member|{{small|std::ranges::to_input_view::}}base|
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr V base() const&amp; requires std::copy_constructible&lt;V&gt;;
}}
{{dcl|num=2|since=c++26|
constexpr V base() &amp;&amp;;
}}
{{dcl end}}
@1@ 从底层视图复制构造结果。等价于 {{c|return base_;}}。
@2@ 从底层视图移动构造结果。等价于 {{c|return std::move(base_);}}。
}}

{{anchor|begin}}
{{member|{{small|std::ranges::to_input_view::}}begin|
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr auto begin() requires (!__simple_view&lt;V&gt;);
}}
{{dcl|num=2|since=c++26|
constexpr auto begin() const requires ranges::range&lt;const V&gt;;
}}
{{dcl end}}
@1@ 等价于 {{c|return /*iterator*/&lt;false&gt;(ranges::begin(base_));}}
@2@ 等价于 {{c|return /*iterator*/&lt;true&gt;(ranges::begin(base_));}}
}}

{{anchor|end}}
{{member|{{small|std::ranges::to_input_view::}}end|
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr auto end() requires (!__simple_view&lt;V&gt;);
}}
{{dcl|num=2|since=c++26|
constexpr auto end() const requires ranges::range&lt;const V&gt;;
}}
{{dcl end}}
@1,2@ 等价于 {{c|return ranges::end(base_);}}
}}

{{anchor|size}}
{{member|{{small|std::ranges::to_input_view::}}size|
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr auto size() requires ranges::sized_range&lt;V&gt;;
}}
{{dcl|num=2|since=c++26|
constexpr auto size() const requires ranges::sized_range&lt;const V&gt;;
}}
{{dcl end}}
@1,2@ 等价于 {{c|return ranges::size(base_);}}
}}

===推导指引===
{{ddcl|since=c++26|
template&lt; class R &gt;
to_input_view( R&amp;&amp; ) -&gt; to_input_view&lt;views::all_t&lt;R&gt;&gt;;
}}

===嵌套类===
{{dsc begin}}
{{dsc expos mem tclass|cpp/ranges/to_input_view/iterator|the iterator type}}
{{dsc end}}

===辅助模板===
{{ddcl|since=c++26|1=
template&lt; class T &gt;
constexpr bool enable_borrowed_range&lt;std::ranges::to_input_view&lt;T&gt;&gt; =
    ranges::enable_borrowed_range&lt;T&gt;;
}}
{{c/core|std::ranges::enable_borrowed_range}} 的这个特化使得 {{tt|to_input_view}} 在底层视图满足 {{lconcept|borrowed_range}} 时也满足它。

===注解===
{{tt|to_input_view}} 可用于避免为提供更强的迭代器强度而必须的开销。

{{ftm begin}}
{{ftm|__cpp_lib_ranges_to_input|value=202502L|std=C++26|{{tt|std::ranges::to_input_view}}}}
{{ftm end}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc input_range}}
{{dsc inc|cpp/ranges/dsc common_view}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}