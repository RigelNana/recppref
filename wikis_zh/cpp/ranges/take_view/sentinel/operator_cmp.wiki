{{title|1= operator=={{small|(std::ranges::take_view::''sentinel''&lt;Const&gt;)}}}}
{{cpp/ranges/take_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++20|1=
friend constexpr bool
    operator==( const std::counted_iterator&lt;ranges::iterator_t&lt;Base&gt;&gt;&amp; y,
                const /*sentinel*/&amp; x );
}}
{{dcl|num=2|since=c++20|1=
template&lt; bool OtherC = !Const &gt;
    requires std::sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                               ranges::iterator_t&lt;/*add-const-if*/&lt;OtherC, V&gt;&gt;&gt;
friend constexpr bool
    operator==( const std::counted_iterator&lt;
                          ranges::iterator_t&lt;/*add-const-if*/&lt;OtherC, V&gt;&gt;&gt;&amp; y,
                const /*sentinel*/&amp; x );
}}
{{dcl end}}

比较 {{c|take_view::/*sentinel*/}} 与 {{lc|std::counted_iterator}}（常通过调用 {{ltt|cpp/ranges/take_view/begin|take_view::begin}} 获得）。

若 {{c|y}} 指向第 N 个元素后一位置，或抵达了底层视图末尾则为 {{c|true}}，其中 N 为传递给 [[cpp/ranges/take_view/take_view|{{tt|take_view}} 的构造函数]]的数。

仅用于阐释的别名模板 {{c/core|/*add-const-if*/}} 定义为&lt;br&gt;
{{c multi
|template&lt;bool C, class T&gt;
|using /*add-const-if*/ {{=}} std::conditional_t&lt;C, const T, T&gt;;
}}。

{{cpp/hidden friend|plural=yes|{{tt|std::ranges::take_view::''sentinel''&lt;Const&gt;}}}}

{{cpp/note synthesized eq}}

===参数===
{{par begin}}
{{par|y|要比较的 {{lc|std::counted_iterator}}}}
{{par|x|要比较的哨位}}
{{par end}}

===返回值===
{{c|1= y.count() == 0 {{!!}} y.base() == x.end_}}，其中 {{tti|end_}} 代表底层哨位。

===示例===
{{example
|code=
|output=
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3449|std=C++20|before=不支持相异 const 限定的 {{tt|take_view}} 的迭代器与哨位间的比较|after=使得在可能时支持}}
{{dr list end}}

{{langlinks|en|es|ja|ru}}