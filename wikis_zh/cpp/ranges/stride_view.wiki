{{cpp/ranges/view title|stride}}
{{cpp/ranges/stride_view/navbar}}
{{dcl begin}}
{{dcl header|ranges}}
{{dcl|num=1|since=c++23|1=
template&lt; ranges::input_range V &gt;
    requires ranges::view&lt;V&gt;
class stride_view
    : public ranges::view_interface&lt;stride_view&lt;V&gt;&gt;
}}
{{dcl|num=2|since=c++23|1=
namespace views {
    inline constexpr /* 未指明 */ stride = /* 未指明 */;
}
}}
{{dcl h|调用签名}}
{{dcl|since=c++23|1=
template&lt; ranges::viewable_range R &gt;
constexpr ranges::view auto stride( R&amp;&amp; r, ranges::range_difference_t&lt;R&gt; n );
}}
{{dcl|since=c++23|1=
template&lt; class DifferenceType &gt;
constexpr /* 范围适配器闭包 */ stride( DifferenceType&amp;&amp; n );
}}
{{dcl h|辅助模板}}
&lt;!-- TODO: show or add links to: __simple_view , __div_ceil, __maybe_const, __to_unsigned_like --&gt;
{{dcl end}}

@1@ {{tt|stride_view}} 是接收单个视图 {{lconcept|view}} 与数字 {{tti|n}} 的范围适配器。其生成的视图由原视图每次前进 ''n'' 个元素组成。这意味着，对非负索引 {{tti|i}}，生成视图的第 {{tti|m}} 个元素为原视图第 {{tti|(n * i)}} 个元素。原视图的元素的索引若不是 {{tti|n}} 的倍数，不会出现在生成视图中。

@@ 令 {{tti|S}} 为原视图的大小，那么生成视图的大小为：
* 如果 {{c|1=S &gt;= n}}；为 {{c|(S / n) + (S % n ? 1 : 0)}}，
* 如果 {{c|S &gt; 0}}；为 {{c|1}}，
* 否则为 {{c|0}}，而生成的视图为空。

@2@ 名字 {{c|views::stride}} 代表一个{{named req|RangeAdaptorObject}}，给定子表达式 {{c|e}} 和 {{c|n}}，{{c|views::stride(e, n)}}[[cpp/language/expressions#表达式等价|表达式等价]]于 {{c|stride_view(e, n)}}。

@@ {{tt|n}} 必须大于 {{c|0}}，否则其行为未定义。

{{tt|stride_view}} 始终实现 {{lconcept|input_range}}，如果被适配的 {{lconcept|view}} 类型 {{c|V}} 实现 {{lconcept|forward_range}}，{{lconcept|bidirectional_range}}，{{lconcept|random_access_range}}，和/或 {{lconcept|sized_range}}，则它也实现对应概念。 
只要底层视图 {{c|V}} 实现 {{lconcept|common_range}}，则 {{c|stride_view&lt;V&gt;}} 也实现它。

===数据成员===
{{dsc begin}}
{{dsc hitem|成员|说明}}
{{dsc expos mem obj|base_|id=base|spec={{tt|V}}|底层视图}}
{{dsc expos mem obj|stride_|id=stride|spec={{c/core|ranges::range_difference_t&lt;V&gt;}}|大小对象（“步长”）}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc constructor|stride_view}}
{{dsc mem fun|cpp/ranges/stride_view/stride|返回存储的步长值|notes={{mark c++23}}}}
{{dsc inc|cpp/ranges/adaptor/dsc base|stride_view}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|stride_view}}
{{dsc inc|cpp/ranges/adaptor/dsc end|stride_view}}
{{dsc inc|cpp/ranges/adaptor/dsc size|stride_view}}
{{dsc inc|cpp/ranges/adaptor/dsc reserve_hint|stride_view}}
{{cpp/ranges/view_interface/inherit|embedded=yes|size=invalid|data=invalid}}
{{dsc end}}

==={{rl|deduction guides|推导指引}}===

===嵌套类===
{{dsc begin}}
{{dsc expos mem tclass|cpp/ranges/stride_view/iterator|notes={{mark c++23}}|迭代器类型}}
{{dsc end}}

===辅助模板===
{{ddcl|since=c++23|1=
template&lt; class V &gt;
constexpr bool ranges::enable_borrowed_range&lt;stride_view&lt;V&gt;&gt; =
    ranges::enable_borrowed_range&lt;V&gt;;
}}
{{lc|ranges::enable_borrowed_range}} 的特化使得底层视图满足 {{lconcept|borrowed_range}} 时 {{tt|stride_view}} 同样满足。

===注解===
{{feature test macro|__cpp_lib_ranges_stride|std=C++23|value=202207L|{{tt|std::ranges::stride_view}}}}

===示例===
{{example
|code=
#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;
using namespace std::literals;

void print(std::ranges::viewable_range auto&amp;&amp; v, std::string_view separator = " ")
{
    for (auto const&amp; x : v)
        std::cout &lt;&lt; x &lt;&lt; separator;
    std::cout &lt;&lt; '\n';
}

int main()
{
    print(std::views::iota(1, 13) {{!}} std::views::stride(3));
    print(std::views::iota(1, 13) {{!}} std::views::stride(3) {{!}} std::views::reverse);
    print(std::views::iota(1, 13) {{!}} std::views::reverse {{!}} std::views::stride(3));

    print("0x0!133713337*x//42/A$@"sv {{!}} std::views::stride(0B11) {{!}}
          std::views::transform([](char O) -&gt; char { return 0100 {{!}} O; }),
          "");
}
|output=
1 4 7 10
10 7 4 1
12 9 6 3
password
}}

===引用===
{{ref std c++23}}
{{ref std|title=Stride view|id=range.stride|section=26.7.31}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc slide_view}}
{{dsc inc|cpp/ranges/dsc chunk_view}}
{{dsc inc|cpp/ranges/dsc adjacent_view}}
{{dsc inc|cpp/ranges/dsc filter_view}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}