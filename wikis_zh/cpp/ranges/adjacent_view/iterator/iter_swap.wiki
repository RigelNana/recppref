{{title|iter_swap{{small|(ranges::adjacent_view::''iterator'')}}}}
{{cpp/ranges/adjacent_view/navbar}}

{{dcl begin}}
{{dcl|since=c++23|
friend constexpr void iter_swap( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    noexcept( /* 见下文 */ )
        requires std::indirectly_swappable&lt;ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

交换两个底层迭代器数组（以 {{rlpi|/#数据成员|current_}} 表示）指向的对象。

等价于： 
{{source|1=
for (std::size_t i{}; i != N; ++i)
{
    std::ranges::iter_swap(x.current_[i], y.current_[i]);
}
}}

如果在此操作前 {{c|x.current_}} 中的迭代器都不等于 {{c|y.current_}} 中的迭代器，则行为未定义。

{{cpp/hidden friend|{{tt|adjacent_view::''iterator''&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|x, y|迭代器}}
{{par end}}

===返回值===
(无)

===异常===
{{noexcept|std::ranges::iter_swap(declval&lt;ranges::iterator_t&lt;Base&gt;&gt;(),
                                declval&lt;ranges::iterator_t&lt;Base&gt;&gt;())}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter swap}}
{{dsc inc|cpp/algorithm/dsc iter swap}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}