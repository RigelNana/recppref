{{title|iter_move{{small|(ranges::adjacent_view::''iterator'')}}}}
{{cpp/ranges/adjacent_view/navbar}}

{{dcl begin}}
{{dcl|since=c++23|
friend constexpr auto iter_move( const /*iterator*/&amp; i )
    noexcept(/* 见说明 */);
}}
{{dcl end}}

返回对底层迭代器应用 {{lc|ranges::iter_move}} 的结果。

等价于：{{c|return /*tuple-transform*/(ranges::iter_move, i.current_);}}，其中 {{rlpi|/#数据成员|current_}} 为底层的迭代器数组。

{{cpp/hidden friend|{{tt|adjacent_view::''iterator''&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|i|迭代器}}
{{par end}}

===返回值===
返回对底层迭代器应用 {{lc|ranges::iter_move}} 的结果。

===异常===
{{noexcept|
  noexcept(ranges::iter_move(declval&lt;const ranges::iterator_t&lt;Base&gt;&amp;&gt;()))
  &amp;&amp;
  std::is_nothrow_move_constructible_v&lt;ranges::range_rvalue_reference_t&lt;Base&gt;&gt;
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter move}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}