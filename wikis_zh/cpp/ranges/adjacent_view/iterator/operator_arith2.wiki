{{title|operator+,-{{small|(ranges::adjacent_view::''iterator'')}}}}
{{cpp/ranges/adjacent_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i,
                                         difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/ operator+( difference_type n,
                                         const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /*iterator*/ operator-( const /*iterator*/&amp; i,
                                         difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            const /*iterator*/&amp; j )
    requires std::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;,
                                     ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

令 {{rlpi|/#数据成员|current_}} 为底层迭代器数组，并令 {{rlpi|/#成员类型|Base}} 为底层视图的（可能有 const 限定的）类型。

@1,2@ 返回增加 {{c|n}} 后的迭代器 {{c|i}}。
等价于：{{c|1=auto r = i; r += n; return r;}}。

@3@ 返回减少 {{c|n}} 后的迭代器 {{c|i}}。 
等价于：{{c|1=auto r = i; r -= n; return r;}}。

@4@ 返回两个迭代器的 {{c|i}} 之间的 {{c|j}} 距离。
等价于：{{c|1=return i.current_.back() - j.current_.back();}}。

{{cpp/hidden friend|{{tt|adjacent_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|i,j|迭代器}}
{{par|n|相对于当前的位置}}
{{par end}}

===返回值===
@1,2@ 增加后的迭代器。
@3@ 减小后的迭代器。
@4@ 两个迭代器之间的距离。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|adjacent_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}