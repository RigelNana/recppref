{{title|1= operator=={{small|(ranges::adjacent_view::''iterator'', ranges::adjacent_view::''sentinel'')}}}}
{{cpp/ranges/adjacent_view/navbar}}

{{dcl begin}}
{{dcl|since=c++23|1=
template&lt; bool OtherConst &gt;
    requires std::sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                               ranges::iterator_t&lt;/*maybe-const*/&lt;OtherConst, V&gt;&gt;&gt;
friend constexpr bool operator==( const /*iterator*/&lt;OtherConst&gt;&amp; x,
                                  const /*sentinel*/&amp; y );
}}
{{dcl end}}

比较 {{c|x}} 的底层迭代器和 {{c|y}} 的底层哨位。

等价于：{{c|1=return x.current_.back() == y.end_}}，其中 {{lti|cpp/ranges/adjacent_view/iterator#数据成员|current_}} 是 {{c|x}} 的底层迭代器数组，且 {{rlpi|/#数据成员|end_}} 是 {{c|y}} 的底层哨位。

{{cpp/hidden friend|{{tt|adjacent_view::''sentinel''&lt;Const&gt;}}}}

{{cpp/note synthesized eq}}

===参数===
{{par begin}}
{{par|x|要比较的[[cpp/ranges/adjacent_view/iterator|迭代器]]}}
{{par|y|要比较的{{rlp|/|哨位}}}}
{{par end}}

===返回值===
如果存储在 {{c|x}} 中的底层迭代器是尾迭代器则为 {{c|true}}。

===示例===
{{example
|code=
|output=
}}

{{langlinks|de|en|es|ja|ru}}