{{cpp/ranges/iota_view/title|end}}
{{cpp/ranges/iota_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++20|
constexpr auto end() const;
}}
{{dcl|num=2|since=c++20|
constexpr /*iterator*/ end() const requires std::same_as&lt;W, Bound&gt;;
}}
{{dcl end}}

@1@ 获取一个表示哨位值的{{rlp|iterator|哨位}}：
* 如果 {{tt|Bound}} 是 {{lc|std::unreachable_sentinel_t}}，那么就会返回 {{c|std::unreachable_sentinel}}。
* 否则返回 {{box|{{rlpi|sentinel}}{{sep}}{{c/core|{}}{{rlpsi|/#bound_}}{{sep}}{{c/core|}&lt;!----&gt;}}}}。

@2@ 获取一个指向哨位值的{{rlp|iterator|迭代器}}。

===返回值===
@1@ 如上所述。

@2@ {{box|{{rlpi|iterator}}{{sep}}{{c/core|{}}{{rlpsi|/#bound_}}{{sep}}{{c/core|}&lt;!----&gt;}}}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;

int main()
{
    auto iota{std::views::iota(2, 6)};
    auto end{iota.end()};
    for (auto iter{iota.begin()}; iter != end; ++iter)
        std::cout &lt;&lt; *iter &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';
}
|output=
2 3 4 5
}}

{{langlinks|de|en|es|ja|ru}}