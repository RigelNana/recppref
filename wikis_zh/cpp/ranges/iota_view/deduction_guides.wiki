{{title|{{tt|std::ranges::iota_view}} 的推导指引}}
{{cpp/ranges/iota_view/navbar}}

{{dcl begin}}
{{dcl header|ranges}}
{{dcl|since=c++20|1=
template&lt; class W, class Bound &gt;
    requires (!/*is-integer-like*/&lt;W&gt; {{!!}}
              !/*is-integer-like*/&lt;Bound&gt; {{!!}}
              /*is-signed-integer-like*/&lt;W&gt; == /*is-signed-integer-like*/&lt;Bound&gt;)
iota_view( W, Bound ) -&gt; iota_view&lt;W, Bound&gt;;
}}
{{dcl end}}

为 {{rlpt|/|iota_view}} 提供此[[cpp/language/class template argument deduction|推导指引]]以允许从一个初值和一个边界值推导。

{{c/core|/*is-integer-like*/}} 和 {{c/core|/*is-signed-integer-like*/}} 的定义见 {{lti|cpp/iterator/is-integer-like}}{{sep}}。

注意，这条推导指引保护自身不会发生因符号不匹配引起的问题，如 {{c|views::iota(0, v.size())}}，其中 {{c|0}} 有符号而 {{c|v.size()}} 无符号。

===示例===
{{example
|code=
#include &lt;cassert&gt;
#include &lt;ranges&gt;

int main()
{
    auto io = std::ranges::iota_view(1L, 7L); // W 和 Bound 推导为 long
    assert(io.front() == 1L and io.back() == 6L);
}
}}

{{langlinks|de|en|es|ja|ru}}