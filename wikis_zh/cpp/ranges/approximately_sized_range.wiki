{{cpp/ranges/title|approximately_sized_range}}
{{cpp/ranges/navbar}}

{{ddcl|header=ranges|since=c++26|1=
template&lt; class T &gt;
concept approximately_sized_range = ranges::range&lt;T&gt; &amp;&amp;
    requires(T&amp; t) {
        ranges::reserve_hint(t);
    };
}}

{{tt|approximately_sized_range}} 概念指定在常数时间内以 {{tt|reserve_hint}} 函数估计其大小的 {{lconcept|range}} 类型。

===语义要求===
给定 {{c/core|std::remove_reference_t&lt;T&gt;}} 类型的左值 {{c|t}}，{{tt|T}} 只有在满足以下所有条件时才会实现 {{tt|approximately_sized_range}}：
* {{c|ranges::reserve_hint(t)}}
:* 拥有均摊的常数时间复杂度，
:* 不以对于保持相等性的表达式可观察的方式更改 {{c|t}} 的值，且
:* 具有可以 {{c/core|ranges::range_difference_t&lt;T&gt;}} 表示的非负值，并且
* 如果 {{c/core|ranges::iterator_t&lt;T&gt;}} 实现了 {{lconcept|forward_iterator}}，那么无论对 {{c|ranges::begin(t)}} 的求值的行为如何，{{c|ranges::reserve_hint(t)}} 都具有良好定义（换言之，单趟有大小范围可以只在首次调用 {{tt|begin}} 前支持调用 {{tt|reserve_hint}}，但向前范围必须在所有时间支持）。

===注解===
{{feature test macro|__cpp_lib_ranges_reserve_hint|std=C++26|value=202502L|{{lc|ranges::approximately_sized_range}}}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc sized_range}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}