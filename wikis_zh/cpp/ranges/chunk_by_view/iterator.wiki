{{cpp/ranges/chunk_by_view/title|''iterator''}}
{{cpp/ranges/chunk_by_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
class /*iterator*/
}}

{{rlpt|begin|chunk_by_view::begin}} 的返回类型，且当底层视图 {{tt|V}} 是 {{lconcept|common_range}} 时，为 {{rlpt|end|chunk_by_view::end}} 的返回值类型。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{tt|value_type}}|{{c/core|ranges::subrange&lt;ranges::iterator_t&lt;V&gt;&gt;}}}}
{{dsc|{{tt|difference_type}}|{{c/core|ranges::range_difference_t&lt;V&gt;}}}}
{{dsc|{{tt|iterator_category}}|{{c/core|std::input_iterator_tag}}}}
{{dsc|{{tt|iterator_concept}}|
* {{c/core|std::bidirectional_iterator_tag}}，如果 {{tt|V}} 实现 {{lconcept|bidirectional_range}}，否则是
* {{c/core|std::forward_iterator_tag}}。
}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名称|定义}}
{{dsc expos mem obj|parent_|private=yes|指向其父 {{tt|chunk_by_view}}。}}
{{dsc expos mem obj|current_|private=yes|{{c|ranges::iterator_t&lt;V&gt;}}，指向当前区块起始的迭代器。}}
{{dsc expos mem obj|next_|private=yes|{{c|ranges::iterator_t&lt;V&gt;}}，指向（可能存在的）下一个区块起始的迭代器}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|cpp/ranges/chunk_by_view/iterator/iterator|构造迭代器}}
{{dsc mem fun|cpp/ranges/chunk_by_view/iterator/operator*|访问元素}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|chunk_by_view}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc fun|cpp/ranges/chunk_by_view/iterator/operator_cmp|title=operator==|比较底层迭代器|notes={{mark c++23}}}}
{{dsc end}}

===示例===
{{example}}

===引用===
{{ref std c++23}}
{{ref std|title=Class {{tt|chunk_by_view​::​iterator}}|id=range.chunk.by.iter|section=26.7.30.3}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}