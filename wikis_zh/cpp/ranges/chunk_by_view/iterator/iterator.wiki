{{cpp/ranges/chunk_by_view/iterator/title|''iterator''}}
{{cpp/ranges/chunk_by_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/() = default;
}}
{{dcl|num=2|notes={{mark expos}}|1=
private:
constexpr /*iterator*/( chunk_by_view&amp; parent,
                        ranges::iterator_t&lt;V&gt; current,
                        ranges::iterator_t&lt;V&gt; next );
}}
{{dcl end}}

构造一个迭代器。

@1@ 默认构造函数。[[cpp/language/value_initialization|值初始化]]底层数据成员如下：
* 以 {{c/core|nullptr}} 初始化 {{rlpi|/#数据成员|parent_}}，
* 以 {{c|ranges::iterator_t&lt;V&gt;()}} 初始化 {{rlpi|/#数据成员|current_}}，
* 以 {{c|ranges::iterator_t&lt;V&gt;()}} 初始化 {{rlpi|/#数据成员|next_}}。

@2@ 私有构造函数，{{tt|chunk_by_view::begin}} 和 {{tt|chunk_by_view::end}} 使用该构造函数。用户无法访问此构造函数。进行如下初始化：
* 以 {{c|std::addressof(parent)}} 初始化 {{rlpi|/#数据成员|parent_}}，
* 以 {{c|current}} 初始化 {{rlpi|/#数据成员|current_}}，
* 以 {{c|next}} 初始化 {{rlpi|/#数据成员|next_}}。

===参数===
{{par begin}}
{{par|parent|父对象}}
{{par|current, next|迭代器}}
{{par end}}

===示例===
{{example
|code=
|output=
}}

{{langlinks|de|en|es|ja|ru}}