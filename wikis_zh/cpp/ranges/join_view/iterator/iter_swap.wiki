{{title|iter_swap{{small|(ranges::join_view::''iterator'')}}}}
{{cpp/ranges/join_view/navbar}}

{{dcl begin}}
{{dcl|since=c++20|
friend constexpr void iter_swap( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    noexcept( /* 见下文 */ )
        requires std::indirectly_swappable&lt;InnerIter&gt;;
}}
{{dcl end}}

交换由两个底层迭代器（表示为 {{rlpi|/#数据成员|inner_}}）指向的对象。

等价于：{{c|ranges::iter_swap(x.inner_, y.inner_);}}。

{{cpp/hidden friend|{{tt|join_view::''iterator''&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|x, y|iterators}}
{{par end}}

===返回值===
（无）

===异常===
{{noexcept|noexcept(ranges::iter_swap(x.inner_, y.inner_))}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter swap}}
{{dsc inc|cpp/algorithm/dsc iter swap}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}