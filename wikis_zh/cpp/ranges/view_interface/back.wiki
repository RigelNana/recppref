{{cpp/ranges/view_interface/title|back}}
{{cpp/ranges/view_interface/navbar}}
{{dcl begin}}
{{dcl | num=1 | since=c++20 | 1=
constexpr decltype(auto) back()
    requires ranges::bidirectional_range&lt;D&gt; &amp;&amp; ranges::common_range&lt;D&gt;;
}}
{{dcl | num=2 | since=c++20 | 1=
constexpr decltype(auto) back() const
    requires ranges::bidirectional_range&lt;const D&gt; &amp;&amp; ranges::common_range&lt;const D&gt;;
}}
{{dcl end}}

{{tt|back}} 成员函数的默认实现返回派生类型视图中的末元素。元素是按值还是按引用返回取决于迭代器类型的 {{c|operator*}}。

@1@ 令 {{tt|derived}} 为 {{c|static_cast&lt;D&amp;&gt;(*this)}}。等价于 {{c|return *ranges::prev(ranges::end(derived));}}。若 {{rlpt|empty|empty()}} 为 {{c|true}}（即起始迭代器与哨位比较相等）则行为未定义，即使以相同方式获得的迭代器可解引用也是如此。

@2@ 同 {{v|1}}，但 {{tt|derived}} 为 {{c|static_cast&lt;const D&amp;&gt;(*this)}}。

===返回值===
视图中的末元素。

===注解===
C++20 中，标准库中派生自 {{lc|ranges::view_interface|std::ranges::view_interface}} 的类型都没有提供其自身的 {{tt|back}} 成员函数。

然而，下列派生类型不能使用默认实现，因为它们决不一同满足 {{lconcept|bidirectional_range}} 或 {{lconcept|common_range}}：
* {{lc|ranges::basic_istream_view|std::ranges::basic_istream_view}}
* {{lc|     ranges::lazy_split_view|std::ranges::lazy_split_view}}
* {{lc|     ranges::split_view|std::ranges::split_view}}
* {{lc|std::ranges::take_while_view}}

继承的 {{tt|back}} 成员函数对 {{lc|std::ranges::empty_view}} 可用，但对它的调用始终导致未定义行为。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc | cpp/iterator/dsc rbegin}}
{{dsc inc | cpp/ranges/dsc rbegin}}
{{dsc inc | cpp/ranges/dsc crbegin}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}