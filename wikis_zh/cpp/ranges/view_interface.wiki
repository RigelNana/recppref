{{cpp/ranges/title|view_interface}}
{{cpp/ranges/view_interface/navbar}}
{{ddcl|header=ranges|since=c++20|1=
template&lt; class D &gt;
    requires std::is_class_v&lt;D&gt; &amp;&amp; std::same_as&lt;D, std::remove_cv_t&lt;D&gt;&gt;
class view_interface;
}}

{{tt|std::ranges::view_interface}} 是用于定义视图接口的辅助类模板。

{{tt|view_interface}} 常以 [[cpp/language/crtp|CRTP]] 使用：
{{source|1=
class my_view : public std::ranges::view_interface&lt;my_view&gt;
{
public:
    auto begin() const { /*...*/ }
    auto end() const { /*...*/ }
    // 若 begin() 返回向前迭代器且 end() 返回其哨位则提供 empty()。
};
}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/ranges/view_interface/dsc empty}}
{{dsc inc|cpp/ranges/view_interface/dsc cbegin}}
{{dsc inc|cpp/ranges/view_interface/dsc cend}}
{{dsc inc|cpp/ranges/view_interface/dsc operator bool}}
{{dsc inc|cpp/ranges/view_interface/dsc data}}
{{dsc inc|cpp/ranges/view_interface/dsc size}}
{{dsc inc|cpp/ranges/view_interface/dsc front}}
{{dsc inc|cpp/ranges/view_interface/dsc back}}
{{dsc inc|cpp/ranges/view_interface/dsc operator at}}
{{dsc end}}

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;vector&gt;

template&lt;class T, class A&gt;
class VectorView : public std::ranges::view_interface&lt;VectorView&lt;T, A&gt;&gt;
{
public:
    VectorView() = default;

    VectorView(const std::vector&lt;T, A&gt;&amp; vec) :
        m_begin(vec.cbegin()), m_end(vec.cend())
    {}

    auto begin() const { return m_begin; }

    auto end() const { return m_end; }

private:
    typename std::vector&lt;T, A&gt;::const_iterator m_begin{}, m_end{};
};

int main()
{
    std::vector&lt;int&gt; v = {1, 4, 9, 16};

    VectorView view_over_v{v};

    // 我们能以 begin() 与 end() 迭代。
    for (int n : view_over_v)
        std::cout &lt;&lt; n &lt;&lt; ' ';
    std::cout &lt;&lt; '\n';

    // 我们能在继承 view_interface 时免费地获得 operator[]
    // 因为我们满足 random_access_range 概念。
    for (std::ptrdiff_t i = 0; i &lt; view_over_v.size(); i++)
        std::cout &lt;&lt; "v[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; view_over_v[i] &lt;&lt; '\n';
}
|output=
1 4 9 16 
v[0] = 1
v[1] = 4
v[2] = 9
v[3] = 16
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3549|std=C++20|before=要求 {{tt|view_interface}} 派生自 {{tt|view_base}}，这有时要求视图中的多个 {{tt|view_base}} 子对象|after=移除继承}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc subrange}}
{{dsc end}}

{{langlinks|cs|de|en|es|fr|it|ja|ko|pl|pt|ru}}