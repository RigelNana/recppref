{{cpp/ranges/adjacent_transform_view/title|size}}
{{cpp/ranges/adjacent_transform_view/navbar}}

{{dcl begin}}
{{dcl|since=c++23|
constexpr auto size() requires ranges::sized_range&lt;InnerView&gt;;
}}
{{dcl|since=c++23|
constexpr auto size() const requires ranges::sized_range&lt;const InnerView&gt;;
}}
{{dcl end}}

返回元素数量。

令 {{rlpi|/#数据成员|inner_}} 为 {{rlpi|/#成员类型|InnerView}}（即 {{c|ranges::adjacent_view&lt;V,N&gt;}}）类型的底层对象。

@1,2@ 等价于 {{c|return inner_.size();}}。

===参数===
(无)

===返回值===
元素的数量，如果底层视图 {{c|V}} 小于 {{c|N}} 则可能为 {{c|0}}。

===示例===
{{example
|code=
#include &lt;ranges&gt;

int main()
{
    constexpr static auto v = {1, 2, 3, 4, 5, 6};

    auto f = [](auto...) { return 0; }; // dummy

    constexpr int width1 {4};
    constexpr auto view1 = v {{!}} std::views::adjacent_transform&lt;width1&gt;(f);
    static_assert(view1.size() == 3);
    static_assert(view1.size() == (v.size() - width1 + 1));

    constexpr int width2 {8};
    constexpr auto view2 = v {{!}} std::views::adjacent_transform&lt;width2&gt;(f);
    // 窗口过宽，因此 view2 没有元素：
    static_assert(view2.size() == 0);
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc size}}
{{dsc inc|cpp/ranges/dsc ssize}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}