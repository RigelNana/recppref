{{title|operator+,-{{small|(ranges::adjacent_transform_view::''iterator'')}}}}
{{cpp/ranges/adjacent_transform_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i, difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/ operator+( difference_type n, const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr iterator operator-( const /*iterator*/&amp; i, difference_type n )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            const /*iterator*/&amp; j )
    requires std::sized_sentinel_for&lt;/*inner-iterator*/&lt;Const&gt;,
                                     /*inner-iterator*/&lt;Const&gt;&gt;;
}}
{{dcl end}}

令 {{rlpi|/#数据成员|parent_}} 与 {{rlpi|/#数据成员|inner_}} 为{{rlp|/|迭代器}}的数据成员。

@1,2@ 等价于 {{c|return /*iterator*/(*i.parent_, i.inner_ + n);}}。

@3@ 等价于 {{c|return /*iterator*/(*i.parent_, i.inner_ - n);}}。

@4@ 等价于 {{c|return i.inner_ - j.inner_;}}。

{{cpp/hidden friend|{{tt|adjacent_transform_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|i, j|{{rlp|/|迭代器}}}}
{{par|n|相对于当前位置的偏移量}}
{{par end}}

===返回值===
@1,2@ 增加后的迭代器。
@3@ 减少后的迭代器。
@4@ 给定迭代器之间的距离。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|adjacent_transform_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}