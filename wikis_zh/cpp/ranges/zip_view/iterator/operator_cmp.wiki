{{title|1=operator==,&lt;=&gt;{{small|(ranges::zip_view::''iterator'')}}}}
{{cpp/ranges/zip_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
friend constexpr bool operator==( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires (std::equality_comparable&lt;
ranges::iterator_t&lt;/*maybe-const*/&lt;Const, Views&gt;&gt;&gt; &amp;&amp; ...);
}}
{{dcl|num=2|since=c++23|1=
friend constexpr auto operator&lt;=&gt;( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl end}}

比较底层迭代器。

令 {{tti|current_}} 为指向所适配视图的元素的迭代器的底层''元组式''{{sep}}对象。

@1@ 返回：
* {{c|1= x.current_ == y.current_}}，如果 {{c|/*all-bidirectional*/&lt;Const, Views...&gt;}} 为 {{tt|true}}。
* 否则为 {{c|true}}，如果存在整数 {{c|1= 0 &lt;= i &lt; sizeof...(Views)}} 使得 {{c|1= bool(std::get&lt;i&gt;(x.current_) == std::get&lt;i&gt;(y.current_))}} 为 {{tt|true}}。
* 否则为 {{c|false}}。
@2@ 等价于 {{c|1=return x.current_ &lt;=&gt; y.current_;}}。

{{cpp/hidden friend|{{tt|std::ranges::zip_view::''iterator''&lt;Const&gt;|plural=yes}}}}

{{cpp/note synthesized compare}}

===参数===
{{par begin}}
{{par|x, y|要比较的迭代器}}
{{par end}}

===返回值===
比较的结果

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/sentinel/dsc operator cmp|zip_view}}
{{dsc end}}

{{langlinks|de|en|es|fr|ja|ru}}