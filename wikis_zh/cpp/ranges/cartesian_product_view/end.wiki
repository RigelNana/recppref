{{cpp/ranges/cartesian_product_view/title|end}}
{{cpp/ranges/cartesian_product_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|1=
constexpr iterator&lt;false&gt; end()
    requires ((!/*simple-view*/&lt;First&gt; {{!!}} ... {{!!}} !/*simple-view*/&lt;Vs&gt;) &amp;&amp;
        /*cartesian-product-is-common*/&lt;First, Vs...&gt;);
}}
{{dcl|num=2|since=c++23|1=
constexpr iterator&lt;true&gt; end() const
    requires /*cartesian-product-is-common*/&lt;const First, const Vs...&gt;;
}}
{{dcl|num=3|since=c++23|1=
constexpr std::default_sentinel_t end() const noexcept;
}}
{{dcl end}}

返回表示 {{rlpt|/|cartesian_product_view}} 结尾的{{rlp|iterator|迭代器}}或者哨位。

令 {{rlpi|/#数据成员|bases_}} 为底层的视图元组。

@1,2@ 等价于：
@@ {{c multi
|1=auto check = [](auto&amp; rng) { return __begin_or_first_end(rng); };
|2=return iterator&lt;__is_const&gt;(/*tuple-transform*/(check, bases_));
}}，
@@ 其中：
* {{c|__is_const}} 对于 ''const-限定'' 的重载为 {{c|true}}，否则为 {{c|false}}。
* 若表达式 {{c|ranges::empty(rng)}} 对除第一个范围之外的任何底层范围 {{c|rng}} 中都为 {{c|true}}，则 {{c|__is_empty}} 为 {{c|true}}，否则为 {{c|false}}。
* 若 {{c|rng}} 为第一个底层的范围，则 {{c|__begin_or_first_end(rng)}} [[cpp/language/expressions#表达式等价|表达式等价]]于 {{c|__is_empty ? ranges::begin(rng) : /*cartesian-common-arg-end*/(rng)}}，否则''表达式等价''于 {{c|ranges::begin(rng)}}。

@3@ 等价于 {{c|return std::default_sentinel;}}。

===参数===
（无）

===返回值===
指向最后元素之后的元素的{{rlp|iterator|迭代器}}，或指向和尾迭代器比较相等的哨位。

===示例===
{{example
|code=
#include &lt;array&gt;
#include &lt;format&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;string_view&gt;
#include &lt;tuple&gt;
using namespace std::literals;

int main()
{
    constexpr auto a = std::array{ "bool"sv, "goto"sv, "extern"sv, "long"sv }; /*
                                       ^         ^           ^         ^        */
    constexpr auto v = std::ranges::cartesian_product_view(a[0], a[1], a[2], a[3]);

    constexpr std::tuple&lt;char const&amp;,
                         char const&amp;,
                         char const&amp;,
                         char const&amp;&gt; last{*(v.end() - 1)};

    std::cout &lt;&lt; std::format("{}{}{}{}{}",
                             std::get&lt;0&gt;(last),
                             std::get&lt;1&gt;(last),
                             std::get&lt;2&gt;(last),
                             std::get&lt;3&gt;(last), '\n');
}
|output=long
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc begin|cartesian_product_view}}
{{dsc inc|cpp/ranges/dsc end}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}