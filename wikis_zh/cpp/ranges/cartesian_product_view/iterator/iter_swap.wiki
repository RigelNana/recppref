{{title|iter_swap{{small|(ranges::cartesian_product_view::''iterator'')}}}}
{{cpp/ranges/cartesian_product_view/navbar}}

{{ddcl|since=c++23|
friend constexpr void iter_swap( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    noexcept (/* 见描述 */)
    requires (std::indirectly_swappable&lt;
        ranges::iterator_t&lt;/*maybe-const*/&lt;Const, First&gt;&gt;&gt; and ... and
            std::indirectly_swappable&lt;ranges::iterator_t&lt;/*maybe-const*/&lt;Const, Vs&gt;&gt;&gt;);
}}

将 {{c|ranges::iter_swap}} 应用到存储的底层迭代器上。正式地，对每个整数 {{c|1=0 ≤ i ≤ sizeof...(Vs)}}，施行 {{c|ranges::iter_swap(std::get&lt;i&gt;(x.current_), std::get&lt;i&gt;(y.current_))}}，其中 {{rlpi|/#数据成员|current_}} 是底层的迭代器元组。

{{cpp/hidden friend|{{tt|cartesian_product_view::''iterator''&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|x, y|指向要交换元素的迭代器}}
{{par end}}

===返回值===
（无）

===异常===
异常说明等价于如下表达式的逻辑与：
{{c|noexcept(ranges::iter_swap(std::get&lt;i&gt;(x.current_), std::get&lt;i&gt;(y.current_)))}} 取遍整数 {{c|0 ≤ i ≤ sizeof...(Vs)}}。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter swap}}
{{dsc inc|cpp/algorithm/dsc iter swap}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}