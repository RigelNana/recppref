{{cpp/ranges/cartesian_product_view/iterator/title|''iterator''}}
{{cpp/ranges/cartesian_product_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/() = default;
}}
{{dcl|num=2|since=c++23|1=
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp; (
        std::convertible_to&lt;ranges::iterator_t&lt;First&gt;, ranges::iterator_t&lt;const First&gt;&gt;
        &amp;&amp; ... &amp;&amp;
        std::convertible_to&lt;ranges::iterator_t&lt;Vs&gt;, ranges::iterator_t&lt;const Vs&gt;&gt;
    );
}}
{{dcl|num=3|notes={{mark expos}}|1=
private:
constexpr /*iterator*/(
    /*Parent*/&amp; parent,
    std::tuple&lt;ranges::iterator_t&lt;/*maybe-const*/&lt;Const, First&gt;&gt;,
               ranges::iterator_t&lt;/*maybe-const*/&lt;Const, Vs&gt;&gt;...&gt; current );
}}
{{dcl end}}

构造迭代器。

@1@ 默认构造函数。以 {{c|nullptr}} [[cpp/language/value initialization|值初始化]] {{rlpi|/#数据成员|parent_}} 并[[cpp/language/default initialization|默认初始化]] {{rlpi|/#数据成员|current_}}。

@2@ 从 {{c|/*iterator*/&lt;false&gt;}} 转换为 {{c|/*iterator*/&lt;true&gt;}}。以 {{box|{{tt|i.}}{{rlpi|/#数据成员|parent_}}}} 初始化 {{rlpi|/#数据成员|parent_}}、以 {{c|std::move(i.current_)}} 初始化 {{rlpi|/#数据成员|current_}}。

@3@ 用于 {{lc|cartesian_product_view::begin}} 和 {{lc|cartesian_product_view::end}} 的私有构造函数。用户不可访问此构造函数。
以 {{c|std::addressof(parent)}} 初始化 {{rlpi|/#数据成员|parent_}} 并以 {{c|std::move(current)}} 初始化 {{rlpi|/#数据成员|current_}}。

===参数===
{{par begin}}
{{par|i|{{c|/*iterator*/&lt;false&gt;}}}}
{{par end}}

===示例===
{{example
|code=
|output=
}}

{{langlinks|de|en|es|ja|ru}}