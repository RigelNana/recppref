{{title|iter_move{{small|(ranges::cartesian_product_view::''iterator'')}}}}
{{cpp/ranges/cartesian_product_view/navbar}}
{{ddcl|since=c++23|
friend constexpr auto iter_move( const /*iterator*/&amp; i ) noexcept(/* 见下文 */)
}}

令 {{rlpi|/#数据成员|current_}} 为底层的迭代器元组。

等价于：{{c|return /*tuple-transform*/(ranges::iter_move, i.current_);}}

{{cpp/hidden friend|{{tt|cartesian_product_view::''iterator''&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|i|迭代器}}
{{par end}}

===返回值===
如上所述，将 {{c|ranges::iter_move}} 应用到存储的各底层迭代器使其转换至返回类型的结果，所构成的元组。

===异常===
异常说明等价于如下表达式的逻辑与：
* {{c|noexcept(ranges::iter_move(std::get&lt;N&gt;(i.current_)))}} 取遍整数 {{c|1=0 ≤ N ≤ sizeof...(Vs)}}，
* {{c|std::is_nothrow_move_constructible_v&lt;ranges::range_rvalue_reference_t&lt;/*maybe-const*/&lt;Const, T&gt;&gt;&gt;}} 取遍 {{tt|First, Vs...}} 中的每个类型 {{tt|T}}。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter_move}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}