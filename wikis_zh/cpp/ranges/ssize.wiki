{{cpp/ranges/title|ssize}}
{{cpp/ranges/navbar}}

{{dcl begin}}
{{dcl header|ranges}}
{{dcl header|iterator}}
{{dcl|since=c++20|notes={{mark custpt}}|1=
inline namespace /* 未指定 */ {
    inline constexpr /* 未指定 */ ssize = /* 未指定 */;
}
}}

{{dcl h|调用签名}}
{{dcl|since=c++20|1=
template&lt; class T &gt;
    requires /* 见下文 */
constexpr auto ssize( T&amp;&amp; t );
}}
{{dcl end}}

返回转换到有符号类型的范围大小。

给定其（可能经[[cpp/language/implicit conversion#临时量实质化|实质化]]的）结果对象以 {{c|t}} 表示的[[cpp/language/expressions#完整表达式|子表达式]]为 {{c|E}}：
* 如果 {{c|ranges::size(t)}} 非良构，那么 {{c|ranges::ssize(E)}} 也非良构。
* 否则，设 {{tt|Signed}} 为 {{lsi|cpp/ranges#make-signed-like-t}}{{sep}}{{c/core|&lt;decltype(ranges::size(t))&gt;}}：
** 如果 {{lc|std::ptrdiff_t}} 比 {{tt|Signed}} 宽，那么 {{c|ranges::ssize(E)}} {{ls|cpp/language/expressions#表达式等价}}于 {{c|static_cast&lt;std::ptrdiff_t&gt;(ranges::size(t))}}。
** 否则 {{c|ranges::ssize(E)}} 表达式等价于 {{c|static_cast&lt;Signed&gt;(ranges::size(t))}}。

{{cpp/ranges/cpo}}

===注解===
只要 {{c|ranges::size(e)}} 对表达式 {{c|e}} 合法，那么返回类型是[[cpp/iterator/is-integer-like|有符号整数式类型]]。

===示例===
{{example|code=
#include &lt;array&gt;
#include &lt;iostream&gt;
#include &lt;ranges&gt;
#include &lt;type_traits&gt;

int main()
{
    std::array arr{1, 2, 3, 4, 5};
    auto s = std::ranges::ssize(arr);

    std::cout &lt;&lt; "ranges::ssize(arr) = " &lt;&lt; s &lt;&lt; '\n'
              &lt;&lt; "ranges::ssize "
              &lt;&lt; (std::is_signed_v&lt;decltype(s)&gt; ? "有符号" : "无符号")
              &lt;&lt; '\n';

    std::cout &lt;&lt; "逆向的 arr: ";

    for (--s; s &gt;= 0; --s)
        std::cout &lt;&lt; arr[s] &lt;&lt; ' ';

    std::cout &lt;&lt; "\n" "s = " &lt;&lt; s &lt;&lt; '\n';
}
| output=
ranges::ssize(arr) = 5
ranges::ssize 有符号
逆向的 arr: 5 4 3 2 1 
s = -1
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3403|std=C++20|before={{tt|ranges::size}} 可作用于某些非范围类型但 {{tt|ranges::ssize}} 不能|after=使之能}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc size}}
{{dsc inc|cpp/ranges/dsc sized_range}}
{{dsc inc|cpp/iterator/ranges/dsc distance}}
{{dsc inc|cpp/iterator/dsc size}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}