{{title|operator+,-{{small|(ranges::chunk_view::''iterator'')}}}}
{{cpp/ranges/chunk_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|
friend constexpr /*iterator*/ operator+( const /*iterator*/&amp; i,
                                         difference_type pos )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=2|since=c++23|
friend constexpr /*iterator*/ operator+( difference_type pos,
                                         const /*iterator*/&amp; i )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=3|since=c++23|
friend constexpr /*iterator*/ operator-( const /*iterator*/&amp; i,
                                         difference_type pos )
    requires ranges::random_access_range&lt;Base&gt;;
}}
{{dcl|num=4|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            const /*iterator*/&amp; j )
    requires ranges::sized_sentinel_for&lt;ranges::iterator_t&lt;Base&gt;,
                                        ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=5|since=c++23|
friend constexpr difference_type operator-( std::default_sentinel_t,
                                            const /*iterator*/&amp; i )
    requires ranges::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                        ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl|num=6|since=c++23|
friend constexpr difference_type operator-( const /*iterator*/&amp; i,
                                            std::default_sentinel_t )
    requires ranges::sized_sentinel_for&lt;ranges::sentinel_t&lt;Base&gt;,
                                        ranges::iterator_t&lt;Base&gt;&gt;;
}}
{{dcl end}}

执行{{rlp|/|迭代器}}算数或计算距离。

令 {{tti|current_}}，{{tti|end_}}，{{tti|n_}}，和 {{tti|missing_}} 为底层{{rlp|/#数据成员|数据成员}}。

等价于：
@1,2@ {{c|1=auto r = i; r += pos; return r;}}。
@3@ {{c|1=auto r = i; r -= pos; return r;}}。
@4@ {{c|1=return (i.current_ - j.current_ + i.missing_ - j.missing_) / i.n_;}}。
@5@ {{c|1=return /*div-ceil*/(i.end_ - i.current_, i.n_);}}。
@6@ {{c|1=return -(y - x);}}。

{{cpp/hidden friend|{{tt|chunk_view::''iterator''&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|i, j|迭代器}}
{{par|pos|相对于当前位置的偏移量}}
{{par end}}

===返回值===
@1,2@ 增加后的迭代器
@3@ 减少后的迭代器
@4@ 给定迭代器之间的距离（以元素数量，即块为单位）
@5,6@ 迭代器与哨位之间的距离（以元素数量为单位）

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|chunk_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}