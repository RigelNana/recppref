{{cpp/ranges/chunk_view/title|''iterator''}}
{{cpp/ranges/chunk_view/navbar}}

{{ddcl|since=c++23|notes={{mark expos}}|
template&lt; bool Const &gt;
class /*iterator*/
}}

当底层视图 {{tt|V}} 为 {{lconcept|common_range}} 时，是 {{rlpt|begin|chunk_view::begin}} 和 {{rlpt|end|chunk_view::end}} 的返回类型。

仅在 {{tt|V}} 实现 {{lconcept|forward_range}} 时给出。

const 限定的重载返回 {{c|/*iterator*/&lt;true&gt;}} 类型，非 cosnt 限定的重载返回 {{c|/*iterator*/&lt;false&gt;}} 类型。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc expos mem type|Parent|private=yes|如果 {{tt|Const}} 等于 {{c|true}} 则为 {{c|const chunk_view}} 否则为 {{c|chunk_view}}。}}
{{dsc expos mem type|Base|private=yes|如果 {{tt|Const}} 等于 {{c|true}} 则为 {{c|const V}} 否则为 {{c|V}}。}}
{{dsc|{{tt|iterator_category}}|{{c|std::input_iterator_tag}}}}
{{dsc|{{tt|iterator_concept}}|
* 如果 {{tti|Base}} 实现 {{lconcept|random_access_range}}，则为 {{c|std::random_access_iterator_tag}}，
* 如果 {{tti|Base}} 实现 {{lconcept|bidirectional_range}}，则为 {{c|std::bidirectional_iterator_tag}}，
* 否则为 {{c|std::forward_iterator_tag}}。}}
{{dsc|{{tt|value_type}}|{{c|decltype(views::take(ranges::subrange(current_, end_), n_));}}。}}
{{dsc|{{tt|difference_type}}|{{c|ranges::range_difference_t&lt;Base&gt;}}}}
{{dsc end}}

===数据成员===
{{dsc begin}}
{{dsc hitem|成员名称|定义}}
{{dsc expos mem obj|current_|private=yes|{{c|ranges::iterator_t&lt;Base&gt;}}，持有指向底层序列中当前块的首个元素的迭代器(也就是一个块的首部)。 }}
{{dsc expos mem obj|end_|private=yes|{{c|ranges::sentinel_t&lt;Base&gt;}}，持有指向底层序列尾部的哨位。}}
{{dsc expos mem obj|n_|private=yes|{{c|ranges::range_difference_t&lt;Base&gt;}}，持有区块中元素的初始数量（最后一块可以较小。}}
{{dsc expos mem obj|missing_|private=yes|{{c|ranges::range_difference_t&lt;Base&gt;}}，通常等于 {{c|ranges::advance(current_, n_, end_);}}。}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|cpp/ranges/chunk_view/iterator/iterator|构造迭代器}}
{{dsc mem fun|cpp/ranges/chunk_view/iterator/base|返回指向当前元素的迭代器}}
{{dsc mem fun|cpp/ranges/chunk_view/iterator/operator*|访问元素}}
{{dsc mem fun|cpp/ranges/chunk_view/iterator/operator_at|title=operator[]|按索引访问元素}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|chunk_view}}
{{dsc end}}

===非成员函数===
{{dsc begin}}
{{dsc fun|cpp/ranges/chunk_view/iterator/operator_cmp|title=operator==&lt;br&gt;operator&lt;&lt;br&gt;operator&gt;&lt;br&gt;operator&lt;=&lt;br&gt;operator&gt;=&lt;br&gt;operator&lt;=&gt;|比较底层迭代器|notes={{mark c++23}}}}
{{dsc fun|cpp/ranges/chunk_view/iterator/operator_arith2|title=operator+&lt;br&gt;operator-|执行迭代器算数|notes={{mark c++23}}}}
{{dsc end}}

===示例===
{{example}}

===引用===
{{ref std c++23}}
{{ref std|title=Class template {{tt|chunk_view::iterator}} for forward ranges|id=range.chunk.fwd.iter|section=26.7.28.7}}
{{ref std end}}

===参阅===
{{dsc begin}}&lt;!--
{{dsc inc|cpp/ranges/chunk_view/dsc outer_iterator}}--&gt;
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}