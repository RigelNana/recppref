{{cpp/ranges/chunk_view/outer_iterator/title|value_type}}
{{cpp/ranges/chunk_view/navbar}}

{{ddcl|header=ranges|since=c++23|
struct value_type : view_interface&lt;value_type&gt;
}}

迭代器 {{rlpt|/|chunk_view::''outer-iterator''}} 的值类型，当 {{tt|V}} 实现 {{lconcept|input_range}} 时成立。

===数据成员===
{{dsc begin}}
{{dsc hitem|成员对象|定义}}
{{dsc expos mem obj|parent_|private=yes|指向类型为 {{c|ranges::chunk_view*}} 的“父对象”的指针}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc mem ctor|{{PAGENAME}}#ctor|构造 {{tt|value_type}}|notes={{mark c++23}}}}
{{dsc mem fun|{{PAGENAME}}#begin|title=begin|返回起始的{{ltt|cpp/ranges/chunk_view/inner_iterator|chunk_view::''inner-iterator''}}|notes={{mark c++23}}}}
{{dsc mem fun|{{PAGENAME}}#end|title=end|返回默认哨位|notes={{mark c++23}}}}
{{dsc mem fun|{{PAGENAME}}#size|title=size|返回视图大小|notes={{mark c++23}}}}
{{cpp/ranges/view_interface/inherit|embedded=yes|size=invalid|front=invalid|back=invalid|operator[]=invalid|data=invalid}}
{{dsc end}}

{{anchor|ctor}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}value_type|
{{ddcl|since=c++23|1=
private:
// 仅用于阐释
constexpr explicit value_type( chunk_view&amp; parent );
}}

构造 {{tt|value_type}} 对象，以便 {{tti|parent_}} 以 {{c|std::addressof(parent)}} 初始化。

===参数===
{{par begin}}
{{par|parent|{{tt|chunk_view}} 对象}}
{{par end}}
}}

{{anchor|begin}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}begin|
{{ddcl|since=c++23|
constexpr /*inner-iterator*/ begin() const noexcept;
}}

等价于 {{c|return /*inner-iterator*/(*parent_);}}。
}}

{{anchor|end}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}end|
{{ddcl|since=c++23|
constexpr std::default_sentinel_t end() const noexcept;
}}

等价于 {{c|return std::default_sentinel;}}。
}}

{{anchor|size}}
{{member|{{small|std::ranges::chunk_view::''outer-iterator''::value_type::}}size|
{{ddcl|since=c++23|
constexpr auto size() const
    requires std::sized_sentinel_for&lt;ranges::sentinel_t&lt;V&gt;, ranges::iterator_t&lt;V&gt;&gt;;
}}

返回视图的大小。

等价于&lt;br&gt;{{c|
return /*to-unsigned-like*/(
    ranges::min(parent_-&gt;remainder_, ranges::end(parent_-&gt;base_) - *parent_-&gt;current_));
}}
}}

===示例===
{{todo|example}}

===引用===
{{ref std c++23}}
{{ref std|title=Class chunk_view::outer-iterator::value_type|id=range.chunk.outer.value|section=26.7.28.4}}
{{ref std end}}

===参阅===
{{dsc begin}}
{{dsc expos mem class|cpp/ranges/chunk_view/outer_iterator|notes={{mark c++23}}|当 {{c|V}} 实现 {{lconcept|input_range}} 时，输出（“逐区块的”）迭代器类型}}
{{dsc expos mem class|cpp/ranges/chunk_view/inner_iterator|notes={{mark c++23}}|当 {{c|V}} 实现 {{lconcept|input_range}} 时，内部（“逐元素的”）迭代器类型}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}