{{cpp/ranges/title|borrowed_iterator_t|borrowed_subrange_t}}
{{cpp/ranges/navbar}}

{{dcl begin}}
{{dcl header|ranges}}
{{dcla|num = 1|since = c++20|1 =
template&lt; ranges::range R &gt;
using borrowed_iterator_t = /* 见下文 */;
}}
{{dcla|num = 2|since = c++20|1 =
template&lt; ranges::range R &gt;
using borrowed_subrange_t = /* 见下文 */;
}}

{{dcl end}}

@1@ 若 {{tt|R}} 实现 {{lconcept|borrowed_range}} 则为 {{c|std::ranges::iterator_t&lt;R&gt;}}，否则为 {{lc|std::ranges::dangling}}。

@2@ 若 {{tt|R}} 实现 {{lconcept|borrowed_range}} 则为 {{c|std::ranges::subrange&lt;std::ranges::iterator_t&lt;R&gt;&gt;}}，否则为 {{lc|std::ranges::dangling}}。

某些[[cpp/algorithm/ranges|受约束算法]]使用这两个模板别名以避免返回潜在悬垂的迭代器或视图。

===可能的实现===
{{eq impl
|title1=borrowed_iterator_t|ver1=1|1=
template&lt; std::ranges::range R &gt;
using borrowed_iterator_t = std::conditional_t&lt;std::ranges::borrowed_range&lt;R&gt;,
    std::ranges::iterator_t&lt;R&gt;, std::ranges::dangling&gt;;
|title2=borrowed_subrange_t|ver2=2|2=
template&lt; std::ranges::range R &gt;
using borrowed_subrange_t = std::conditional_t&lt;std::ranges::borrowed_range&lt;R&gt;,
    std::ranges::subrange&lt;std::ranges::iterator_t&lt;R&gt;&gt;, std::ranges::dangling&gt;;
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/dsc dangling}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}