{{cpp/ranges/concat_view/title|begin}}
{{cpp/ranges/concat_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++26|
constexpr /*iterator*/&lt;false&gt; begin()
    requires (!(/*simple-view*/&lt;Views&gt; &amp;&amp; ...));
}}
{{dcl|num=2|since=c++26|
constexpr /*iterator*/&lt;true&gt; begin() const
    requires (ranges::range&lt;const Views&gt; &amp;&amp; ...) &amp;&amp;
                 /*concatable*/&lt;const Views...&gt;;
}}
{{dcl end}}

返回指向 {{rlpt|/|concat_view}} 开头的{{rlp|iterator|迭代器}}。

@1@ 等价于 {{box|
{{rlpi|iterator}}{{sep}}{{c/core|&lt;false&gt; it(this, std::in_place_index&lt;0&gt;,}}&lt;br&gt;{{nbspt|19}}{{c/core|ranges::begin(std::get&lt;0&gt;(}}{{rlpsi|/#views_}}{{sep}}{{c/core|)));}}&lt;br&gt;{{c/core|it.template}}{{nbspt}}{{lsi|cpp/ranges/concat_view/iterator/helpers#satisfy}}{{sep}}{{c/core|&lt;0&gt;();}}&lt;br&gt;{{c/core|return it;}}}}。

@2@ 等价于 {{box|
{{rlpi|iterator}}{{sep}}{{c/core|&lt;true&gt; it(this, std::in_place_index&lt;0&gt;,}}&lt;br&gt;{{nbspt|18}}{{c/core|ranges::begin(std::get&lt;0&gt;(}}{{rlpsi|/#views_}}{{sep}}{{c/core|)));}}&lt;br&gt;{{c/core|it.template}}{{nbspt}}{{lsi|cpp/ranges/concat_view/iterator/helpers#satisfy}}{{sep}}{{c/core|&lt;0&gt;();}}&lt;br&gt;{{c/core|return it;}}}}。

===返回值===
如上所述。

===示例===
{{example
|基础版本可以在 [https://godbolt.org/z/ffoo7o3f5 Compiler Explorer] 上测试。
|code=
#include &lt;ranges&gt;
#include &lt;string_view&gt;
using namespace std::literals;

int main()
{
    static constexpr auto c = {"🐱", "🐶"};
    static constexpr auto a = {"🤡"sv};
    static constexpr auto t = {"💚"sv};
    static constexpr auto cat{std::views::concat(c, a, t)};
    static_assert(*cat.begin() == "\U0001F431" and
                  cat.begin()[1] == "🐶" and
                  *(cat.begin() + 2) == "\N{CLOWN FACE}");
}
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|concat_view}}
{{dsc inc|cpp/ranges/dsc begin}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}