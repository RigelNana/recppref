{{title|operator+,-{{small|(ranges::concat_view::''iterator'')}}}}
{{cpp/ranges/concat_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++26|
friend constexpr /*iterator*/
    operator+( const /*iterator*/&amp; it, difference_type n )
        requires /*concat-is-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=2|since=c++26|
friend constexpr /*iterator*/
    operator+( difference_type n, const /*iterator*/&amp; it )
        requires /*concat-is-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=3|since=c++26|
friend constexpr /*iterator*/
    operator-( const /*iterator*/&amp; it, difference_type n )
        requires /*concat-is-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=4|since=c++26|
friend constexpr difference_type
    operator-( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
        requires /*concat-is-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=5|since=c++26|
friend constexpr difference_type
    operator-( const /*iterator*/&amp; x, std::default_sentinel_t )
        requires /* 见描述 */;
}}
{{dcl|num=6|since=c++26|
friend constexpr difference_type
    operator-( std::default_sentinel_t, const /*iterator*/&amp; x )
        requires /* 见描述 */;
}}
{{dcl end}}

增加或减少{{rlp|iterator|迭代器}}。

@1@ 等价于 {{c|1=auto t = it; t += n; return t;}}。

@2@ 等价于 {{c|1=return it + n;}}。

@3@ 等价于 {{c|1=auto t = it; t -= n; return t;}}。

@4@ 设 {{c|Ix}} 为 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.index()}}}}，{{c|Iy}} 为 {{box|{{c/core|y.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.index()}}}}：
* 如果 {{c|Ix &gt; Iy}} 是 {{c|true}}，那么等价于 {{box|{{c/core|1=difference_type result = ranges::distance(y.}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;Iy&gt;(), y.}}{{rlpsi|helpers#get-end}}{{sep}}{{c/core|&lt;Iy&gt;());}}&lt;br&gt;{{c/core|1=for (std::size_t I = Iy + 1; I &lt; Ix; I++)}}&lt;br&gt;{{nbspt|4}}{{c/core|1=result += ranges::distance(x.}}{{rlpsi|helpers#get-view}}{{sep}}{{c/core|&lt;I&gt;());}}&lt;br&gt;{{c/core|return result + ranges::distance(x.}}{{rlpsi|helpers#get-begin}}{{sep}}{{c/core|&lt;Ix&gt;(), x.}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;Ix&gt;());}}}}。
* 否则，如果 {{c|Ix &lt; Iy}} 是 {{c|true}}，那么等价于 {{c|return -(y - x);}}。
* 否则等价于 {{box|{{c/core|return x.}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;Ix&gt;() - y.}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;Iy&gt;();}}}}。
@@ 如果 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception() {{!!}} y.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} 是 {{c|true}}，那么行为未定义。

@5@ 设 {{c|Ix}} be {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.index()}}}}，等价于 {{box|{{c/core|1=difference_type result = ranges::distance(x.}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|&lt;Ix&gt;(), x.}}{{rlpsi|helpers#get-end}}{{sep}}{{c/core|&lt;Ix&gt;());}}&lt;br&gt;{{c/core|1=for (std::size_t I = Ix + 1, count = sizeof...(Views); I &lt; count; I++)}}&lt;br&gt;{{nbspt|4}}{{c/core|1=result += ranges::distance(x.}}{{rlpsi|helpers#get-view}}{{sep}}{{c/core|&lt;I&gt;());}}&lt;br&gt;{{c/core|return -result;}}}}。
@@ 设 {{tt|Fs}} 为由 {{tt|Views}} 中首元素之外的所有元素组成的包，{{c/core|requires}} 子句中的表达式等价于 {{box|
{{c/core|(std::sized_sentinel_for&lt;ranges::sentinel_t&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Views&gt;&gt;,}}&lt;br&gt;
{{nbspt|25}}{{c/core|ranges::iterator_t&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Views&gt;&gt;&gt; &amp;&amp; ...) &amp;&amp;}}&lt;br&gt;
{{nbspt|4}}{{c/core|(ranges::sized_range&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Fs&gt;&gt; &amp;&amp; ...)}}
}}。
@@ 如果 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} 是 {{c|true}}，那么行为未定义。

@6@ 等价于 {{c|return -(x - std::default_sentinel);}}。
@@ 设 {{tt|Fs}} 为由 {{tt|Views}} 中首元素之外的所有元素组成的包，{{c/core|requires}} 子句中的表达式等价于 {{box|
{{c/core|(std::sized_sentinel_for&lt;ranges::sentinel_t&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Views&gt;&gt;,}}&lt;br&gt;
{{nbspt|25}}{{c/core|ranges::iterator_t&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Views&gt;&gt;&gt; &amp;&amp; ...) &amp;&amp;}}&lt;br&gt;
{{nbspt|4}}{{c/core|(ranges::sized_range&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Fs&gt;&gt; &amp;&amp; ...)}}
}}。
@@ 如果 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} 是 {{c|true}}，那么行为未定义。

{{cpp/hidden friend|{{tt|concat_view::''iterator''{{sep}}&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|it, x, y|{{rlp|/|迭代器}}}}
{{par|n|相对于当前位置的位置}}
{{par end}}

===返回值===
如上所述。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/iterator/dsc operator arith|concat_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}