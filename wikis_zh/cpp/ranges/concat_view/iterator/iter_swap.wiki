{{title|iter_swap{{small|(ranges::concat_view::''iterator'')}}}}
{{cpp/ranges/concat_view/navbar}}

{{ddcl|since=c++26|
friend constexpr void iter_swap( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    noexcept( /* 见描述 */ ) requires ( /* 见描述 */ );
}}

交换 {{c|x}} 和 {{c|y}} 的各自的底层迭代器指向的对象。等价于 {{box|
{{c/core|std::visit}}&lt;br&gt;
{{c/core|(}}&lt;br&gt;
{{nbspt|4}}{{c/core|[&amp;](const auto&amp; it1, const auto&amp; it2)}}&lt;br&gt;
{{nbspt|4}}{{c/core|{}}&lt;br&gt;
{{nbspt|8}}{{c/core|if constexpr (std::is_same_v&lt;decltype(it1), decltype(it2)&gt;)}}&lt;br&gt;
{{nbspt|12}}{{c/core|ranges::iter_swap(it1, it2);}}&lt;br&gt;
{{nbspt|8}}{{c/core|else}}&lt;br&gt;
{{nbspt|12}}{{c/core|ranges::swap(*x, *y);}}&lt;br&gt;
{{nbspt|4}}{{c/core|},}}&lt;br&gt;
{{nbspt|4}}{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|,}}&lt;br&gt;
{{nbspt|4}}{{c/core|y.}}{{rlpsi|/#it_}}&lt;br&gt;
{{c/core|);}}
}}

{{c/core|requires}} 子句中的表达式等价于 {{box|
{{c/core|std::swappable_with&lt;std::iter_reference_t&lt;/*iterator*/&gt;,}}&lt;br&gt;
{{nbspt|20}}{{c/core|std::iter_reference_t&lt;/*iterator*/&gt;&gt; &amp;&amp;}}&lt;br&gt;
{{c/core|(... &amp;&amp; std::indirectly_swappable&lt;ranges::iterator_t&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Views&gt;&gt;&gt;)}}
}}。

如果 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception() {{!!}} y.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} 是 {{c|true}}，那么行为未定义。

{{cpp/hidden friend|{{c/core|concat_view::}}{{tti|iterator}}{{sep}}{{c/core|&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|x, y|{{rlp|/|迭代器}}}}
{{par end}}

===异常===
设 {{c|its}} 为包含左值的包，其中每个值都具有 {{box/core|{{c/core|const ranges::iterator_t&lt;}}{{lsi|cpp/ranges#maybe-const}}{{sep}}{{c/core|&lt;Const, Views&gt;&gt;}}}} 中对应的类型。
{{noexcept|noexcept(ranges::swap(*x, *y)) &amp;&amp; ... &amp;&amp; noexcept(ranges::iter_swap(its, its))}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter swap}}
{{dsc inc|cpp/algorithm/dsc iter swap}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}