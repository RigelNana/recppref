{{title|1=operator==,&lt;,&gt;,&lt;=,&gt;=,&lt;=&gt;{{small|(ranges::concat_view::''iterator'')}}}}
{{cpp/ranges/concat_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++26|1=
friend constexpr bool operator==
    ( const /*iterator*/&amp; x, std::default_sentinel_t );
}}
{{dcl|num=2|since=c++26|1=
friend constexpr bool operator==
    ( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires (std::equality_comparable&lt;ranges::iterator_t&lt;
        std::conditional_t&lt;Const, const Views, Views&gt;&gt;&gt; &amp;&amp; ...);
}}
{{dcl|num=3|since=c++26|1=
friend constexpr bool operator&lt;
    ( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires /*all-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=4|since=c++26|1=
friend constexpr bool operator&gt;
    ( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires /*all-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=5|since=c++26|1=
friend constexpr bool operator&lt;=
    ( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires /*all-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=6|since=c++26|1=
friend constexpr bool operator&gt;=
    ( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires /*all-random-access*/&lt;Const, Views...&gt;;
}}
{{dcl|num=7|since=c++26|1=
friend constexpr auto operator&lt;=&gt;
    ( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    requires (/*all-random-access*/&lt;Const, Views...&gt; &amp;&amp;
              (std::three_way_comparable&lt;ranges::iterator_t&lt;
                   std::conditional_t&lt;Const, const Views, Views&gt;&gt;&gt; &amp;&amp; ...));
}}
{{dcl end}}

将迭代器与另一个迭代器或哨位进行比较。

@1@ 比较一个迭代器与一个哨位。
@@ 如果 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} 是 {{c|true}}，那么行为未定义。

@2-7@ 比较两个迭代器。{{cpp/note synthesized eq}}
@@ 如果 {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception() {{!!}} y.}}{{rlpsi|/#it_}}{{sep}}{{c/core|.valueless_by_exception()}}}} 是 {{c|true}}，那么行为未定义。

{{cpp/hidden friend|{{tt|std::ranges::concat_view::''iterator''{{sep}}&lt;Const&gt;}}|plural=yes}}

===参数===
{{par begin}}
{{par|x, y|要比较的迭代器}}
{{par end}}

===返回值===
@1@ {{box|
{{c/core|x.}}{{rlpsi|/#it_}}{{sep}}{{c/core|1=.index() == (sizeof...(Views) - 1) &amp;&amp;}}&lt;br&gt;
{{nbspt|4}}{{c/core|x.}}{{rlpsi|helpers#get-iter}}{{sep}}{{c/core|1=&lt;sizeof...(Views) - 1&gt;() == x.}}{{rlpsi|helpers#get-end}}{{sep}}{{c/core|1=&lt;sizeof...(Views) - 1&gt;()}}
}}

@2@ {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{nbspt}}{{c/core|1=== y.}}{{rlpsi|/#it_}}}}

@3@ {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{nbspt}}{{c/core|&lt; y.}}{{rlpsi|/#it_}}}}

@4@ {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{nbspt}}{{c/core|&gt; y.}}{{rlpsi|/#it_}}}}

@5@ {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{nbspt}}{{c/core|1=&lt;= y.}}{{rlpsi|/#it_}}}}

@6@ {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{nbspt}}{{c/core|1=&gt;= y.}}{{rlpsi|/#it_}}}}

@7@ {{box|{{c/core|x.}}{{rlpsi|/#it_}}{{nbspt}}{{c/core|1=&lt;=&gt; y.}}{{rlpsi|/#it_}}}}

===示例===
{{example}}

{{langlinks|de|en|es|ja|ru}}