{{cpp/ranges/stride_view/title|begin}}
{{cpp/ranges/stride_view/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++23|
constexpr auto begin() requires (!__simple_view&lt;V&gt;);
}}
{{dcl|num=2|since=c++23|
constexpr auto begin() const requires ranges::range&lt;const V&gt;;
}}
{{dcl end}}

返回指向 {{tt|stride_view}} 首个元素的{{rlp|iterator|迭代器}}。

@1@ 等价于 {{c|return iterator&lt;false&gt;(this, ranges::begin(base_));}}。
@2@ 等价于 {{c|return iterator&lt;true&gt;(this, ranges::begin(base_));}}。

如果 {{c|V}} 为 [[cpp/ranges#辅助概念|简单视图]]（也就是说，如果 {{c|V}} 与 {{c|const V}} 是具有相同迭代器和哨位的视图），重载 {{v|1}} 不参与重载决议。

===参数===
（无）

===返回值===
指向视图首个元素的{{rlp|Iterator|迭代器}}。

===示例===
{{example
|测试链接: [https://godbolt.org/z/36zTEETx1 Compiler Explorer].
|code=
#include &lt;print&gt;
#include &lt;ranges&gt;

int main()
{
    constexpr auto v = {'A', 'B', 'C'};
    const auto x = v {{!}} std::views::stride(2);
    const auto y = v {{!}} std::views::reverse {{!}} std::views::stride(2);
    const auto z = v {{!}} std::views::stride(2) {{!}} std::views::reverse;
    std::println("{} {} {}", *x.begin(), *y.begin(), *z.begin());
}
|output=A C C
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/ranges/adaptor/dsc end|stride_view}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}