{{title|iter_swap{{small|(ranges::stride_view::''iterator'')}}}}
{{cpp/ranges/stride_view/navbar}}

{{ddcl|since=c++23|
friend constexpr void iter_swap( const /*iterator*/&amp; x, const /*iterator*/&amp; y )
    noexcept( /* 见下文 */ )
        requires std::indirectly_swappable&lt;ranges::iterator_t&lt;Base&gt;&gt;;
}}

交换两个底层迭代器（各自都用 {{rlpi|/#数据成员|current_}} 表示）指向的对象。

等价于 {{c|ranges::iter_swap(x.current_, y.current_);}}。

{{cpp/hidden friend|{{tt|stride_view::''iterator''&lt;Const&gt;}}}}

===参数===
{{par begin}}
{{par|x, y|{{rlp|/|迭代器}}}}
{{par end}}

===返回值===
（无）

===异常===
{{noexcept|noexcept(ranges::iter_swap(x.current_, y.current_))}}

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/ranges/dsc iter swap}}
{{dsc inc|cpp/algorithm/dsc iter swap}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}