{{cpp/ranges/join_with_view/iterator/title|''iterator''}}
{{cpp/ranges/join_with_view/navbar}}

{{dcl begin}}
{{dcl|num=1|since=c++23|1=
/*iterator*/() = default;
}}
{{dcl|num=2|since=c++23|
constexpr /*iterator*/( /*iterator*/&lt;!Const&gt; i )
    requires Const &amp;&amp;
        std::convertible_to&lt;ranges::iterator_t&lt;V&gt;, /*OuterIter*/&gt; &amp;&amp;
        std::convertible_to&lt;ranges::iterator_t&lt;/*InnerRng*/&gt;,
                            /*InnerIter*/&gt; &amp;&amp;
        std::convertible_to&lt;ranges::iterator_t&lt;Pattern&gt;, /*PatternIter*/&gt;;
}}
{{dcla|num=3|since=c++23|expos=yes|
constexpr /*iterator*/( /*Parent*/&amp; parent, /*OuterIter*/ outer )
    requires std::forward_range&lt;/*Base*/&gt;;
}}
{{dcla|num=4|since=c++23|expos=yes|
constexpr explicit /*iterator*/( /*Parent*/ parent )
    requires (!std::forward_range&lt;/*Base*/&gt;);
}}
{{dcl end}}

构造迭代器。{{lc|ranges::join_with_view}} 的 {{ltf|cpp/ranges/join_with_view/begin}} 和 {{ltf|cpp/ranges/join_with_view/end}} 会调用重载 {{v|3,4}}。

{|class="wikitable" style="text-align: center;"
!rowspan=2|{{nbsp}}重载{{nbsp}}
!colspan=3|{{rlps|/#数据成员}}
|-
!style="font-weight: normal;"|{{tti|parent_}}
!style="font-weight: normal;"|{{tti|outer_it_}}
!style="font-weight: normal;"|{{nbsp}}{{tti|inner_it_}}{{nbsp}}
|-
|{{v|1}}
|以 {{c|nullptr}} 初始化
|[[cpp/language/value initialization|值初始化]]&lt;br&gt;{{small|（仅当 {{rlpsi|/#Base}} 实现 {{lconcept|forward_range}}）}}
|rowspan=4|[[cpp/language/default initialization|默认初始化]]
|-
|{{v|2}}
|以 {{box|{{c/core|i.}}{{rlpsi|/#parent_}}}} 初始化
|{{nbsp}}以 {{box|{{c/core|std::move(i.}}{{rlpsi|/#outer_it_}}}} 初始化{{nbsp}}&lt;br&gt;{{small|（仅当 {{rlpsi|/#Base}} 实现 {{lconcept|forward_range}}）}}
|-
|{{v|3}}
|rowspan=2|{{nbsp}}以 {{c|std::addressof(parent)}} 初始化{{nbsp}}
|以 {{c|std::move(outer)}} 初始化
|-
|{{v|4}}
|{{n/a}}
|}

@2@ 在初始化数据成员后，等价于 {{box|
{{c/core|if (i.}}{{rlpsi|/#inner_it_}}{{sep}}{{c/core|1=.index() == 0)}}&lt;br&gt;
{{nbspt|4}}{{rlpsi|/#inner_it_}}{{sep}}{{c/core|.template emplace&lt;0&gt;(std::get&lt;0&gt;(std::move(i.}}{{rlpsi|/#inner_it_}}{{sep}}{{c/core|)));}}&lt;br&gt;
{{c/core|else}}&lt;br&gt;
{{nbspt|4}}{{rlpsi|/#inner_it_}}{{sep}}{{c/core|.template emplace&lt;1&gt;(std::get&lt;1&gt;(std::move(i.}}{{rlpsi|/#inner_it_}}{{sep}}{{c/core|)));}}
}}。

@3,4@ 在初始化数据成员后，如同在通过 {{rlpf|operator arith|operator++}} 自增{{rlp|/|内部迭代器}}后调整{{rlp|/|外部迭代器}}。

===参数===
{{par begin}}
{{par|i|可变迭代器}}
{{par|parent|{{lc|std::ranges::join_with_view}} 对象}}
{{par|outer|指向 {{c|parent}} 的底层范围中的迭代器}}
{{par end}}

===示例===
{{example}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}