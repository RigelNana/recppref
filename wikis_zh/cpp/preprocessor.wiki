{{title|预处理器}}
{{cpp/preprocessor/navbar}}
预处理器在编译前的[[cpp/language/translation phases#阶段 4|翻译阶段 4]] 执行。预处理的结果是单个文件，接下来它会被传递给实际编译器。

===指令===
预处理指令控制预处理器的行为。每个指令占据一行并拥有下列格式：

* {{c|#}} 字符
* 包含以下内容的序列：
:* 由标准定义的指令名（见[[#能力|下文]]）后随对应的实参，或
:* 一个或多个[[cpp/language/translation phases#阶段 3|预处理记号]]，其中第一个记号不是由标准定义的指令名，此时该指令受条件性支持并且语义由实现定义（例如常用的非标准扩展预处理指令 {{c|#warning}} 会在编译时放出一条用户定义的消息），或
:* 什么也不含，此时该指令没有效果。
* 换行符

{{rrev|since=c++20|
[[cpp/language/modules|{{tt|module}} 和 {{tt|import}} 指令]]也是预处理指令。
}}

预处理指令不得来自宏展开。
{{source|1=
#define EMPTY
EMPTY   #   include &lt;file.h&gt; // 不是预处理指令
}}

===能力===
预处理器有能力翻译源文件：

* '''{{rl|conditional|有条件}}'''编译源文件的某些部分（由 {{c|#if}}、{{c|#ifdef}}、{{c|#ifndef}}、{{c|#else}}、{{c|#elif}}{{rev inl|since=c++23|、{{c|#elifdef}}、{{c|#elifndef}}}} 和 {{c|#endif}} 指令控制）。
* '''{{rl|replace|替换}}'''文本宏，同时可能对标识符进行拼接或加引号（由 {{c|#define}} 和 {{c|#undef}} 指令与 {{c|#}} 和 {{c|##}} 运算符控制）。
* '''{{rl|include|包含}}'''其他文件（由 {{c|#include}} 指令控制{{rev inl|since=c++17|并以 {{c|__has_include}} 检查}}）。
* 导致'''{{rl|error|错误}}'''{{rev inl|since=c++23|或'''{{rl|error|警告}}'''}}（由指令 {{c|#error}} {{rev inl|since=c++23|或  {{c|#warning}}}} 控制）。

能控制预处理器的下列方面：
* '''{{rl|impl|由实现定义的}}'''行为（由 {{c|#pragma}} 指令{{rev inl|since=c++11|和 {{c|_Pragma}} 运算符}}控制）。
* 对预处理器可用的'''{{rl|line|文件名和行信息}}'''（由 {{c|#line}} 指令控制）

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=cwg|dr=2001|std=C++98|before=使用未由标准定义的预处理指令的行为不明确|after=受条件性支持}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc see cpp|cpp/preprocessor/replace#预定义宏|预定义宏符号|nomono=true}}
{{dsc see cpp|cpp/symbol index/macro|宏符号索引|nomono=true}}
{{dsc see c|c/preprocessor|预处理器|nomono=true}}
{{dsc end}}

{{langlinks|ar|cs|de|en|es|fr|it|ja|ko|pl|pt|ru|tr}}