{{cpp/memory/auto_ptr/title|operator{{=}}}}
{{cpp/memory/auto_ptr/navbar}}
{{dcl begin}}
{{dcl|deprecated=c++11|removed=c++17|num=1|1=
auto_ptr&amp; operator=( auto_ptr&amp; r ) throw();
}}
{{dcl|deprecated=c++11|removed=c++17|num=2|1=
template&lt; class Y &gt;
auto_ptr&amp; operator=( auto_ptr&lt;Y&gt;&amp; r ) throw();
}}
{{dcl|deprecated=c++11|removed=c++17|num=3|1=
auto_ptr&amp; operator=( auto_ptr_ref&lt;T&gt; m ) throw();
}}
{{dcl end}}
 
以 {{c|r}} 或 {{c|m}} 所管理的对象替换被管理对象。

@1@ 等效于调用 {{c|reset(r.release())}}。

@2@ 等效于调用 {{c|reset(r.release())}}。{{tt|Y*}} 必须可隐式转换到 {{tt|T*}}。

@3@ 等效于调用 {{c|reset(m.release())}}。{{tt|auto_ptr_ref}} 是保有到 {{tt|auto_ptr}} 的引用的实现定义类型。{{lc|std::auto_ptr}} 可隐式[[cpp/memory/auto_ptr/operator auto_ptr|转换到]]及[[cpp/memory/auto_ptr/auto_ptr|转换自]]此类型。允许实现以不同的名称提供该模板，或以其他方式实现等价的功能。

===参数===
{{par begin}}
{{par|r|另一 {{tt|auto_ptr}}，从它转移对象的所有权}}
{{par|m|保有到 {{tt|auto_ptr}} 的引用的实现定义类型对象}}
{{par end}}

===返回值===
{{c|*this}}。

===注解===
{{cpp/memory/auto_ptr/auto_ptr_ref_note}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=127|std=C++98|before=无法将 {{tt|auto_ptr_ref}} 赋给 {{tt|auto_ptr}}|after=添加重载 (3)}}
{{dr list end}}

{{langlinks|en|es|ja|ru}}