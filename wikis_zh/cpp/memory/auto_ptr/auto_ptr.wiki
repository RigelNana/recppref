{{cpp/memory/auto_ptr/title|auto_ptr}}
{{cpp/memory/auto_ptr/navbar}}
{{dcl begin}}
{{dcl|deprecated=c++11|removed=c++17|num=1|1=
explicit auto_ptr( X* p = 0 ) throw();
}}
{{dcl|deprecated=c++11|removed=c++17|num=2|
auto_ptr( auto_ptr&amp; r ) throw();
}}
{{dcl|deprecated=c++11|removed=c++17|num=3|
template&lt; class Y &gt;
auto_ptr( auto_ptr&lt;Y&gt;&amp; r ) throw();
}}
{{dcl|deprecated=c++11|removed=c++17|num=4|
auto_ptr( auto_ptr_ref&lt;X&gt; m ) throw();
}}
{{dcl end}}

从指代待管理对象的指针构造 {{tt|auto_ptr}}。

@1@ 以指针 {{c|p}} 构造 {{tt|auto_ptr}}。

@2@ 以 {{c|r}} 所保有的指针构造 {{tt|auto_ptr}}。调用 {{c|r.release()}} 获取该对象的所有权。

@3@ 同 (2)。{{c|Y*}} 必须可隐式转换为 {{c|T*}}。

@4@ 以 {{c|m}} 所指代的 {{tt|auto_ptr}} 实例中保有的指针构造 {{tt|auto_ptr}}。对 {{c|m}} 所保有的 {{tt|auto_ptr p}} 调用 {{c|p.release()}} 以获取该对象的所有权。

@@ {{tt|auto_ptr_ref}} 是保有到 {{tt|auto_ptr}} 引用的实现定义类型。{{lc|std::auto_ptr}} [[cpp/memory/auto_ptr/operator auto_ptr|可隐式转换成]]此类型并可从它[[cpp/memory/auto_ptr/operator=|赋值]]。允许实现以不同的名称提供该模板，或以其他方式实现等价的功能。

===参数===
{{par begin}}
{{par|p|指向待管理对象的指针}}
{{par|r|另一 {{tt|auto_ptr}}，从它传递所有权}}
{{par|m|保有到 {{tt|auto_ptr}} 的引用的实现定义类型对象}}
{{par end}}

===注解===
{{cpp/memory/auto_ptr/auto_ptr_ref_note}}

{{langlinks|en|es|ja|ru}}