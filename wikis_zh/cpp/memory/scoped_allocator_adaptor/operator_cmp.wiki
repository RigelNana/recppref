{{title|1=operator==,!={{small|(std::scoped_allocator_adaptor)}}}}
{{cpp/memory/scoped_allocator_adaptor/navbar}}
{{dcl begin}}
{{dcl header|scoped_allocator}}
{{dcl|since=c++11|1=
template&lt; class OuterAlloc1, class OuterAlloc2, class... InnerAllocs &gt;
bool operator==( const scoped_allocator_adaptor&lt;OuterAlloc1, InnerAllocs...&gt;&amp; lhs, 
                 const scoped_allocator_adaptor&lt;OuterAlloc2, InnerAllocs...&gt;&amp; rhs ) noexcept;
}}
{{dcl|since=c++11|until=c++20|1=
template&lt; class OuterAlloc1, class OuterAlloc2, class... InnerAllocs &gt;
bool operator!=( const scoped_allocator_adaptor&lt;OuterAlloc1, InnerAllocs...&gt;&amp; lhs, 
                 const scoped_allocator_adaptor&lt;OuterAlloc2, InnerAllocs...&gt;&amp; rhs ) noexcept;
}}
{{dcl end}}

比较两个有作用域分配器适配器。若满足下列条件则两个这种分配器相等：

* {{c|lhs.outer_allocator() {{==}} rhs.outer_allocator()}}，且
* 若 {{c|sizeof...(InnerAllocs) &gt; 0}}，则 {{c|lhs.inner_allocator() {{==}} rhs.inner_allocator()}}。

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

===参数===
{{par begin}}
{{par|lhs, rhs|要比较的有作用域分配器适配器}}
{{par end}}

===返回值===
@1@ 若 {{c|lhs}} 与 {{c|rhs}} 相等，则返回 {{c|true}}，否则返回 {{c|false}}。
@2@ 若 {{c|lhs}} 与 {{c|rhs}} 不相等，则返回 {{c|true}}，否则返回 {{c|false}}。

{{langlinks|de|en|es|fr|it|ja|pt|ru}}