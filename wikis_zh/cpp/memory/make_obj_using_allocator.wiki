{{cpp/title|make_obj_using_allocator}}
{{cpp/memory/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|since=c++20|
template&lt; class T, class Alloc, class... Args &gt;
constexpr T make_obj_using_allocator( const Alloc&amp; alloc, Args&amp;&amp;... args );
}}
{{dcl end}}

以{{rlp|uses_allocator|使用分配器构造}}的手段创建给定的 {{tt|T}} 类型对象。

等价于
{{source|1=
return std::make_from_tuple&lt;T&gt;(
    std::uses_allocator_construction_args&lt;T&gt;(alloc, std::forward&lt;Args&gt;(args)...)
);
}}

===参数===
{{par begin}}
{{par|alloc|要使用的分配器}}
{{par|args|传递给 {{tt|T}} 构造函数的实参}}
{{par end}}

===返回值===
新创建的 {{tt|T}} 类型对象。

===异常===
可能抛出 {{tt|T}} 的构造函数所抛的任何异常，常包括 {{lc|std::bad_alloc}}。

===示例===
{{example}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc uses_allocator_construction_args}}
{{dsc inc|cpp/memory/dsc uninitialized_construct_using_allocator}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}