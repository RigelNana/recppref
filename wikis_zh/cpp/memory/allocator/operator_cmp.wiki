{{title|1=operator==,!={{small|(std::allocator)}}}}
{{cpp/memory/allocator/navbar}}
{{dcl begin}}

{{dcl rev multi|num=1
|until1=c++11|dcl1=
template&lt; class T1, class T2 &gt;
bool operator==( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) throw();
|until2=c++20|dcl2=
template&lt; class T1, class T2 &gt;
bool operator==( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) noexcept;
|dcl3= 
template&lt; class T1, class T2 &gt;
constexpr bool
    operator==( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) noexcept;
}}

{{dcl rev multi|num=2
|until1=c++11|dcl1=
template&lt; class T1, class T2 &gt;
bool operator!=( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) throw();
|until2=c++20|dcl2=
template&lt; class T1, class T2 &gt;
bool operator!=( const allocator&lt;T1&gt;&amp; lhs, const allocator&lt;T2&gt;&amp; rhs ) noexcept;
}}

{{dcl end}}

比较两个默认分配器。因为默认分配器无状态，故两个默认分配器始终相等。

@1@ 返回 {{c|true}}。
@2@ 返回 {{c|false}}。

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

===参数===
{{par begin}}
{{par|lhs, rhs|要比较的默认分配器}}
{{par end}}

===返回值===
@1@ {{c|true}}
@2@ {{c|false}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}