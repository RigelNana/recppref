{{cpp/title|hash&lt;small&gt;&lt;std::unique_ptr&gt;&lt;/small&gt;}}
{{cpp/memory/unique_ptr/navbar}}
{{ddcl|since=c++11|1=
template&lt; class T, class Deleter &gt;
struct hash&lt;std::unique_ptr&lt;T, Deleter&gt;&gt;;
}}

{{lc|std::hash}} 对 {{c|std::unique_ptr&lt;T, Deleter&gt;}} 的模板特化允许用户获得 {{c|std::unique_ptr&lt;T, Deleter&gt;}} 类型对象的散列值。

若启用 {{lc|std::hash&lt;typename std::unique_ptr&lt;T,D&gt;::pointer&gt;}}，则启用特化 {{lc|std::hash&lt;std::unique_ptr&lt;T,D&gt;&gt;}}（见 {{lc|std::hash}}），否则禁用它。

启用时，对于给定的 {{c|1=std::unique_ptr&lt;T, D&gt; p}}，此特化确保 {{c|1=std::hash&lt;std::unique_ptr&lt;T, D&gt;&gt;()(p) == std::hash&lt;typename std::unique_ptr&lt;T, D&gt;::pointer&gt;()(p.get())}}。

此特化的成员函数不保证为 noexcept，因为指针可能是缀饰指针且其散列函数可能抛出异常。

===示例===
{{example
|code=
#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;memory&gt;

struct Foo
{
    Foo(int num) : nr(num) { std::cout &lt;&lt; "Foo(" &lt;&lt; nr &lt;&lt; ")\n"; }

    ~Foo() { std::cout &lt;&lt; "~Foo()\n"; }

    bool operator==(const Foo &amp;other) const { return nr == other.nr; };

    int nr;
};
 
int main()
{
    std::cout &lt;&lt; std::boolalpha &lt;&lt; std::hex;

    Foo* foo = new Foo(5);
    std::unique_ptr&lt;Foo&gt; up(foo); 
    std::cout &lt;&lt; "hash(up):    " &lt;&lt; std::hash&lt;std::unique_ptr&lt;Foo&gt;&gt;()(up) &lt;&lt; '\n'
              &lt;&lt; "hash(foo):   " &lt;&lt; std::hash&lt;Foo*&gt;()(foo) &lt;&lt; '\n'
              &lt;&lt; "*up==*foo:   " &lt;&lt; (*up == *foo) &lt;&lt; "\n\n";
 
    std::unique_ptr&lt;Foo&gt; other = std::make_unique&lt;Foo&gt;(5);
    std::cout &lt;&lt; "hash(up):    " &lt;&lt; std::hash&lt;std::unique_ptr&lt;Foo&gt;&gt;()(up) &lt;&lt; '\n'
              &lt;&lt; "hash(other): " &lt;&lt; std::hash&lt;std::unique_ptr&lt;Foo&gt;&gt;()(other) &lt;&lt; '\n'
              &lt;&lt; "*up==*other: " &lt;&lt;(*up == *other) &lt;&lt; "\n\n";
}
|p=true
|output=
Foo(5)
hash(up):    acac20
hash(foo):   acac20
*up==*foo:   true

Foo(5)
hash(up):    acac20
hash(other): acbc50
*up==*other: true

~Foo()
~Foo()
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/utility/dsc hash}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}