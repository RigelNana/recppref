{{cpp/memory/unique_ptr/title|operator&amp;lt;&amp;lt;}}
{{cpp/memory/unique_ptr/navbar}}
{{dcl begin}}
{{dcl|since=c++20|1=
template&lt; class CharT, class Traits, class Y, class D &gt;
std::basic_ostream&lt;CharT, Traits&gt;&amp; operator&lt;&lt;( std::basic_ostream&lt;CharT, Traits&gt;&amp; os,
                                               const std::unique_ptr&lt;Y, D&gt;&amp; p );
}}
{{dcl end}}

插入 {{c|p}} 所管理的指针的值到输出流 {{c|os}} 中。

等价于 {{c|os &lt;&lt; p.get()}}。

{{cpp/enable if| {{c|os &lt;&lt; p.get()}} 为合法表达式}}。

===参数===
{{par begin}}
{{par|os|要插入 {{c|p}} 到的 {{lc|std::basic_ostream}}}}
{{par|p|要插入到 {{c|os}} 的指针}}
{{par end}} 

===返回值===
{{c|os}}

===注解===
若 {{c|std::unique_ptr&lt;Y, D&gt;::pointer}} 为指向字符类型的指针（例如当 {{tt|Y}} 为 {{c|char}} 或 {{c|char[]}} 或 {{c|CharT}} 时），这可能最终调用 [[cpp/io/basic_ostream/operator_ltlt2|{{tt|operator&lt;&lt;}} 对空终止字符串的重载]]（若该指针实际上不指向这种字符串，则导致未定义行为），而非[[cpp/io/basic_ostream/operator_ltlt|打印指针值自身的重载]]。

===示例===
{{example
|p=true
|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;

class Foo {};

int main()
{
    auto p = std::make_unique&lt;Foo&gt;();
    std::cout &lt;&lt; p &lt;&lt; '\n';
    std::cout &lt;&lt; p.get() &lt;&lt; '\n';
}
|p=true
|output=
0x6d9028
0x6d9028
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/unique_ptr/dsc get}}
{{dsc end}}

{{langlinks|de|en|es|ja|ru}}