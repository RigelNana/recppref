{{cpp/title|declare_reachable}}
{{cpp/memory/navbar}}
{{ddcl|header=memory|since=c++11|removed=c++23|
void declare_reachable( void* p );
}}

声明 {{c|p}} 所引用的对象可抵达。可抵达对象将不为垃圾收集器删除，或不被泄漏检测器认为是泄露，即使所有指向它的指针都被销毁。对象可以声明为多次可抵达，该情况下会需要多次调用 {{lc|std::undeclare_reachable}} 以移除此属性。例如，若实现拥有启用的垃圾收集，则{{enwiki|XOR linked list|异或链表}}需要声明其结点为可抵达。

===参数===
{{par begin}}
{{par|p|安全派生的指针或空指针}}
{{par end}}

===返回值===
（无）

===异常===
若系统不能分配追踪可抵达对象所要求的内存，则可能抛出 {{lc|std::bad_alloc}}。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/gc/dsc undeclare_reachable}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}