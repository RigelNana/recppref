{{title|1=operator==, !=, &lt;, &lt;=, &gt;, &gt;=, &lt;=&gt; &lt;small&gt;(std::shared_ptr)&lt;/small&gt;}}
{{cpp/memory/shared_ptr/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl h|比较两个 {{tt|shared_ptr}} 对象}}
{{dcl|num=1|since=c++11|1= 
template&lt; class T, class U &gt; 
bool operator==( const std::shared_ptr&lt;T&gt;&amp; lhs,
                 const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=2|since=c++11|until=c++20|1= 
template&lt; class T, class U &gt; 
bool operator!=( const std::shared_ptr&lt;T&gt;&amp; lhs,
                 const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=3|since=c++11|until=c++20|1= 
template&lt; class T, class U &gt; 
bool operator&lt;( const std::shared_ptr&lt;T&gt;&amp; lhs,
                const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=4|since=c++11|until=c++20|1= 
template&lt; class T, class U &gt; 
bool operator&gt;( const std::shared_ptr&lt;T&gt;&amp; lhs,
                const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=5|since=c++11|until=c++20|1= 
template&lt; class T, class U &gt; 
bool operator&lt;=( const std::shared_ptr&lt;T&gt;&amp; lhs,
                 const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=6|since=c++11|until=c++20|1= 
template&lt; class T, class U &gt; 
bool operator&gt;=( const std::shared_ptr&lt;T&gt;&amp; lhs,
                 const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=7|since=c++20|1= 
template&lt; class T, class U &gt; 
std::strong_ordering operator&lt;=&gt;( const std::shared_ptr&lt;T&gt;&amp; lhs,
                                  const std::shared_ptr&lt;U&gt;&amp; rhs ) noexcept;
}}

{{dcl h|比较 {{tt|shared_ptr}} 与空指针}}
{{dcl|num=8|since=c++11|1= 
template&lt; class T &gt; 
bool operator==( const std::shared_ptr&lt;T&gt;&amp; lhs, std::nullptr_t ) noexcept;
}}
{{dcl|num=9|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator==( std::nullptr_t, const std::shared_ptr&lt;T&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=10|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator!=( const std::shared_ptr&lt;T&gt;&amp; lhs, std::nullptr_t ) noexcept;
}}
{{dcl|num=11|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator!=( std::nullptr_t, const std::shared_ptr&lt;T&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=12|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&lt;( const std::shared_ptr&lt;T&gt;&amp; lhs, std::nullptr_t ) noexcept;
}}
{{dcl|num=13|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&lt;( std::nullptr_t, const std::shared_ptr&lt;T&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=14|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&gt;( const std::shared_ptr&lt;T&gt;&amp; lhs, std::nullptr_t ) noexcept;
}}
{{dcl|num=15|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&gt;( std::nullptr_t, const std::shared_ptr&lt;T&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=16|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&lt;=( const std::shared_ptr&lt;T&gt;&amp; lhs, std::nullptr_t ) noexcept;
}}
{{dcl|num=17|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&lt;=( std::nullptr_t, const std::shared_ptr&lt;T&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=18|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&gt;=( const std::shared_ptr&lt;T&gt;&amp; lhs, std::nullptr_t ) noexcept;
}}
{{dcl|num=19|since=c++11|until=c++20|1= 
template&lt; class T &gt;
bool operator&gt;=( std::nullptr_t, const std::shared_ptr&lt;T&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=20|since=c++20|1= 
template&lt; class T &gt;
std::strong_ordering operator&lt;=&gt;( const std::shared_ptr&lt;T&gt;&amp; lhs,
                                  std::nullptr_t ) noexcept;
}}
{{dcl end}}

比较两个 {{tt|shared_ptr&lt;T&gt;}} 对象或将 {{tt|shared_ptr&lt;T&gt;}} 与空指针比较。

注意 {{tt|shared_ptr}} 的比较运算符单纯比较指针值；而''不''比较所指向的实际对象。为 {{tt|shared_ptr}} 定义 {{tt|operator&lt;}} 允许将 {{tt|shared_ptr}} 用作关联容器（如 {{lc|std::map}} 与 {{lc|std::set}}）中的键。

{{rrev|since=c++20|
{{cpp/note synthesized compare}}
}}

===参数===
{{par begin}}
{{par|lhs|要比较的左侧 {{tt|shared_ptr}}}}
{{par|rhs|要比较的右侧 {{tt|shared_ptr}}}}
{{par end}} 

===返回值===
@1@ {{tt|lhs.get() {{==}} rhs.get()}}

@2@ {{c|1=!(lhs == rhs)}}

@3@ {{c|std::less&lt;V&gt;()(lhs.get(), rhs.get())}}，其中 V 是 {{c|std::shared_ptr&lt;T&gt;::element_type*}} 与 {{c|std::shared_ptr&lt;U&gt;::element_type*}} 的[[cpp/language/operator_comparison#指针比较运算符|合成指针类型]]。

@4@ {{c|rhs &lt; lhs}}

@5@ {{c|!(rhs &lt; lhs)}}

@6@ {{c|!(lhs &lt; rhs)}}

@7@ {{c|std::compare_three_way{}(x.get(), y.get())}}

@8@ {{c|!lhs}}

@9@ {{c|!rhs}}

@10@ {{c|(bool)lhs}}

@11@ {{c|(bool)rhs}} 

@12@ {{c|std::less&lt;std::shared_ptr&lt;T&gt;::element_type*&gt;()(lhs.get(), nullptr)}}

@13@ {{c|std::less&lt;std::shared_ptr&lt;T&gt;::element_type*&gt;()(nullptr, rhs.get())}}

@14@ {{c|nullptr &lt; lhs}}

@15@ {{c|rhs &lt; nullptr}}

@16@ {{c|!(nullptr &lt; lhs)}}

@17@ {{c|!(rhs &lt; nullptr)}}

@18@ {{c|!(lhs &lt; nullptr)}}

@19@ {{c|!(nullptr &lt; rhs)}}

@20@ {{c|std::compare_three_way{}(x.get(), static_cast&lt;std::shared_ptr&lt;T&gt;::element_type*&gt;(nullptr))}}

===注解===
所有情况下，被比较者是存储的指针（{{lc|get()}} 所返回者）而非被管理的指针（{{lc|uses_count}} 达到零时传递给删除器者）。在用别名使用的构造函数创建的 {{lc|std::shared_ptr|shared_ptr}} 中，两个指针可能会不同。

===示例===
{{example
|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;

int main()
{
    std::shared_ptr&lt;int&gt; p1(new int(42));
    std::shared_ptr&lt;int&gt; p2(new int(42));

    std::cout &lt;&lt; std::boolalpha
        &lt;&lt; "(p1 == p1)       : " &lt;&lt; (p1 == p1) &lt;&lt; '\n'
        &lt;&lt; "(p1 &lt;=&gt; p1) == 0 : " &lt;&lt; ((p1 &lt;=&gt; p1) == 0) &lt;&lt; '\n' // C++20 起

    // p1 和 p2 指向不同的内存地址, 因此 p1 != p2
        &lt;&lt; "(p1 == p2)       : " &lt;&lt; (p1 == p2) &lt;&lt; '\n'
        &lt;&lt; "(p1 &lt; p2)        : " &lt;&lt; (p1 &lt; p2) &lt;&lt; '\n'
        &lt;&lt; "(p1 &lt;=&gt; p2) &lt; 0  : " &lt;&lt; ((p1 &lt;=&gt; p2) &lt; 0) &lt;&lt; '\n'   // C++20 起
        &lt;&lt; "(p1 &lt;=&gt; p2) == 0 : " &lt;&lt; ((p1 &lt;=&gt; p2) == 0) &lt;&lt; '\n'; // C++20 起
}
|p=true
|output=
(p1 == p1)       : true
(p1 &lt;=&gt; p1) == 0 : true
(p1 == p2)       : false
(p1 &lt; p2)        : true
(p1 &lt;=&gt; p2) &lt; 0  : true
(p1 &lt;=&gt; p2) == 0 : false
}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3427|std=C++20|before={{tt|1=operator&lt;=&gt;(shared_ptr, nullptr_t)}} 非良构|after=修正定义}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/shared_ptr/dsc get}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}