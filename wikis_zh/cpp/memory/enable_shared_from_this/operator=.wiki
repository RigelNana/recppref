{{cpp/memory/enable_shared_from_this/title|operator{{=}}}}
{{cpp/memory/enable_shared_from_this/navbar}}
{{dcl begin}}
{{dcl|since=c++11|1= 
enable_shared_from_this&amp; operator=( const enable_shared_from_this &amp;rhs ) noexcept;
}}
{{dcl end}}

不做任何事；返回 {{c|*this}}。

===参数===
{{par begin}}
{{par|rhs|赋值给 {{c|*this}} 的另一 {{tt|enable_shared_from_this}}}}
{{par end}} 

===返回值===
{{c|*this}}

===注解===
{{rlpsi|/#weak_this}} 不受赋值影响。

===示例===
注意：定义 {{c|1=enable_shared_from_this::operator=}} 为受保护以避免意外切片，但允许派生类拥有默认的赋值运算符。
{{example
|code=
#include &lt;iostream&gt;
#include &lt;memory&gt;
 
class SharedInt : public std::enable_shared_from_this&lt;SharedInt&gt;
{
public:
    explicit SharedInt(int n) : mNumber(n) {}
    SharedInt(const SharedInt&amp;) = default;
    SharedInt(SharedInt&amp;&amp;) = default;
    ~SharedInt() = default;
    
    // 两个赋值运算符都使用 enable_shared_from_this::operator=
    SharedInt&amp; operator=(const SharedInt&amp;) = default;
    SharedInt&amp; operator=(SharedInt&amp;&amp;) = default;
    
    int number() const { return mNumber; }
    
private:
    int mNumber;
};
 
int main()
{
    std::shared_ptr&lt;SharedInt&gt; a = std::make_shared&lt;SharedInt&gt;(2);
    std::shared_ptr&lt;SharedInt&gt; b = std::make_shared&lt;SharedInt&gt;(4);
    *a = *b;
    
    std::cout &lt;&lt; a-&gt;number() &lt;&lt; '\n';
}
|output=
4
}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/dsc shared_ptr}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}