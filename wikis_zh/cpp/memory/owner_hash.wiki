{{cpp/title|owner_hash}}
{{cpp/memory/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|since=c++26|
struct owner_hash;
}}
{{dcl end}}

此函数对象为 {{lc|std::weak_ptr}} 和 {{lc|std::shared_ptr}} 提供基于所有者（而非基于值）的散列计算。

===嵌套类型===
{{dsc begin}}
{{dsc hitem|嵌套类型|定义}}
{{dsc|{{tt|is_transparent}}|[[cpp/utility/functional#透明函数对象|未指明]]}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc fun|cpp/memory/owner_hash|title=operator()|inlinemem=true|计算共享所有权指针的散列}}
{{dsc end}}

{{member|{{small|std::owner_less::}}operator()|
{{dcl begin}}
{{dcl|since=c++26|num=1|
template&lt; class T &gt;
std::size_t operator()( const std::shared_ptr&lt;T&gt;&amp; key ) const noexcept;
}}
{{dcl|since=c++26|num=2|
template&lt; class T &gt;
std::size_t operator()( const std::weak_ptr&lt;T&gt;&amp; key ) const noexcept;
}}
{{dcl end}}

等价于 {{c|return key.owner_hash();}}。

===参数===
{{par begin}}
{{par|key|要散列的共享所有权指针}}
{{par end}}

===返回值===
对于共享相同所有权的任何 {{lc|std::shared_ptr}} 或 {{lc|std::weak_ptr}} 对象都相同的散列值。
}}

===注解===
{{feature test macro|__cpp_lib_smart_ptr_owner_equality|使 {{tt|std::shared_ptr}} 和 {{tt|std::weak_ptr}} 可用作{{lsd|cpp/container#无序关联容器}}中的键|std=C++26|value=202306L}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/shared_ptr/dsc owner_hash}}
{{dsc inc|cpp/memory/weak_ptr/dsc owner_hash}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}