{{cpp/title|owner_equal}}
{{cpp/memory/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|since=c++26|
struct owner_equal;
}}
{{dcl end}}

这个函数对象为 {{lc|std::shared_ptr}} 和 {{lc|std::weak_ptr}} 提供了基于所有者（而非基于值）的混合类型相等比较。这种比较中，仅当两个智能指针都为空或者共享所有权时比较为等价，即使通过 {{tt|get()}} 获取的原生指针值不同（比如由于它们指向同一对象中的不同子对象）也是如此。

@1@ 未针对除 {{lc|std::shared_ptr}} 和 {{lc|std::weak_ptr}} 之外的类型提供基于所有者的混合类型相等比较。

@2@ {{lc|std::shared_ptr}} 和 {{lc|std::weak_ptr}} 之间的基于所有者的混合类型相等比较。
@@ 这是以 {{lc|std::shared_ptr}} 和 {{lc|std::weak_ptr}} 为键构建无序关联容器时的首选比较谓词，同时要使用 {{lc|std::owner_hash}}，即 {{c/core|std::unordered_map&lt;std::shared_ptr&lt;T&gt;, U, std::owner_hash, std::owner_equal&gt;}} 或 {{c/core|std::unordered_map&lt;std::weak_ptr&lt;T&gt;, U, std::owner_hash, std::owner_equal&gt;}}。

@3@ {{tt|std::owner_equal}} 从各实参推导形参类型。

===嵌套类型===
{{dsc begin}}
{{dsc hitem|嵌套类型|定义}}
{{dsc|{{tt|is_transparent}}|[[cpp/utility/functional#透明比较函数|未指明]]}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc fun|cpp/memory/owner_equal|title=operator()|inlinemem=true|使用基于所有者的语义比较各实参}}
{{dsc end}}

{{member|{{small|std::owner_equal::}}operator()|
{{dcl begin}}
{{dcl|since=c++26| 
template&lt; class T, class U &gt;
bool operator()( const std::shared_ptr&lt;T&gt;&amp; lhs, 
                 const std::shared_ptr&lt;U&gt;&amp; rhs ) const noexcept;
}}
{{dcl|since=c++26|
template&lt; class T, class U &gt;
bool operator()( const std::shared_ptr&lt;T&gt;&amp; lhs, 
                 const std::weak_ptr&lt;U&gt;&amp; rhs ) const noexcept;
}}
{{dcl|since=c++26| 
template&lt; class T, class U &gt;
bool operator()( const std::weak_ptr&lt;T&gt;&amp; lhs, 
                 const std::shared_ptr&lt;U&gt;&amp; rhs ) const noexcept;
}}
{{dcl|since=c++26|
template&lt; class T, class U &gt;
bool operator()( const std::weak_ptr&lt;T&gt;&amp; lhs, 
                 const std::weak_ptr&lt;U&gt;&amp; rhs ) const noexcept;
}}
{{dcl end}}

使用基于所有者的语义比较 {{c|lhs}} 和 {{c|rhs}}。相当于调用 {{c|lhs.owner_equal(rhs)}}。

相等比较是一种等价关系。

仅当 {{c|lhs}} 和 {{c|rhs}} 都为空或共享所有权时它们等价。

===参数===
{{par begin}}
{{par|lhs, rhs|要比较的共享所有权指针}}
{{par end}}

===返回值===
当 {{c|lhs}} 和 {{c|rhs}} 都为空，或由基于所有者的相等比较确定为共享所有权时返回 {{c|true}}，否则返回 {{c|false}}。
}}

===注解===
{{feature test macro|__cpp_lib_smart_ptr_owner_equality|使 {{tt|std::shared_ptr}} 和 {{tt|std::weak_ptr}} 可用作{{lsd|cpp/container#无序关联容器}}中的键|std=C++26|value=202306L}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/shared_ptr/dsc owner_equal}}
{{dsc inc|cpp/memory/weak_ptr/dsc owner_equal}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}