{{cpp/title|auto_ptr}}
{{cpp/memory/auto_ptr/navbar}}
{{dcl begin}}
{{dcl header|memory}}
{{dcl|until=c++17|deprecated=c++11|num=1|1=
template&lt; class T &gt; class auto_ptr;
}}
{{dcl|until=c++17|deprecated=c++11|num=2|1=
template&lt;&gt; class auto_ptr&lt;void&gt;;
}}
{{dcl end}}

{{tt|auto_ptr}} 是一种智能指针，管理通过由 [[cpp/language/new|new 表达式]]获得的对象，并在 {{tt|auto_ptr}} 自身被销毁时删除该对象。它可用于为动态分配的对象提供异常安全、传递动态分配对象的所有权给函数和从函数返回动态分配的对象。

复制 {{tt|auto_ptr}}，会复制指针并转移所有权给目标：{{tt|auto_ptr}} 的复制构造和复制赋值都会修改其右侧实参，而且“副本”不等于原值。因为这些不常见的复制语义，不可将 {{tt|auto_ptr}} 置于标准容器中。{{rev inl|since=c++11|此用途及其他使用更适合用 {{lc|std::unique_ptr}}。}}

@2@ 提供对类型 {{c/core|void}} 的特化，它声明 typedef {{tt|element_type}}，但无成员函数。

文档中到处使用附加的类模板 {{tt|auto_ptr_ref}}。它是保有到 {{tt|auto_ptr}} 引用的实现定义类型。允许实现提供拥有不同名称的模板，或以其他方式实现返回它或接受它为参数的函数。

===成员类型===
{{dsc begin}}
{{dsc hitem|成员类型|定义}}
{{dsc|{{c|element_type}}|{{c|T}}}}
{{dsc end}}

===成员函数===
{{dsc begin}}
{{dsc inc|cpp/memory/auto_ptr/dsc auto_ptr}}
{{dsc inc|cpp/memory/auto_ptr/dsc ~auto_ptr}}
{{dsc inc|cpp/memory/auto_ptr/dsc operator{{=}}}}
{{dsc inc|cpp/memory/auto_ptr/dsc operator_auto_ptr}}

{{dsc h2 |观察器}}
{{dsc inc|cpp/memory/auto_ptr/dsc get}}
{{dsc inc|cpp/memory/auto_ptr/dsc operator*}}

{{dsc h2 |修改器}}
{{dsc inc|cpp/memory/auto_ptr/dsc reset}}
{{dsc inc|cpp/memory/auto_ptr/dsc release}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}