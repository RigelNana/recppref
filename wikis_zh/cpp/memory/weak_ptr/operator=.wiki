{{cpp/memory/weak_ptr/title|operator{{=}}}}
{{cpp/memory/weak_ptr/navbar}}
{{dcl begin}}
{{dcl|num=1|since=c++11|1=
weak_ptr&amp; operator=( const weak_ptr&amp; r ) noexcept;
}}
{{dcl|num=2|since=c++11|1=
template&lt; class Y &gt; 
weak_ptr&amp; operator=( const weak_ptr&lt;Y&gt;&amp; r ) noexcept;
}}
{{dcl|num=3|since=c++11|1=
template&lt; class Y &gt; 
weak_ptr&amp; operator=( const shared_ptr&lt;Y&gt;&amp; r ) noexcept;
}}
{{dcl|num=4|since=c++11|1=
weak_ptr&amp; operator=( weak_ptr&amp;&amp; r ) noexcept;
}}
{{dcl|num=5|since=c++11|1=
template&lt; class Y &gt; 
weak_ptr&amp; operator=( weak_ptr&lt;Y&gt;&amp;&amp; r ) noexcept;
}}
{{dcl end}}

以 {{c|r}} 所管理的对象替换被管理对象。与 {{c|r}} 共享该对象。若 {{c|r}} 不管理对象，则 {{c|*this}} 亦不管理对象。

@1-3@ 等价于 {{c|std::weak_ptr&lt;T&gt;(r).swap(*this)}}。
@4,5@ 等价于 {{c|std::weak_ptr&lt;T&gt;(std::move(r)).swap(*this)}}。

===参数===
{{par begin}}
{{par|r|与之共享对象的智能指针}}
{{par end}}

===返回值===
{{c|*this}}

===注解===
实现可以满足要求而无需创建临时的 {{tt|weak_ptr}} 对象。

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=2315|std=C++11|before=移动语义未对 {{tt|weak_ptr}} 启用|after=已启用}}
{{dr list end}}

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/weak_ptr/dsc constructor}}
{{dsc inc|cpp/memory/weak_ptr/dsc swap}}
{{dsc end}}

{{langlinks|de|en|es|fr|it|ja|pt|ru}}