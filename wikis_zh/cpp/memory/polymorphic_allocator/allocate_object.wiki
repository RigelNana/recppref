{{cpp/memory/polymorphic_allocator/title|allocate_object}}
{{cpp/memory/polymorphic_allocator/navbar}}

{{dcl begin}}
{{dcl|since=c++20|1=
template&lt; class U &gt;
U* allocate_object( std::size_t n = 1 );
}}
{{dcl end}}

用底层内存资源分配 {{c|n}} 个 {{tt|U}} 类型对象的存储。

若 {{c|std::numeric_limits&lt;std::size_t&gt;::max() / sizeof(U) &lt; n}}，则抛出 {{lc|std::bad_array_new_length}}，否则等价于 {{c|return static_cast&lt;U*&gt;(allocate_bytes(n * sizeof(U), alignof(U)) );}}。

===参数===
{{par begin}}
{{par|n|要分配存储的对象数}}
{{par end}}

===返回值===
指向分配的存储的指针。

===注解===
引入此函数是为了用于全特化分配器 {{c|std::pmr::polymorphic_allocator&lt;&gt;}}，但它可能在任何特化中都有用，作为避免从 {{c|std::pmr::polymorphic_allocator&lt;T&gt;}} 重绑定到 {{c|std::pmr::polymorphic_allocator&lt;U&gt;}} 的快捷方式。

因为不推导 {{tt|U}}，调用此函数时必须提供它为模板实参。

===异常===
若 {{c|n &gt; std::numeric_limits&lt;std::size_t&gt;::max() / sizeof(U)}} 则抛出 {{lc|std::bad_array_new_length}}；亦可能抛出任何调用 {{c|resource()-&gt;allocate}} 所抛的异常。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/memory/polymorphic_allocator/dsc allocate_bytes}}
{{dsc inc|cpp/memory/polymorphic_allocator/dsc new_object}}
{{dsc inc|cpp/memory/polymorphic_allocator/dsc allocate}}
{{dsc inc|cpp/memory/allocator traits/dsc allocate}}
{{dsc inc|cpp/memory/memory resource/dsc allocate}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}