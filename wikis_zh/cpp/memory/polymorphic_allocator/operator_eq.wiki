{{cpp/memory/pmr/title|operator{{==}}|operator!{{=}}}}
{{cpp/memory/polymorphic_allocator/navbar}}
{{dcl begin}}
{{dcl header|memory_resource}}
{{dcl|num=1|since=c++17|1=
template&lt; class T1, class T2 &gt;
bool operator==( const std::pmr::polymorphic_allocator&lt;T1&gt;&amp; lhs,
                 const std::pmr::polymorphic_allocator&lt;T2&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=2|since=c++17|1=
friend bool operator==( const polymorphic_allocator&amp; lhs,
                        const polymorphic_allocator&amp; rhs ) noexcept;
}}
{{dcl|num=3|since=c++17|until=c++20|1=
template&lt; class T1, class T2 &gt;
bool operator!=( const std::pmr::polymorphic_allocator&lt;T1&gt;&amp; lhs,
                 const std::pmr::polymorphic_allocator&lt;T2&gt;&amp; rhs ) noexcept;
}}
{{dcl|num=4|since=c++17|until=c++20|1=
friend bool operator!=( const polymorphic_allocator&amp; lhs,
                        const polymorphic_allocator&amp; rhs ) noexcept;
}}
{{dcl end}}

比较两个多态分配器。若两个多态分配器的底层内存资源比较相等，则它们比较相等。

@1@ 返回 {{c|1=*lhs.resource() == *rhs.resource()}}。
@2@ 同 {{v|1}}，允许到 {{tt|polymorphic_allocator}} 的转换。&lt;br&gt;{{cpp/hidden_friend|std::pmr::polymorphic_allocator}}
@3@ 返回 {{c|1=!(lhs == rhs)}}。
@4@ 同 {{v|3}}，允许到 {{tt|polymorphic_allocator}} 的转换。&lt;br&gt;{{cpp/hidden_friend|std::pmr::polymorphic_allocator}}

{{rrev|since=c++20|
{{cpp/note synthesized eq}}
}}

===参数===
{{par begin}}
{{par|lhs, rhs|要比较的多态分配器}}
{{par end}}

===返回值===
@1,2@ {{c|1=*lhs.resource() == *rhs.resource()}}
@3,4@ {{c|1=!(lhs == rhs)}}

===缺陷报告===
{{dr list begin}}
{{dr list item|wg=lwg|dr=3683|std=C++17|before={{tt|polymorphic_allocator}} 不能与能转换到它的类型比较|after=添加了重载}}
{{dr list end}}

{{langlinks|de|en|es|ja|ru}}