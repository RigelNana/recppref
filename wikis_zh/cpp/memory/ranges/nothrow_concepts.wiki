{{title|''no-throw-input-iterator'', ''no-throw-forward-iterator'', ''no-throw-sentinel-for'', ''no-throw-input-range'', ''no-throw-forward-range''}}
{{cpp/memory/navbar}}
{{dcl begin}}
{{dcl|num=1|notes={{mark expos}}|1=
template&lt; class I &gt;
concept no-throw-input-iterator =
    std::input_iterator&lt;I&gt; &amp;&amp;
    std::is_lvalue_reference_v&lt;std::iter_reference_t&lt;I&gt;&gt; &amp;&amp;
    std::same_as&lt;std::remove_cvref_t&lt;std::iter_reference_t&lt;I&gt;&gt;, std::iter_value_t&lt;I&gt;&gt;;
}}
{{dcl|num=2|notes={{mark expos}}|1=
template&lt; class I &gt;
concept no-throw-forward-iterator =
    no-throw-input-iterator&lt;I&gt; &amp;&amp;
    std::forward_iterator&lt;I&gt; &amp;&amp;
    no-throw-sentinel-for&lt;I, I&gt;;
}}
{{dcl|num=3|notes={{mark expos}}|1=
template&lt; class S, class I &gt;
concept no-throw-sentinel-for = std::sentinel_for&lt;S, I&gt;;
}}
{{dcl|num=4|notes={{mark expos}}|1=
template&lt; class R &gt;
concept no-throw-input-range =
    ranges::range&lt;R&gt; &amp;&amp;
    no-throw-input-iterator&lt;ranges::iterator_t&lt;R&gt;&gt; &amp;&amp;
    no-throw-sentinel-for&lt;ranges::sentinel_t&lt;R&gt;, ranges::iterator_t&lt;R&gt;&gt;;
}}
{{dcl|num=5|notes={{mark expos}}|1=
template&lt; class R &gt;
concept no-throw-forward-range =
    no-throw-input-range&lt;R&gt; &amp;&amp;
    no-throw-forward-iterator&lt;ranges::iterator_t&lt;R&gt;&gt;;
}}
{{dcl end}}

这些仅用于阐释的概念指定算法所要求的迭代器、哨位和范围上操作均不抛异常。

@1@ {{tt|''no-throw-input-iterator''}} 概念要求解引用迭代器产生左值，类似 {{lconcept|contiguous_iterator}} 与{{named req|ForwardIterator}}。

===语义要求===
类似所有标准概念，此处列出的每个概念，仅若其所蕴含的所有概念均被实现时才得以实现。

@1@ 类型 {{tt|I}} 实现 {{tt|''no-throw-input-iterator''}}，仅若自增、复制构造、移动构造、复制赋值、移动赋值或通过合法迭代器的间接不抛出异常。

@3@ 类型 {{tt|S}} 与 {{tt|I}} 实现 {{tt|''no-throw-sentinel-for''}}，仅若复制构造、移动构造、复制赋值、移动赋值或类型 {{tt|I}} 与 {{tt|S}} 的合法值间的比较不抛异常。

@4@ 类型 {{tt|R}} 实现 {{tt|''no-throw-input-range''}}，仅若在 {{tt|R}} 类型对象上调用 {{c|ranges::begin}} 与 {{c|ranges::end}} 不抛异常。

===注解===
这些概念允许迭代器和哨位上的某些操作抛出异常，例如非法值上的操作。

===参阅===
{{dsc begin}}
{{dsc inc|cpp/iterator/dsc input_iterator}}
{{dsc inc|cpp/iterator/dsc forward_iterator}}
{{dsc inc|cpp/iterator/dsc sentinel_for}}
{{dsc inc|cpp/ranges/dsc input_range}}
{{dsc inc|cpp/ranges/dsc forward_range}}
{{dsc end}}

{{langlinks|en|es|ja|ru}}