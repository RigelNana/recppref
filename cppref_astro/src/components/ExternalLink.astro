---
// src/components/ExternalLink.astro
import CodeSpan from './CodeSpan.astro';

interface Props {
  site?: 'wikipedia' | 'posix';
  monospace?: boolean;
}

const { site, monospace = false } = Astro.props;

// This is a placeholder for the actual link resolution logic.
async function resolveExternalLink(site: string | undefined, page: string) {
  switch(site) {
    case 'wikipedia':
      return `https://en.wikipedia.org/wiki/${page}`;
    case 'posix':
      return `https://pubs.opengroup.org/onlinepubs/9699919799/functions/${page}.html`;
    default:
      // Fallback for generic external links
      const text = await Astro.slots.render('text')
      const parts = text.split(' ');
      return parts[0];
  }
}

const page = (await Astro.slots.render('page')) || '';
const href = await resolveExternalLink(site, page);

---
<a 
  href={href}
  target="_blank"
  rel="noopener noreferrer"
>
  {monospace ? (
    <CodeSpan inline><slot name="text" /></CodeSpan>
  ) : (
    <slot name="text" />
  )}
  <span class="external-icon">â†—</span>
</a>
<style>
  a {
    text-decoration: underline;
    text-decoration-color: var(--vp-c-brand-3);
    transition: color 0.25s;
  }

  a:hover {
    text-decoration-color: var(--vp-c-brand-2);
  }

  .external-icon {
    font-size: 0.8em;
    margin-left: 0.2em;
  }
</style>
