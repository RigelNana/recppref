# TODO: add the path of components
[anchor]
type = "standalone"
component = "Anchor"

[anchor.params]
"1" = "value"

[box]
type = "standalone"
component = "CodeSpan"

[box.intrinsic]
boxed = true
highlighted = false
serif = false

[box.params]
"1" = "value"

[core]
type = "standalone"
component = "CodeSpan"

[core.intrinsic]
boxed = false
serif = true
highlighted = false

[core.params]
"1" = "value"

[c]
type = "standalone"
component = "CodeSpan"

[c.intrinsic]
boxed = true
serif = false
highlighted = true
inline = true

[c.params]
"1" = "value"
#TODO: cc, cc multi, closed range

[co]
type = "standalone"
component = "CodeSpan"

[co.intrinsic]
boxed = false
serif = false
highlighted = true

[co.params]
"1" = "value"

#TODO: cot cob
["collapsed top"]
type = "blockstart"
end = "collapsed bottom"
component = "Block"

["collapsed top".intrinsic]
collapsible = true
default_state = "collapsed"

["collapsed top".params]
"1" = "title"

["collapsed bottom"]
type = "blockend"


[cc]
type = "standalone"
component = "CodeSpan"

[cc.intrinsic]
boxed = false
serif = false
highlighted = true
overline = true
underline = true

[cc.params]
"1" = "value"

["cc multi"]
type = "standalone"
component = "CodeSpan"

["cc multi".intrinsic]
boxed = false
serif = false
highlighted = true
overline = true
underline = true
multiline = true

["cc multi".params]
"..." = "value"

["closed range"]
type = "standalone"
component = "Range"

["closed range".intrinsic]
left_bracket = "["
right_bracket = "]"
plain = false

["closed range".params]
"1" = "from"
"2" = "to"

["closed range plain"]
type = "standalone"
component = "Range"

["closed range plain".intrinsic]
left_bracket = "["
right_bracket = "]"
plain = true

["closed range plain".params]
"1" = "from"
"2" = "to"

["counted range"]
type = "standalone"
component = "Range"

["counted range".intrinsic]
left_bracket = "["
right_bracket = ")"
plain = false

["counted range".params]
"1" = "from"
"2" = "to"

[cot]
type = "blockstart"
end = "cob"
component = "Block"

[cot.intrinsic]
collapsible = false

[cot.params]
"1" = "title"

[cob]
type = "blockend"

[title]
type = "standalone"
component = "PageTitle"

[title.params]
"1" = "title"
"2" = "subtitle"

[ctitle]
type = "standalone"
component = "PageTitle"

[ctitle.intrinsic]
lang = "c"

[ctitle.params]
"1" = "title"
"2" = "subtitle"

[cwg]
type = "standalone"
component = "Link"

[cwg.intrinsic]
link_type = "cwg"

[cwg.params]
"1" = "value"

["dcl begin"]
type = "blockstart"
end = "dcl end"
component = "DefinitionList"

["dcl end"]
type = "blockend"

["dcl h"]
type = "standalone"
component = "DefinitionHeaderInclude"

["dcl h".params]
"1" = "title"

["dcl header"]
type = "standalone"
component = "DefinitionHeaderInclude"

["dcl header".params]
"1" = "header"

[dcl]
type = "standalone"
component = "DefinitionItem"

[dcl.params]
"num" = "num"
"since" = "since"
"constexpr" = "constexpr"
"notes" = "notes"
"1" = "default"

["dcl sep"]
type = "standalone"
component = "DefinitionSeparator"

["c multi"]
type = "standalone"
component = "CodeSpan"

["c multi".intrinsic]
boxed = true
serif = false
highlighted = true
multiline = true

["c multi".params]
"..." = "value"

[dcla]
type = "standalone"
component = "DefinitionItem"

[dcla.params]
"num" = "num"
"since" = "since"
"constexpr" = "constexpr"
"notes" = "notes"
"1" = "default"

[ddcl]
type = "standalone"
component = "DefinitionList"

[ddcl.intrinsic]
is_short_form = true

[ddcl.params]
"header" = "header"
"since" = "since"
"1" = "default"

[ddcla]
type = "standalone"
component = "DefinitionItem"

[ddcla.params]
"num" = "num"
"since" = "since"
"expos" = "exposition_only"
"1" = "default"

["dcl rev begin"]
type = "blockstart"
end = "dcl rev end"
component = "DefinitionList"

["dcl rev begin".intrinsic]
has_revisions = true

["dcl rev end"]
type = "blockend"

["dcl rev multi"]
type = "standalone"
component = "DefinitionItem"

["dcl rev multi".intrinsic]
has_revisions = true

["dcl rev multi".params]
"num" = "num"
"until1" = "until1"
"since1" = "since1"
"dcl1" = "dcl1"
"until2" = "until2"
"since2" = "since2"
"dcl2" = "dcl2"
"anchor" = "anchor"
"1" = "default"

["dsc begin"]
type = "blockstart"
end = "dsc end"
component = "DescriptionTable"

["dsc end"]
type = "blockend"

["dsc sep"]
type = "standalone"
component = "DescriptionSeparator"

["dsc break"]
type = "standalone"
component = "DescriptionSeparator"

[dsc]
type = "standalone"
component = "DescriptionItem"

[dsc.params]
"1" = "col1"
"2" = "col2"
"..." = "other_cols"

["dsc inc"]
type = "standalone"
component = "DescriptionInclude"

["dsc inc".params]
"1" = "template_name"

["dsc class"]
type = "standalone"
component = "DescriptionItem"

["dsc class".intrinsic]
item_type = "class"

["dsc class".params]
"1" = "header"
"2" = "declaration"

["dsc fun"]
type = "standalone"
component = "DescriptionItem"

["dsc fun".intrinsic]
item_type = "function"

["dsc fun".params]
"1" = "header"
"title" = "title"
"notes" = "notes"

["dsc mem fun"]
type = "standalone"
component = "DescriptionItem"

["dsc mem fun".intrinsic]
item_type = "member_function"

["dsc mem fun".params]
"1" = "header"
"title" = "title"
"notes" = "notes"

["dsc static fun"]
type = "standalone"
component = "DescriptionItem"

["dsc static fun".intrinsic]
item_type = "static_function"

["dsc static fun".params]
"1" = "header"
"title" = "title"
"notes" = "notes"

[example]
type = "standalone"
component = "Example"

[example.params]
"code" = "code"
"p" = "description"
"output" = "output"
"1" = "default"

[source]
type = "standalone"
component = "CodeSpan"

[source.intrinsic]
boxed = true
serif = true
highlighted = true
multiline = true

[source.params]
"1" = "value"

["par begin"]
type = "blockstart"
end = "par end"
component = "ParameterList"

["par end"]
type = "blockend"

[par]
type = "standalone"
component = "ParameterItem"

[par.params]
"1" = "name"
"2" = "description"

["par cmp"]
type = "standalone"
component = "ParameterItem"

["par cmp".intrinsic]
item_type = "comparator"

["par cmp".params]
"1" = "name"
"2" = "description"

["par pred1"]
type = "standalone"
component = "ParameterItem"

["par pred1".intrinsic]
item_type = "unary_predicate"

["par pred1".params]
"1" = "name"
"2" = "description"
"p1" = "param1"

["par pred2"]
type = "standalone"
component = "ParameterItem"

["par pred2".intrinsic]
item_type = "binary_predicate"

["par pred2".params]
"1" = "name"
"2" = "description"
"p1" = "param1"
"p2" = "param2"

[l2tf]
type = "standalone"
component = "Link"

[l2tf.intrinsic]
link_type = "l2tf"

[l2tf.params]
"1" = "link"
"2" = "text"

[lt]
type = "standalone"
component = "Link"

[lt.intrinsic]
link_type = "lt"

[lt.params]
"1" = "link"
"2" = "text"

[ltt]
type = "standalone"
component = "Link"

[ltt.intrinsic]
link_type = "ltt"

[ltt.params]
"1" = "link"
"2" = "text"

[lc]
type = "standalone"
component = "Link"

[lc.intrinsic]
link_type = "lc"

[lc.params]
"1" = "symbol"

[eli]
type = "standalone"
component = "ExternalLink"

[eli.params]
"1" = "text"

[elink]
type = "standalone"
component = "ExternalLink"

[elink.params]
"1" = "text"

[enwiki]
type = "standalone"
component = "ExternalLink"

[enwiki.intrinsic]
site = "wikipedia"

[enwiki.params]
"1" = "page"
"2" = "text"

[lwg]
type = "standalone"
component = "Link"

[lwg.intrinsic]
link_type = "lwg"

[lwg.params]
"1" = "value"

[posix]
type = "standalone"
component = "ExternalLink"

[posix.intrinsic]
site = "posix"

[posix.params]
"1" = "page"
"2" = "text"
"3" = "description"

[rl]
type = "standalone"
component = "RelativeLink"

[rl.params]
"1" = "page"
"2" = "text"

[rli]
type = "standalone"
component = "RelativeLink"

[rli.intrinsic]
monospace = true

[rli.params]
"1" = "page"
"2" = "text"

[mark]
type = "standalone"
component = "Mark"

[mark.params]
"1" = "text"

["mark since c++11"]
type = "standalone"
component = "Mark"

["mark since c++11".intrinsic]
status = "since"
version = "c++11"

["mark since c++14"]
type = "standalone"
component = "Mark"

["mark since c++14".intrinsic]
status = "since"
version = "c++14"

["mark since c++17"]
type = "standalone"
component = "Mark"

["mark since c++17".intrinsic]
status = "since"
version = "c++17"

["mark since c++20"]
type = "standalone"
component = "Mark"

["mark since c++20".intrinsic]
status = "since"
version = "c++20"

["mark since c++23"]
type = "standalone"
component = "Mark"

["mark since c++23".intrinsic]
status = "since"
version = "c++23"

["mark deprecated"]
type = "standalone"
component = "Mark"

["mark deprecated".intrinsic]
status = "deprecated"

["mark life"]
type = "standalone"
component = "Mark"

["mark life".intrinsic]
status = "lifecycle"

["mark life".params]
"since" = "since"
"deprecated" = "deprecated"
"removed" = "removed"

[tt]
type = "standalone"
component = "CodeSpan"

[tt.intrinsic]
inline = true
serif = false
highlighted = false
boxed = false

[tt.params]
"1" = "value"

[ttb]
type = "standalone"
component = "CodeSpan"

[ttb.intrinsic]
inline = true
serif = false
highlighted = false
boxed = false
bold = true

[ttb.params]
"1" = "value"

[tti]
type = "standalone"
component = "CodeSpan"

[tti.intrinsic]
inline = true
serif = false
highlighted = false
boxed = false
italic = true

[tti.params]
"1" = "value"

[ttt]
type = "standalone"
component = "Link"

[ttt.intrinsic]
link_type = "ltt"
monospace = true

[ttt.params]
"1" = "link"
"2" = "text"
